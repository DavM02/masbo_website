@import './menu.scss';

html:has([data-mode="light"]) {
    header {
        background-color: $white;

        .logo {
            filter: brightness(0.11111);
        }

        .menu-bars div {
            background-color: $gray;
        }

        nav a {
            color: $gray;

            &::after {
                background-color: $blue;
            }

            &:hover {
                color: $blue;
            }
        }

        .order-project {
            span {
                color: $text-gray;
            }
        }
    }



}

header {
    border-bottom: 0.5px solid line-bg(0.5);
    z-index: 55;
    position: fixed;
    top: 0;
    left: 0;
    width: 100%;
    transition: $transition-1 background-color 1s;

    .logo {
        &:hover {
            opacity: 0.5;
        }
    }

    a {
        line-height: 16.94px !important;
        font-weight: 600 !important;
        transition: $transition-1 all 0.5s;
    }

    &.static {
        background-color: transparent;
    }

    &.scrolled {
        background-color: $black;
    }

    .container {
        max-width: unset;
        padding: $header-padding-y $header-padding;

        .order-project {
            position: relative;
            opacity: 80%;
            filter: saturate(1);
            cursor: pointer;

            span {
                transition: $transition-1 all 0.5s;
                font-weight: 600;
            }


            &::after {
                content: "";
                opacity: 40%;
                background-color: #D9D9D9;
                pointer-events: none;
                width: 37px;
                height: 37px;
                border-radius: 50%;
                left: -10%;
                top: 50%;
                transform: translateY(-50%);
                position: absolute;
                z-index: -1;

            }

            @media all and (max-width: 480px) {
                & {
                    position: absolute;
                    bottom: -35px;
                    width: max-content;
                    right: $container-padding;
                }
            }
        }

        &>.row>div {
            &:nth-child(1) {
                gap: clamp(2.5rem, -5.0393rem + 13.1119vw, 7.1875rem);
            }

            &:nth-last-of-type(1) {
                gap: clamp(1.25rem, -2.771rem + 6.993vw, 3.75rem);
            }
        }

    }

}