var __defProp = Object.defineProperty;
var __defNormalProp = (obj, key, value) => key in obj ? __defProp(obj, key, { enumerable: true, configurable: true, writable: true, value }) : obj[key] = value;
var __publicField = (obj, key, value) => __defNormalProp(obj, typeof key !== "symbol" ? key + "" : key, value);
var _a2;
(function() {
  const t19 = document.createElement("link").relList;
  if (!(t19 && t19.supports && t19.supports("modulepreload"))) {
    for (const t20 of document.querySelectorAll('link[rel="modulepreload"]')) e2(t20);
    new MutationObserver((t20) => {
      for (const o2 of t20) if ("childList" === o2.type) for (const t21 of o2.addedNodes) "LINK" === t21.tagName && "modulepreload" === t21.rel && e2(t21);
    }).observe(document, { childList: true, subtree: true });
  }
  function e2(t20) {
    if (t20.ep) return;
    t20.ep = true;
    const e3 = function(t21) {
      const e4 = {};
      return t21.integrity && (e4.integrity = t21.integrity), t21.referrerPolicy && (e4.referrerPolicy = t21.referrerPolicy), "use-credentials" === t21.crossOrigin ? e4.credentials = "include" : "anonymous" === t21.crossOrigin ? e4.credentials = "omit" : e4.credentials = "same-origin", e4;
    }(t20);
    fetch(t20.href, e3);
  }
})();
var t, e, o, r, L, n, i, s, d, k, h, a, u = {}, p = [], c = /acit|ex(?:s|g|n|p|$)|rph|grid|ows|mnc|ntw|ine[ch]|zoo|^ord|itera/i, l = Array.isArray;
function w(t19, e2) {
  for (var o2 in e2) t19[o2] = e2[o2];
  return t19;
}
function M(t19) {
  t19 && t19.parentNode && t19.parentNode.removeChild(t19);
}
function f(e2, o2, r2) {
  var L2, n2, i2, s2 = {};
  for (i2 in o2) "key" == i2 ? L2 = o2[i2] : "ref" == i2 ? n2 = o2[i2] : s2[i2] = o2[i2];
  if (arguments.length > 2 && (s2.children = arguments.length > 3 ? t.call(arguments, 2) : r2), "function" == typeof e2 && null != e2.defaultProps) for (i2 in e2.defaultProps) void 0 === s2[i2] && (s2[i2] = e2.defaultProps[i2]);
  return W(e2, s2, L2, n2, null);
}
function W(t19, r2, L2, n2, i2) {
  var s2 = { type: t19, props: r2, key: L2, ref: n2, __k: null, __: null, __b: 0, __e: null, __c: null, constructor: void 0, __v: null == i2 ? ++o : i2, __i: -1, __u: 0 };
  return null == i2 && null != e.vnode && e.vnode(s2), s2;
}
function j() {
  return { current: null };
}
function m(t19) {
  return t19.children;
}
function v(t19, e2) {
  this.props = t19, this.context = e2;
}
function g(t19, e2) {
  if (null == e2) return t19.__ ? g(t19.__, t19.__i + 1) : null;
  for (var o2; e2 < t19.__k.length; e2++) if (null != (o2 = t19.__k[e2]) && null != o2.__e) return o2.__e;
  return "function" == typeof t19.type ? g(t19) : null;
}
function _(t19) {
  var e2, o2;
  if (null != (t19 = t19.__) && null != t19.__c) {
    for (t19.__e = t19.__c.base = null, e2 = 0; e2 < t19.__k.length; e2++) if (null != (o2 = t19.__k[e2]) && null != o2.__e) {
      t19.__e = t19.__c.base = o2.__e;
      break;
    }
    return _(t19);
  }
}
function y(t19) {
  (!t19.__d && (t19.__d = true) && r.push(t19) && !b.__r++ || L !== e.debounceRendering) && ((L = e.debounceRendering) || n)(b);
}
function b() {
  var t19, o2, L2, n2, s2, d2, k2, h2;
  for (r.sort(i); t19 = r.shift(); ) t19.__d && (o2 = r.length, n2 = void 0, d2 = (s2 = (L2 = t19).__v).__e, k2 = [], h2 = [], L2.__P && ((n2 = w({}, s2)).__v = s2.__v + 1, e.vnode && e.vnode(n2), Z(L2.__P, n2, s2, L2.__n, L2.__P.namespaceURI, 32 & s2.__u ? [d2] : null, k2, null == d2 ? g(s2) : d2, !!(32 & s2.__u), h2), n2.__v = s2.__v, n2.__.__k[n2.__i] = n2, E(k2, n2, h2), n2.__e != d2 && _(n2)), r.length > o2 && r.sort(i));
  b.__r = 0;
}
function C(t19, e2, o2, r2, L2, n2, i2, s2, d2, k2, h2) {
  var a2, c2, w2, M2, f2, j2, v2 = r2 && r2.__k || p, _2 = e2.length;
  for (d2 = function(t20, e3, o3, r3, L3) {
    var n3, i3, s3, d3, k3, h3 = o3.length, a3 = h3, u2 = 0;
    for (t20.__k = new Array(L3), n3 = 0; n3 < L3; n3++) null != (i3 = e3[n3]) && "boolean" != typeof i3 && "function" != typeof i3 ? (d3 = n3 + u2, (i3 = t20.__k[n3] = "string" == typeof i3 || "number" == typeof i3 || "bigint" == typeof i3 || i3.constructor == String ? W(null, i3, null, null, null) : l(i3) ? W(m, { children: i3 }, null, null, null) : void 0 === i3.constructor && i3.__b > 0 ? W(i3.type, i3.props, i3.key, i3.ref ? i3.ref : null, i3.__v) : i3).__ = t20, i3.__b = t20.__b + 1, s3 = null, -1 !== (k3 = i3.__i = H(i3, o3, d3, a3)) && (a3--, (s3 = o3[k3]) && (s3.__u |= 2)), null == s3 || null === s3.__v ? (-1 == k3 && u2--, "function" != typeof i3.type && (i3.__u |= 4)) : k3 != d3 && (k3 == d3 - 1 ? u2-- : k3 == d3 + 1 ? u2++ : (k3 > d3 ? u2-- : u2++, i3.__u |= 4))) : t20.__k[n3] = null;
    if (a3) for (n3 = 0; n3 < h3; n3++) null != (s3 = o3[n3]) && !(2 & s3.__u) && (s3.__e == r3 && (r3 = g(s3)), A(s3, s3));
    return r3;
  }(o2, e2, v2, d2, _2), a2 = 0; a2 < _2; a2++) null != (w2 = o2.__k[a2]) && (c2 = -1 === w2.__i ? u : v2[w2.__i] || u, w2.__i = a2, j2 = Z(t19, w2, c2, L2, n2, i2, s2, d2, k2, h2), M2 = w2.__e, w2.ref && c2.ref != w2.ref && (c2.ref && N(c2.ref, null, w2), h2.push(w2.ref, w2.__c || M2, w2)), null == f2 && null != M2 && (f2 = M2), 4 & w2.__u || c2.__k === w2.__k ? d2 = x(w2, d2, t19) : "function" == typeof w2.type && void 0 !== j2 ? d2 = j2 : M2 && (d2 = M2.nextSibling), w2.__u &= -7);
  return o2.__e = f2, d2;
}
function x(t19, e2, o2) {
  var r2, L2;
  if ("function" == typeof t19.type) {
    for (r2 = t19.__k, L2 = 0; r2 && L2 < r2.length; L2++) r2[L2] && (r2[L2].__ = t19, e2 = x(r2[L2], e2, o2));
    return e2;
  }
  t19.__e != e2 && (e2 && t19.type && !o2.contains(e2) && (e2 = g(t19)), o2.insertBefore(t19.__e, e2 || null), e2 = t19.__e);
  do {
    e2 = e2 && e2.nextSibling;
  } while (null != e2 && 8 == e2.nodeType);
  return e2;
}
function V(t19, e2) {
  return e2 = e2 || [], null == t19 || "boolean" == typeof t19 || (l(t19) ? t19.some(function(t20) {
    V(t20, e2);
  }) : e2.push(t19)), e2;
}
function H(t19, e2, o2, r2) {
  var L2, n2, i2 = t19.key, s2 = t19.type, d2 = e2[o2];
  if (null === d2 || d2 && i2 == d2.key && s2 === d2.type && !(2 & d2.__u)) return o2;
  if (r2 > (null == d2 || 2 & d2.__u ? 0 : 1)) for (L2 = o2 - 1, n2 = o2 + 1; L2 >= 0 || n2 < e2.length; ) {
    if (L2 >= 0) {
      if ((d2 = e2[L2]) && !(2 & d2.__u) && i2 == d2.key && s2 === d2.type) return L2;
      L2--;
    }
    if (n2 < e2.length) {
      if ((d2 = e2[n2]) && !(2 & d2.__u) && i2 == d2.key && s2 === d2.type) return n2;
      n2++;
    }
  }
  return -1;
}
function T(t19, e2, o2) {
  "-" == e2[0] ? t19.setProperty(e2, null == o2 ? "" : o2) : t19[e2] = null == o2 ? "" : "number" != typeof o2 || c.test(e2) ? o2 : o2 + "px";
}
function O(t19, e2, o2, r2, L2) {
  var n2;
  t: if ("style" == e2) if ("string" == typeof o2) t19.style.cssText = o2;
  else {
    if ("string" == typeof r2 && (t19.style.cssText = r2 = ""), r2) for (e2 in r2) o2 && e2 in o2 || T(t19.style, e2, "");
    if (o2) for (e2 in o2) r2 && o2[e2] === r2[e2] || T(t19.style, e2, o2[e2]);
  }
  else if ("o" == e2[0] && "n" == e2[1]) n2 = e2 != (e2 = e2.replace(s, "$1")), e2 = e2.toLowerCase() in t19 || "onFocusOut" == e2 || "onFocusIn" == e2 ? e2.toLowerCase().slice(2) : e2.slice(2), t19.l || (t19.l = {}), t19.l[e2 + n2] = o2, o2 ? r2 ? o2.u = r2.u : (o2.u = d, t19.addEventListener(e2, n2 ? h : k, n2)) : t19.removeEventListener(e2, n2 ? h : k, n2);
  else {
    if ("http://www.w3.org/2000/svg" == L2) e2 = e2.replace(/xlink(H|:h)/, "h").replace(/sName$/, "s");
    else if ("width" != e2 && "height" != e2 && "href" != e2 && "list" != e2 && "form" != e2 && "tabIndex" != e2 && "download" != e2 && "rowSpan" != e2 && "colSpan" != e2 && "role" != e2 && "popover" != e2 && e2 in t19) try {
      t19[e2] = null == o2 ? "" : o2;
      break t;
    } catch (t20) {
    }
    "function" == typeof o2 || (null == o2 || false === o2 && "-" != e2[4] ? t19.removeAttribute(e2) : t19.setAttribute(e2, "popover" == e2 && 1 == o2 ? "" : o2));
  }
}
function S(t19) {
  return function(o2) {
    if (this.l) {
      var r2 = this.l[o2.type + t19];
      if (null == o2.t) o2.t = d++;
      else if (o2.t < r2.u) return;
      return r2(e.event ? e.event(o2) : o2);
    }
  };
}
function Z(t19, o2, r2, L2, n2, i2, s2, d2, k2, h2) {
  var a2, u2, p2, c2, f2, W2, j2, g2, _2, y2, b2, x2, V2, H2, T2, O2, S2, Z2 = o2.type;
  if (void 0 !== o2.constructor) return null;
  128 & r2.__u && (k2 = !!(32 & r2.__u), i2 = [d2 = o2.__e = r2.__e]), (a2 = e.__b) && a2(o2);
  t: if ("function" == typeof Z2) try {
    if (g2 = o2.props, _2 = "prototype" in Z2 && Z2.prototype.render, y2 = (a2 = Z2.contextType) && L2[a2.__c], b2 = a2 ? y2 ? y2.props.value : a2.__ : L2, r2.__c ? j2 = (u2 = o2.__c = r2.__c).__ = u2.__E : (_2 ? o2.__c = u2 = new Z2(g2, b2) : (o2.__c = u2 = new v(g2, b2), u2.constructor = Z2, u2.render = R), y2 && y2.sub(u2), u2.props = g2, u2.state || (u2.state = {}), u2.context = b2, u2.__n = L2, p2 = u2.__d = true, u2.__h = [], u2._sb = []), _2 && null == u2.__s && (u2.__s = u2.state), _2 && null != Z2.getDerivedStateFromProps && (u2.__s == u2.state && (u2.__s = w({}, u2.__s)), w(u2.__s, Z2.getDerivedStateFromProps(g2, u2.__s))), c2 = u2.props, f2 = u2.state, u2.__v = o2, p2) _2 && null == Z2.getDerivedStateFromProps && null != u2.componentWillMount && u2.componentWillMount(), _2 && null != u2.componentDidMount && u2.__h.push(u2.componentDidMount);
    else {
      if (_2 && null == Z2.getDerivedStateFromProps && g2 !== c2 && null != u2.componentWillReceiveProps && u2.componentWillReceiveProps(g2, b2), !u2.__e && (null != u2.shouldComponentUpdate && false === u2.shouldComponentUpdate(g2, u2.__s, b2) || o2.__v == r2.__v)) {
        for (o2.__v != r2.__v && (u2.props = g2, u2.state = u2.__s, u2.__d = false), o2.__e = r2.__e, o2.__k = r2.__k, o2.__k.some(function(t20) {
          t20 && (t20.__ = o2);
        }), x2 = 0; x2 < u2._sb.length; x2++) u2.__h.push(u2._sb[x2]);
        u2._sb = [], u2.__h.length && s2.push(u2);
        break t;
      }
      null != u2.componentWillUpdate && u2.componentWillUpdate(g2, u2.__s, b2), _2 && null != u2.componentDidUpdate && u2.__h.push(function() {
        u2.componentDidUpdate(c2, f2, W2);
      });
    }
    if (u2.context = b2, u2.props = g2, u2.__P = t19, u2.__e = false, V2 = e.__r, H2 = 0, _2) {
      for (u2.state = u2.__s, u2.__d = false, V2 && V2(o2), a2 = u2.render(u2.props, u2.state, u2.context), T2 = 0; T2 < u2._sb.length; T2++) u2.__h.push(u2._sb[T2]);
      u2._sb = [];
    } else do {
      u2.__d = false, V2 && V2(o2), a2 = u2.render(u2.props, u2.state, u2.context), u2.state = u2.__s;
    } while (u2.__d && ++H2 < 25);
    u2.state = u2.__s, null != u2.getChildContext && (L2 = w(w({}, L2), u2.getChildContext())), _2 && !p2 && null != u2.getSnapshotBeforeUpdate && (W2 = u2.getSnapshotBeforeUpdate(c2, f2)), d2 = C(t19, l(O2 = null != a2 && a2.type === m && null == a2.key ? a2.props.children : a2) ? O2 : [O2], o2, r2, L2, n2, i2, s2, d2, k2, h2), u2.base = o2.__e, o2.__u &= -161, u2.__h.length && s2.push(u2), j2 && (u2.__E = u2.__ = null);
  } catch (t20) {
    if (o2.__v = null, k2 || null != i2) if (t20.then) {
      for (o2.__u |= k2 ? 160 : 128; d2 && 8 == d2.nodeType && d2.nextSibling; ) d2 = d2.nextSibling;
      i2[i2.indexOf(d2)] = null, o2.__e = d2;
    } else for (S2 = i2.length; S2--; ) M(i2[S2]);
    else o2.__e = r2.__e, o2.__k = r2.__k;
    e.__e(t20, o2, r2);
  }
  else null == i2 && o2.__v == r2.__v ? (o2.__k = r2.__k, o2.__e = r2.__e) : d2 = o2.__e = P(r2.__e, o2, r2, L2, n2, i2, s2, k2, h2);
  return (a2 = e.diffed) && a2(o2), 128 & o2.__u ? void 0 : d2;
}
function E(t19, o2, r2) {
  for (var L2 = 0; L2 < r2.length; L2++) N(r2[L2], r2[++L2], r2[++L2]);
  e.__c && e.__c(o2, t19), t19.some(function(o3) {
    try {
      t19 = o3.__h, o3.__h = [], t19.some(function(t20) {
        t20.call(o3);
      });
    } catch (t20) {
      e.__e(t20, o3.__v);
    }
  });
}
function P(o2, r2, L2, n2, i2, s2, d2, k2, h2) {
  var a2, p2, c2, w2, f2, W2, j2, m2 = L2.props, v2 = r2.props, _2 = r2.type;
  if ("svg" == _2 ? i2 = "http://www.w3.org/2000/svg" : "math" == _2 ? i2 = "http://www.w3.org/1998/Math/MathML" : i2 || (i2 = "http://www.w3.org/1999/xhtml"), null != s2) {
    for (a2 = 0; a2 < s2.length; a2++) if ((f2 = s2[a2]) && "setAttribute" in f2 == !!_2 && (_2 ? f2.localName == _2 : 3 == f2.nodeType)) {
      o2 = f2, s2[a2] = null;
      break;
    }
  }
  if (null == o2) {
    if (null == _2) return document.createTextNode(v2);
    o2 = document.createElementNS(i2, _2, v2.is && v2), k2 && (e.__m && e.__m(r2, s2), k2 = false), s2 = null;
  }
  if (null === _2) m2 === v2 || k2 && o2.data === v2 || (o2.data = v2);
  else {
    if (s2 = s2 && t.call(o2.childNodes), m2 = L2.props || u, !k2 && null != s2) for (m2 = {}, a2 = 0; a2 < o2.attributes.length; a2++) m2[(f2 = o2.attributes[a2]).name] = f2.value;
    for (a2 in m2) if (f2 = m2[a2], "children" == a2) ;
    else if ("dangerouslySetInnerHTML" == a2) c2 = f2;
    else if (!(a2 in v2)) {
      if ("value" == a2 && "defaultValue" in v2 || "checked" == a2 && "defaultChecked" in v2) continue;
      O(o2, a2, null, f2, i2);
    }
    for (a2 in v2) f2 = v2[a2], "children" == a2 ? w2 = f2 : "dangerouslySetInnerHTML" == a2 ? p2 = f2 : "value" == a2 ? W2 = f2 : "checked" == a2 ? j2 = f2 : k2 && "function" != typeof f2 || m2[a2] === f2 || O(o2, a2, f2, m2[a2], i2);
    if (p2) k2 || c2 && (p2.__html === c2.__html || p2.__html === o2.innerHTML) || (o2.innerHTML = p2.__html), r2.__k = [];
    else if (c2 && (o2.innerHTML = ""), C(o2, l(w2) ? w2 : [w2], r2, L2, n2, "foreignObject" == _2 ? "http://www.w3.org/1999/xhtml" : i2, s2, d2, s2 ? s2[0] : L2.__k && g(L2, 0), k2, h2), null != s2) for (a2 = s2.length; a2--; ) M(s2[a2]);
    k2 || (a2 = "value", "progress" == _2 && null == W2 ? o2.removeAttribute("value") : void 0 !== W2 && (W2 !== o2[a2] || "progress" == _2 && !W2 || "option" == _2 && W2 !== m2[a2]) && O(o2, a2, W2, m2[a2], i2), a2 = "checked", void 0 !== j2 && j2 !== o2[a2] && O(o2, a2, j2, m2[a2], i2));
  }
  return o2;
}
function N(t19, o2, r2) {
  try {
    if ("function" == typeof t19) {
      var L2 = "function" == typeof t19.__u;
      L2 && t19.__u(), L2 && null == o2 || (t19.__u = t19(o2));
    } else t19.current = o2;
  } catch (t20) {
    e.__e(t20, r2);
  }
}
function A(t19, o2, r2) {
  var L2, n2;
  if (e.unmount && e.unmount(t19), (L2 = t19.ref) && (L2.current && L2.current !== t19.__e || N(L2, null, o2)), null != (L2 = t19.__c)) {
    if (L2.componentWillUnmount) try {
      L2.componentWillUnmount();
    } catch (t20) {
      e.__e(t20, o2);
    }
    L2.base = L2.__P = null;
  }
  if (L2 = t19.__k) for (n2 = 0; n2 < L2.length; n2++) L2[n2] && A(L2[n2], o2, r2 || "function" != typeof t19.type);
  r2 || M(t19.__e), t19.__c = t19.__ = t19.__e = void 0;
}
function R(t19, e2, o2) {
  return this.constructor(t19, o2);
}
function D(o2, r2, L2) {
  var n2, i2, s2, d2;
  r2 == document && (r2 = document.documentElement), e.__ && e.__(o2, r2), i2 = (n2 = "function" == typeof L2) ? null : L2 && L2.__k || r2.__k, s2 = [], d2 = [], Z(r2, o2 = (!n2 && L2 || r2).__k = f(m, null, [o2]), i2 || u, u, r2.namespaceURI, !n2 && L2 ? [L2] : i2 ? null : r2.firstChild ? t.call(r2.childNodes) : null, s2, !n2 && L2 ? L2 : i2 ? i2.__e : r2.firstChild, n2, d2), E(s2, o2, d2);
}
function q(t19, e2) {
  D(t19, e2, q);
}
function z(e2, o2, r2) {
  var L2, n2, i2, s2, d2 = w({}, e2.props);
  for (i2 in e2.type && e2.type.defaultProps && (s2 = e2.type.defaultProps), o2) "key" == i2 ? L2 = o2[i2] : "ref" == i2 ? n2 = o2[i2] : d2[i2] = void 0 === o2[i2] && void 0 !== s2 ? s2[i2] : o2[i2];
  return arguments.length > 2 && (d2.children = arguments.length > 3 ? t.call(arguments, 2) : r2), W(e2.type, d2, L2 || e2.key, n2 || e2.ref, null);
}
function B(t19, e2) {
  var o2 = { __c: e2 = "__cC" + a++, __: t19, Consumer: function(t20, e3) {
    return t20.children(e3);
  }, Provider: function(t20) {
    var o3, r2;
    return this.getChildContext || (o3 = /* @__PURE__ */ new Set(), (r2 = {})[e2] = this, this.getChildContext = function() {
      return r2;
    }, this.componentWillUnmount = function() {
      o3 = null;
    }, this.shouldComponentUpdate = function(t21) {
      this.props.value !== t21.value && o3.forEach(function(t22) {
        t22.__e = true, y(t22);
      });
    }, this.sub = function(t21) {
      o3.add(t21);
      var e3 = t21.componentWillUnmount;
      t21.componentWillUnmount = function() {
        o3 && o3.delete(t21), e3 && e3.call(t21);
      };
    }), t20.children;
  } };
  return o2.Provider.__ = o2.Consumer.contextType = o2;
}
t = p.slice, e = { __e: function(t19, e2, o2, r2) {
  for (var L2, n2, i2; e2 = e2.__; ) if ((L2 = e2.__c) && !L2.__) try {
    if ((n2 = L2.constructor) && null != n2.getDerivedStateFromError && (L2.setState(n2.getDerivedStateFromError(t19)), i2 = L2.__d), null != L2.componentDidCatch && (L2.componentDidCatch(t19, r2 || {}), i2 = L2.__d), i2) return L2.__E = L2;
  } catch (e3) {
    t19 = e3;
  }
  throw t19;
} }, o = 0, v.prototype.setState = function(t19, e2) {
  var o2;
  o2 = null != this.__s && this.__s !== this.state ? this.__s : this.__s = w({}, this.state), "function" == typeof t19 && (t19 = t19(w({}, o2), this.props)), t19 && w(o2, t19), null != t19 && this.__v && (e2 && this._sb.push(e2), y(this));
}, v.prototype.forceUpdate = function(t19) {
  this.__v && (this.__e = true, t19 && this.__h.push(t19), y(this));
}, v.prototype.render = m, r = [], n = "function" == typeof Promise ? Promise.prototype.then.bind(Promise.resolve()) : setTimeout, i = function(t19, e2) {
  return t19.__v.__b - e2.__v.__b;
}, b.__r = 0, s = /(PointerCapture)$|Capture$/i, d = 0, k = S(false), h = S(true), a = 0;
var I = 0;
function F(t19, o2, r2, L2, n2, i2) {
  o2 || (o2 = {});
  var s2, d2, k2 = o2;
  if ("ref" in k2) for (d2 in k2 = {}, o2) "ref" == d2 ? s2 = o2[d2] : k2[d2] = o2[d2];
  var h2 = { type: t19, props: k2, key: r2, ref: s2, __k: null, __: null, __b: 0, __e: null, __c: null, constructor: void 0, __v: --I, __i: -1, __u: 0, __source: n2, __self: i2 };
  if ("function" == typeof t19 && (s2 = t19.defaultProps)) for (d2 in s2) void 0 === k2[d2] && (k2[d2] = s2[d2]);
  return e.vnode && e.vnode(h2), h2;
}
var U, $, Y, X, G = 0, K = [], J = e, Q = J.__b, tt = J.__r, et = J.diffed, ot = J.__c, rt = J.unmount, Lt = J.__;
function nt(t19, e2) {
  J.__h && J.__h($, t19, G || e2), G = 0;
  var o2 = $.__H || ($.__H = { __: [], __h: [] });
  return t19 >= o2.__.length && o2.__.push({}), o2.__[t19];
}
function it(t19) {
  return G = 1, st(gt, t19);
}
function st(t19, e2, o2) {
  var r2 = nt(U++, 2);
  if (r2.t = t19, !r2.__c && (r2.__ = [o2 ? o2(e2) : gt(void 0, e2), function(t20) {
    var e3 = r2.__N ? r2.__N[0] : r2.__[0], o3 = r2.t(e3, t20);
    e3 !== o3 && (r2.__N = [o3, r2.__[1]], r2.__c.setState({}));
  }], r2.__c = $, !$.u)) {
    var L2 = function(t20, e3, o3) {
      if (!r2.__c.__H) return true;
      var L3 = r2.__c.__H.__.filter(function(t21) {
        return !!t21.__c;
      });
      if (L3.every(function(t21) {
        return !t21.__N;
      })) return !n2 || n2.call(this, t20, e3, o3);
      var i3 = r2.__c.props !== t20;
      return L3.forEach(function(t21) {
        if (t21.__N) {
          var e4 = t21.__[0];
          t21.__ = t21.__N, t21.__N = void 0, e4 !== t21.__[0] && (i3 = true);
        }
      }), n2 && n2.call(this, t20, e3, o3) || i3;
    };
    $.u = true;
    var n2 = $.shouldComponentUpdate, i2 = $.componentWillUpdate;
    $.componentWillUpdate = function(t20, e3, o3) {
      if (this.__e) {
        var r3 = n2;
        n2 = void 0, L2(t20, e3, o3), n2 = r3;
      }
      i2 && i2.call(this, t20, e3, o3);
    }, $.shouldComponentUpdate = L2;
  }
  return r2.__N || r2.__;
}
function dt(t19, e2) {
  var o2 = nt(U++, 3);
  !J.__s && vt(o2.__H, e2) && (o2.__ = t19, o2.i = e2, $.__H.__h.push(o2));
}
function kt(t19, e2) {
  var o2 = nt(U++, 4);
  !J.__s && vt(o2.__H, e2) && (o2.__ = t19, o2.i = e2, $.__h.push(o2));
}
function ht(t19) {
  return G = 5, ut(function() {
    return { current: t19 };
  }, []);
}
function at(t19, e2, o2) {
  G = 6, kt(function() {
    return "function" == typeof t19 ? (t19(e2()), function() {
      return t19(null);
    }) : t19 ? (t19.current = e2(), function() {
      return t19.current = null;
    }) : void 0;
  }, null == o2 ? o2 : o2.concat(t19));
}
function ut(t19, e2) {
  var o2 = nt(U++, 7);
  return vt(o2.__H, e2) && (o2.__ = t19(), o2.__H = e2, o2.__h = t19), o2.__;
}
function pt(t19, e2) {
  return G = 8, ut(function() {
    return t19;
  }, e2);
}
function ct(t19) {
  var e2 = $.context[t19.__c], o2 = nt(U++, 9);
  return o2.c = t19, e2 ? (null == o2.__ && (o2.__ = true, e2.sub($)), e2.props.value) : t19.__;
}
function lt(t19, e2) {
  J.useDebugValue && J.useDebugValue(e2 ? e2(t19) : t19);
}
function wt() {
  var t19 = nt(U++, 11);
  if (!t19.__) {
    for (var e2 = $.__v; null !== e2 && !e2.__m && null !== e2.__; ) e2 = e2.__;
    var o2 = e2.__m || (e2.__m = [0, 0]);
    t19.__ = "P" + o2[0] + "-" + o2[1]++;
  }
  return t19.__;
}
function Mt() {
  for (var t19; t19 = K.shift(); ) if (t19.__P && t19.__H) try {
    t19.__H.__h.forEach(jt), t19.__H.__h.forEach(mt), t19.__H.__h = [];
  } catch (e2) {
    t19.__H.__h = [], J.__e(e2, t19.__v);
  }
}
J.__b = function(t19) {
  $ = null, Q && Q(t19);
}, J.__ = function(t19, e2) {
  t19 && e2.__k && e2.__k.__m && (t19.__m = e2.__k.__m), Lt && Lt(t19, e2);
}, J.__r = function(t19) {
  tt && tt(t19), U = 0;
  var e2 = ($ = t19.__c).__H;
  e2 && (Y === $ ? (e2.__h = [], $.__h = [], e2.__.forEach(function(t20) {
    t20.__N && (t20.__ = t20.__N), t20.i = t20.__N = void 0;
  })) : (e2.__h.forEach(jt), e2.__h.forEach(mt), e2.__h = [], U = 0)), Y = $;
}, J.diffed = function(t19) {
  et && et(t19);
  var e2 = t19.__c;
  e2 && e2.__H && (e2.__H.__h.length && (1 !== K.push(e2) && X === J.requestAnimationFrame || ((X = J.requestAnimationFrame) || Wt)(Mt)), e2.__H.__.forEach(function(t20) {
    t20.i && (t20.__H = t20.i), t20.i = void 0;
  })), Y = $ = null;
}, J.__c = function(t19, e2) {
  e2.some(function(t20) {
    try {
      t20.__h.forEach(jt), t20.__h = t20.__h.filter(function(t21) {
        return !t21.__ || mt(t21);
      });
    } catch (o2) {
      e2.some(function(t21) {
        t21.__h && (t21.__h = []);
      }), e2 = [], J.__e(o2, t20.__v);
    }
  }), ot && ot(t19, e2);
}, J.unmount = function(t19) {
  rt && rt(t19);
  var e2, o2 = t19.__c;
  o2 && o2.__H && (o2.__H.__.forEach(function(t20) {
    try {
      jt(t20);
    } catch (t21) {
      e2 = t21;
    }
  }), o2.__H = void 0, e2 && J.__e(e2, o2.__v));
};
var ft = "function" == typeof requestAnimationFrame;
function Wt(t19) {
  var e2, o2 = function() {
    clearTimeout(r2), ft && cancelAnimationFrame(e2), setTimeout(t19);
  }, r2 = setTimeout(o2, 100);
  ft && (e2 = requestAnimationFrame(o2));
}
function jt(t19) {
  var e2 = $, o2 = t19.__c;
  "function" == typeof o2 && (t19.__c = void 0, o2()), $ = e2;
}
function mt(t19) {
  var e2 = $;
  t19.__c = t19.__(), $ = e2;
}
function vt(t19, e2) {
  return !t19 || t19.length !== e2.length || e2.some(function(e3, o2) {
    return e3 !== t19[o2];
  });
}
function gt(t19, e2) {
  return "function" == typeof e2 ? e2(t19) : e2;
}
function _t(t19, e2) {
  for (var o2 in e2) t19[o2] = e2[o2];
  return t19;
}
function yt(t19, e2) {
  for (var o2 in t19) if ("__source" !== o2 && !(o2 in e2)) return true;
  for (var r2 in e2) if ("__source" !== r2 && t19[r2] !== e2[r2]) return true;
  return false;
}
function bt(t19, e2) {
  var o2 = e2(), r2 = it({ t: { __: o2, u: e2 } }), L2 = r2[0].t, n2 = r2[1];
  return kt(function() {
    L2.__ = o2, L2.u = e2, Ct(L2) && n2({ t: L2 });
  }, [t19, o2, e2]), dt(function() {
    return Ct(L2) && n2({ t: L2 }), t19(function() {
      Ct(L2) && n2({ t: L2 });
    });
  }, [t19]), o2;
}
function Ct(t19) {
  var e2, o2, r2 = t19.u, L2 = t19.__;
  try {
    var n2 = r2();
    return !((e2 = L2) === (o2 = n2) && (0 !== e2 || 1 / e2 == 1 / o2) || e2 != e2 && o2 != o2);
  } catch (t20) {
    return true;
  }
}
function xt(t19) {
  t19();
}
function Vt(t19) {
  return t19;
}
function Ht() {
  return [false, xt];
}
var Tt = kt;
function Ot(t19, e2) {
  this.props = t19, this.context = e2;
}
function St(t19, e2) {
  function o2(t20) {
    var o3 = this.props.ref, r3 = o3 == t20.ref;
    return !r3 && o3 && (o3.call ? o3(null) : o3.current = null), e2 ? !e2(this.props, t20) || !r3 : yt(this.props, t20);
  }
  function r2(e3) {
    return this.shouldComponentUpdate = o2, f(t19, e3);
  }
  return r2.displayName = "Memo(" + (t19.displayName || t19.name) + ")", r2.prototype.isReactComponent = true, r2.__f = true, r2;
}
(Ot.prototype = new v()).isPureReactComponent = true, Ot.prototype.shouldComponentUpdate = function(t19, e2) {
  return yt(this.props, t19) || yt(this.state, e2);
};
var Zt = e.__b;
e.__b = function(t19) {
  t19.type && t19.type.__f && t19.ref && (t19.props.ref = t19.ref, t19.ref = null), Zt && Zt(t19);
};
var Et = "undefined" != typeof Symbol && Symbol.for && Symbol.for("react.forward_ref") || 3911;
function Pt(t19) {
  function e2(e3) {
    var o2 = _t({}, e3);
    return delete o2.ref, t19(o2, e3.ref || null);
  }
  return e2.$$typeof = Et, e2.render = e2, e2.prototype.isReactComponent = e2.__f = true, e2.displayName = "ForwardRef(" + (t19.displayName || t19.name) + ")", e2;
}
var Nt = function(t19, e2) {
  return null == t19 ? null : V(V(t19).map(e2));
}, At = { map: Nt, forEach: Nt, count: function(t19) {
  return t19 ? V(t19).length : 0;
}, only: function(t19) {
  var e2 = V(t19);
  if (1 !== e2.length) throw "Children.only";
  return e2[0];
}, toArray: V }, Rt = e.__e;
e.__e = function(t19, e2, o2, r2) {
  if (t19.then) {
    for (var L2, n2 = e2; n2 = n2.__; ) if ((L2 = n2.__c) && L2.__c) return null == e2.__e && (e2.__e = o2.__e, e2.__k = o2.__k), L2.__c(t19, e2);
  }
  Rt(t19, e2, o2, r2);
};
var Dt = e.unmount;
function qt(t19, e2, o2) {
  return t19 && (t19.__c && t19.__c.__H && (t19.__c.__H.__.forEach(function(t20) {
    "function" == typeof t20.__c && t20.__c();
  }), t19.__c.__H = null), null != (t19 = _t({}, t19)).__c && (t19.__c.__P === o2 && (t19.__c.__P = e2), t19.__c = null), t19.__k = t19.__k && t19.__k.map(function(t20) {
    return qt(t20, e2, o2);
  })), t19;
}
function zt(t19, e2, o2) {
  return t19 && o2 && (t19.__v = null, t19.__k = t19.__k && t19.__k.map(function(t20) {
    return zt(t20, e2, o2);
  }), t19.__c && t19.__c.__P === e2 && (t19.__e && o2.appendChild(t19.__e), t19.__c.__e = true, t19.__c.__P = o2)), t19;
}
function Bt() {
  this.__u = 0, this.o = null, this.__b = null;
}
function It(t19) {
  var e2 = t19.__.__c;
  return e2 && e2.__a && e2.__a(t19);
}
function Ft(t19) {
  var e2, o2, r2;
  function L2(L3) {
    if (e2 || (e2 = t19()).then(function(t20) {
      o2 = t20.default || t20;
    }, function(t20) {
      r2 = t20;
    }), r2) throw r2;
    if (!o2) throw e2;
    return f(o2, L3);
  }
  return L2.displayName = "Lazy", L2.__f = true, L2;
}
function Ut() {
  this.i = null, this.l = null;
}
e.unmount = function(t19) {
  var e2 = t19.__c;
  e2 && e2.__R && e2.__R(), e2 && 32 & t19.__u && (t19.type = null), Dt && Dt(t19);
}, (Bt.prototype = new v()).__c = function(t19, e2) {
  var o2 = e2.__c, r2 = this;
  null == r2.o && (r2.o = []), r2.o.push(o2);
  var L2 = It(r2.__v), n2 = false, i2 = function() {
    n2 || (n2 = true, o2.__R = null, L2 ? L2(s2) : s2());
  };
  o2.__R = i2;
  var s2 = function() {
    if (!--r2.__u) {
      if (r2.state.__a) {
        var t20 = r2.state.__a;
        r2.__v.__k[0] = zt(t20, t20.__c.__P, t20.__c.__O);
      }
      var e3;
      for (r2.setState({ __a: r2.__b = null }); e3 = r2.o.pop(); ) e3.forceUpdate();
    }
  };
  r2.__u++ || 32 & e2.__u || r2.setState({ __a: r2.__b = r2.__v.__k[0] }), t19.then(i2, i2);
}, Bt.prototype.componentWillUnmount = function() {
  this.o = [];
}, Bt.prototype.render = function(t19, e2) {
  if (this.__b) {
    if (this.__v.__k) {
      var o2 = document.createElement("div"), r2 = this.__v.__k[0].__c;
      this.__v.__k[0] = qt(this.__b, o2, r2.__O = r2.__P);
    }
    this.__b = null;
  }
  var L2 = e2.__a && f(m, null, t19.fallback);
  return L2 && (L2.__u &= -33), [f(m, null, e2.__a ? null : t19.children), L2];
};
var $t = function(t19, e2, o2) {
  if (++o2[1] === o2[0] && t19.l.delete(e2), t19.props.revealOrder && ("t" !== t19.props.revealOrder[0] || !t19.l.size)) for (o2 = t19.i; o2; ) {
    for (; o2.length > 3; ) o2.pop()();
    if (o2[1] < o2[0]) break;
    t19.i = o2 = o2[2];
  }
};
function Yt(t19) {
  return this.getChildContext = function() {
    return t19.context;
  }, t19.children;
}
function Xt(t19) {
  var e2 = this, o2 = t19.h;
  e2.componentWillUnmount = function() {
    D(null, e2.v), e2.v = null, e2.h = null;
  }, e2.h && e2.h !== o2 && e2.componentWillUnmount(), e2.v || (e2.h = o2, e2.v = { nodeType: 1, parentNode: o2, childNodes: [], contains: function() {
    return true;
  }, appendChild: function(t20) {
    this.childNodes.push(t20), e2.h.appendChild(t20);
  }, insertBefore: function(t20, o3) {
    this.childNodes.push(t20), e2.h.insertBefore(t20, o3);
  }, removeChild: function(t20) {
    this.childNodes.splice(this.childNodes.indexOf(t20) >>> 1, 1), e2.h.removeChild(t20);
  } }), D(f(Yt, { context: e2.context }, t19.__v), e2.v);
}
function Gt(t19, e2) {
  var o2 = f(Xt, { __v: t19, h: e2 });
  return o2.containerInfo = e2, o2;
}
(Ut.prototype = new v()).__a = function(t19) {
  var e2 = this, o2 = It(e2.__v), r2 = e2.l.get(t19);
  return r2[0]++, function(L2) {
    var n2 = function() {
      e2.props.revealOrder ? (r2.push(L2), $t(e2, t19, r2)) : L2();
    };
    o2 ? o2(n2) : n2();
  };
}, Ut.prototype.render = function(t19) {
  this.i = null, this.l = /* @__PURE__ */ new Map();
  var e2 = V(t19.children);
  t19.revealOrder && "b" === t19.revealOrder[0] && e2.reverse();
  for (var o2 = e2.length; o2--; ) this.l.set(e2[o2], this.i = [1, 0, this.i]);
  return t19.children;
}, Ut.prototype.componentDidUpdate = Ut.prototype.componentDidMount = function() {
  var t19 = this;
  this.l.forEach(function(e2, o2) {
    $t(t19, o2, e2);
  });
};
var Kt = "undefined" != typeof Symbol && Symbol.for && Symbol.for("react.element") || 60103, Jt = /^(?:accent|alignment|arabic|baseline|cap|clip(?!PathU)|color|dominant|fill|flood|font|glyph(?!R)|horiz|image(!S)|letter|lighting|marker(?!H|W|U)|overline|paint|pointer|shape|stop|strikethrough|stroke|text(?!L)|transform|underline|unicode|units|v|vector|vert|word|writing|x(?!C))[A-Z]/, Qt = /^on(Ani|Tra|Tou|BeforeInp|Compo)/, te = /[A-Z0-9]/g, ee = "undefined" != typeof document, oe = function(t19) {
  return ("undefined" != typeof Symbol && "symbol" == typeof Symbol() ? /fil|che|rad/ : /fil|che|ra/).test(t19);
};
function re(t19, e2, o2) {
  return null == e2.__k && (e2.textContent = ""), D(t19, e2), "function" == typeof o2 && o2(), t19 ? t19.__c : null;
}
function Le(t19, e2, o2) {
  return q(t19, e2), "function" == typeof o2 && o2(), t19 ? t19.__c : null;
}
v.prototype.isReactComponent = {}, ["componentWillMount", "componentWillReceiveProps", "componentWillUpdate"].forEach(function(t19) {
  Object.defineProperty(v.prototype, t19, { configurable: true, get: function() {
    return this["UNSAFE_" + t19];
  }, set: function(e2) {
    Object.defineProperty(this, t19, { configurable: true, writable: true, value: e2 });
  } });
});
var ne = e.event;
function ie() {
}
function se() {
  return this.cancelBubble;
}
function de() {
  return this.defaultPrevented;
}
e.event = function(t19) {
  return ne && (t19 = ne(t19)), t19.persist = ie, t19.isPropagationStopped = se, t19.isDefaultPrevented = de, t19.nativeEvent = t19;
};
var ke, he = { enumerable: false, configurable: true, get: function() {
  return this.class;
} }, ae = e.vnode;
e.vnode = function(t19) {
  "string" == typeof t19.type && function(t20) {
    var e2 = t20.props, o2 = t20.type, r2 = {}, L2 = -1 === o2.indexOf("-");
    for (var n2 in e2) {
      var i2 = e2[n2];
      if (!("value" === n2 && "defaultValue" in e2 && null == i2 || ee && "children" === n2 && "noscript" === o2 || "class" === n2 || "className" === n2)) {
        var s2 = n2.toLowerCase();
        "defaultValue" === n2 && "value" in e2 && null == e2.value ? n2 = "value" : "download" === n2 && true === i2 ? i2 = "" : "translate" === s2 && "no" === i2 ? i2 = false : "o" === s2[0] && "n" === s2[1] ? "ondoubleclick" === s2 ? n2 = "ondblclick" : "onchange" !== s2 || "input" !== o2 && "textarea" !== o2 || oe(e2.type) ? "onfocus" === s2 ? n2 = "onfocusin" : "onblur" === s2 ? n2 = "onfocusout" : Qt.test(n2) && (n2 = s2) : s2 = n2 = "oninput" : L2 && Jt.test(n2) ? n2 = n2.replace(te, "-$&").toLowerCase() : null === i2 && (i2 = void 0), "oninput" === s2 && r2[n2 = s2] && (n2 = "oninputCapture"), r2[n2] = i2;
      }
    }
    "select" == o2 && r2.multiple && Array.isArray(r2.value) && (r2.value = V(e2.children).forEach(function(t21) {
      t21.props.selected = -1 != r2.value.indexOf(t21.props.value);
    })), "select" == o2 && null != r2.defaultValue && (r2.value = V(e2.children).forEach(function(t21) {
      t21.props.selected = r2.multiple ? -1 != r2.defaultValue.indexOf(t21.props.value) : r2.defaultValue == t21.props.value;
    })), e2.class && !e2.className ? (r2.class = e2.class, Object.defineProperty(r2, "className", he)) : (e2.className && !e2.class || e2.class && e2.className) && (r2.class = r2.className = e2.className), t20.props = r2;
  }(t19), t19.$$typeof = Kt, ae && ae(t19);
};
var ue = e.__r;
e.__r = function(t19) {
  ue && ue(t19), ke = t19.__c;
};
var pe = e.diffed;
e.diffed = function(t19) {
  pe && pe(t19);
  var e2 = t19.props, o2 = t19.__e;
  null != o2 && "textarea" === t19.type && "value" in e2 && e2.value !== o2.value && (o2.value = null == e2.value ? "" : e2.value), ke = null;
};
var ce = { ReactCurrentDispatcher: { current: { readContext: function(t19) {
  return ke.__n[t19.__c].props.value;
}, useCallback: pt, useContext: ct, useDebugValue: lt, useDeferredValue: Vt, useEffect: dt, useId: wt, useImperativeHandle: at, useInsertionEffect: Tt, useLayoutEffect: kt, useMemo: ut, useReducer: st, useRef: ht, useState: it, useSyncExternalStore: bt, useTransition: Ht } } };
function le(t19) {
  return f.bind(null, t19);
}
function we(t19) {
  return !!t19 && t19.$$typeof === Kt;
}
function Me(t19) {
  return we(t19) && t19.type === m;
}
function fe(t19) {
  return !!t19 && !!t19.displayName && ("string" == typeof t19.displayName || t19.displayName instanceof String) && t19.displayName.startsWith("Memo(");
}
function We(t19) {
  return we(t19) ? z.apply(null, arguments) : t19;
}
function je(t19) {
  return !!t19.__k && (D(null, t19), true);
}
function me(t19) {
  return t19 && (t19.base || 1 === t19.nodeType && t19) || null;
}
var ve = function(t19, e2) {
  return t19(e2);
}, ge = function(t19, e2) {
  return t19(e2);
}, _e = m, ye = we, be = { useState: it, useId: wt, useReducer: st, useEffect: dt, useLayoutEffect: kt, useInsertionEffect: Tt, useTransition: Ht, useDeferredValue: Vt, useSyncExternalStore: bt, startTransition: xt, useRef: ht, useImperativeHandle: at, useMemo: ut, useCallback: pt, useContext: ct, useDebugValue: lt, version: "18.3.1", Children: At, render: re, hydrate: Le, unmountComponentAtNode: je, createPortal: Gt, createElement: f, createContext: B, createFactory: le, cloneElement: We, createRef: j, Fragment: m, isValidElement: we, isElement: ye, isFragment: Me, isMemo: fe, findDOMNode: me, Component: v, PureComponent: Ot, memo: St, forwardRef: Pt, flushSync: ge, unstable_batchedUpdates: ve, StrictMode: _e, Suspense: Bt, SuspenseList: Ut, lazy: Ft, __SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED: ce };
const Ce = Object.freeze(Object.defineProperty({ __proto__: null, Children: At, Component: v, Fragment: m, PureComponent: Ot, StrictMode: _e, Suspense: Bt, SuspenseList: Ut, __SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED: ce, cloneElement: We, createContext: B, createElement: f, createFactory: le, createPortal: Gt, createRef: j, default: be, findDOMNode: me, flushSync: ge, forwardRef: Pt, hydrate: Le, isElement: ye, isFragment: Me, isMemo: fe, isValidElement: we, lazy: Ft, memo: St, render: re, startTransition: xt, unmountComponentAtNode: je, unstable_batchedUpdates: ve, useCallback: pt, useContext: ct, useDebugValue: lt, useDeferredValue: Vt, useEffect: dt, useErrorBoundary: function(t19) {
  var e2 = nt(U++, 10), o2 = it();
  return e2.__ = t19, $.componentDidCatch || ($.componentDidCatch = function(t20, r2) {
    e2.__ && e2.__(t20, r2), o2[1](t20);
  }), [o2[0], function() {
    o2[1](void 0);
  }];
}, useId: wt, useImperativeHandle: at, useInsertionEffect: Tt, useLayoutEffect: kt, useMemo: ut, useReducer: st, useRef: ht, useState: it, useSyncExternalStore: bt, useTransition: Ht, version: "18.3.1" }, Symbol.toStringTag, { value: "Module" })), xe = (t19) => f("svg", { width: 12, height: 12, viewBox: "0 0 12 12", fill: "none", xmlns: "http://www.w3.org/2000/svg", ...t19 }, f("path", { d: "M5.99996 3.08333C5.4231 3.08333 4.85919 3.25439 4.37955 3.57488C3.8999 3.89537 3.52607 4.35089 3.30531 4.88384C3.08455 5.41679 3.0268 6.00324 3.13934 6.56901C3.25188 7.13479 3.52966 7.65449 3.93756 8.0624C4.34547 8.4703 4.86517 8.74809 5.43095 8.86063C5.99672 8.97317 6.58317 8.91541 7.11612 8.69465C7.64907 8.47389 8.10459 8.10006 8.42508 7.62041C8.74557 7.14077 8.91663 6.57686 8.91663 6C8.91663 5.22645 8.60933 4.48459 8.06235 3.93761C7.51537 3.39063 6.77351 3.08333 5.99996 3.08333ZM5.99996 7.75C5.65384 7.75 5.3155 7.64737 5.02771 7.45507C4.73992 7.26278 4.51562 6.98947 4.38317 6.6697C4.25072 6.34993 4.21606 5.99806 4.28358 5.65859C4.35111 5.31913 4.51778 5.00731 4.76252 4.76256C5.00726 4.51782 5.31908 4.35115 5.65855 4.28363C5.99802 4.2161 6.34988 4.25076 6.66966 4.38321C6.98943 4.51567 7.26274 4.73997 7.45503 5.02775C7.64732 5.31554 7.74996 5.65388 7.74996 6C7.74996 6.46413 7.56558 6.90925 7.2374 7.23744C6.90921 7.56563 6.46409 7.75 5.99996 7.75ZM8.91663 2.5C8.80125 2.5 8.68847 2.53421 8.59254 2.59831C8.49661 2.66241 8.42185 2.75351 8.3777 2.8601C8.33354 2.96669 8.32199 3.08398 8.3445 3.19714C8.36701 3.31029 8.42257 3.41423 8.50415 3.49581C8.58573 3.57739 8.68967 3.63295 8.80282 3.65546C8.91598 3.67797 9.03327 3.66642 9.13986 3.62226C9.24645 3.57811 9.33755 3.50335 9.40165 3.40742C9.46575 3.31149 9.49996 3.19871 9.49996 3.08333C9.49996 2.92862 9.4385 2.78025 9.32911 2.67086C9.21971 2.56146 9.07133 2.5 8.91663 2.5ZM11.7983 3.80667C11.7886 3.30816 11.6939 2.81497 11.5183 2.34833C11.3554 1.92371 11.1051 1.53808 10.7835 1.21649C10.4619 0.894904 10.0763 0.644544 9.65163 0.481668C9.18499 0.306026 8.6918 0.211332 8.19329 0.201668C7.62746 0.166668 7.44079 0.166668 5.99996 0.166668C4.55913 0.166668 4.37246 0.166668 3.80663 0.201668C3.30812 0.211332 2.81493 0.306026 2.34829 0.481668C1.92366 0.644544 1.53804 0.894904 1.21645 1.21649C0.894862 1.53808 0.644502 1.92371 0.481626 2.34833C0.305984 2.81497 0.21129 3.30816 0.201626 3.80667C0.166626 4.37833 0.166626 4.565 0.166626 6C0.166626 7.435 0.166626 7.62167 0.201626 8.19333C0.21129 8.69184 0.305984 9.18503 0.481626 9.65167C0.644502 10.0763 0.894862 10.4619 1.21645 10.7835C1.53804 11.1051 1.92366 11.3555 2.34829 11.5183C2.81493 11.694 3.30812 11.7887 3.80663 11.7983C4.38996 11.7983 4.55913 11.8333 5.99996 11.8333C7.44079 11.8333 7.62746 11.8333 8.19329 11.7983C8.6918 11.7887 9.18499 11.694 9.65163 11.5183C10.0763 11.3555 10.4619 11.1051 10.7835 10.7835C11.1051 10.4619 11.3554 10.0763 11.5183 9.65167C11.6939 9.18503 11.7886 8.69184 11.7983 8.19333C11.7983 7.61 11.8333 7.435 11.8333 6C11.8333 4.565 11.8333 4.37833 11.7983 3.80667ZM10.6316 8.14083C10.6214 8.51102 10.5525 8.87725 10.4275 9.22583C10.3241 9.50137 10.1607 9.75044 9.94913 9.955C9.74579 10.1667 9.49622 10.3284 9.21996 10.4275C8.87055 10.5576 8.50188 10.6286 8.12913 10.6375C7.58079 10.6375 7.41163 10.6667 5.99413 10.6667C4.57663 10.6667 4.41329 10.6667 3.86496 10.6667C3.4928 10.6571 3.12456 10.5881 2.77413 10.4625C2.49859 10.3591 2.24952 10.1957 2.04496 9.98417C1.8333 9.78083 1.67158 9.53126 1.57246 9.255C1.44285 8.90746 1.37188 8.5408 1.36246 8.17C1.36246 7.58667 1.36246 7.44083 1.36246 6.02917C1.36246 4.6175 1.36246 4.44833 1.36246 3.88833C1.37251 3.51571 1.44345 3.14723 1.57246 2.7975C1.67312 2.5237 1.83469 2.27636 2.04496 2.07417C2.24829 1.86251 2.49786 1.70079 2.77413 1.60167C3.12354 1.47152 3.4922 1.40055 3.86496 1.39167C4.41329 1.33333 4.58246 1.33333 5.99996 1.33333C7.41746 1.33333 7.58663 1.33333 8.13496 1.33333C8.50954 1.34286 8.88002 1.4138 9.23163 1.54333C9.50542 1.64399 9.75276 1.80556 9.95496 2.01583C10.1666 2.21917 10.3283 2.46874 10.4275 2.745C10.5703 3.1 10.6512 3.47684 10.6666 3.85917C10.6666 4.4425 10.6958 4.58833 10.6958 6C10.6958 7.41167 10.6666 7.58083 10.6666 8.14083H10.6316Z", fill: "#919191" })), Ve = (t19) => f("svg", { width: 10, height: 14, viewBox: "0 0 10 14", fill: "none", xmlns: "http://www.w3.org/2000/svg", ...t19 }, f("path", { d: "M8.98413 5.50667C8.93062 5.42751 8.85848 5.3627 8.77406 5.31794C8.68963 5.27319 8.59551 5.24986 8.49996 5.25H6.74996V4.08334H8.03329C8.188 4.08334 8.33637 4.02188 8.44577 3.91248C8.55517 3.80309 8.61663 3.65471 8.61663 3.5V1.16667C8.61663 1.01196 8.55517 0.863586 8.44577 0.75419C8.33637 0.644794 8.188 0.583336 8.03329 0.583336H6.16663C5.26931 0.583336 4.40875 0.939793 3.77425 1.57429C3.13975 2.20879 2.78329 3.06935 2.78329 3.96667V5.25H1.49996C1.34525 5.25 1.19688 5.31146 1.08748 5.42086C0.978084 5.53025 0.916626 5.67863 0.916626 5.83334V8.16667C0.916626 8.32138 0.978084 8.46975 1.08748 8.57915C1.19688 8.68855 1.34525 8.75 1.49996 8.75H2.78329V12.8333C2.78329 12.988 2.84475 13.1364 2.95415 13.2458C3.06354 13.3552 3.21192 13.4167 3.36663 13.4167H6.16663C6.32133 13.4167 6.46971 13.3552 6.5791 13.2458C6.6885 13.1364 6.74996 12.988 6.74996 12.8333V8.75H7.56662C7.68345 8.75012 7.79763 8.71515 7.89435 8.64962C7.99108 8.5841 8.0659 8.49104 8.10913 8.3825L9.04246 6.04917C9.07769 5.96084 9.0908 5.86523 9.08063 5.77068C9.07046 5.67613 9.03733 5.58549 8.98413 5.50667ZM7.16996 7.58334H6.16663C6.01192 7.58334 5.86354 7.64479 5.75415 7.75419C5.64475 7.86359 5.58329 8.01196 5.58329 8.16667V12.25H3.94996V8.16667C3.94996 8.01196 3.8885 7.86359 3.7791 7.75419C3.66971 7.64479 3.52134 7.58334 3.36663 7.58334H2.08329V6.41667H3.36663C3.52134 6.41667 3.66971 6.35521 3.7791 6.24582C3.8885 6.13642 3.94996 5.98805 3.94996 5.83334V3.96667C3.9515 3.37925 4.18553 2.81632 4.60091 2.40095C5.01628 1.98558 5.5792 1.75154 6.16663 1.75H7.44996V2.91667H6.98329C6.78579 2.8879 6.58447 2.89997 6.39182 2.95215C6.19917 3.00432 6.01928 3.09549 5.86329 3.22C5.76863 3.31911 5.69502 3.43636 5.64689 3.56469C5.59877 3.69301 5.57714 3.82976 5.58329 3.96667V5.83334C5.58329 5.98805 5.64475 6.13642 5.75415 6.24582C5.86354 6.35521 6.01192 6.41667 6.16663 6.41667H7.63663L7.16996 7.58334Z", fill: "#919191" })), He = (t19) => f("svg", { width: 14, height: 11, viewBox: "0 0 14 11", fill: "none", xmlns: "http://www.w3.org/2000/svg", ...t19 }, f("path", { d: "M13.4116 1.13969C13.4116 1.04402 13.3844 0.950032 13.3326 0.867312C13.2809 0.784592 13.2064 0.71609 13.1168 0.668784C13.0273 0.621477 12.9258 0.597055 12.8228 0.598006C12.7198 0.598956 12.6188 0.625245 12.5303 0.674194C12.1889 0.862903 11.8213 1.00742 11.4377 1.10374C10.89 0.667278 10.1913 0.428442 9.46956 0.430883C8.67773 0.431729 7.91724 0.718287 7.34869 1.23005C6.78013 1.74181 6.448 2.43871 6.42244 3.1736C4.86143 2.94245 3.44665 2.18589 2.44787 1.04818C2.38769 0.980379 2.31084 0.927014 2.22379 0.892581C2.13674 0.858149 2.04205 0.843659 1.94771 0.850333C1.85342 0.857543 1.76244 0.885971 1.68264 0.93316C1.60284 0.980349 1.53662 1.04488 1.4897 1.12117C1.24909 1.51107 1.1109 1.94816 1.08636 2.39696C1.06181 2.84576 1.15159 3.2936 1.34842 3.70413L1.34729 3.70519C1.25882 3.75578 1.18581 3.82661 1.13525 3.91088C1.08468 3.99516 1.05824 4.09008 1.05847 4.18656C1.0574 4.26614 1.06254 4.3457 1.07385 4.42459C1.13343 5.10615 1.45872 5.74412 1.98873 6.21886C1.95277 6.28247 1.93083 6.35209 1.92418 6.42366C1.91752 6.49522 1.9263 6.56731 1.94999 6.63569C2.18105 7.30419 2.67244 7.86856 3.328 8.21837C2.66197 8.45752 1.94283 8.54091 1.23392 8.46117C1.10271 8.44588 0.969805 8.47246 0.856999 8.53653C0.744193 8.60061 0.658187 8.69838 0.613088 8.81381C0.56799 8.92924 0.566477 9.05547 0.608798 9.1718C0.65112 9.28814 0.734762 9.38766 0.846005 9.45405C2.06523 10.1832 3.48482 10.5709 4.93504 10.5707C6.57961 10.5879 8.18418 10.0999 9.49918 9.18267C10.8142 8.26543 11.7658 6.97036 12.2062 5.49892C12.4121 4.85793 12.5173 4.19267 12.5184 3.52376C12.5184 3.48832 12.5184 3.45182 12.5178 3.41533C12.8224 3.11033 13.0583 2.75195 13.2118 2.36119C13.3652 1.97043 13.4332 1.55515 13.4116 1.13969ZM11.4827 2.87948C11.3864 2.98529 11.3376 3.12149 11.3466 3.25981C11.3523 3.34918 11.3517 3.4391 11.3517 3.52376C11.3505 4.08901 11.2613 4.65113 11.0868 5.19267C10.7272 6.44467 9.92547 7.5484 8.81009 8.32707C7.69471 9.10575 6.33018 9.51433 4.93504 9.48739C4.43388 9.48753 3.93446 9.43285 3.44708 9.32446C4.06857 9.13848 4.64968 8.85176 5.16347 8.47758C5.2581 8.40839 5.32736 8.31371 5.36174 8.20652C5.39612 8.09933 5.39393 7.98489 5.35549 7.8789C5.31704 7.77291 5.24422 7.68056 5.14701 7.61453C5.0498 7.5485 4.93296 7.51202 4.81254 7.51009C4.32769 7.50309 3.8647 7.3216 3.52111 7.00387C3.60827 6.98853 3.69486 6.96948 3.78088 6.94674C3.90689 6.91343 4.01716 6.84172 4.09394 6.74315C4.17071 6.64457 4.20953 6.52487 4.20413 6.40332C4.19874 6.28177 4.14945 6.16544 4.0642 6.07307C3.97895 5.9807 3.8627 5.91765 3.73417 5.89408C3.45273 5.84247 3.1879 5.73129 2.96027 5.56918C2.73264 5.40707 2.54833 5.1984 2.42167 4.95939C2.52709 4.97275 2.63319 4.98105 2.73954 4.98425C2.86588 4.98602 2.98955 4.95044 3.09268 4.88264C3.1958 4.81484 3.27303 4.71834 3.31319 4.60709C3.35168 4.49484 3.3497 4.374 3.30755 4.26288C3.2654 4.15177 3.18538 4.05645 3.07963 3.99137C2.82305 3.83265 2.61287 3.61731 2.46792 3.36464C2.32297 3.11197 2.24777 2.82986 2.24906 2.54358C2.24906 2.50762 2.2502 2.47164 2.25248 2.4362C3.55988 3.56842 5.25567 4.23586 7.04106 4.32093C7.13119 4.32422 7.22094 4.30846 7.30354 4.27483C7.38614 4.2412 7.45943 4.19058 7.51787 4.12679C7.57573 4.06239 7.61669 3.9864 7.63755 3.9048C7.6584 3.82319 7.65857 3.73821 7.63804 3.65654C7.60468 3.52728 7.58767 3.39485 7.58734 3.26193C7.58787 2.79855 7.78634 2.35429 8.13921 2.02664C8.49207 1.69898 8.9705 1.51469 9.46952 1.5142C9.72627 1.51356 9.98036 1.56235 10.2158 1.6575C10.4512 1.75264 10.6628 1.89207 10.8373 2.06698C10.9046 2.13419 10.9892 2.1843 11.0833 2.21254C11.1773 2.24078 11.2775 2.24622 11.3745 2.22833C11.6141 2.18503 11.8503 2.12671 12.0814 2.05378C11.9237 2.3533 11.7223 2.63116 11.4827 2.87948Z", fill: "#919191" })), Te = (t19) => f("svg", { width: 14, height: 12, viewBox: "0 0 14 12", fill: "none", xmlns: "http://www.w3.org/2000/svg", ...t19 }, f("path", { d: "M12.9877 0.416174C12.8216 0.278002 12.6211 0.187446 12.4077 0.154144C12.1942 0.120841 11.9757 0.146037 11.7754 0.227052L1.32155 4.44767C1.09799 4.53965 0.907688 4.69745 0.775904 4.90012C0.644119 5.10278 0.577085 5.34073 0.583698 5.58239C0.590312 5.82404 0.67026 6.05797 0.812932 6.25313C0.955605 6.44828 1.15425 6.59543 1.38251 6.67505L3.49709 7.41048L4.67572 11.3081C4.69174 11.3602 4.71498 11.4097 4.74477 11.4553C4.7493 11.4623 4.75567 11.4675 4.76048 11.4743C4.7949 11.5224 4.83649 11.5648 4.88381 11.6002C4.89727 11.6105 4.91016 11.6201 4.92454 11.6292C4.97992 11.6659 5.04125 11.6928 5.1058 11.7086L5.11271 11.7092L5.11662 11.7108C5.15543 11.7187 5.19494 11.7227 5.23454 11.7228C5.23835 11.7228 5.24173 11.721 5.24551 11.7209C5.30528 11.7199 5.36453 11.7096 5.42114 11.6904C5.43432 11.6859 5.4456 11.6784 5.45838 11.673C5.5006 11.6555 5.54061 11.6331 5.57755 11.6062C5.60714 11.5812 5.63674 11.5563 5.66635 11.5314L7.24261 9.79108L9.5936 11.6123C9.80058 11.7734 10.0553 11.861 10.3176 11.8612C10.5925 11.8609 10.8589 11.766 11.0721 11.5926C11.2854 11.4192 11.4325 11.1778 11.4889 10.9087L13.3921 1.56575C13.4352 1.35547 13.4204 1.13742 13.3491 0.934931C13.2779 0.73244 13.153 0.553126 12.9877 0.416174ZM5.46585 7.59619C5.38496 7.67675 5.32967 7.77941 5.30691 7.89128L5.12636 8.76861L4.66899 7.25598L7.04039 6.0211L5.46585 7.59619ZM10.3085 10.69L7.5303 8.53782C7.41406 8.448 7.26826 8.40528 7.12193 8.41816C6.9756 8.43104 6.8395 8.49858 6.74074 8.60732L6.23592 9.16452L6.41433 8.29742L10.5461 4.16567C10.6447 4.06718 10.7048 3.93663 10.7155 3.79766C10.7261 3.65869 10.6867 3.5205 10.6042 3.40811C10.5218 3.29572 10.4018 3.21657 10.2661 3.18499C10.1303 3.15342 9.98776 3.17151 9.8642 3.23598L3.93445 6.32335L1.76191 5.52832L12.2494 1.33275L10.3085 10.69Z", fill: "#919191" })), Oe = (t19) => f("svg", { width: 12, height: 10, viewBox: "0 0 12 10", fill: "none", xmlns: "http://www.w3.org/2000/svg", ...t19 }, f("path", { d: "M7.68579 4.11333L5.93579 3.09833C5.78032 3.00647 5.60304 2.95802 5.42246 2.95802C5.24188 2.95802 5.0646 3.00647 4.90913 3.09833C4.75246 3.18665 4.62258 3.31568 4.53325 3.47176C4.44391 3.62785 4.39843 3.80518 4.40163 3.985V6.015C4.39843 6.19481 4.44391 6.37215 4.53325 6.52824C4.62258 6.68432 4.75246 6.81335 4.90913 6.90167C5.0646 6.99352 5.24188 7.04198 5.42246 7.04198C5.60304 7.04198 5.78032 6.99352 5.93579 6.90167L7.68579 5.88667C7.8354 5.79484 7.95897 5.66619 8.04468 5.513C8.1304 5.35981 8.17541 5.18721 8.17541 5.01167C8.17541 4.83613 8.1304 4.66352 8.04468 4.51033C7.95897 4.35714 7.8354 4.22849 7.68579 4.13667V4.11333ZM5.55663 5.77V4.23L6.88663 5L5.55663 5.77ZM10.0833 0.333332H1.91663C1.4525 0.333332 1.00738 0.517707 0.679189 0.845895C0.351001 1.17408 0.166626 1.6192 0.166626 2.08333V7.91667C0.166626 8.38079 0.351001 8.82591 0.679189 9.1541C1.00738 9.48229 1.4525 9.66667 1.91663 9.66667H10.0833C10.5474 9.66667 10.9925 9.48229 11.3207 9.1541C11.6489 8.82591 11.8333 8.38079 11.8333 7.91667V2.08333C11.8333 1.6192 11.6489 1.17408 11.3207 0.845895C10.9925 0.517707 10.5474 0.333332 10.0833 0.333332ZM10.6666 7.91667C10.6666 8.07138 10.6052 8.21975 10.4958 8.32915C10.3864 8.43854 10.238 8.5 10.0833 8.5H1.91663C1.76192 8.5 1.61354 8.43854 1.50415 8.32915C1.39475 8.21975 1.33329 8.07138 1.33329 7.91667V2.08333C1.33329 1.92862 1.39475 1.78025 1.50415 1.67085C1.61354 1.56146 1.76192 1.5 1.91663 1.5H10.0833C10.238 1.5 10.3864 1.56146 10.4958 1.67085C10.6052 1.78025 10.6666 1.92862 10.6666 2.08333V7.91667Z", fill: "#919191" }));
function Se() {
  return F("ul", { className: "socials column center-x gap-40", children: [{ name: "facebook", icon: F(Ve, {}) }, { name: "instagram", icon: F(xe, {}) }, { name: "twitter", icon: F(He, {}) }, { name: "youtube", icon: F(Oe, {}) }, { name: "telegram", icon: F(Te, {}) }].map((t19, e2) => F("li", { children: t19.icon }, e2)) });
}
function Ze(t19) {
  if (void 0 === t19) throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
  return t19;
}
function Ee(t19, e2) {
  t19.prototype = Object.create(e2.prototype), t19.prototype.constructor = t19, t19.__proto__ = e2;
}
/*!
 * GSAP 3.12.7
 * https://gsap.com
 *
 * @license Copyright 2008-2025, GreenSock. All rights reserved.
 * Subject to the terms at https://gsap.com/standard-license or for
 * Club GSAP members, the agreement issued with that membership.
 * @author: Jack Doyle, jack@greensock.com
*/
var Pe, Ne, Ae, Re, De, qe, ze, Be, Ie, Fe, Ue, $e = { autoSleep: 120, force3D: "auto", nullTargetWarn: 1, units: { lineHeight: "" } }, Ye = { duration: 0.5, overwrite: false, delay: 0 }, Xe = 1e8, Ge = 1e-8, Ke = 2 * Math.PI, Je = Ke / 4, Qe = 0, to = Math.sqrt, eo = Math.cos, oo = Math.sin, ro = function(t19) {
  return "string" == typeof t19;
}, Lo = function(t19) {
  return "function" == typeof t19;
}, no = function(t19) {
  return "number" == typeof t19;
}, io = function(t19) {
  return void 0 === t19;
}, so = function(t19) {
  return "object" == typeof t19;
}, ko = function(t19) {
  return false !== t19;
}, ho = function() {
  return "undefined" != typeof window;
}, ao = function(t19) {
  return Lo(t19) || ro(t19);
}, uo = "function" == typeof ArrayBuffer && ArrayBuffer.isView || function() {
}, po = Array.isArray, co = /(?:-?\.?\d|\.)+/gi, lo = /[-+=.]*\d+[.e\-+]*\d*[e\-+]*\d*/g, wo = /[-+=.]*\d+[.e-]*\d*[a-z%]*/g, Mo = /[-+=.]*\d+\.?\d*(?:e-|e\+)?\d*/gi, fo = /[+-]=-?[.\d]+/, Wo = /[^,'"\[\]\s]+/gi, jo = /^[+\-=e\s\d]*\d+[.\d]*([a-z]*|%)\s*$/i, mo = {}, vo = {}, go = function(t19) {
  return (vo = Jo(t19, mo)) && QL;
}, _o = function(t19, e2) {
  return console.warn("Invalid property", t19, "set to", e2, "Missing plugin? gsap.registerPlugin()");
}, yo = function(t19, e2) {
  return !e2 && console.warn(t19);
}, bo = function(t19, e2) {
  return t19 && (mo[t19] = e2) && vo && (vo[t19] = e2) || mo;
}, Co = function() {
  return 0;
}, xo = { suppressEvents: true, isStart: true, kill: false }, Vo = { suppressEvents: true, kill: false }, Ho = { suppressEvents: true }, To = {}, Oo = [], So = {}, Zo = {}, Eo = {}, Po = 30, No = [], Ao = "", Ro = function(t19) {
  var e2, o2, r2 = t19[0];
  if (so(r2) || Lo(r2) || (t19 = [t19]), !(e2 = (r2._gsap || {}).harness)) {
    for (o2 = No.length; o2-- && !No[o2].targetTest(r2); ) ;
    e2 = No[o2];
  }
  for (o2 = t19.length; o2--; ) t19[o2] && (t19[o2]._gsap || (t19[o2]._gsap = new pL(t19[o2], e2))) || t19.splice(o2, 1);
  return t19;
}, Do = function(t19) {
  return t19._gsap || Ro(Hr(t19))[0]._gsap;
}, qo = function(t19, e2, o2) {
  return (o2 = t19[e2]) && Lo(o2) ? t19[e2]() : io(o2) && t19.getAttribute && t19.getAttribute(e2) || o2;
}, zo = function(t19, e2) {
  return (t19 = t19.split(",")).forEach(e2) || t19;
}, Bo = function(t19) {
  return Math.round(1e5 * t19) / 1e5 || 0;
}, Io = function(t19) {
  return Math.round(1e7 * t19) / 1e7 || 0;
}, Fo = function(t19, e2) {
  var o2 = e2.charAt(0), r2 = parseFloat(e2.substr(2));
  return t19 = parseFloat(t19), "+" === o2 ? t19 + r2 : "-" === o2 ? t19 - r2 : "*" === o2 ? t19 * r2 : t19 / r2;
}, Uo = function(t19, e2) {
  for (var o2 = e2.length, r2 = 0; t19.indexOf(e2[r2]) < 0 && ++r2 < o2; ) ;
  return r2 < o2;
}, $o = function() {
  var t19, e2, o2 = Oo.length, r2 = Oo.slice(0);
  for (So = {}, Oo.length = 0, t19 = 0; t19 < o2; t19++) (e2 = r2[t19]) && e2._lazy && (e2.render(e2._lazy[0], e2._lazy[1], true)._lazy = 0);
}, Yo = function(t19, e2, o2, r2) {
  Oo.length && !Ne && $o(), t19.render(e2, o2, Ne && e2 < 0 && (t19._initted || t19._startAt)), Oo.length && !Ne && $o();
}, Xo = function(t19) {
  var e2 = parseFloat(t19);
  return (e2 || 0 === e2) && (t19 + "").match(Wo).length < 2 ? e2 : ro(t19) ? t19.trim() : t19;
}, Go = function(t19) {
  return t19;
}, Ko = function(t19, e2) {
  for (var o2 in e2) o2 in t19 || (t19[o2] = e2[o2]);
  return t19;
}, Jo = function(t19, e2) {
  for (var o2 in e2) t19[o2] = e2[o2];
  return t19;
}, Qo = function t2(e2, o2) {
  for (var r2 in o2) "__proto__" !== r2 && "constructor" !== r2 && "prototype" !== r2 && (e2[r2] = so(o2[r2]) ? t2(e2[r2] || (e2[r2] = {}), o2[r2]) : o2[r2]);
  return e2;
}, tr = function(t19, e2) {
  var o2, r2 = {};
  for (o2 in t19) o2 in e2 || (r2[o2] = t19[o2]);
  return r2;
}, er = function(t19) {
  var e2, o2 = t19.parent || Re, r2 = t19.keyframes ? (e2 = po(t19.keyframes), function(t20, o3) {
    for (var r3 in o3) r3 in t20 || "duration" === r3 && e2 || "ease" === r3 || (t20[r3] = o3[r3]);
  }) : Ko;
  if (ko(t19.inherit)) for (; o2; ) r2(t19, o2.vars.defaults), o2 = o2.parent || o2._dp;
  return t19;
}, or = function(t19, e2, o2, r2, L2) {
  var n2, i2 = t19[r2];
  if (L2) for (n2 = e2[L2]; i2 && i2[L2] > n2; ) i2 = i2._prev;
  return i2 ? (e2._next = i2._next, i2._next = e2) : (e2._next = t19[o2], t19[o2] = e2), e2._next ? e2._next._prev = e2 : t19[r2] = e2, e2._prev = i2, e2.parent = e2._dp = t19, e2;
}, rr = function(t19, e2, o2, r2) {
  void 0 === o2 && (o2 = "_first"), void 0 === r2 && (r2 = "_last");
  var L2 = e2._prev, n2 = e2._next;
  L2 ? L2._next = n2 : t19[o2] === e2 && (t19[o2] = n2), n2 ? n2._prev = L2 : t19[r2] === e2 && (t19[r2] = L2), e2._next = e2._prev = e2.parent = null;
}, Lr = function(t19, e2) {
  t19.parent && (!e2 || t19.parent.autoRemoveChildren) && t19.parent.remove && t19.parent.remove(t19), t19._act = 0;
}, nr = function(t19, e2) {
  if (t19 && (!e2 || e2._end > t19._dur || e2._start < 0)) for (var o2 = t19; o2; ) o2._dirty = 1, o2 = o2.parent;
  return t19;
}, ir = function(t19, e2, o2, r2) {
  return t19._startAt && (Ne ? t19._startAt.revert(Vo) : t19.vars.immediateRender && !t19.vars.autoRevert || t19._startAt.render(e2, true, r2));
}, sr = function t3(e2) {
  return !e2 || e2._ts && t3(e2.parent);
}, dr = function(t19) {
  return t19._repeat ? kr(t19._tTime, t19 = t19.duration() + t19._rDelay) * t19 : 0;
}, kr = function(t19, e2) {
  var o2 = Math.floor(t19 = Io(t19 / e2));
  return t19 && o2 === t19 ? o2 - 1 : o2;
}, hr = function(t19, e2) {
  return (t19 - e2._start) * e2._ts + (e2._ts >= 0 ? 0 : e2._dirty ? e2.totalDuration() : e2._tDur);
}, ar = function(t19) {
  return t19._end = Io(t19._start + (t19._tDur / Math.abs(t19._ts || t19._rts || Ge) || 0));
}, ur = function(t19, e2) {
  var o2 = t19._dp;
  return o2 && o2.smoothChildTiming && t19._ts && (t19._start = Io(o2._time - (t19._ts > 0 ? e2 / t19._ts : ((t19._dirty ? t19.totalDuration() : t19._tDur) - e2) / -t19._ts)), ar(t19), o2._dirty || nr(o2, t19)), t19;
}, pr = function(t19, e2) {
  var o2;
  if ((e2._time || !e2._dur && e2._initted || e2._start < t19._time && (e2._dur || !e2.add)) && (o2 = hr(t19.rawTime(), e2), (!e2._dur || yr(0, e2.totalDuration(), o2) - e2._tTime > Ge) && e2.render(o2, true)), nr(t19, e2)._dp && t19._initted && t19._time >= t19._dur && t19._ts) {
    if (t19._dur < t19.duration()) for (o2 = t19; o2._dp; ) o2.rawTime() >= 0 && o2.totalTime(o2._tTime), o2 = o2._dp;
    t19._zTime = -1e-8;
  }
}, cr = function(t19, e2, o2, r2) {
  return e2.parent && Lr(e2), e2._start = Io((no(o2) ? o2 : o2 || t19 !== Re ? vr(t19, o2, e2) : t19._time) + e2._delay), e2._end = Io(e2._start + (e2.totalDuration() / Math.abs(e2.timeScale()) || 0)), or(t19, e2, "_first", "_last", t19._sort ? "_start" : 0), fr(e2) || (t19._recent = e2), r2 || pr(t19, e2), t19._ts < 0 && ur(t19, t19._tTime), t19;
}, lr = function(t19, e2) {
  return (mo.ScrollTrigger || _o("scrollTrigger", e2)) && mo.ScrollTrigger.create(e2, t19);
}, wr = function(t19, e2, o2, r2, L2) {
  return mL(t19, e2, L2), t19._initted ? !o2 && t19._pt && !Ne && (t19._dur && false !== t19.vars.lazy || !t19._dur && t19.vars.lazy) && Ie !== tL.frame ? (Oo.push(t19), t19._lazy = [L2, r2], 1) : void 0 : 1;
}, Mr = function t4(e2) {
  var o2 = e2.parent;
  return o2 && o2._ts && o2._initted && !o2._lock && (o2.rawTime() < 0 || t4(o2));
}, fr = function(t19) {
  var e2 = t19.data;
  return "isFromStart" === e2 || "isStart" === e2;
}, Wr = function(t19, e2, o2, r2) {
  var L2 = t19._repeat, n2 = Io(e2) || 0, i2 = t19._tTime / t19._tDur;
  return i2 && !r2 && (t19._time *= n2 / t19._dur), t19._dur = n2, t19._tDur = L2 ? L2 < 0 ? 1e10 : Io(n2 * (L2 + 1) + t19._rDelay * L2) : n2, i2 > 0 && !r2 && ur(t19, t19._tTime = t19._tDur * i2), t19.parent && ar(t19), o2 || nr(t19.parent, t19), t19;
}, jr = function(t19) {
  return t19 instanceof lL ? nr(t19) : Wr(t19, t19._dur);
}, mr = { _start: 0, endTime: Co, totalDuration: Co }, vr = function t5(e2, o2, r2) {
  var L2, n2, i2, s2 = e2.labels, d2 = e2._recent || mr, k2 = e2.duration() >= Xe ? d2.endTime(false) : e2._dur;
  return ro(o2) && (isNaN(o2) || o2 in s2) ? (n2 = o2.charAt(0), i2 = "%" === o2.substr(-1), L2 = o2.indexOf("="), "<" === n2 || ">" === n2 ? (L2 >= 0 && (o2 = o2.replace(/=/, "")), ("<" === n2 ? d2._start : d2.endTime(d2._repeat >= 0)) + (parseFloat(o2.substr(1)) || 0) * (i2 ? (L2 < 0 ? d2 : r2).totalDuration() / 100 : 1)) : L2 < 0 ? (o2 in s2 || (s2[o2] = k2), s2[o2]) : (n2 = parseFloat(o2.charAt(L2 - 1) + o2.substr(L2 + 1)), i2 && r2 && (n2 = n2 / 100 * (po(r2) ? r2[0] : r2).totalDuration()), L2 > 1 ? t5(e2, o2.substr(0, L2 - 1), r2) + n2 : k2 + n2)) : null == o2 ? k2 : +o2;
}, gr = function(t19, e2, o2) {
  var r2, L2, n2 = no(e2[1]), i2 = (n2 ? 2 : 1) + (t19 < 2 ? 0 : 1), s2 = e2[i2];
  if (n2 && (s2.duration = e2[1]), s2.parent = o2, t19) {
    for (r2 = s2, L2 = o2; L2 && !("immediateRender" in r2); ) r2 = L2.vars.defaults || {}, L2 = ko(L2.vars.inherit) && L2.parent;
    s2.immediateRender = ko(r2.immediateRender), t19 < 2 ? s2.runBackwards = 1 : s2.startAt = e2[i2 - 1];
  }
  return new bL(e2[0], s2, e2[i2 + 1]);
}, _r = function(t19, e2) {
  return t19 || 0 === t19 ? e2(t19) : e2;
}, yr = function(t19, e2, o2) {
  return o2 < t19 ? t19 : o2 > e2 ? e2 : o2;
}, br = function(t19, e2) {
  return ro(t19) && (e2 = jo.exec(t19)) ? e2[1] : "";
}, Cr = [].slice, xr = function(t19, e2) {
  return t19 && so(t19) && "length" in t19 && (!e2 && !t19.length || t19.length - 1 in t19 && so(t19[0])) && !t19.nodeType && t19 !== De;
}, Vr = function(t19, e2, o2) {
  return void 0 === o2 && (o2 = []), t19.forEach(function(t20) {
    var r2;
    return ro(t20) && !e2 || xr(t20, 1) ? (r2 = o2).push.apply(r2, Hr(t20)) : o2.push(t20);
  }) || o2;
}, Hr = function(t19, e2, o2) {
  return Ae && !e2 && Ae.selector ? Ae.selector(t19) : !ro(t19) || o2 || !qe && eL() ? po(t19) ? Vr(t19, o2) : xr(t19) ? Cr.call(t19, 0) : t19 ? [t19] : [] : Cr.call((e2 || ze).querySelectorAll(t19), 0);
}, Tr = function(t19) {
  return t19 = Hr(t19)[0] || yo("Invalid scope") || {}, function(e2) {
    var o2 = t19.current || t19.nativeElement || t19;
    return Hr(e2, o2.querySelectorAll ? o2 : o2 === t19 ? yo("Invalid scope") || ze.createElement("div") : t19);
  };
}, Or = function(t19) {
  return t19.sort(function() {
    return 0.5 - Math.random();
  });
}, Sr = function(t19) {
  if (Lo(t19)) return t19;
  var e2 = so(t19) ? t19 : { each: t19 }, o2 = dL(e2.ease), r2 = e2.from || 0, L2 = parseFloat(e2.base) || 0, n2 = {}, i2 = r2 > 0 && r2 < 1, s2 = isNaN(r2) || i2, d2 = e2.axis, k2 = r2, h2 = r2;
  return ro(r2) ? k2 = h2 = { center: 0.5, edges: 0.5, end: 1 }[r2] || 0 : !i2 && s2 && (k2 = r2[0], h2 = r2[1]), function(t20, i3, a2) {
    var u2, p2, c2, l2, w2, M2, f2, W2, j2, m2 = (a2 || e2).length, v2 = n2[m2];
    if (!v2) {
      if (!(j2 = "auto" === e2.grid ? 0 : (e2.grid || [1, Xe])[1])) {
        for (f2 = -1e8; f2 < (f2 = a2[j2++].getBoundingClientRect().left) && j2 < m2; ) ;
        j2 < m2 && j2--;
      }
      for (v2 = n2[m2] = [], u2 = s2 ? Math.min(j2, m2) * k2 - 0.5 : r2 % j2, p2 = j2 === Xe ? 0 : s2 ? m2 * h2 / j2 - 0.5 : r2 / j2 | 0, f2 = 0, W2 = Xe, M2 = 0; M2 < m2; M2++) c2 = M2 % j2 - u2, l2 = p2 - (M2 / j2 | 0), v2[M2] = w2 = d2 ? Math.abs("y" === d2 ? l2 : c2) : to(c2 * c2 + l2 * l2), w2 > f2 && (f2 = w2), w2 < W2 && (W2 = w2);
      "random" === r2 && Or(v2), v2.max = f2 - W2, v2.min = W2, v2.v = m2 = (parseFloat(e2.amount) || parseFloat(e2.each) * (j2 > m2 ? m2 - 1 : d2 ? "y" === d2 ? m2 / j2 : j2 : Math.max(j2, m2 / j2)) || 0) * ("edges" === r2 ? -1 : 1), v2.b = m2 < 0 ? L2 - m2 : L2, v2.u = br(e2.amount || e2.each) || 0, o2 = o2 && m2 < 0 ? iL(o2) : o2;
    }
    return m2 = (v2[t20] - v2.min) / v2.max || 0, Io(v2.b + (o2 ? o2(m2) : m2) * v2.v) + v2.u;
  };
}, Zr = function(t19) {
  var e2 = Math.pow(10, ((t19 + "").split(".")[1] || "").length);
  return function(o2) {
    var r2 = Io(Math.round(parseFloat(o2) / t19) * t19 * e2);
    return (r2 - r2 % 1) / e2 + (no(o2) ? 0 : br(o2));
  };
}, Er = function(t19, e2) {
  var o2, r2, L2 = po(t19);
  return !L2 && so(t19) && (o2 = L2 = t19.radius || Xe, t19.values ? (t19 = Hr(t19.values), (r2 = !no(t19[0])) && (o2 *= o2)) : t19 = Zr(t19.increment)), _r(e2, L2 ? Lo(t19) ? function(e3) {
    return r2 = t19(e3), Math.abs(r2 - e3) <= o2 ? r2 : e3;
  } : function(e3) {
    for (var L3, n2, i2 = parseFloat(r2 ? e3.x : e3), s2 = parseFloat(r2 ? e3.y : 0), d2 = Xe, k2 = 0, h2 = t19.length; h2--; ) (L3 = r2 ? (L3 = t19[h2].x - i2) * L3 + (n2 = t19[h2].y - s2) * n2 : Math.abs(t19[h2] - i2)) < d2 && (d2 = L3, k2 = h2);
    return k2 = !o2 || d2 <= o2 ? t19[k2] : e3, r2 || k2 === e3 || no(e3) ? k2 : k2 + br(e3);
  } : Zr(t19));
}, Pr = function(t19, e2, o2, r2) {
  return _r(po(t19) ? !e2 : true === o2 ? !!(o2 = 0) : !r2, function() {
    return po(t19) ? t19[~~(Math.random() * t19.length)] : (o2 = o2 || 1e-5) && (r2 = o2 < 1 ? Math.pow(10, (o2 + "").length - 2) : 1) && Math.floor(Math.round((t19 - o2 / 2 + Math.random() * (e2 - t19 + 0.99 * o2)) / o2) * o2 * r2) / r2;
  });
}, Nr = function(t19, e2, o2) {
  return _r(o2, function(o3) {
    return t19[~~e2(o3)];
  });
}, Ar = function(t19) {
  for (var e2, o2, r2, L2, n2 = 0, i2 = ""; ~(e2 = t19.indexOf("random(", n2)); ) r2 = t19.indexOf(")", e2), L2 = "[" === t19.charAt(e2 + 7), o2 = t19.substr(e2 + 7, r2 - e2 - 7).match(L2 ? Wo : co), i2 += t19.substr(n2, e2 - n2) + Pr(L2 ? o2 : +o2[0], L2 ? 0 : +o2[1], +o2[2] || 1e-5), n2 = r2 + 1;
  return i2 + t19.substr(n2, t19.length - n2);
}, Rr = function(t19, e2, o2, r2, L2) {
  var n2 = e2 - t19, i2 = r2 - o2;
  return _r(L2, function(e3) {
    return o2 + ((e3 - t19) / n2 * i2 || 0);
  });
}, Dr = function(t19, e2, o2) {
  var r2, L2, n2, i2 = t19.labels, s2 = Xe;
  for (r2 in i2) (L2 = i2[r2] - e2) < 0 == !!o2 && L2 && s2 > (L2 = Math.abs(L2)) && (n2 = r2, s2 = L2);
  return n2;
}, qr = function(t19, e2, o2) {
  var r2, L2, n2, i2 = t19.vars, s2 = i2[e2], d2 = Ae, k2 = t19._ctx;
  if (s2) return r2 = i2[e2 + "Params"], L2 = i2.callbackScope || t19, o2 && Oo.length && $o(), k2 && (Ae = k2), n2 = r2 ? s2.apply(L2, r2) : s2.call(L2), Ae = d2, n2;
}, zr = function(t19) {
  return Lr(t19), t19.scrollTrigger && t19.scrollTrigger.kill(!!Ne), t19.progress() < 1 && qr(t19, "onInterrupt"), t19;
}, Br = [], Ir = function(t19) {
  if (t19) if (t19 = !t19.name && t19.default || t19, ho() || t19.headless) {
    var e2 = t19.name, o2 = Lo(t19), r2 = e2 && !o2 && t19.init ? function() {
      this._props = [];
    } : t19, L2 = { init: Co, render: EL, add: WL, kill: NL, modifier: PL, rawVars: 0 }, n2 = { targetTest: 0, get: 0, getSetter: TL, aliases: {}, register: 0 };
    if (eL(), t19 !== r2) {
      if (Zo[e2]) return;
      Ko(r2, Ko(tr(t19, L2), n2)), Jo(r2.prototype, Jo(L2, tr(t19, n2))), Zo[r2.prop = e2] = r2, t19.targetTest && (No.push(r2), To[e2] = 1), e2 = ("css" === e2 ? "CSS" : e2.charAt(0).toUpperCase() + e2.substr(1)) + "Plugin";
    }
    bo(e2, r2), t19.register && t19.register(QL, r2, DL);
  } else Br.push(t19);
}, Fr = 255, Ur = { aqua: [0, Fr, Fr], lime: [0, Fr, 0], silver: [192, 192, 192], black: [0, 0, 0], maroon: [128, 0, 0], teal: [0, 128, 128], blue: [0, 0, Fr], navy: [0, 0, 128], white: [Fr, Fr, Fr], olive: [128, 128, 0], yellow: [Fr, Fr, 0], orange: [Fr, 165, 0], gray: [128, 128, 128], purple: [128, 0, 128], green: [0, 128, 0], red: [Fr, 0, 0], pink: [Fr, 192, 203], cyan: [0, Fr, Fr], transparent: [Fr, Fr, Fr, 0] }, $r = function(t19, e2, o2) {
  return (6 * (t19 += t19 < 0 ? 1 : t19 > 1 ? -1 : 0) < 1 ? e2 + (o2 - e2) * t19 * 6 : t19 < 0.5 ? o2 : 3 * t19 < 2 ? e2 + (o2 - e2) * (2 / 3 - t19) * 6 : e2) * Fr + 0.5 | 0;
}, Yr = function(t19, e2, o2) {
  var r2, L2, n2, i2, s2, d2, k2, h2, a2, u2, p2 = t19 ? no(t19) ? [t19 >> 16, t19 >> 8 & Fr, t19 & Fr] : 0 : Ur.black;
  if (!p2) {
    if ("," === t19.substr(-1) && (t19 = t19.substr(0, t19.length - 1)), Ur[t19]) p2 = Ur[t19];
    else if ("#" === t19.charAt(0)) {
      if (t19.length < 6 && (r2 = t19.charAt(1), L2 = t19.charAt(2), n2 = t19.charAt(3), t19 = "#" + r2 + r2 + L2 + L2 + n2 + n2 + (5 === t19.length ? t19.charAt(4) + t19.charAt(4) : "")), 9 === t19.length) return [(p2 = parseInt(t19.substr(1, 6), 16)) >> 16, p2 >> 8 & Fr, p2 & Fr, parseInt(t19.substr(7), 16) / 255];
      p2 = [(t19 = parseInt(t19.substr(1), 16)) >> 16, t19 >> 8 & Fr, t19 & Fr];
    } else if ("hsl" === t19.substr(0, 3)) if (p2 = u2 = t19.match(co), e2) {
      if (~t19.indexOf("=")) return p2 = t19.match(lo), o2 && p2.length < 4 && (p2[3] = 1), p2;
    } else i2 = +p2[0] % 360 / 360, s2 = +p2[1] / 100, r2 = 2 * (d2 = +p2[2] / 100) - (L2 = d2 <= 0.5 ? d2 * (s2 + 1) : d2 + s2 - d2 * s2), p2.length > 3 && (p2[3] *= 1), p2[0] = $r(i2 + 1 / 3, r2, L2), p2[1] = $r(i2, r2, L2), p2[2] = $r(i2 - 1 / 3, r2, L2);
    else p2 = t19.match(co) || Ur.transparent;
    p2 = p2.map(Number);
  }
  return e2 && !u2 && (r2 = p2[0] / Fr, L2 = p2[1] / Fr, n2 = p2[2] / Fr, d2 = ((k2 = Math.max(r2, L2, n2)) + (h2 = Math.min(r2, L2, n2))) / 2, k2 === h2 ? i2 = s2 = 0 : (a2 = k2 - h2, s2 = d2 > 0.5 ? a2 / (2 - k2 - h2) : a2 / (k2 + h2), i2 = k2 === r2 ? (L2 - n2) / a2 + (L2 < n2 ? 6 : 0) : k2 === L2 ? (n2 - r2) / a2 + 2 : (r2 - L2) / a2 + 4, i2 *= 60), p2[0] = ~~(i2 + 0.5), p2[1] = ~~(100 * s2 + 0.5), p2[2] = ~~(100 * d2 + 0.5)), o2 && p2.length < 4 && (p2[3] = 1), p2;
}, Xr = function(t19) {
  var e2 = [], o2 = [], r2 = -1;
  return t19.split(Kr).forEach(function(t20) {
    var L2 = t20.match(wo) || [];
    e2.push.apply(e2, L2), o2.push(r2 += L2.length + 1);
  }), e2.c = o2, e2;
}, Gr = function(t19, e2, o2) {
  var r2, L2, n2, i2, s2 = "", d2 = (t19 + s2).match(Kr), k2 = e2 ? "hsla(" : "rgba(", h2 = 0;
  if (!d2) return t19;
  if (d2 = d2.map(function(t20) {
    return (t20 = Yr(t20, e2, 1)) && k2 + (e2 ? t20[0] + "," + t20[1] + "%," + t20[2] + "%," + t20[3] : t20.join(",")) + ")";
  }), o2 && (n2 = Xr(t19), (r2 = o2.c).join(s2) !== n2.c.join(s2))) for (i2 = (L2 = t19.replace(Kr, "1").split(wo)).length - 1; h2 < i2; h2++) s2 += L2[h2] + (~r2.indexOf(h2) ? d2.shift() || k2 + "0,0,0,0)" : (n2.length ? n2 : d2.length ? d2 : o2).shift());
  if (!L2) for (i2 = (L2 = t19.split(Kr)).length - 1; h2 < i2; h2++) s2 += L2[h2] + d2[h2];
  return s2 + L2[i2];
}, Kr = function() {
  var t19, e2 = "(?:\\b(?:(?:rgb|rgba|hsl|hsla)\\(.+?\\))|\\B#(?:[0-9a-f]{3,4}){1,2}\\b";
  for (t19 in Ur) e2 += "|" + t19 + "\\b";
  return new RegExp(e2 + ")", "gi");
}(), Jr = /hsl[a]?\(/, Qr = function(t19) {
  var e2, o2 = t19.join(" ");
  if (Kr.lastIndex = 0, Kr.test(o2)) return e2 = Jr.test(o2), t19[1] = Gr(t19[1], e2), t19[0] = Gr(t19[0], e2, Xr(t19[1])), true;
}, tL = function() {
  var t19, e2, o2, r2, L2, n2, i2 = Date.now, s2 = 500, d2 = 33, k2 = i2(), h2 = k2, a2 = 1e3 / 240, u2 = a2, p2 = [], c2 = function o3(c3) {
    var l2, w2, M2, f2, W2 = i2() - h2, j2 = true === c3;
    if ((W2 > s2 || W2 < 0) && (k2 += W2 - d2), ((l2 = (M2 = (h2 += W2) - k2) - u2) > 0 || j2) && (f2 = ++r2.frame, L2 = M2 - 1e3 * r2.time, r2.time = M2 /= 1e3, u2 += l2 + (l2 >= a2 ? 4 : a2 - l2), w2 = 1), j2 || (t19 = e2(o3)), w2) for (n2 = 0; n2 < p2.length; n2++) p2[n2](M2, L2, f2, c3);
  };
  return r2 = { time: 0, frame: 0, tick: function() {
    c2(true);
  }, deltaRatio: function(t20) {
    return L2 / (1e3 / (t20 || 60));
  }, wake: function() {
    Be && (!qe && ho() && (De = qe = window, ze = De.document || {}, mo.gsap = QL, (De.gsapVersions || (De.gsapVersions = [])).push(QL.version), go(vo || De.GreenSockGlobals || !De.gsap && De || {}), Br.forEach(Ir)), o2 = "undefined" != typeof requestAnimationFrame && requestAnimationFrame, t19 && r2.sleep(), e2 = o2 || function(t20) {
      return setTimeout(t20, u2 - 1e3 * r2.time + 1 | 0);
    }, Ue = 1, c2(2));
  }, sleep: function() {
    (o2 ? cancelAnimationFrame : clearTimeout)(t19), Ue = 0, e2 = Co;
  }, lagSmoothing: function(t20, e3) {
    s2 = t20 || 1 / 0, d2 = Math.min(e3 || 33, s2);
  }, fps: function(t20) {
    a2 = 1e3 / (t20 || 240), u2 = 1e3 * r2.time + a2;
  }, add: function(t20, e3, o3) {
    var L3 = e3 ? function(e4, o4, n3, i3) {
      t20(e4, o4, n3, i3), r2.remove(L3);
    } : t20;
    return r2.remove(t20), p2[o3 ? "unshift" : "push"](L3), eL(), L3;
  }, remove: function(t20, e3) {
    ~(e3 = p2.indexOf(t20)) && p2.splice(e3, 1) && n2 >= e3 && n2--;
  }, _listeners: p2 }, r2;
}(), eL = function() {
  return !Ue && tL.wake();
}, oL = {}, rL = /^[\d.\-M][\d.\-,\s]/, LL = /["']/g, nL = function(t19) {
  for (var e2, o2, r2, L2 = {}, n2 = t19.substr(1, t19.length - 3).split(":"), i2 = n2[0], s2 = 1, d2 = n2.length; s2 < d2; s2++) o2 = n2[s2], e2 = s2 !== d2 - 1 ? o2.lastIndexOf(",") : o2.length, r2 = o2.substr(0, e2), L2[i2] = isNaN(r2) ? r2.replace(LL, "").trim() : +r2, i2 = o2.substr(e2 + 1).trim();
  return L2;
}, iL = function(t19) {
  return function(e2) {
    return 1 - t19(1 - e2);
  };
}, sL = function t6(e2, o2) {
  for (var r2, L2 = e2._first; L2; ) L2 instanceof lL ? t6(L2, o2) : !L2.vars.yoyoEase || L2._yoyo && L2._repeat || L2._yoyo === o2 || (L2.timeline ? t6(L2.timeline, o2) : (r2 = L2._ease, L2._ease = L2._yEase, L2._yEase = r2, L2._yoyo = o2)), L2 = L2._next;
}, dL = function(t19, e2) {
  return t19 && (Lo(t19) ? t19 : oL[t19] || function(t20) {
    var e3, o2, r2, L2, n2 = (t20 + "").split("("), i2 = oL[n2[0]];
    return i2 && n2.length > 1 && i2.config ? i2.config.apply(null, ~t20.indexOf("{") ? [nL(n2[1])] : (e3 = t20, o2 = e3.indexOf("(") + 1, r2 = e3.indexOf(")"), L2 = e3.indexOf("(", o2), e3.substring(o2, ~L2 && L2 < r2 ? e3.indexOf(")", r2 + 1) : r2)).split(",").map(Xo)) : oL._CE && rL.test(t20) ? oL._CE("", t20) : i2;
  }(t19)) || e2;
}, kL = function(t19, e2, o2, r2) {
  void 0 === o2 && (o2 = function(t20) {
    return 1 - e2(1 - t20);
  }), void 0 === r2 && (r2 = function(t20) {
    return t20 < 0.5 ? e2(2 * t20) / 2 : 1 - e2(2 * (1 - t20)) / 2;
  });
  var L2, n2 = { easeIn: e2, easeOut: o2, easeInOut: r2 };
  return zo(t19, function(t20) {
    for (var e3 in oL[t20] = mo[t20] = n2, oL[L2 = t20.toLowerCase()] = o2, n2) oL[L2 + ("easeIn" === e3 ? ".in" : "easeOut" === e3 ? ".out" : ".inOut")] = oL[t20 + "." + e3] = n2[e3];
  }), n2;
}, hL = function(t19) {
  return function(e2) {
    return e2 < 0.5 ? (1 - t19(1 - 2 * e2)) / 2 : 0.5 + t19(2 * (e2 - 0.5)) / 2;
  };
}, aL = function t7(e2, o2, r2) {
  var L2 = o2 >= 1 ? o2 : 1, n2 = (r2 || (e2 ? 0.3 : 0.45)) / (o2 < 1 ? o2 : 1), i2 = n2 / Ke * (Math.asin(1 / L2) || 0), s2 = function(t19) {
    return 1 === t19 ? 1 : L2 * Math.pow(2, -10 * t19) * oo((t19 - i2) * n2) + 1;
  }, d2 = "out" === e2 ? s2 : "in" === e2 ? function(t19) {
    return 1 - s2(1 - t19);
  } : hL(s2);
  return n2 = Ke / n2, d2.config = function(o3, r3) {
    return t7(e2, o3, r3);
  }, d2;
}, uL = function t8(e2, o2) {
  void 0 === o2 && (o2 = 1.70158);
  var r2 = function(t19) {
    return t19 ? --t19 * t19 * ((o2 + 1) * t19 + o2) + 1 : 0;
  }, L2 = "out" === e2 ? r2 : "in" === e2 ? function(t19) {
    return 1 - r2(1 - t19);
  } : hL(r2);
  return L2.config = function(o3) {
    return t8(e2, o3);
  }, L2;
};
zo("Linear,Quad,Cubic,Quart,Quint,Strong", function(t19, e2) {
  var o2 = e2 < 5 ? e2 + 1 : e2;
  kL(t19 + ",Power" + (o2 - 1), e2 ? function(t20) {
    return Math.pow(t20, o2);
  } : function(t20) {
    return t20;
  }, function(t20) {
    return 1 - Math.pow(1 - t20, o2);
  }, function(t20) {
    return t20 < 0.5 ? Math.pow(2 * t20, o2) / 2 : 1 - Math.pow(2 * (1 - t20), o2) / 2;
  });
}), oL.Linear.easeNone = oL.none = oL.Linear.easeIn, kL("Elastic", aL("in"), aL("out"), aL()), function(t19, e2) {
  var o2 = 1 / e2, r2 = 2 * o2, L2 = 2.5 * o2, n2 = function(n3) {
    return n3 < o2 ? t19 * n3 * n3 : n3 < r2 ? t19 * Math.pow(n3 - 1.5 / e2, 2) + 0.75 : n3 < L2 ? t19 * (n3 -= 2.25 / e2) * n3 + 0.9375 : t19 * Math.pow(n3 - 2.625 / e2, 2) + 0.984375;
  };
  kL("Bounce", function(t20) {
    return 1 - n2(1 - t20);
  }, n2);
}(7.5625, 2.75), kL("Expo", function(t19) {
  return Math.pow(2, 10 * (t19 - 1)) * t19 + t19 * t19 * t19 * t19 * t19 * t19 * (1 - t19);
}), kL("Circ", function(t19) {
  return -(to(1 - t19 * t19) - 1);
}), kL("Sine", function(t19) {
  return 1 === t19 ? 1 : 1 - eo(t19 * Je);
}), kL("Back", uL("in"), uL("out"), uL()), oL.SteppedEase = oL.steps = mo.SteppedEase = { config: function(t19, e2) {
  void 0 === t19 && (t19 = 1);
  var o2 = 1 / t19, r2 = t19 + (e2 ? 0 : 1), L2 = e2 ? 1 : 0;
  return function(t20) {
    return ((r2 * yr(0, 0.99999999, t20) | 0) + L2) * o2;
  };
} }, Ye.ease = oL["quad.out"], zo("onComplete,onUpdate,onStart,onRepeat,onReverseComplete,onInterrupt", function(t19) {
  return Ao += t19 + "," + t19 + "Params,";
});
var pL = function(t19, e2) {
  this.id = Qe++, t19._gsap = this, this.target = t19, this.harness = e2, this.get = e2 ? e2.get : qo, this.set = e2 ? e2.getSetter : TL;
}, cL = function() {
  function t19(t20) {
    this.vars = t20, this._delay = +t20.delay || 0, (this._repeat = t20.repeat === 1 / 0 ? -2 : t20.repeat || 0) && (this._rDelay = t20.repeatDelay || 0, this._yoyo = !!t20.yoyo || !!t20.yoyoEase), this._ts = 1, Wr(this, +t20.duration, 1, 1), this.data = t20.data, Ae && (this._ctx = Ae, Ae.data.push(this)), Ue || tL.wake();
  }
  var e2 = t19.prototype;
  return e2.delay = function(t20) {
    return t20 || 0 === t20 ? (this.parent && this.parent.smoothChildTiming && this.startTime(this._start + t20 - this._delay), this._delay = t20, this) : this._delay;
  }, e2.duration = function(t20) {
    return arguments.length ? this.totalDuration(this._repeat > 0 ? t20 + (t20 + this._rDelay) * this._repeat : t20) : this.totalDuration() && this._dur;
  }, e2.totalDuration = function(t20) {
    return arguments.length ? (this._dirty = 0, Wr(this, this._repeat < 0 ? t20 : (t20 - this._repeat * this._rDelay) / (this._repeat + 1))) : this._tDur;
  }, e2.totalTime = function(t20, e3) {
    if (eL(), !arguments.length) return this._tTime;
    var o2 = this._dp;
    if (o2 && o2.smoothChildTiming && this._ts) {
      for (ur(this, t20), !o2._dp || o2.parent || pr(o2, this); o2 && o2.parent; ) o2.parent._time !== o2._start + (o2._ts >= 0 ? o2._tTime / o2._ts : (o2.totalDuration() - o2._tTime) / -o2._ts) && o2.totalTime(o2._tTime, true), o2 = o2.parent;
      !this.parent && this._dp.autoRemoveChildren && (this._ts > 0 && t20 < this._tDur || this._ts < 0 && t20 > 0 || !this._tDur && !t20) && cr(this._dp, this, this._start - this._delay);
    }
    return (this._tTime !== t20 || !this._dur && !e3 || this._initted && Math.abs(this._zTime) === Ge || !t20 && !this._initted && (this.add || this._ptLookup)) && (this._ts || (this._pTime = t20), Yo(this, t20, e3)), this;
  }, e2.time = function(t20, e3) {
    return arguments.length ? this.totalTime(Math.min(this.totalDuration(), t20 + dr(this)) % (this._dur + this._rDelay) || (t20 ? this._dur : 0), e3) : this._time;
  }, e2.totalProgress = function(t20, e3) {
    return arguments.length ? this.totalTime(this.totalDuration() * t20, e3) : this.totalDuration() ? Math.min(1, this._tTime / this._tDur) : this.rawTime() >= 0 && this._initted ? 1 : 0;
  }, e2.progress = function(t20, e3) {
    return arguments.length ? this.totalTime(this.duration() * (!this._yoyo || 1 & this.iteration() ? t20 : 1 - t20) + dr(this), e3) : this.duration() ? Math.min(1, this._time / this._dur) : this.rawTime() > 0 ? 1 : 0;
  }, e2.iteration = function(t20, e3) {
    var o2 = this.duration() + this._rDelay;
    return arguments.length ? this.totalTime(this._time + (t20 - 1) * o2, e3) : this._repeat ? kr(this._tTime, o2) + 1 : 1;
  }, e2.timeScale = function(t20, e3) {
    if (!arguments.length) return -1e-8 === this._rts ? 0 : this._rts;
    if (this._rts === t20) return this;
    var o2 = this.parent && this._ts ? hr(this.parent._time, this) : this._tTime;
    return this._rts = +t20 || 0, this._ts = this._ps || -1e-8 === t20 ? 0 : this._rts, this.totalTime(yr(-Math.abs(this._delay), this._tDur, o2), false !== e3), ar(this), function(t21) {
      for (var e4 = t21.parent; e4 && e4.parent; ) e4._dirty = 1, e4.totalDuration(), e4 = e4.parent;
      return t21;
    }(this);
  }, e2.paused = function(t20) {
    return arguments.length ? (this._ps !== t20 && (this._ps = t20, t20 ? (this._pTime = this._tTime || Math.max(-this._delay, this.rawTime()), this._ts = this._act = 0) : (eL(), this._ts = this._rts, this.totalTime(this.parent && !this.parent.smoothChildTiming ? this.rawTime() : this._tTime || this._pTime, 1 === this.progress() && Math.abs(this._zTime) !== Ge && (this._tTime -= Ge)))), this) : this._ps;
  }, e2.startTime = function(t20) {
    if (arguments.length) {
      this._start = t20;
      var e3 = this.parent || this._dp;
      return e3 && (e3._sort || !this.parent) && cr(e3, this, t20 - this._delay), this;
    }
    return this._start;
  }, e2.endTime = function(t20) {
    return this._start + (ko(t20) ? this.totalDuration() : this.duration()) / Math.abs(this._ts || 1);
  }, e2.rawTime = function(t20) {
    var e3 = this.parent || this._dp;
    return e3 ? t20 && (!this._ts || this._repeat && this._time && this.totalProgress() < 1) ? this._tTime % (this._dur + this._rDelay) : this._ts ? hr(e3.rawTime(t20), this) : this._tTime : this._tTime;
  }, e2.revert = function(t20) {
    void 0 === t20 && (t20 = Ho);
    var e3 = Ne;
    return Ne = t20, (this._initted || this._startAt) && (this.timeline && this.timeline.revert(t20), this.totalTime(-0.01, t20.suppressEvents)), "nested" !== this.data && false !== t20.kill && this.kill(), Ne = e3, this;
  }, e2.globalTime = function(t20) {
    for (var e3 = this, o2 = arguments.length ? t20 : e3.rawTime(); e3; ) o2 = e3._start + o2 / (Math.abs(e3._ts) || 1), e3 = e3._dp;
    return !this.parent && this._sat ? this._sat.globalTime(t20) : o2;
  }, e2.repeat = function(t20) {
    return arguments.length ? (this._repeat = t20 === 1 / 0 ? -2 : t20, jr(this)) : -2 === this._repeat ? 1 / 0 : this._repeat;
  }, e2.repeatDelay = function(t20) {
    if (arguments.length) {
      var e3 = this._time;
      return this._rDelay = t20, jr(this), e3 ? this.time(e3) : this;
    }
    return this._rDelay;
  }, e2.yoyo = function(t20) {
    return arguments.length ? (this._yoyo = t20, this) : this._yoyo;
  }, e2.seek = function(t20, e3) {
    return this.totalTime(vr(this, t20), ko(e3));
  }, e2.restart = function(t20, e3) {
    return this.play().totalTime(t20 ? -this._delay : 0, ko(e3)), this._dur || (this._zTime = -1e-8), this;
  }, e2.play = function(t20, e3) {
    return null != t20 && this.seek(t20, e3), this.reversed(false).paused(false);
  }, e2.reverse = function(t20, e3) {
    return null != t20 && this.seek(t20 || this.totalDuration(), e3), this.reversed(true).paused(false);
  }, e2.pause = function(t20, e3) {
    return null != t20 && this.seek(t20, e3), this.paused(true);
  }, e2.resume = function() {
    return this.paused(false);
  }, e2.reversed = function(t20) {
    return arguments.length ? (!!t20 !== this.reversed() && this.timeScale(-this._rts || (t20 ? -1e-8 : 0)), this) : this._rts < 0;
  }, e2.invalidate = function() {
    return this._initted = this._act = 0, this._zTime = -1e-8, this;
  }, e2.isActive = function() {
    var t20, e3 = this.parent || this._dp, o2 = this._start;
    return !(e3 && !(this._ts && this._initted && e3.isActive() && (t20 = e3.rawTime(true)) >= o2 && t20 < this.endTime(true) - Ge));
  }, e2.eventCallback = function(t20, e3, o2) {
    var r2 = this.vars;
    return arguments.length > 1 ? (e3 ? (r2[t20] = e3, o2 && (r2[t20 + "Params"] = o2), "onUpdate" === t20 && (this._onUpdate = e3)) : delete r2[t20], this) : r2[t20];
  }, e2.then = function(t20) {
    var e3 = this;
    return new Promise(function(o2) {
      var r2 = Lo(t20) ? t20 : Go, L2 = function() {
        var t21 = e3.then;
        e3.then = null, Lo(r2) && (r2 = r2(e3)) && (r2.then || r2 === e3) && (e3.then = t21), o2(r2), e3.then = t21;
      };
      e3._initted && 1 === e3.totalProgress() && e3._ts >= 0 || !e3._tTime && e3._ts < 0 ? L2() : e3._prom = L2;
    });
  }, e2.kill = function() {
    zr(this);
  }, t19;
}();
Ko(cL.prototype, { _time: 0, _start: 0, _end: 0, _tTime: 0, _tDur: 0, _dirty: 0, _repeat: 0, _yoyo: false, parent: null, _initted: false, _rDelay: 0, _ts: 1, _dp: 0, ratio: 0, _zTime: -1e-8, _prom: 0, _ps: false, _rts: 1 });
var lL = function(t19) {
  function e2(e3, o3) {
    var r2;
    return void 0 === e3 && (e3 = {}), (r2 = t19.call(this, e3) || this).labels = {}, r2.smoothChildTiming = !!e3.smoothChildTiming, r2.autoRemoveChildren = !!e3.autoRemoveChildren, r2._sort = ko(e3.sortChildren), Re && cr(e3.parent || Re, Ze(r2), o3), e3.reversed && r2.reverse(), e3.paused && r2.paused(true), e3.scrollTrigger && lr(Ze(r2), e3.scrollTrigger), r2;
  }
  Ee(e2, t19);
  var o2 = e2.prototype;
  return o2.to = function(t20, e3, o3) {
    return gr(0, arguments, this), this;
  }, o2.from = function(t20, e3, o3) {
    return gr(1, arguments, this), this;
  }, o2.fromTo = function(t20, e3, o3, r2) {
    return gr(2, arguments, this), this;
  }, o2.set = function(t20, e3, o3) {
    return e3.duration = 0, e3.parent = this, er(e3).repeatDelay || (e3.repeat = 0), e3.immediateRender = !!e3.immediateRender, new bL(t20, e3, vr(this, o3), 1), this;
  }, o2.call = function(t20, e3, o3) {
    return cr(this, bL.delayedCall(0, t20, e3), o3);
  }, o2.staggerTo = function(t20, e3, o3, r2, L2, n2, i2) {
    return o3.duration = e3, o3.stagger = o3.stagger || r2, o3.onComplete = n2, o3.onCompleteParams = i2, o3.parent = this, new bL(t20, o3, vr(this, L2)), this;
  }, o2.staggerFrom = function(t20, e3, o3, r2, L2, n2, i2) {
    return o3.runBackwards = 1, er(o3).immediateRender = ko(o3.immediateRender), this.staggerTo(t20, e3, o3, r2, L2, n2, i2);
  }, o2.staggerFromTo = function(t20, e3, o3, r2, L2, n2, i2, s2) {
    return r2.startAt = o3, er(r2).immediateRender = ko(r2.immediateRender), this.staggerTo(t20, e3, r2, L2, n2, i2, s2);
  }, o2.render = function(t20, e3, o3) {
    var r2, L2, n2, i2, s2, d2, k2, h2, a2, u2, p2, c2, l2 = this._time, w2 = this._dirty ? this.totalDuration() : this._tDur, M2 = this._dur, f2 = t20 <= 0 ? 0 : Io(t20), W2 = this._zTime < 0 != t20 < 0 && (this._initted || !M2);
    if (this !== Re && f2 > w2 && t20 >= 0 && (f2 = w2), f2 !== this._tTime || o3 || W2) {
      if (l2 !== this._time && M2 && (f2 += this._time - l2, t20 += this._time - l2), r2 = f2, a2 = this._start, d2 = !(h2 = this._ts), W2 && (M2 || (l2 = this._zTime), (t20 || !e3) && (this._zTime = t20)), this._repeat) {
        if (p2 = this._yoyo, s2 = M2 + this._rDelay, this._repeat < -1 && t20 < 0) return this.totalTime(100 * s2 + t20, e3, o3);
        if (r2 = Io(f2 % s2), f2 === w2 ? (i2 = this._repeat, r2 = M2) : ((i2 = ~~(u2 = Io(f2 / s2))) && i2 === u2 && (r2 = M2, i2--), r2 > M2 && (r2 = M2)), u2 = kr(this._tTime, s2), !l2 && this._tTime && u2 !== i2 && this._tTime - u2 * s2 - this._dur <= 0 && (u2 = i2), p2 && 1 & i2 && (r2 = M2 - r2, c2 = 1), i2 !== u2 && !this._lock) {
          var j2 = p2 && 1 & u2, m2 = j2 === (p2 && 1 & i2);
          if (i2 < u2 && (j2 = !j2), l2 = j2 ? 0 : f2 % M2 ? M2 : f2, this._lock = 1, this.render(l2 || (c2 ? 0 : Io(i2 * s2)), e3, !M2)._lock = 0, this._tTime = f2, !e3 && this.parent && qr(this, "onRepeat"), this.vars.repeatRefresh && !c2 && (this.invalidate()._lock = 1), l2 && l2 !== this._time || d2 !== !this._ts || this.vars.onRepeat && !this.parent && !this._act) return this;
          if (M2 = this._dur, w2 = this._tDur, m2 && (this._lock = 2, l2 = j2 ? M2 : -1e-4, this.render(l2, true), this.vars.repeatRefresh && !c2 && this.invalidate()), this._lock = 0, !this._ts && !d2) return this;
          sL(this, c2);
        }
      }
      if (this._hasPause && !this._forcing && this._lock < 2 && (k2 = function(t21, e4, o4) {
        var r3;
        if (o4 > e4) for (r3 = t21._first; r3 && r3._start <= o4; ) {
          if ("isPause" === r3.data && r3._start > e4) return r3;
          r3 = r3._next;
        }
        else for (r3 = t21._last; r3 && r3._start >= o4; ) {
          if ("isPause" === r3.data && r3._start < e4) return r3;
          r3 = r3._prev;
        }
      }(this, Io(l2), Io(r2)), k2 && (f2 -= r2 - (r2 = k2._start))), this._tTime = f2, this._time = r2, this._act = !h2, this._initted || (this._onUpdate = this.vars.onUpdate, this._initted = 1, this._zTime = t20, l2 = 0), !l2 && r2 && !e3 && !i2 && (qr(this, "onStart"), this._tTime !== f2)) return this;
      if (r2 >= l2 && t20 >= 0) for (L2 = this._first; L2; ) {
        if (n2 = L2._next, (L2._act || r2 >= L2._start) && L2._ts && k2 !== L2) {
          if (L2.parent !== this) return this.render(t20, e3, o3);
          if (L2.render(L2._ts > 0 ? (r2 - L2._start) * L2._ts : (L2._dirty ? L2.totalDuration() : L2._tDur) + (r2 - L2._start) * L2._ts, e3, o3), r2 !== this._time || !this._ts && !d2) {
            k2 = 0, n2 && (f2 += this._zTime = -1e-8);
            break;
          }
        }
        L2 = n2;
      }
      else {
        L2 = this._last;
        for (var v2 = t20 < 0 ? t20 : r2; L2; ) {
          if (n2 = L2._prev, (L2._act || v2 <= L2._end) && L2._ts && k2 !== L2) {
            if (L2.parent !== this) return this.render(t20, e3, o3);
            if (L2.render(L2._ts > 0 ? (v2 - L2._start) * L2._ts : (L2._dirty ? L2.totalDuration() : L2._tDur) + (v2 - L2._start) * L2._ts, e3, o3 || Ne && (L2._initted || L2._startAt)), r2 !== this._time || !this._ts && !d2) {
              k2 = 0, n2 && (f2 += this._zTime = v2 ? -1e-8 : Ge);
              break;
            }
          }
          L2 = n2;
        }
      }
      if (k2 && !e3 && (this.pause(), k2.render(r2 >= l2 ? 0 : -1e-8)._zTime = r2 >= l2 ? 1 : -1, this._ts)) return this._start = a2, ar(this), this.render(t20, e3, o3);
      this._onUpdate && !e3 && qr(this, "onUpdate", true), (f2 === w2 && this._tTime >= this.totalDuration() || !f2 && l2) && (a2 !== this._start && Math.abs(h2) === Math.abs(this._ts) || this._lock || ((t20 || !M2) && (f2 === w2 && this._ts > 0 || !f2 && this._ts < 0) && Lr(this, 1), e3 || t20 < 0 && !l2 || !f2 && !l2 && w2 || (qr(this, f2 === w2 && t20 >= 0 ? "onComplete" : "onReverseComplete", true), this._prom && !(f2 < w2 && this.timeScale() > 0) && this._prom())));
    }
    return this;
  }, o2.add = function(t20, e3) {
    var o3 = this;
    if (no(e3) || (e3 = vr(this, e3, t20)), !(t20 instanceof cL)) {
      if (po(t20)) return t20.forEach(function(t21) {
        return o3.add(t21, e3);
      }), this;
      if (ro(t20)) return this.addLabel(t20, e3);
      if (!Lo(t20)) return this;
      t20 = bL.delayedCall(0, t20);
    }
    return this !== t20 ? cr(this, t20, e3) : this;
  }, o2.getChildren = function(t20, e3, o3, r2) {
    void 0 === t20 && (t20 = true), void 0 === e3 && (e3 = true), void 0 === o3 && (o3 = true), void 0 === r2 && (r2 = -1e8);
    for (var L2 = [], n2 = this._first; n2; ) n2._start >= r2 && (n2 instanceof bL ? e3 && L2.push(n2) : (o3 && L2.push(n2), t20 && L2.push.apply(L2, n2.getChildren(true, e3, o3)))), n2 = n2._next;
    return L2;
  }, o2.getById = function(t20) {
    for (var e3 = this.getChildren(1, 1, 1), o3 = e3.length; o3--; ) if (e3[o3].vars.id === t20) return e3[o3];
  }, o2.remove = function(t20) {
    return ro(t20) ? this.removeLabel(t20) : Lo(t20) ? this.killTweensOf(t20) : (t20.parent === this && rr(this, t20), t20 === this._recent && (this._recent = this._last), nr(this));
  }, o2.totalTime = function(e3, o3) {
    return arguments.length ? (this._forcing = 1, !this._dp && this._ts && (this._start = Io(tL.time - (this._ts > 0 ? e3 / this._ts : (this.totalDuration() - e3) / -this._ts))), t19.prototype.totalTime.call(this, e3, o3), this._forcing = 0, this) : this._tTime;
  }, o2.addLabel = function(t20, e3) {
    return this.labels[t20] = vr(this, e3), this;
  }, o2.removeLabel = function(t20) {
    return delete this.labels[t20], this;
  }, o2.addPause = function(t20, e3, o3) {
    var r2 = bL.delayedCall(0, e3 || Co, o3);
    return r2.data = "isPause", this._hasPause = 1, cr(this, r2, vr(this, t20));
  }, o2.removePause = function(t20) {
    var e3 = this._first;
    for (t20 = vr(this, t20); e3; ) e3._start === t20 && "isPause" === e3.data && Lr(e3), e3 = e3._next;
  }, o2.killTweensOf = function(t20, e3, o3) {
    for (var r2 = this.getTweensOf(t20, o3), L2 = r2.length; L2--; ) wL !== r2[L2] && r2[L2].kill(t20, e3);
    return this;
  }, o2.getTweensOf = function(t20, e3) {
    for (var o3, r2 = [], L2 = Hr(t20), n2 = this._first, i2 = no(e3); n2; ) n2 instanceof bL ? Uo(n2._targets, L2) && (i2 ? (!wL || n2._initted && n2._ts) && n2.globalTime(0) <= e3 && n2.globalTime(n2.totalDuration()) > e3 : !e3 || n2.isActive()) && r2.push(n2) : (o3 = n2.getTweensOf(L2, e3)).length && r2.push.apply(r2, o3), n2 = n2._next;
    return r2;
  }, o2.tweenTo = function(t20, e3) {
    e3 = e3 || {};
    var o3, r2 = this, L2 = vr(r2, t20), n2 = e3, i2 = n2.startAt, s2 = n2.onStart, d2 = n2.onStartParams, k2 = n2.immediateRender, h2 = bL.to(r2, Ko({ ease: e3.ease || "none", lazy: false, immediateRender: false, time: L2, overwrite: "auto", duration: e3.duration || Math.abs((L2 - (i2 && "time" in i2 ? i2.time : r2._time)) / r2.timeScale()) || Ge, onStart: function() {
      if (r2.pause(), !o3) {
        var t21 = e3.duration || Math.abs((L2 - (i2 && "time" in i2 ? i2.time : r2._time)) / r2.timeScale());
        h2._dur !== t21 && Wr(h2, t21, 0, 1).render(h2._time, true, true), o3 = 1;
      }
      s2 && s2.apply(h2, d2 || []);
    } }, e3));
    return k2 ? h2.render(0) : h2;
  }, o2.tweenFromTo = function(t20, e3, o3) {
    return this.tweenTo(e3, Ko({ startAt: { time: vr(this, t20) } }, o3));
  }, o2.recent = function() {
    return this._recent;
  }, o2.nextLabel = function(t20) {
    return void 0 === t20 && (t20 = this._time), Dr(this, vr(this, t20));
  }, o2.previousLabel = function(t20) {
    return void 0 === t20 && (t20 = this._time), Dr(this, vr(this, t20), 1);
  }, o2.currentLabel = function(t20) {
    return arguments.length ? this.seek(t20, true) : this.previousLabel(this._time + Ge);
  }, o2.shiftChildren = function(t20, e3, o3) {
    void 0 === o3 && (o3 = 0);
    for (var r2, L2 = this._first, n2 = this.labels; L2; ) L2._start >= o3 && (L2._start += t20, L2._end += t20), L2 = L2._next;
    if (e3) for (r2 in n2) n2[r2] >= o3 && (n2[r2] += t20);
    return nr(this);
  }, o2.invalidate = function(e3) {
    var o3 = this._first;
    for (this._lock = 0; o3; ) o3.invalidate(e3), o3 = o3._next;
    return t19.prototype.invalidate.call(this, e3);
  }, o2.clear = function(t20) {
    void 0 === t20 && (t20 = true);
    for (var e3, o3 = this._first; o3; ) e3 = o3._next, this.remove(o3), o3 = e3;
    return this._dp && (this._time = this._tTime = this._pTime = 0), t20 && (this.labels = {}), nr(this);
  }, o2.totalDuration = function(t20) {
    var e3, o3, r2, L2 = 0, n2 = this, i2 = n2._last, s2 = Xe;
    if (arguments.length) return n2.timeScale((n2._repeat < 0 ? n2.duration() : n2.totalDuration()) / (n2.reversed() ? -t20 : t20));
    if (n2._dirty) {
      for (r2 = n2.parent; i2; ) e3 = i2._prev, i2._dirty && i2.totalDuration(), (o3 = i2._start) > s2 && n2._sort && i2._ts && !n2._lock ? (n2._lock = 1, cr(n2, i2, o3 - i2._delay, 1)._lock = 0) : s2 = o3, o3 < 0 && i2._ts && (L2 -= o3, (!r2 && !n2._dp || r2 && r2.smoothChildTiming) && (n2._start += o3 / n2._ts, n2._time -= o3, n2._tTime -= o3), n2.shiftChildren(-o3, false, -1 / 0), s2 = 0), i2._end > L2 && i2._ts && (L2 = i2._end), i2 = e3;
      Wr(n2, n2 === Re && n2._time > L2 ? n2._time : L2, 1, 1), n2._dirty = 0;
    }
    return n2._tDur;
  }, e2.updateRoot = function(t20) {
    if (Re._ts && (Yo(Re, hr(t20, Re)), Ie = tL.frame), tL.frame >= Po) {
      Po += $e.autoSleep || 120;
      var e3 = Re._first;
      if ((!e3 || !e3._ts) && $e.autoSleep && tL._listeners.length < 2) {
        for (; e3 && !e3._ts; ) e3 = e3._next;
        e3 || tL.sleep();
      }
    }
  }, e2;
}(cL);
Ko(lL.prototype, { _lock: 0, _hasPause: 0, _forcing: 0 });
var wL, ML, fL = function(t19, e2, o2, r2, L2, n2, i2) {
  var s2, d2, k2, h2, a2, u2, p2, c2, l2 = new DL(this._pt, t19, e2, 0, 1, ZL, null, L2), w2 = 0, M2 = 0;
  for (l2.b = o2, l2.e = r2, o2 += "", (p2 = ~(r2 += "").indexOf("random(")) && (r2 = Ar(r2)), n2 && (n2(c2 = [o2, r2], t19, e2), o2 = c2[0], r2 = c2[1]), d2 = o2.match(Mo) || []; s2 = Mo.exec(r2); ) h2 = s2[0], a2 = r2.substring(w2, s2.index), k2 ? k2 = (k2 + 1) % 5 : "rgba(" === a2.substr(-5) && (k2 = 1), h2 !== d2[M2++] && (u2 = parseFloat(d2[M2 - 1]) || 0, l2._pt = { _next: l2._pt, p: a2 || 1 === M2 ? a2 : ",", s: u2, c: "=" === h2.charAt(1) ? Fo(u2, h2) - u2 : parseFloat(h2) - u2, m: k2 && k2 < 4 ? Math.round : 0 }, w2 = Mo.lastIndex);
  return l2.c = w2 < r2.length ? r2.substring(w2, r2.length) : "", l2.fp = i2, (fo.test(r2) || p2) && (l2.e = 0), this._pt = l2, l2;
}, WL = function(t19, e2, o2, r2, L2, n2, i2, s2, d2, k2) {
  Lo(r2) && (r2 = r2(L2 || 0, t19, n2));
  var h2, a2 = t19[e2], u2 = "get" !== o2 ? o2 : Lo(a2) ? d2 ? t19[e2.indexOf("set") || !Lo(t19["get" + e2.substr(3)]) ? e2 : "get" + e2.substr(3)](d2) : t19[e2]() : a2, p2 = Lo(a2) ? d2 ? VL : xL : CL;
  if (ro(r2) && (~r2.indexOf("random(") && (r2 = Ar(r2)), "=" === r2.charAt(1) && ((h2 = Fo(u2, r2) + (br(u2) || 0)) || 0 === h2) && (r2 = h2)), !k2 || u2 !== r2 || ML) return isNaN(u2 * r2) || "" === r2 ? (!a2 && !(e2 in t19) && _o(e2, r2), fL.call(this, t19, e2, u2, r2, p2, s2 || $e.stringFilter, d2)) : (h2 = new DL(this._pt, t19, e2, +u2 || 0, r2 - (u2 || 0), "boolean" == typeof a2 ? SL : OL, 0, p2), d2 && (h2.fp = d2), i2 && h2.modifier(i2, this, t19), this._pt = h2);
}, jL = function(t19, e2, o2, r2, L2, n2) {
  var i2, s2, d2, k2;
  if (Zo[t19] && false !== (i2 = new Zo[t19]()).init(L2, i2.rawVars ? e2[t19] : function(t20, e3, o3, r3, L3) {
    if (Lo(t20) && (t20 = gL(t20, L3, e3, o3, r3)), !so(t20) || t20.style && t20.nodeType || po(t20) || uo(t20)) return ro(t20) ? gL(t20, L3, e3, o3, r3) : t20;
    var n3, i3 = {};
    for (n3 in t20) i3[n3] = gL(t20[n3], L3, e3, o3, r3);
    return i3;
  }(e2[t19], r2, L2, n2, o2), o2, r2, n2) && (o2._pt = s2 = new DL(o2._pt, L2, t19, 0, 1, i2.render, i2, 0, i2.priority), o2 !== Fe)) for (d2 = o2._ptLookup[o2._targets.indexOf(L2)], k2 = i2._props.length; k2--; ) d2[i2._props[k2]] = s2;
  return i2;
}, mL = function t9(e2, o2, r2) {
  var L2, n2, i2, s2, d2, k2, h2, a2, u2, p2, c2, l2, w2, M2 = e2.vars, f2 = M2.ease, W2 = M2.startAt, j2 = M2.immediateRender, m2 = M2.lazy, v2 = M2.onUpdate, g2 = M2.runBackwards, _2 = M2.yoyoEase, y2 = M2.keyframes, b2 = M2.autoRevert, C2 = e2._dur, x2 = e2._startAt, V2 = e2._targets, H2 = e2.parent, T2 = H2 && "nested" === H2.data ? H2.vars.targets : V2, O2 = "auto" === e2._overwrite && !Pe, S2 = e2.timeline;
  if (S2 && (!y2 || !f2) && (f2 = "none"), e2._ease = dL(f2, Ye.ease), e2._yEase = _2 ? iL(dL(true === _2 ? f2 : _2, Ye.ease)) : 0, _2 && e2._yoyo && !e2._repeat && (_2 = e2._yEase, e2._yEase = e2._ease, e2._ease = _2), e2._from = !S2 && !!M2.runBackwards, !S2 || y2 && !M2.stagger) {
    if (l2 = (a2 = V2[0] ? Do(V2[0]).harness : 0) && M2[a2.prop], L2 = tr(M2, To), x2 && (x2._zTime < 0 && x2.progress(1), o2 < 0 && g2 && j2 && !b2 ? x2.render(-1, true) : x2.revert(g2 && C2 ? Vo : xo), x2._lazy = 0), W2) {
      if (Lr(e2._startAt = bL.set(V2, Ko({ data: "isStart", overwrite: false, parent: H2, immediateRender: true, lazy: !x2 && ko(m2), startAt: null, delay: 0, onUpdate: v2 && function() {
        return qr(e2, "onUpdate");
      }, stagger: 0 }, W2))), e2._startAt._dp = 0, e2._startAt._sat = e2, o2 < 0 && (Ne || !j2 && !b2) && e2._startAt.revert(Vo), j2 && C2 && o2 <= 0 && r2 <= 0) return void (o2 && (e2._zTime = o2));
    } else if (g2 && C2 && !x2) if (o2 && (j2 = false), i2 = Ko({ overwrite: false, data: "isFromStart", lazy: j2 && !x2 && ko(m2), immediateRender: j2, stagger: 0, parent: H2 }, L2), l2 && (i2[a2.prop] = l2), Lr(e2._startAt = bL.set(V2, i2)), e2._startAt._dp = 0, e2._startAt._sat = e2, o2 < 0 && (Ne ? e2._startAt.revert(Vo) : e2._startAt.render(-1, true)), e2._zTime = o2, j2) {
      if (!o2) return;
    } else t9(e2._startAt, Ge, Ge);
    for (e2._pt = e2._ptCache = 0, m2 = C2 && ko(m2) || m2 && !C2, n2 = 0; n2 < V2.length; n2++) {
      if (h2 = (d2 = V2[n2])._gsap || Ro(V2)[n2]._gsap, e2._ptLookup[n2] = p2 = {}, So[h2.id] && Oo.length && $o(), c2 = T2 === V2 ? n2 : T2.indexOf(d2), a2 && false !== (u2 = new a2()).init(d2, l2 || L2, e2, c2, T2) && (e2._pt = s2 = new DL(e2._pt, d2, u2.name, 0, 1, u2.render, u2, 0, u2.priority), u2._props.forEach(function(t19) {
        p2[t19] = s2;
      }), u2.priority && (k2 = 1)), !a2 || l2) for (i2 in L2) Zo[i2] && (u2 = jL(i2, L2, e2, c2, d2, T2)) ? u2.priority && (k2 = 1) : p2[i2] = s2 = WL.call(e2, d2, i2, "get", L2[i2], c2, T2, 0, M2.stringFilter);
      e2._op && e2._op[n2] && e2.kill(d2, e2._op[n2]), O2 && e2._pt && (wL = e2, Re.killTweensOf(d2, p2, e2.globalTime(o2)), w2 = !e2.parent, wL = 0), e2._pt && m2 && (So[h2.id] = 1);
    }
    k2 && RL(e2), e2._onInit && e2._onInit(e2);
  }
  e2._onUpdate = v2, e2._initted = (!e2._op || e2._pt) && !w2, y2 && o2 <= 0 && S2.render(Xe, true, true);
}, vL = function(t19, e2, o2, r2) {
  var L2, n2, i2 = e2.ease || r2 || "power1.inOut";
  if (po(e2)) n2 = o2[t19] || (o2[t19] = []), e2.forEach(function(t20, o3) {
    return n2.push({ t: o3 / (e2.length - 1) * 100, v: t20, e: i2 });
  });
  else for (L2 in e2) n2 = o2[L2] || (o2[L2] = []), "ease" === L2 || n2.push({ t: parseFloat(t19), v: e2[L2], e: i2 });
}, gL = function(t19, e2, o2, r2, L2) {
  return Lo(t19) ? t19.call(e2, o2, r2, L2) : ro(t19) && ~t19.indexOf("random(") ? Ar(t19) : t19;
}, _L = Ao + "repeat,repeatDelay,yoyo,repeatRefresh,yoyoEase,autoRevert", yL = {};
zo(_L + ",id,stagger,delay,duration,paused,scrollTrigger", function(t19) {
  return yL[t19] = 1;
});
var bL = function(t19) {
  function e2(e3, o3, r2, L2) {
    var n2;
    "number" == typeof o3 && (r2.duration = o3, o3 = r2, r2 = null);
    var i2, s2, d2, k2, h2, a2, u2, p2, c2 = (n2 = t19.call(this, L2 ? o3 : er(o3)) || this).vars, l2 = c2.duration, w2 = c2.delay, M2 = c2.immediateRender, f2 = c2.stagger, W2 = c2.overwrite, j2 = c2.keyframes, m2 = c2.defaults, v2 = c2.scrollTrigger, g2 = c2.yoyoEase, _2 = o3.parent || Re, y2 = (po(e3) || uo(e3) ? no(e3[0]) : "length" in o3) ? [e3] : Hr(e3);
    if (n2._targets = y2.length ? Ro(y2) : yo("GSAP target " + e3 + " not found. https://gsap.com", !$e.nullTargetWarn) || [], n2._ptLookup = [], n2._overwrite = W2, j2 || f2 || ao(l2) || ao(w2)) {
      if (o3 = n2.vars, (i2 = n2.timeline = new lL({ data: "nested", defaults: m2 || {}, targets: _2 && "nested" === _2.data ? _2.vars.targets : y2 })).kill(), i2.parent = i2._dp = Ze(n2), i2._start = 0, f2 || ao(l2) || ao(w2)) {
        if (k2 = y2.length, u2 = f2 && Sr(f2), so(f2)) for (h2 in f2) ~_L.indexOf(h2) && (p2 || (p2 = {}), p2[h2] = f2[h2]);
        for (s2 = 0; s2 < k2; s2++) (d2 = tr(o3, yL)).stagger = 0, g2 && (d2.yoyoEase = g2), p2 && Jo(d2, p2), a2 = y2[s2], d2.duration = +gL(l2, Ze(n2), s2, a2, y2), d2.delay = (+gL(w2, Ze(n2), s2, a2, y2) || 0) - n2._delay, !f2 && 1 === k2 && d2.delay && (n2._delay = w2 = d2.delay, n2._start += w2, d2.delay = 0), i2.to(a2, d2, u2 ? u2(s2, a2, y2) : 0), i2._ease = oL.none;
        i2.duration() ? l2 = w2 = 0 : n2.timeline = 0;
      } else if (j2) {
        er(Ko(i2.vars.defaults, { ease: "none" })), i2._ease = dL(j2.ease || o3.ease || "none");
        var b2, C2, x2, V2 = 0;
        if (po(j2)) j2.forEach(function(t20) {
          return i2.to(y2, t20, ">");
        }), i2.duration();
        else {
          for (h2 in d2 = {}, j2) "ease" === h2 || "easeEach" === h2 || vL(h2, j2[h2], d2, j2.easeEach);
          for (h2 in d2) for (b2 = d2[h2].sort(function(t20, e4) {
            return t20.t - e4.t;
          }), V2 = 0, s2 = 0; s2 < b2.length; s2++) (x2 = { ease: (C2 = b2[s2]).e, duration: (C2.t - (s2 ? b2[s2 - 1].t : 0)) / 100 * l2 })[h2] = C2.v, i2.to(y2, x2, V2), V2 += x2.duration;
          i2.duration() < l2 && i2.to({}, { duration: l2 - i2.duration() });
        }
      }
      l2 || n2.duration(l2 = i2.duration());
    } else n2.timeline = 0;
    return true !== W2 || Pe || (wL = Ze(n2), Re.killTweensOf(y2), wL = 0), cr(_2, Ze(n2), r2), o3.reversed && n2.reverse(), o3.paused && n2.paused(true), (M2 || !l2 && !j2 && n2._start === Io(_2._time) && ko(M2) && sr(Ze(n2)) && "nested" !== _2.data) && (n2._tTime = -1e-8, n2.render(Math.max(0, -w2) || 0)), v2 && lr(Ze(n2), v2), n2;
  }
  Ee(e2, t19);
  var o2 = e2.prototype;
  return o2.render = function(t20, e3, o3) {
    var r2, L2, n2, i2, s2, d2, k2, h2, a2, u2 = this._time, p2 = this._tDur, c2 = this._dur, l2 = t20 < 0, w2 = t20 > p2 - Ge && !l2 ? p2 : t20 < Ge ? 0 : t20;
    if (c2) {
      if (w2 !== this._tTime || !t20 || o3 || !this._initted && this._tTime || this._startAt && this._zTime < 0 !== l2 || this._lazy) {
        if (r2 = w2, h2 = this.timeline, this._repeat) {
          if (i2 = c2 + this._rDelay, this._repeat < -1 && l2) return this.totalTime(100 * i2 + t20, e3, o3);
          if (r2 = Io(w2 % i2), w2 === p2 ? (n2 = this._repeat, r2 = c2) : (n2 = ~~(s2 = Io(w2 / i2))) && n2 === s2 ? (r2 = c2, n2--) : r2 > c2 && (r2 = c2), (d2 = this._yoyo && 1 & n2) && (a2 = this._yEase, r2 = c2 - r2), s2 = kr(this._tTime, i2), r2 === u2 && !o3 && this._initted && n2 === s2) return this._tTime = w2, this;
          n2 !== s2 && (h2 && this._yEase && sL(h2, d2), this.vars.repeatRefresh && !d2 && !this._lock && r2 !== i2 && this._initted && (this._lock = o3 = 1, this.render(Io(i2 * n2), true).invalidate()._lock = 0));
        }
        if (!this._initted) {
          if (wr(this, l2 ? t20 : r2, o3, e3, w2)) return this._tTime = 0, this;
          if (!(u2 === this._time || o3 && this.vars.repeatRefresh && n2 !== s2)) return this;
          if (c2 !== this._dur) return this.render(t20, e3, o3);
        }
        if (this._tTime = w2, this._time = r2, !this._act && this._ts && (this._act = 1, this._lazy = 0), this.ratio = k2 = (a2 || this._ease)(r2 / c2), this._from && (this.ratio = k2 = 1 - k2), r2 && !u2 && !e3 && !n2 && (qr(this, "onStart"), this._tTime !== w2)) return this;
        for (L2 = this._pt; L2; ) L2.r(k2, L2.d), L2 = L2._next;
        h2 && h2.render(t20 < 0 ? t20 : h2._dur * h2._ease(r2 / this._dur), e3, o3) || this._startAt && (this._zTime = t20), this._onUpdate && !e3 && (l2 && ir(this, t20, 0, o3), qr(this, "onUpdate")), this._repeat && n2 !== s2 && this.vars.onRepeat && !e3 && this.parent && qr(this, "onRepeat"), w2 !== this._tDur && w2 || this._tTime !== w2 || (l2 && !this._onUpdate && ir(this, t20, 0, true), (t20 || !c2) && (w2 === this._tDur && this._ts > 0 || !w2 && this._ts < 0) && Lr(this, 1), e3 || l2 && !u2 || !(w2 || u2 || d2) || (qr(this, w2 === p2 ? "onComplete" : "onReverseComplete", true), this._prom && !(w2 < p2 && this.timeScale() > 0) && this._prom()));
      }
    } else !function(t21, e4, o4, r3) {
      var L3, n3, i3, s3 = t21.ratio, d3 = e4 < 0 || !e4 && (!t21._start && Mr(t21) && (t21._initted || !fr(t21)) || (t21._ts < 0 || t21._dp._ts < 0) && !fr(t21)) ? 0 : 1, k3 = t21._rDelay, h3 = 0;
      if (k3 && t21._repeat && (h3 = yr(0, t21._tDur, e4), n3 = kr(h3, k3), t21._yoyo && 1 & n3 && (d3 = 1 - d3), n3 !== kr(t21._tTime, k3) && (s3 = 1 - d3, t21.vars.repeatRefresh && t21._initted && t21.invalidate())), d3 !== s3 || Ne || r3 || t21._zTime === Ge || !e4 && t21._zTime) {
        if (!t21._initted && wr(t21, e4, r3, o4, h3)) return;
        for (i3 = t21._zTime, t21._zTime = e4 || (o4 ? Ge : 0), o4 || (o4 = e4 && !i3), t21.ratio = d3, t21._from && (d3 = 1 - d3), t21._time = 0, t21._tTime = h3, L3 = t21._pt; L3; ) L3.r(d3, L3.d), L3 = L3._next;
        e4 < 0 && ir(t21, e4, 0, true), t21._onUpdate && !o4 && qr(t21, "onUpdate"), h3 && t21._repeat && !o4 && t21.parent && qr(t21, "onRepeat"), (e4 >= t21._tDur || e4 < 0) && t21.ratio === d3 && (d3 && Lr(t21, 1), o4 || Ne || (qr(t21, d3 ? "onComplete" : "onReverseComplete", true), t21._prom && t21._prom()));
      } else t21._zTime || (t21._zTime = e4);
    }(this, t20, e3, o3);
    return this;
  }, o2.targets = function() {
    return this._targets;
  }, o2.invalidate = function(e3) {
    return (!e3 || !this.vars.runBackwards) && (this._startAt = 0), this._pt = this._op = this._onUpdate = this._lazy = this.ratio = 0, this._ptLookup = [], this.timeline && this.timeline.invalidate(e3), t19.prototype.invalidate.call(this, e3);
  }, o2.resetTo = function(t20, e3, o3, r2, L2) {
    Ue || tL.wake(), this._ts || this.play();
    var n2 = Math.min(this._dur, (this._dp._time - this._start) * this._ts);
    return this._initted || mL(this, n2), function(t21, e4, o4, r3, L3, n3, i2, s2) {
      var d2, k2, h2, a2, u2 = (t21._pt && t21._ptCache || (t21._ptCache = {}))[e4];
      if (!u2) for (u2 = t21._ptCache[e4] = [], h2 = t21._ptLookup, a2 = t21._targets.length; a2--; ) {
        if ((d2 = h2[a2][e4]) && d2.d && d2.d._pt) for (d2 = d2.d._pt; d2 && d2.p !== e4 && d2.fp !== e4; ) d2 = d2._next;
        if (!d2) return ML = 1, t21.vars[e4] = "+=0", mL(t21, i2), ML = 0, s2 ? yo(e4 + " not eligible for reset") : 1;
        u2.push(d2);
      }
      for (a2 = u2.length; a2--; ) (d2 = (k2 = u2[a2])._pt || k2).s = !r3 && 0 !== r3 || L3 ? d2.s + (r3 || 0) + n3 * d2.c : r3, d2.c = o4 - d2.s, k2.e && (k2.e = Bo(o4) + br(k2.e)), k2.b && (k2.b = d2.s + br(k2.b));
    }(this, t20, e3, o3, r2, this._ease(n2 / this._dur), n2, L2) ? this.resetTo(t20, e3, o3, r2, 1) : (ur(this, 0), this.parent || or(this._dp, this, "_first", "_last", this._dp._sort ? "_start" : 0), this.render(0));
  }, o2.kill = function(t20, e3) {
    if (void 0 === e3 && (e3 = "all"), !(t20 || e3 && "all" !== e3)) return this._lazy = this._pt = 0, this.parent ? zr(this) : this.scrollTrigger && this.scrollTrigger.kill(!!Ne), this;
    if (this.timeline) {
      var o3 = this.timeline.totalDuration();
      return this.timeline.killTweensOf(t20, e3, wL && true !== wL.vars.overwrite)._first || zr(this), this.parent && o3 !== this.timeline.totalDuration() && Wr(this, this._dur * this.timeline._tDur / o3, 0, 1), this;
    }
    var r2, L2, n2, i2, s2, d2, k2, h2 = this._targets, a2 = t20 ? Hr(t20) : h2, u2 = this._ptLookup, p2 = this._pt;
    if ((!e3 || "all" === e3) && function(t21, e4) {
      for (var o4 = t21.length, r3 = o4 === e4.length; r3 && o4-- && t21[o4] === e4[o4]; ) ;
      return o4 < 0;
    }(h2, a2)) return "all" === e3 && (this._pt = 0), zr(this);
    for (r2 = this._op = this._op || [], "all" !== e3 && (ro(e3) && (s2 = {}, zo(e3, function(t21) {
      return s2[t21] = 1;
    }), e3 = s2), e3 = function(t21, e4) {
      var o4, r3, L3, n3, i3 = t21[0] ? Do(t21[0]).harness : 0, s3 = i3 && i3.aliases;
      if (!s3) return e4;
      for (r3 in o4 = Jo({}, e4), s3) if (r3 in o4) for (L3 = (n3 = s3[r3].split(",")).length; L3--; ) o4[n3[L3]] = o4[r3];
      return o4;
    }(h2, e3)), k2 = h2.length; k2--; ) if (~a2.indexOf(h2[k2])) for (s2 in L2 = u2[k2], "all" === e3 ? (r2[k2] = e3, i2 = L2, n2 = {}) : (n2 = r2[k2] = r2[k2] || {}, i2 = e3), i2) (d2 = L2 && L2[s2]) && ("kill" in d2.d && true !== d2.d.kill(s2) || rr(this, d2, "_pt"), delete L2[s2]), "all" !== n2 && (n2[s2] = 1);
    return this._initted && !this._pt && p2 && zr(this), this;
  }, e2.to = function(t20, o3) {
    return new e2(t20, o3, arguments[2]);
  }, e2.from = function(t20, e3) {
    return gr(1, arguments);
  }, e2.delayedCall = function(t20, o3, r2, L2) {
    return new e2(o3, 0, { immediateRender: false, lazy: false, overwrite: false, delay: t20, onComplete: o3, onReverseComplete: o3, onCompleteParams: r2, onReverseCompleteParams: r2, callbackScope: L2 });
  }, e2.fromTo = function(t20, e3, o3) {
    return gr(2, arguments);
  }, e2.set = function(t20, o3) {
    return o3.duration = 0, o3.repeatDelay || (o3.repeat = 0), new e2(t20, o3);
  }, e2.killTweensOf = function(t20, e3, o3) {
    return Re.killTweensOf(t20, e3, o3);
  }, e2;
}(cL);
Ko(bL.prototype, { _targets: [], _lazy: 0, _startAt: 0, _op: 0, _onInit: 0 }), zo("staggerTo,staggerFrom,staggerFromTo", function(t19) {
  bL[t19] = function() {
    var e2 = new lL(), o2 = Cr.call(arguments, 0);
    return o2.splice("staggerFromTo" === t19 ? 5 : 4, 0, 0), e2[t19].apply(e2, o2);
  };
});
var CL = function(t19, e2, o2) {
  return t19[e2] = o2;
}, xL = function(t19, e2, o2) {
  return t19[e2](o2);
}, VL = function(t19, e2, o2, r2) {
  return t19[e2](r2.fp, o2);
}, HL = function(t19, e2, o2) {
  return t19.setAttribute(e2, o2);
}, TL = function(t19, e2) {
  return Lo(t19[e2]) ? xL : io(t19[e2]) && t19.setAttribute ? HL : CL;
}, OL = function(t19, e2) {
  return e2.set(e2.t, e2.p, Math.round(1e6 * (e2.s + e2.c * t19)) / 1e6, e2);
}, SL = function(t19, e2) {
  return e2.set(e2.t, e2.p, !!(e2.s + e2.c * t19), e2);
}, ZL = function(t19, e2) {
  var o2 = e2._pt, r2 = "";
  if (!t19 && e2.b) r2 = e2.b;
  else if (1 === t19 && e2.e) r2 = e2.e;
  else {
    for (; o2; ) r2 = o2.p + (o2.m ? o2.m(o2.s + o2.c * t19) : Math.round(1e4 * (o2.s + o2.c * t19)) / 1e4) + r2, o2 = o2._next;
    r2 += e2.c;
  }
  e2.set(e2.t, e2.p, r2, e2);
}, EL = function(t19, e2) {
  for (var o2 = e2._pt; o2; ) o2.r(t19, o2.d), o2 = o2._next;
}, PL = function(t19, e2, o2, r2) {
  for (var L2, n2 = this._pt; n2; ) L2 = n2._next, n2.p === r2 && n2.modifier(t19, e2, o2), n2 = L2;
}, NL = function(t19) {
  for (var e2, o2, r2 = this._pt; r2; ) o2 = r2._next, r2.p === t19 && !r2.op || r2.op === t19 ? rr(this, r2, "_pt") : r2.dep || (e2 = 1), r2 = o2;
  return !e2;
}, AL = function(t19, e2, o2, r2) {
  r2.mSet(t19, e2, r2.m.call(r2.tween, o2, r2.mt), r2);
}, RL = function(t19) {
  for (var e2, o2, r2, L2, n2 = t19._pt; n2; ) {
    for (e2 = n2._next, o2 = r2; o2 && o2.pr > n2.pr; ) o2 = o2._next;
    (n2._prev = o2 ? o2._prev : L2) ? n2._prev._next = n2 : r2 = n2, (n2._next = o2) ? o2._prev = n2 : L2 = n2, n2 = e2;
  }
  t19._pt = r2;
}, DL = function() {
  function t19(t20, e2, o2, r2, L2, n2, i2, s2, d2) {
    this.t = e2, this.s = r2, this.c = L2, this.p = o2, this.r = n2 || OL, this.d = i2 || this, this.set = s2 || CL, this.pr = d2 || 0, this._next = t20, t20 && (t20._prev = this);
  }
  return t19.prototype.modifier = function(t20, e2, o2) {
    this.mSet = this.mSet || this.set, this.set = AL, this.m = t20, this.mt = o2, this.tween = e2;
  }, t19;
}();
zo(Ao + "parent,duration,ease,delay,overwrite,runBackwards,startAt,yoyo,immediateRender,repeat,repeatDelay,data,paused,reversed,lazy,callbackScope,stringFilter,id,yoyoEase,stagger,inherit,repeatRefresh,keyframes,autoRevert,scrollTrigger", function(t19) {
  return To[t19] = 1;
}), mo.TweenMax = mo.TweenLite = bL, mo.TimelineLite = mo.TimelineMax = lL, Re = new lL({ sortChildren: false, defaults: Ye, autoRemoveChildren: true, id: "root", smoothChildTiming: true }), $e.stringFilter = Qr;
var qL = [], zL = {}, BL = [], IL = 0, FL = 0, UL = function(t19) {
  return (zL[t19] || BL).map(function(t20) {
    return t20();
  });
}, $L = function() {
  var t19 = Date.now(), e2 = [];
  t19 - IL > 2 && (UL("matchMediaInit"), qL.forEach(function(t20) {
    var o2, r2, L2, n2, i2 = t20.queries, s2 = t20.conditions;
    for (r2 in i2) (o2 = De.matchMedia(i2[r2]).matches) && (L2 = 1), o2 !== s2[r2] && (s2[r2] = o2, n2 = 1);
    n2 && (t20.revert(), L2 && e2.push(t20));
  }), UL("matchMediaRevert"), e2.forEach(function(t20) {
    return t20.onMatch(t20, function(e3) {
      return t20.add(null, e3);
    });
  }), IL = t19, UL("matchMedia"));
}, YL = function() {
  function t19(t20, e3) {
    this.selector = e3 && Tr(e3), this.data = [], this._r = [], this.isReverted = false, this.id = FL++, t20 && this.add(t20);
  }
  var e2 = t19.prototype;
  return e2.add = function(t20, e3, o2) {
    Lo(t20) && (o2 = e3, e3 = t20, t20 = Lo);
    var r2 = this, L2 = function() {
      var t21, L3 = Ae, n2 = r2.selector;
      return L3 && L3 !== r2 && L3.data.push(r2), o2 && (r2.selector = Tr(o2)), Ae = r2, t21 = e3.apply(r2, arguments), Lo(t21) && r2._r.push(t21), Ae = L3, r2.selector = n2, r2.isReverted = false, t21;
    };
    return r2.last = L2, t20 === Lo ? L2(r2, function(t21) {
      return r2.add(null, t21);
    }) : t20 ? r2[t20] = L2 : L2;
  }, e2.ignore = function(t20) {
    var e3 = Ae;
    Ae = null, t20(this), Ae = e3;
  }, e2.getTweens = function() {
    var e3 = [];
    return this.data.forEach(function(o2) {
      return o2 instanceof t19 ? e3.push.apply(e3, o2.getTweens()) : o2 instanceof bL && !(o2.parent && "nested" === o2.parent.data) && e3.push(o2);
    }), e3;
  }, e2.clear = function() {
    this._r.length = this.data.length = 0;
  }, e2.kill = function(t20, e3) {
    var o2 = this;
    if (t20 ? function() {
      for (var e4, r3 = o2.getTweens(), L2 = o2.data.length; L2--; ) "isFlip" === (e4 = o2.data[L2]).data && (e4.revert(), e4.getChildren(true, true, false).forEach(function(t21) {
        return r3.splice(r3.indexOf(t21), 1);
      }));
      for (r3.map(function(t21) {
        return { g: t21._dur || t21._delay || t21._sat && !t21._sat.vars.immediateRender ? t21.globalTime(0) : -1 / 0, t: t21 };
      }).sort(function(t21, e5) {
        return e5.g - t21.g || -1 / 0;
      }).forEach(function(e5) {
        return e5.t.revert(t20);
      }), L2 = o2.data.length; L2--; ) (e4 = o2.data[L2]) instanceof lL ? "nested" !== e4.data && (e4.scrollTrigger && e4.scrollTrigger.revert(), e4.kill()) : !(e4 instanceof bL) && e4.revert && e4.revert(t20);
      o2._r.forEach(function(e5) {
        return e5(t20, o2);
      }), o2.isReverted = true;
    }() : this.data.forEach(function(t21) {
      return t21.kill && t21.kill();
    }), this.clear(), e3) for (var r2 = qL.length; r2--; ) qL[r2].id === this.id && qL.splice(r2, 1);
  }, e2.revert = function(t20) {
    this.kill(t20 || {});
  }, t19;
}(), XL = function() {
  function t19(t20) {
    this.contexts = [], this.scope = t20, Ae && Ae.data.push(this);
  }
  var e2 = t19.prototype;
  return e2.add = function(t20, e3, o2) {
    so(t20) || (t20 = { matches: t20 });
    var r2, L2, n2, i2 = new YL(0, o2 || this.scope), s2 = i2.conditions = {};
    for (L2 in Ae && !i2.selector && (i2.selector = Ae.selector), this.contexts.push(i2), e3 = i2.add("onMatch", e3), i2.queries = t20, t20) "all" === L2 ? n2 = 1 : (r2 = De.matchMedia(t20[L2])) && (qL.indexOf(i2) < 0 && qL.push(i2), (s2[L2] = r2.matches) && (n2 = 1), r2.addListener ? r2.addListener($L) : r2.addEventListener("change", $L));
    return n2 && e3(i2, function(t21) {
      return i2.add(null, t21);
    }), this;
  }, e2.revert = function(t20) {
    this.kill(t20 || {});
  }, e2.kill = function(t20) {
    this.contexts.forEach(function(e3) {
      return e3.kill(t20, true);
    });
  }, t19;
}(), GL = { registerPlugin: function() {
  for (var t19 = arguments.length, e2 = new Array(t19), o2 = 0; o2 < t19; o2++) e2[o2] = arguments[o2];
  e2.forEach(function(t20) {
    return Ir(t20);
  });
}, timeline: function(t19) {
  return new lL(t19);
}, getTweensOf: function(t19, e2) {
  return Re.getTweensOf(t19, e2);
}, getProperty: function(t19, e2, o2, r2) {
  ro(t19) && (t19 = Hr(t19)[0]);
  var L2 = Do(t19 || {}).get, n2 = o2 ? Go : Xo;
  return "native" === o2 && (o2 = ""), t19 ? e2 ? n2((Zo[e2] && Zo[e2].get || L2)(t19, e2, o2, r2)) : function(e3, o3, r3) {
    return n2((Zo[e3] && Zo[e3].get || L2)(t19, e3, o3, r3));
  } : t19;
}, quickSetter: function(t19, e2, o2) {
  if ((t19 = Hr(t19)).length > 1) {
    var r2 = t19.map(function(t20) {
      return QL.quickSetter(t20, e2, o2);
    }), L2 = r2.length;
    return function(t20) {
      for (var e3 = L2; e3--; ) r2[e3](t20);
    };
  }
  t19 = t19[0] || {};
  var n2 = Zo[e2], i2 = Do(t19), s2 = i2.harness && (i2.harness.aliases || {})[e2] || e2, d2 = n2 ? function(e3) {
    var r3 = new n2();
    Fe._pt = 0, r3.init(t19, o2 ? e3 + o2 : e3, Fe, 0, [t19]), r3.render(1, r3), Fe._pt && EL(1, Fe);
  } : i2.set(t19, s2);
  return n2 ? d2 : function(e3) {
    return d2(t19, s2, o2 ? e3 + o2 : e3, i2, 1);
  };
}, quickTo: function(t19, e2, o2) {
  var r2, L2 = QL.to(t19, Ko(((r2 = {})[e2] = "+=0.1", r2.paused = true, r2.stagger = 0, r2), o2 || {})), n2 = function(t20, o3, r3) {
    return L2.resetTo(e2, t20, o3, r3);
  };
  return n2.tween = L2, n2;
}, isTweening: function(t19) {
  return Re.getTweensOf(t19, true).length > 0;
}, defaults: function(t19) {
  return t19 && t19.ease && (t19.ease = dL(t19.ease, Ye.ease)), Qo(Ye, t19 || {});
}, config: function(t19) {
  return Qo($e, t19 || {});
}, registerEffect: function(t19) {
  var e2 = t19.name, o2 = t19.effect, r2 = t19.plugins, L2 = t19.defaults, n2 = t19.extendTimeline;
  (r2 || "").split(",").forEach(function(t20) {
    return t20 && !Zo[t20] && !mo[t20] && yo(e2 + " effect requires " + t20 + " plugin.");
  }), Eo[e2] = function(t20, e3, r3) {
    return o2(Hr(t20), Ko(e3 || {}, L2), r3);
  }, n2 && (lL.prototype[e2] = function(t20, o3, r3) {
    return this.add(Eo[e2](t20, so(o3) ? o3 : (r3 = o3) && {}, this), r3);
  });
}, registerEase: function(t19, e2) {
  oL[t19] = dL(e2);
}, parseEase: function(t19, e2) {
  return arguments.length ? dL(t19, e2) : oL;
}, getById: function(t19) {
  return Re.getById(t19);
}, exportRoot: function(t19, e2) {
  void 0 === t19 && (t19 = {});
  var o2, r2, L2 = new lL(t19);
  for (L2.smoothChildTiming = ko(t19.smoothChildTiming), Re.remove(L2), L2._dp = 0, L2._time = L2._tTime = Re._time, o2 = Re._first; o2; ) r2 = o2._next, !e2 && !o2._dur && o2 instanceof bL && o2.vars.onComplete === o2._targets[0] || cr(L2, o2, o2._start - o2._delay), o2 = r2;
  return cr(Re, L2, 0), L2;
}, context: function(t19, e2) {
  return t19 ? new YL(t19, e2) : Ae;
}, matchMedia: function(t19) {
  return new XL(t19);
}, matchMediaRefresh: function() {
  return qL.forEach(function(t19) {
    var e2, o2, r2 = t19.conditions;
    for (o2 in r2) r2[o2] && (r2[o2] = false, e2 = 1);
    e2 && t19.revert();
  }) || $L();
}, addEventListener: function(t19, e2) {
  var o2 = zL[t19] || (zL[t19] = []);
  ~o2.indexOf(e2) || o2.push(e2);
}, removeEventListener: function(t19, e2) {
  var o2 = zL[t19], r2 = o2 && o2.indexOf(e2);
  r2 >= 0 && o2.splice(r2, 1);
}, utils: { wrap: function t10(e2, o2, r2) {
  var L2 = o2 - e2;
  return po(e2) ? Nr(e2, t10(0, e2.length), o2) : _r(r2, function(t19) {
    return (L2 + (t19 - e2) % L2) % L2 + e2;
  });
}, wrapYoyo: function t11(e2, o2, r2) {
  var L2 = o2 - e2, n2 = 2 * L2;
  return po(e2) ? Nr(e2, t11(0, e2.length - 1), o2) : _r(r2, function(t19) {
    return e2 + ((t19 = (n2 + (t19 - e2) % n2) % n2 || 0) > L2 ? n2 - t19 : t19);
  });
}, distribute: Sr, random: Pr, snap: Er, normalize: function(t19, e2, o2) {
  return Rr(t19, e2, 0, 1, o2);
}, getUnit: br, clamp: function(t19, e2, o2) {
  return _r(o2, function(o3) {
    return yr(t19, e2, o3);
  });
}, splitColor: Yr, toArray: Hr, selector: Tr, mapRange: Rr, pipe: function() {
  for (var t19 = arguments.length, e2 = new Array(t19), o2 = 0; o2 < t19; o2++) e2[o2] = arguments[o2];
  return function(t20) {
    return e2.reduce(function(t21, e3) {
      return e3(t21);
    }, t20);
  };
}, unitize: function(t19, e2) {
  return function(o2) {
    return t19(parseFloat(o2)) + (e2 || br(o2));
  };
}, interpolate: function t12(e2, o2, r2, L2) {
  var n2 = isNaN(e2 + o2) ? 0 : function(t19) {
    return (1 - t19) * e2 + t19 * o2;
  };
  if (!n2) {
    var i2, s2, d2, k2, h2, a2 = ro(e2), u2 = {};
    if (true === r2 && (L2 = 1) && (r2 = null), a2) e2 = { p: e2 }, o2 = { p: o2 };
    else if (po(e2) && !po(o2)) {
      for (d2 = [], k2 = e2.length, h2 = k2 - 2, s2 = 1; s2 < k2; s2++) d2.push(t12(e2[s2 - 1], e2[s2]));
      k2--, n2 = function(t19) {
        t19 *= k2;
        var e3 = Math.min(h2, ~~t19);
        return d2[e3](t19 - e3);
      }, r2 = o2;
    } else L2 || (e2 = Jo(po(e2) ? [] : {}, e2));
    if (!d2) {
      for (i2 in o2) WL.call(u2, e2, i2, "get", o2[i2]);
      n2 = function(t19) {
        return EL(t19, u2) || (a2 ? e2.p : e2);
      };
    }
  }
  return _r(r2, n2);
}, shuffle: Or }, install: go, effects: Eo, ticker: tL, updateRoot: lL.updateRoot, plugins: Zo, globalTimeline: Re, core: { PropTween: DL, globals: bo, Tween: bL, Timeline: lL, Animation: cL, getCache: Do, _removeLinkedListItem: rr, reverting: function() {
  return Ne;
}, context: function(t19) {
  return t19 && Ae && (Ae.data.push(t19), t19._ctx = Ae), Ae;
}, suppressOverwrites: function(t19) {
  return Pe = t19;
} } };
zo("to,from,fromTo,delayedCall,set,killTweensOf", function(t19) {
  return GL[t19] = bL[t19];
}), tL.add(lL.updateRoot), Fe = GL.to({}, { duration: 0 });
var KL = function(t19, e2) {
  for (var o2 = t19._pt; o2 && o2.p !== e2 && o2.op !== e2 && o2.fp !== e2; ) o2 = o2._next;
  return o2;
}, JL = function(t19, e2) {
  return { name: t19, rawVars: 1, init: function(t20, o2, r2) {
    r2._onInit = function(t21) {
      var r3, L2;
      if (ro(o2) && (r3 = {}, zo(o2, function(t22) {
        return r3[t22] = 1;
      }), o2 = r3), e2) {
        for (L2 in r3 = {}, o2) r3[L2] = e2(o2[L2]);
        o2 = r3;
      }
      !function(t22, e3) {
        var o3, r4, L3, n2 = t22._targets;
        for (o3 in e3) for (r4 = n2.length; r4--; ) (L3 = t22._ptLookup[r4][o3]) && (L3 = L3.d) && (L3._pt && (L3 = KL(L3, o3)), L3 && L3.modifier && L3.modifier(e3[o3], t22, n2[r4], o3));
      }(t21, o2);
    };
  } };
}, QL = GL.registerPlugin({ name: "attr", init: function(t19, e2, o2, r2, L2) {
  var n2, i2, s2;
  for (n2 in this.tween = o2, e2) s2 = t19.getAttribute(n2) || "", (i2 = this.add(t19, "setAttribute", (s2 || 0) + "", e2[n2], r2, L2, 0, 0, n2)).op = n2, i2.b = s2, this._props.push(n2);
}, render: function(t19, e2) {
  for (var o2 = e2._pt; o2; ) Ne ? o2.set(o2.t, o2.p, o2.b, o2) : o2.r(t19, o2.d), o2 = o2._next;
} }, { name: "endArray", init: function(t19, e2) {
  for (var o2 = e2.length; o2--; ) this.add(t19, o2, t19[o2] || 0, e2[o2], 0, 0, 0, 0, 0, 1);
} }, JL("roundProps", Zr), JL("modifiers"), JL("snap", Er)) || GL;
bL.version = lL.version = QL.version = "3.12.7", Be = 1, ho() && eL(), oL.Power0, oL.Power1, oL.Power2, oL.Power3, oL.Power4, oL.Linear, oL.Quad, oL.Cubic, oL.Quart, oL.Quint, oL.Strong, oL.Elastic, oL.Back, oL.SteppedEase, oL.Bounce, oL.Sine, oL.Expo, oL.Circ;
/*!
 * CSSPlugin 3.12.7
 * https://gsap.com
 *
 * Copyright 2008-2025, GreenSock. All rights reserved.
 * Subject to the terms at https://gsap.com/standard-license or for
 * Club GSAP members, the agreement issued with that membership.
 * @author: Jack Doyle, jack@greensock.com
*/
var tn, en, on, rn, Ln, nn, sn, dn, kn = {}, hn = 180 / Math.PI, an = Math.PI / 180, un = Math.atan2, pn = /([A-Z])/g, cn = /(left|right|width|margin|padding|x)/i, ln = /[\s,\(]\S/, wn = { autoAlpha: "opacity,visibility", scale: "scaleX,scaleY", alpha: "opacity" }, Mn = function(t19, e2) {
  return e2.set(e2.t, e2.p, Math.round(1e4 * (e2.s + e2.c * t19)) / 1e4 + e2.u, e2);
}, fn = function(t19, e2) {
  return e2.set(e2.t, e2.p, 1 === t19 ? e2.e : Math.round(1e4 * (e2.s + e2.c * t19)) / 1e4 + e2.u, e2);
}, Wn = function(t19, e2) {
  return e2.set(e2.t, e2.p, t19 ? Math.round(1e4 * (e2.s + e2.c * t19)) / 1e4 + e2.u : e2.b, e2);
}, jn = function(t19, e2) {
  var o2 = e2.s + e2.c * t19;
  e2.set(e2.t, e2.p, ~~(o2 + (o2 < 0 ? -0.5 : 0.5)) + e2.u, e2);
}, mn = function(t19, e2) {
  return e2.set(e2.t, e2.p, t19 ? e2.e : e2.b, e2);
}, vn = function(t19, e2) {
  return e2.set(e2.t, e2.p, 1 !== t19 ? e2.b : e2.e, e2);
}, gn = function(t19, e2, o2) {
  return t19.style[e2] = o2;
}, _n = function(t19, e2, o2) {
  return t19.style.setProperty(e2, o2);
}, yn = function(t19, e2, o2) {
  return t19._gsap[e2] = o2;
}, bn = function(t19, e2, o2) {
  return t19._gsap.scaleX = t19._gsap.scaleY = o2;
}, Cn = function(t19, e2, o2, r2, L2) {
  var n2 = t19._gsap;
  n2.scaleX = n2.scaleY = o2, n2.renderTransform(L2, n2);
}, xn = function(t19, e2, o2, r2, L2) {
  var n2 = t19._gsap;
  n2[e2] = o2, n2.renderTransform(L2, n2);
}, Vn = "transform", Hn = Vn + "Origin", Tn = function t13(e2, o2) {
  var r2 = this, L2 = this.target, n2 = L2.style, i2 = L2._gsap;
  if (e2 in kn && n2) {
    if (this.tfm = this.tfm || {}, "transform" === e2) return wn.transform.split(",").forEach(function(e3) {
      return t13.call(r2, e3, o2);
    });
    if (~(e2 = wn[e2] || e2).indexOf(",") ? e2.split(",").forEach(function(t19) {
      return r2.tfm[t19] = Xn(L2, t19);
    }) : this.tfm[e2] = i2.x ? i2[e2] : Xn(L2, e2), e2 === Hn && (this.tfm.zOrigin = i2.zOrigin), this.props.indexOf(Vn) >= 0) return;
    i2.svg && (this.svgo = L2.getAttribute("data-svg-origin"), this.props.push(Hn, o2, "")), e2 = Vn;
  }
  (n2 || o2) && this.props.push(e2, o2, n2[e2]);
}, On = function(t19) {
  t19.translate && (t19.removeProperty("translate"), t19.removeProperty("scale"), t19.removeProperty("rotate"));
}, Sn = function() {
  var t19, e2, o2 = this.props, r2 = this.target, L2 = r2.style, n2 = r2._gsap;
  for (t19 = 0; t19 < o2.length; t19 += 3) o2[t19 + 1] ? 2 === o2[t19 + 1] ? r2[o2[t19]](o2[t19 + 2]) : r2[o2[t19]] = o2[t19 + 2] : o2[t19 + 2] ? L2[o2[t19]] = o2[t19 + 2] : L2.removeProperty("--" === o2[t19].substr(0, 2) ? o2[t19] : o2[t19].replace(pn, "-$1").toLowerCase());
  if (this.tfm) {
    for (e2 in this.tfm) n2[e2] = this.tfm[e2];
    n2.svg && (n2.renderTransform(), r2.setAttribute("data-svg-origin", this.svgo || "")), (t19 = sn()) && t19.isStart || L2[Vn] || (On(L2), n2.zOrigin && L2[Hn] && (L2[Hn] += " " + n2.zOrigin + "px", n2.zOrigin = 0, n2.renderTransform()), n2.uncache = 1);
  }
}, Zn = function(t19, e2) {
  var o2 = { target: t19, props: [], revert: Sn, save: Tn };
  return t19._gsap || QL.core.getCache(t19), e2 && t19.style && t19.nodeType && e2.split(",").forEach(function(t20) {
    return o2.save(t20);
  }), o2;
}, En = function(t19, e2) {
  var o2 = en.createElementNS ? en.createElementNS((e2 || "http://www.w3.org/1999/xhtml").replace(/^https/, "http"), t19) : en.createElement(t19);
  return o2 && o2.style ? o2 : en.createElement(t19);
}, Pn = function t14(e2, o2, r2) {
  var L2 = getComputedStyle(e2);
  return L2[o2] || L2.getPropertyValue(o2.replace(pn, "-$1").toLowerCase()) || L2.getPropertyValue(o2) || !r2 && t14(e2, An(o2) || o2, 1) || "";
}, Nn = "O,Moz,ms,Ms,Webkit".split(","), An = function(t19, e2, o2) {
  var r2 = (e2 || Ln).style, L2 = 5;
  if (t19 in r2 && !o2) return t19;
  for (t19 = t19.charAt(0).toUpperCase() + t19.substr(1); L2-- && !(Nn[L2] + t19 in r2); ) ;
  return L2 < 0 ? null : (3 === L2 ? "ms" : L2 >= 0 ? Nn[L2] : "") + t19;
}, Rn = function() {
  "undefined" != typeof window && window.document && (tn = window, en = tn.document, on = en.documentElement, Ln = En("div") || { style: {} }, En("div"), Vn = An(Vn), Hn = Vn + "Origin", Ln.style.cssText = "border-width:0;line-height:0;position:absolute;padding:0", dn = !!An("perspective"), sn = QL.core.reverting, rn = 1);
}, Dn = function(t19) {
  var e2, o2 = t19.ownerSVGElement, r2 = En("svg", o2 && o2.getAttribute("xmlns") || "http://www.w3.org/2000/svg"), L2 = t19.cloneNode(true);
  L2.style.display = "block", r2.appendChild(L2), on.appendChild(r2);
  try {
    e2 = L2.getBBox();
  } catch (t20) {
  }
  return r2.removeChild(L2), on.removeChild(r2), e2;
}, qn = function(t19, e2) {
  for (var o2 = e2.length; o2--; ) if (t19.hasAttribute(e2[o2])) return t19.getAttribute(e2[o2]);
}, zn = function(t19) {
  var e2, o2;
  try {
    e2 = t19.getBBox();
  } catch (r2) {
    e2 = Dn(t19), o2 = 1;
  }
  return e2 && (e2.width || e2.height) || o2 || (e2 = Dn(t19)), !e2 || e2.width || e2.x || e2.y ? e2 : { x: +qn(t19, ["x", "cx", "x1"]) || 0, y: +qn(t19, ["y", "cy", "y1"]) || 0, width: 0, height: 0 };
}, Bn = function(t19) {
  return !(!t19.getCTM || t19.parentNode && !t19.ownerSVGElement || !zn(t19));
}, In = function(t19, e2) {
  if (e2) {
    var o2, r2 = t19.style;
    e2 in kn && e2 !== Hn && (e2 = Vn), r2.removeProperty ? ("ms" !== (o2 = e2.substr(0, 2)) && "webkit" !== e2.substr(0, 6) || (e2 = "-" + e2), r2.removeProperty("--" === o2 ? e2 : e2.replace(pn, "-$1").toLowerCase())) : r2.removeAttribute(e2);
  }
}, Fn = function(t19, e2, o2, r2, L2, n2) {
  var i2 = new DL(t19._pt, e2, o2, 0, 1, n2 ? vn : mn);
  return t19._pt = i2, i2.b = r2, i2.e = L2, t19._props.push(o2), i2;
}, Un = { deg: 1, rad: 1, turn: 1 }, $n = { grid: 1, flex: 1 }, Yn = function t15(e2, o2, r2, L2) {
  var n2, i2, s2, d2, k2 = parseFloat(r2) || 0, h2 = (r2 + "").trim().substr((k2 + "").length) || "px", a2 = Ln.style, u2 = cn.test(o2), p2 = "svg" === e2.tagName.toLowerCase(), c2 = (p2 ? "client" : "offset") + (u2 ? "Width" : "Height"), l2 = 100, w2 = "px" === L2, M2 = "%" === L2;
  if (L2 === h2 || !k2 || Un[L2] || Un[h2]) return k2;
  if ("px" !== h2 && !w2 && (k2 = t15(e2, o2, r2, "px")), d2 = e2.getCTM && Bn(e2), (M2 || "%" === h2) && (kn[o2] || ~o2.indexOf("adius"))) return n2 = d2 ? e2.getBBox()[u2 ? "width" : "height"] : e2[c2], Bo(M2 ? k2 / n2 * l2 : k2 / 100 * n2);
  if (a2[u2 ? "width" : "height"] = l2 + (w2 ? h2 : L2), i2 = "rem" !== L2 && ~o2.indexOf("adius") || "em" === L2 && e2.appendChild && !p2 ? e2 : e2.parentNode, d2 && (i2 = (e2.ownerSVGElement || {}).parentNode), i2 && i2 !== en && i2.appendChild || (i2 = en.body), (s2 = i2._gsap) && M2 && s2.width && u2 && s2.time === tL.time && !s2.uncache) return Bo(k2 / s2.width * l2);
  if (!M2 || "height" !== o2 && "width" !== o2) (M2 || "%" === h2) && !$n[Pn(i2, "display")] && (a2.position = Pn(e2, "position")), i2 === e2 && (a2.position = "static"), i2.appendChild(Ln), n2 = Ln[c2], i2.removeChild(Ln), a2.position = "absolute";
  else {
    var f2 = e2.style[o2];
    e2.style[o2] = l2 + L2, n2 = e2[c2], f2 ? e2.style[o2] = f2 : In(e2, o2);
  }
  return u2 && M2 && ((s2 = Do(i2)).time = tL.time, s2.width = i2[c2]), Bo(w2 ? n2 * k2 / l2 : n2 && k2 ? l2 / n2 * k2 : 0);
}, Xn = function(t19, e2, o2, r2) {
  var L2;
  return rn || Rn(), e2 in wn && "transform" !== e2 && ~(e2 = wn[e2]).indexOf(",") && (e2 = e2.split(",")[0]), kn[e2] && "transform" !== e2 ? (L2 = si(t19, r2), L2 = "transformOrigin" !== e2 ? L2[e2] : L2.svg ? L2.origin : di(Pn(t19, Hn)) + " " + L2.zOrigin + "px") : (!(L2 = t19.style[e2]) || "auto" === L2 || r2 || ~(L2 + "").indexOf("calc(")) && (L2 = ti[e2] && ti[e2](t19, e2, o2) || Pn(t19, e2) || qo(t19, e2) || ("opacity" === e2 ? 1 : 0)), o2 && !~(L2 + "").trim().indexOf(" ") ? Yn(t19, e2, L2, o2) + o2 : L2;
}, Gn = function(t19, e2, o2, r2) {
  if (!o2 || "none" === o2) {
    var L2 = An(e2, t19, 1), n2 = L2 && Pn(t19, L2, 1);
    n2 && n2 !== o2 ? (e2 = L2, o2 = n2) : "borderColor" === e2 && (o2 = Pn(t19, "borderTopColor"));
  }
  var i2, s2, d2, k2, h2, a2, u2, p2, c2, l2, w2, M2 = new DL(this._pt, t19.style, e2, 0, 1, ZL), f2 = 0, W2 = 0;
  if (M2.b = o2, M2.e = r2, o2 += "", "auto" === (r2 += "") && (a2 = t19.style[e2], t19.style[e2] = r2, r2 = Pn(t19, e2) || r2, a2 ? t19.style[e2] = a2 : In(t19, e2)), Qr(i2 = [o2, r2]), r2 = i2[1], d2 = (o2 = i2[0]).match(wo) || [], (r2.match(wo) || []).length) {
    for (; s2 = wo.exec(r2); ) u2 = s2[0], c2 = r2.substring(f2, s2.index), h2 ? h2 = (h2 + 1) % 5 : "rgba(" !== c2.substr(-5) && "hsla(" !== c2.substr(-5) || (h2 = 1), u2 !== (a2 = d2[W2++] || "") && (k2 = parseFloat(a2) || 0, w2 = a2.substr((k2 + "").length), "=" === u2.charAt(1) && (u2 = Fo(k2, u2) + w2), p2 = parseFloat(u2), l2 = u2.substr((p2 + "").length), f2 = wo.lastIndex - l2.length, l2 || (l2 = l2 || $e.units[e2] || w2, f2 === r2.length && (r2 += l2, M2.e += l2)), w2 !== l2 && (k2 = Yn(t19, e2, a2, l2) || 0), M2._pt = { _next: M2._pt, p: c2 || 1 === W2 ? c2 : ",", s: k2, c: p2 - k2, m: h2 && h2 < 4 || "zIndex" === e2 ? Math.round : 0 });
    M2.c = f2 < r2.length ? r2.substring(f2, r2.length) : "";
  } else M2.r = "display" === e2 && "none" === r2 ? vn : mn;
  return fo.test(r2) && (M2.e = 0), this._pt = M2, M2;
}, Kn = { top: "0%", bottom: "100%", left: "0%", right: "100%", center: "50%" }, Jn = function(t19) {
  var e2 = t19.split(" "), o2 = e2[0], r2 = e2[1] || "50%";
  return "top" !== o2 && "bottom" !== o2 && "left" !== r2 && "right" !== r2 || (t19 = o2, o2 = r2, r2 = t19), e2[0] = Kn[o2] || o2, e2[1] = Kn[r2] || r2, e2.join(" ");
}, Qn = function(t19, e2) {
  if (e2.tween && e2.tween._time === e2.tween._dur) {
    var o2, r2, L2, n2 = e2.t, i2 = n2.style, s2 = e2.u, d2 = n2._gsap;
    if ("all" === s2 || true === s2) i2.cssText = "", r2 = 1;
    else for (L2 = (s2 = s2.split(",")).length; --L2 > -1; ) o2 = s2[L2], kn[o2] && (r2 = 1, o2 = "transformOrigin" === o2 ? Hn : Vn), In(n2, o2);
    r2 && (In(n2, Vn), d2 && (d2.svg && n2.removeAttribute("transform"), i2.scale = i2.rotate = i2.translate = "none", si(n2, 1), d2.uncache = 1, On(i2)));
  }
}, ti = { clearProps: function(t19, e2, o2, r2, L2) {
  if ("isFromStart" !== L2.data) {
    var n2 = t19._pt = new DL(t19._pt, e2, o2, 0, 0, Qn);
    return n2.u = r2, n2.pr = -10, n2.tween = L2, t19._props.push(o2), 1;
  }
} }, ei = [1, 0, 0, 1, 0, 0], oi = {}, ri = function(t19) {
  return "matrix(1, 0, 0, 1, 0, 0)" === t19 || "none" === t19 || !t19;
}, Li = function(t19) {
  var e2 = Pn(t19, Vn);
  return ri(e2) ? ei : e2.substr(7).match(lo).map(Bo);
}, ni = function(t19, e2) {
  var o2, r2, L2, n2, i2 = t19._gsap || Do(t19), s2 = t19.style, d2 = Li(t19);
  return i2.svg && t19.getAttribute("transform") ? "1,0,0,1,0,0" === (d2 = [(L2 = t19.transform.baseVal.consolidate().matrix).a, L2.b, L2.c, L2.d, L2.e, L2.f]).join(",") ? ei : d2 : (d2 !== ei || t19.offsetParent || t19 === on || i2.svg || (L2 = s2.display, s2.display = "block", (o2 = t19.parentNode) && (t19.offsetParent || t19.getBoundingClientRect().width) || (n2 = 1, r2 = t19.nextElementSibling, on.appendChild(t19)), d2 = Li(t19), L2 ? s2.display = L2 : In(t19, "display"), n2 && (r2 ? o2.insertBefore(t19, r2) : o2 ? o2.appendChild(t19) : on.removeChild(t19))), e2 && d2.length > 6 ? [d2[0], d2[1], d2[4], d2[5], d2[12], d2[13]] : d2);
}, ii = function(t19, e2, o2, r2, L2, n2) {
  var i2, s2, d2, k2 = t19._gsap, h2 = L2 || ni(t19, true), a2 = k2.xOrigin || 0, u2 = k2.yOrigin || 0, p2 = k2.xOffset || 0, c2 = k2.yOffset || 0, l2 = h2[0], w2 = h2[1], M2 = h2[2], f2 = h2[3], W2 = h2[4], j2 = h2[5], m2 = e2.split(" "), v2 = parseFloat(m2[0]) || 0, g2 = parseFloat(m2[1]) || 0;
  o2 ? h2 !== ei && (s2 = l2 * f2 - w2 * M2) && (d2 = v2 * (-w2 / s2) + g2 * (l2 / s2) - (l2 * j2 - w2 * W2) / s2, v2 = v2 * (f2 / s2) + g2 * (-M2 / s2) + (M2 * j2 - f2 * W2) / s2, g2 = d2) : (v2 = (i2 = zn(t19)).x + (~m2[0].indexOf("%") ? v2 / 100 * i2.width : v2), g2 = i2.y + (~(m2[1] || m2[0]).indexOf("%") ? g2 / 100 * i2.height : g2)), r2 || false !== r2 && k2.smooth ? (W2 = v2 - a2, j2 = g2 - u2, k2.xOffset = p2 + (W2 * l2 + j2 * M2) - W2, k2.yOffset = c2 + (W2 * w2 + j2 * f2) - j2) : k2.xOffset = k2.yOffset = 0, k2.xOrigin = v2, k2.yOrigin = g2, k2.smooth = !!r2, k2.origin = e2, k2.originIsAbsolute = !!o2, t19.style[Hn] = "0px 0px", n2 && (Fn(n2, k2, "xOrigin", a2, v2), Fn(n2, k2, "yOrigin", u2, g2), Fn(n2, k2, "xOffset", p2, k2.xOffset), Fn(n2, k2, "yOffset", c2, k2.yOffset)), t19.setAttribute("data-svg-origin", v2 + " " + g2);
}, si = function(t19, e2) {
  var o2 = t19._gsap || new pL(t19);
  if ("x" in o2 && !e2 && !o2.uncache) return o2;
  var r2, L2, n2, i2, s2, d2, k2, h2, a2, u2, p2, c2, l2, w2, M2, f2, W2, j2, m2, v2, g2, _2, y2, b2, C2, x2, V2, H2, T2, O2, S2, Z2, E2 = t19.style, P2 = o2.scaleX < 0, N2 = "px", A2 = "deg", R2 = getComputedStyle(t19), D2 = Pn(t19, Hn) || "0";
  return r2 = L2 = n2 = d2 = k2 = h2 = a2 = u2 = p2 = 0, i2 = s2 = 1, o2.svg = !(!t19.getCTM || !Bn(t19)), R2.translate && ("none" === R2.translate && "none" === R2.scale && "none" === R2.rotate || (E2[Vn] = ("none" !== R2.translate ? "translate3d(" + (R2.translate + " 0 0").split(" ").slice(0, 3).join(", ") + ") " : "") + ("none" !== R2.rotate ? "rotate(" + R2.rotate + ") " : "") + ("none" !== R2.scale ? "scale(" + R2.scale.split(" ").join(",") + ") " : "") + ("none" !== R2[Vn] ? R2[Vn] : "")), E2.scale = E2.rotate = E2.translate = "none"), w2 = ni(t19, o2.svg), o2.svg && (o2.uncache ? (C2 = t19.getBBox(), D2 = o2.xOrigin - C2.x + "px " + (o2.yOrigin - C2.y) + "px", b2 = "") : b2 = !e2 && t19.getAttribute("data-svg-origin"), ii(t19, b2 || D2, !!b2 || o2.originIsAbsolute, false !== o2.smooth, w2)), c2 = o2.xOrigin || 0, l2 = o2.yOrigin || 0, w2 !== ei && (j2 = w2[0], m2 = w2[1], v2 = w2[2], g2 = w2[3], r2 = _2 = w2[4], L2 = y2 = w2[5], 6 === w2.length ? (i2 = Math.sqrt(j2 * j2 + m2 * m2), s2 = Math.sqrt(g2 * g2 + v2 * v2), d2 = j2 || m2 ? un(m2, j2) * hn : 0, (a2 = v2 || g2 ? un(v2, g2) * hn + d2 : 0) && (s2 *= Math.abs(Math.cos(a2 * an))), o2.svg && (r2 -= c2 - (c2 * j2 + l2 * v2), L2 -= l2 - (c2 * m2 + l2 * g2))) : (Z2 = w2[6], O2 = w2[7], V2 = w2[8], H2 = w2[9], T2 = w2[10], S2 = w2[11], r2 = w2[12], L2 = w2[13], n2 = w2[14], k2 = (M2 = un(Z2, T2)) * hn, M2 && (b2 = _2 * (f2 = Math.cos(-M2)) + V2 * (W2 = Math.sin(-M2)), C2 = y2 * f2 + H2 * W2, x2 = Z2 * f2 + T2 * W2, V2 = _2 * -W2 + V2 * f2, H2 = y2 * -W2 + H2 * f2, T2 = Z2 * -W2 + T2 * f2, S2 = O2 * -W2 + S2 * f2, _2 = b2, y2 = C2, Z2 = x2), h2 = (M2 = un(-v2, T2)) * hn, M2 && (f2 = Math.cos(-M2), S2 = g2 * (W2 = Math.sin(-M2)) + S2 * f2, j2 = b2 = j2 * f2 - V2 * W2, m2 = C2 = m2 * f2 - H2 * W2, v2 = x2 = v2 * f2 - T2 * W2), d2 = (M2 = un(m2, j2)) * hn, M2 && (b2 = j2 * (f2 = Math.cos(M2)) + m2 * (W2 = Math.sin(M2)), C2 = _2 * f2 + y2 * W2, m2 = m2 * f2 - j2 * W2, y2 = y2 * f2 - _2 * W2, j2 = b2, _2 = C2), k2 && Math.abs(k2) + Math.abs(d2) > 359.9 && (k2 = d2 = 0, h2 = 180 - h2), i2 = Bo(Math.sqrt(j2 * j2 + m2 * m2 + v2 * v2)), s2 = Bo(Math.sqrt(y2 * y2 + Z2 * Z2)), M2 = un(_2, y2), a2 = Math.abs(M2) > 2e-4 ? M2 * hn : 0, p2 = S2 ? 1 / (S2 < 0 ? -S2 : S2) : 0), o2.svg && (b2 = t19.getAttribute("transform"), o2.forceCSS = t19.setAttribute("transform", "") || !ri(Pn(t19, Vn)), b2 && t19.setAttribute("transform", b2))), Math.abs(a2) > 90 && Math.abs(a2) < 270 && (P2 ? (i2 *= -1, a2 += d2 <= 0 ? 180 : -180, d2 += d2 <= 0 ? 180 : -180) : (s2 *= -1, a2 += a2 <= 0 ? 180 : -180)), e2 = e2 || o2.uncache, o2.x = r2 - ((o2.xPercent = r2 && (!e2 && o2.xPercent || (Math.round(t19.offsetWidth / 2) === Math.round(-r2) ? -50 : 0))) ? t19.offsetWidth * o2.xPercent / 100 : 0) + N2, o2.y = L2 - ((o2.yPercent = L2 && (!e2 && o2.yPercent || (Math.round(t19.offsetHeight / 2) === Math.round(-L2) ? -50 : 0))) ? t19.offsetHeight * o2.yPercent / 100 : 0) + N2, o2.z = n2 + N2, o2.scaleX = Bo(i2), o2.scaleY = Bo(s2), o2.rotation = Bo(d2) + A2, o2.rotationX = Bo(k2) + A2, o2.rotationY = Bo(h2) + A2, o2.skewX = a2 + A2, o2.skewY = u2 + A2, o2.transformPerspective = p2 + N2, (o2.zOrigin = parseFloat(D2.split(" ")[2]) || !e2 && o2.zOrigin || 0) && (E2[Hn] = di(D2)), o2.xOffset = o2.yOffset = 0, o2.force3D = $e.force3D, o2.renderTransform = o2.svg ? li : dn ? ci : hi, o2.uncache = 0, o2;
}, di = function(t19) {
  return (t19 = t19.split(" "))[0] + " " + t19[1];
}, ki = function(t19, e2, o2) {
  var r2 = br(e2);
  return Bo(parseFloat(e2) + parseFloat(Yn(t19, "x", o2 + "px", r2))) + r2;
}, hi = function(t19, e2) {
  e2.z = "0px", e2.rotationY = e2.rotationX = "0deg", e2.force3D = 0, ci(t19, e2);
}, ai = "0deg", ui = "0px", pi = ") ", ci = function(t19, e2) {
  var o2 = e2 || this, r2 = o2.xPercent, L2 = o2.yPercent, n2 = o2.x, i2 = o2.y, s2 = o2.z, d2 = o2.rotation, k2 = o2.rotationY, h2 = o2.rotationX, a2 = o2.skewX, u2 = o2.skewY, p2 = o2.scaleX, c2 = o2.scaleY, l2 = o2.transformPerspective, w2 = o2.force3D, M2 = o2.target, f2 = o2.zOrigin, W2 = "", j2 = "auto" === w2 && t19 && 1 !== t19 || true === w2;
  if (f2 && (h2 !== ai || k2 !== ai)) {
    var m2, v2 = parseFloat(k2) * an, g2 = Math.sin(v2), _2 = Math.cos(v2);
    v2 = parseFloat(h2) * an, m2 = Math.cos(v2), n2 = ki(M2, n2, g2 * m2 * -f2), i2 = ki(M2, i2, -Math.sin(v2) * -f2), s2 = ki(M2, s2, _2 * m2 * -f2 + f2);
  }
  l2 !== ui && (W2 += "perspective(" + l2 + pi), (r2 || L2) && (W2 += "translate(" + r2 + "%, " + L2 + "%) "), (j2 || n2 !== ui || i2 !== ui || s2 !== ui) && (W2 += s2 !== ui || j2 ? "translate3d(" + n2 + ", " + i2 + ", " + s2 + ") " : "translate(" + n2 + ", " + i2 + pi), d2 !== ai && (W2 += "rotate(" + d2 + pi), k2 !== ai && (W2 += "rotateY(" + k2 + pi), h2 !== ai && (W2 += "rotateX(" + h2 + pi), a2 === ai && u2 === ai || (W2 += "skew(" + a2 + ", " + u2 + pi), 1 === p2 && 1 === c2 || (W2 += "scale(" + p2 + ", " + c2 + pi), M2.style[Vn] = W2 || "translate(0, 0)";
}, li = function(t19, e2) {
  var o2, r2, L2, n2, i2, s2 = e2 || this, d2 = s2.xPercent, k2 = s2.yPercent, h2 = s2.x, a2 = s2.y, u2 = s2.rotation, p2 = s2.skewX, c2 = s2.skewY, l2 = s2.scaleX, w2 = s2.scaleY, M2 = s2.target, f2 = s2.xOrigin, W2 = s2.yOrigin, j2 = s2.xOffset, m2 = s2.yOffset, v2 = s2.forceCSS, g2 = parseFloat(h2), _2 = parseFloat(a2);
  u2 = parseFloat(u2), p2 = parseFloat(p2), (c2 = parseFloat(c2)) && (p2 += c2 = parseFloat(c2), u2 += c2), u2 || p2 ? (u2 *= an, p2 *= an, o2 = Math.cos(u2) * l2, r2 = Math.sin(u2) * l2, L2 = Math.sin(u2 - p2) * -w2, n2 = Math.cos(u2 - p2) * w2, p2 && (c2 *= an, i2 = Math.tan(p2 - c2), L2 *= i2 = Math.sqrt(1 + i2 * i2), n2 *= i2, c2 && (i2 = Math.tan(c2), o2 *= i2 = Math.sqrt(1 + i2 * i2), r2 *= i2)), o2 = Bo(o2), r2 = Bo(r2), L2 = Bo(L2), n2 = Bo(n2)) : (o2 = l2, n2 = w2, r2 = L2 = 0), (g2 && !~(h2 + "").indexOf("px") || _2 && !~(a2 + "").indexOf("px")) && (g2 = Yn(M2, "x", h2, "px"), _2 = Yn(M2, "y", a2, "px")), (f2 || W2 || j2 || m2) && (g2 = Bo(g2 + f2 - (f2 * o2 + W2 * L2) + j2), _2 = Bo(_2 + W2 - (f2 * r2 + W2 * n2) + m2)), (d2 || k2) && (i2 = M2.getBBox(), g2 = Bo(g2 + d2 / 100 * i2.width), _2 = Bo(_2 + k2 / 100 * i2.height)), i2 = "matrix(" + o2 + "," + r2 + "," + L2 + "," + n2 + "," + g2 + "," + _2 + ")", M2.setAttribute("transform", i2), v2 && (M2.style[Vn] = i2);
}, wi = function(t19, e2, o2, r2, L2) {
  var n2, i2, s2 = 360, d2 = ro(L2), k2 = parseFloat(L2) * (d2 && ~L2.indexOf("rad") ? hn : 1) - r2, h2 = r2 + k2 + "deg";
  return d2 && ("short" === (n2 = L2.split("_")[1]) && (k2 %= s2) !== k2 % 180 && (k2 += k2 < 0 ? s2 : -360), "cw" === n2 && k2 < 0 ? k2 = (k2 + 36e9) % s2 - ~~(k2 / s2) * s2 : "ccw" === n2 && k2 > 0 && (k2 = (k2 - 36e9) % s2 - ~~(k2 / s2) * s2)), t19._pt = i2 = new DL(t19._pt, e2, o2, r2, k2, fn), i2.e = h2, i2.u = "deg", t19._props.push(o2), i2;
}, Mi = function(t19, e2) {
  for (var o2 in e2) t19[o2] = e2[o2];
  return t19;
}, fi = function(t19, e2, o2) {
  var r2, L2, n2, i2, s2, d2, k2, h2 = Mi({}, o2._gsap), a2 = o2.style;
  for (L2 in h2.svg ? (n2 = o2.getAttribute("transform"), o2.setAttribute("transform", ""), a2[Vn] = e2, r2 = si(o2, 1), In(o2, Vn), o2.setAttribute("transform", n2)) : (n2 = getComputedStyle(o2)[Vn], a2[Vn] = e2, r2 = si(o2, 1), a2[Vn] = n2), kn) (n2 = h2[L2]) !== (i2 = r2[L2]) && "perspective,force3D,transformOrigin,svgOrigin".indexOf(L2) < 0 && (s2 = br(n2) !== (k2 = br(i2)) ? Yn(o2, L2, n2, k2) : parseFloat(n2), d2 = parseFloat(i2), t19._pt = new DL(t19._pt, r2, L2, s2, d2 - s2, Mn), t19._pt.u = k2 || 0, t19._props.push(L2));
  Mi(r2, h2);
};
zo("padding,margin,Width,Radius", function(t19, e2) {
  var o2 = "Top", r2 = "Right", L2 = "Bottom", n2 = "Left", i2 = (e2 < 3 ? [o2, r2, L2, n2] : [o2 + n2, o2 + r2, L2 + r2, L2 + n2]).map(function(o3) {
    return e2 < 2 ? t19 + o3 : "border" + o3 + t19;
  });
  ti[e2 > 1 ? "border" + t19 : t19] = function(t20, e3, o3, r3, L3) {
    var n3, s2;
    if (arguments.length < 4) return n3 = i2.map(function(e4) {
      return Xn(t20, e4, o3);
    }), 5 === (s2 = n3.join(" ")).split(n3[0]).length ? n3[0] : s2;
    n3 = (r3 + "").split(" "), s2 = {}, i2.forEach(function(t21, e4) {
      return s2[t21] = n3[e4] = n3[e4] || n3[(e4 - 1) / 2 | 0];
    }), t20.init(e3, s2, L3);
  };
});
var Wi, ji, mi, vi = { name: "css", register: Rn, targetTest: function(t19) {
  return t19.style && t19.nodeType;
}, init: function(t19, e2, o2, r2, L2) {
  var n2, i2, s2, d2, k2, h2, a2, u2, p2, c2, l2, w2, M2, f2, W2, j2, m2 = this._props, v2 = t19.style, g2 = o2.vars.startAt;
  for (a2 in rn || Rn(), this.styles = this.styles || Zn(t19), j2 = this.styles.props, this.tween = o2, e2) if ("autoRound" !== a2 && (i2 = e2[a2], !Zo[a2] || !jL(a2, e2, o2, r2, t19, L2))) {
    if (k2 = typeof i2, h2 = ti[a2], "function" === k2 && (k2 = typeof (i2 = i2.call(o2, r2, t19, L2))), "string" === k2 && ~i2.indexOf("random(") && (i2 = Ar(i2)), h2) h2(this, t19, a2, i2, o2) && (W2 = 1);
    else if ("--" === a2.substr(0, 2)) n2 = (getComputedStyle(t19).getPropertyValue(a2) + "").trim(), i2 += "", Kr.lastIndex = 0, Kr.test(n2) || (u2 = br(n2), p2 = br(i2)), p2 ? u2 !== p2 && (n2 = Yn(t19, a2, n2, p2) + p2) : u2 && (i2 += u2), this.add(v2, "setProperty", n2, i2, r2, L2, 0, 0, a2), m2.push(a2), j2.push(a2, 0, v2[a2]);
    else if ("undefined" !== k2) {
      if (g2 && a2 in g2 ? (n2 = "function" == typeof g2[a2] ? g2[a2].call(o2, r2, t19, L2) : g2[a2], ro(n2) && ~n2.indexOf("random(") && (n2 = Ar(n2)), br(n2 + "") || "auto" === n2 || (n2 += $e.units[a2] || br(Xn(t19, a2)) || ""), "=" === (n2 + "").charAt(1) && (n2 = Xn(t19, a2))) : n2 = Xn(t19, a2), d2 = parseFloat(n2), (c2 = "string" === k2 && "=" === i2.charAt(1) && i2.substr(0, 2)) && (i2 = i2.substr(2)), s2 = parseFloat(i2), a2 in wn && ("autoAlpha" === a2 && (1 === d2 && "hidden" === Xn(t19, "visibility") && s2 && (d2 = 0), j2.push("visibility", 0, v2.visibility), Fn(this, v2, "visibility", d2 ? "inherit" : "hidden", s2 ? "inherit" : "hidden", !s2)), "scale" !== a2 && "transform" !== a2 && ~(a2 = wn[a2]).indexOf(",") && (a2 = a2.split(",")[0])), l2 = a2 in kn) if (this.styles.save(a2), w2 || ((M2 = t19._gsap).renderTransform && !e2.parseTransform || si(t19, e2.parseTransform), f2 = false !== e2.smoothOrigin && M2.smooth, (w2 = this._pt = new DL(this._pt, v2, Vn, 0, 1, M2.renderTransform, M2, 0, -1)).dep = 1), "scale" === a2) this._pt = new DL(this._pt, M2, "scaleY", M2.scaleY, (c2 ? Fo(M2.scaleY, c2 + s2) : s2) - M2.scaleY || 0, Mn), this._pt.u = 0, m2.push("scaleY", a2), a2 += "X";
      else {
        if ("transformOrigin" === a2) {
          j2.push(Hn, 0, v2[Hn]), i2 = Jn(i2), M2.svg ? ii(t19, i2, 0, f2, 0, this) : ((p2 = parseFloat(i2.split(" ")[2]) || 0) !== M2.zOrigin && Fn(this, M2, "zOrigin", M2.zOrigin, p2), Fn(this, v2, a2, di(n2), di(i2)));
          continue;
        }
        if ("svgOrigin" === a2) {
          ii(t19, i2, 1, f2, 0, this);
          continue;
        }
        if (a2 in oi) {
          wi(this, M2, a2, d2, c2 ? Fo(d2, c2 + i2) : i2);
          continue;
        }
        if ("smoothOrigin" === a2) {
          Fn(this, M2, "smooth", M2.smooth, i2);
          continue;
        }
        if ("force3D" === a2) {
          M2[a2] = i2;
          continue;
        }
        if ("transform" === a2) {
          fi(this, i2, t19);
          continue;
        }
      }
      else a2 in v2 || (a2 = An(a2) || a2);
      if (l2 || (s2 || 0 === s2) && (d2 || 0 === d2) && !ln.test(i2) && a2 in v2) s2 || (s2 = 0), (u2 = (n2 + "").substr((d2 + "").length)) !== (p2 = br(i2) || (a2 in $e.units ? $e.units[a2] : u2)) && (d2 = Yn(t19, a2, n2, p2)), this._pt = new DL(this._pt, l2 ? M2 : v2, a2, d2, (c2 ? Fo(d2, c2 + s2) : s2) - d2, l2 || "px" !== p2 && "zIndex" !== a2 || false === e2.autoRound ? Mn : jn), this._pt.u = p2 || 0, u2 !== p2 && "%" !== p2 && (this._pt.b = n2, this._pt.r = Wn);
      else if (a2 in v2) Gn.call(this, t19, a2, n2, c2 ? c2 + i2 : i2);
      else if (a2 in t19) this.add(t19, a2, n2 || t19[a2], c2 ? c2 + i2 : i2, r2, L2);
      else if ("parseTransform" !== a2) {
        _o(a2, i2);
        continue;
      }
      l2 || (a2 in v2 ? j2.push(a2, 0, v2[a2]) : "function" == typeof t19[a2] ? j2.push(a2, 2, t19[a2]()) : j2.push(a2, 1, n2 || t19[a2])), m2.push(a2);
    }
  }
  W2 && RL(this);
}, render: function(t19, e2) {
  if (e2.tween._time || !sn()) for (var o2 = e2._pt; o2; ) o2.r(t19, o2.d), o2 = o2._next;
  else e2.styles.revert();
}, get: Xn, aliases: wn, getSetter: function(t19, e2, o2) {
  var r2 = wn[e2];
  return r2 && r2.indexOf(",") < 0 && (e2 = r2), e2 in kn && e2 !== Hn && (t19._gsap.x || Xn(t19, "x")) ? o2 && nn === o2 ? "scale" === e2 ? bn : yn : (nn = o2 || {}) && ("scale" === e2 ? Cn : xn) : t19.style && !io(t19.style[e2]) ? gn : ~e2.indexOf("-") ? _n : TL(t19, e2);
}, core: { _removeProperty: In, _getMatrix: ni } };
QL.utils.checkPrefix = An, QL.core.getStyleSaver = Zn, mi = zo((Wi = "x,y,z,scale,scaleX,scaleY,xPercent,yPercent") + "," + (ji = "rotation,rotationX,rotationY,skewX,skewY") + ",transform,transformOrigin,svgOrigin,force3D,smoothOrigin,transformPerspective", function(t19) {
  kn[t19] = 1;
}), zo(ji, function(t19) {
  $e.units[t19] = "deg", oi[t19] = 1;
}), wn[mi[13]] = Wi + "," + ji, zo("0:translateX,1:translateY,2:translateZ,8:rotate,8:rotationZ,8:rotateZ,9:rotateX,10:rotateY", function(t19) {
  var e2 = t19.split(":");
  wn[e2[1]] = mi[e2[0]];
}), zo("x,y,z,top,right,bottom,left,width,height,fontSize,padding,margin,perspective", function(t19) {
  $e.units[t19] = "px";
}), QL.registerPlugin(vi);
var gi = QL.registerPlugin(vi) || QL;
gi.core.Tween;
/*!
 * @gsap/react 2.1.2
 * https://gsap.com
 *
 * Copyright 2008-2025, GreenSock. All rights reserved.
 * Subject to the terms at https://gsap.com/standard-license or for
 * Club GSAP members, the agreement issued with that membership.
 * @author: Jack Doyle, jack@greensock.com
*/
let _i = "undefined" != typeof document ? kt : dt, yi = (t19) => t19 && !Array.isArray(t19) && "object" == typeof t19, bi = [], Ci = {}, xi = gi;
const Vi = (t19, e2 = bi) => {
  let o2 = Ci;
  yi(t19) ? (o2 = t19, t19 = null, e2 = "dependencies" in o2 ? o2.dependencies : bi) : yi(e2) && (o2 = e2, e2 = "dependencies" in o2 ? o2.dependencies : bi), t19 && "function" != typeof t19 && console.warn("First parameter must be a function or config object");
  const { scope: r2, revertOnUpdate: L2 } = o2, n2 = ht(false), i2 = ht(xi.context(() => {
  }, r2)), s2 = ht((t20) => i2.current.add(null, t20)), d2 = e2 && e2.length && !L2;
  return d2 && _i(() => (n2.current = true, () => i2.current.revert()), bi), _i(() => {
    if (t19 && i2.current.add(t19, r2), !d2 || !n2.current) return () => i2.current.revert();
  }, e2), { context: i2.current, contextSafe: s2.current };
};
function Hi(t19) {
  const [e2, o2] = it(() => window.matchMedia(t19).matches);
  return dt(() => {
    const e3 = window.matchMedia(t19);
    function r2(t20) {
      o2(t20.matches);
    }
    return e3.addEventListener("change", r2), () => {
      e3.removeEventListener("change", r2);
    };
  }, [t19]), e2;
}
Vi.register = (t19) => {
  xi = t19;
}, Vi.headless = true;
const Ti = /* @__PURE__ */ new WeakMap(), Oi = {};
function Si(t19) {
  !function() {
    const t20 = Zi();
    t20 && Ti.delete(Oi);
  }(), Ti.set(Oi, t19);
}
function Zi() {
  return Ti.get(Oi);
}
const Ei = /* @__PURE__ */ new WeakMap(), Pi = {};
function Ni() {
  return Ei.get(Pi);
}
function Ai(t19 = () => {
}, e2, o2 = () => {
}) {
  const r2 = Hi("(min-width: 1025px)"), L2 = Hi("(min-height: 695px)"), n2 = Hi("(min-height: 2200px) and (min-width: 1500px), (min-width: 3000px)"), i2 = r2 && L2 || n2;
  return Vi(() => (t19 && requestAnimationFrame(() => {
    const e3 = { scroller: i2 ? "#scroll-wrapper" : window };
    i2 && (e3.containerAnimation = Zi()), t19(e3);
  }), () => {
    o2 && o2();
  }), { dependencies: [r2, L2, n2], revertOnUpdate: true, ...e2 }), { isLargeScreen: n2, width: r2, height: L2, scrollTo: function(t20, e3) {
    var _a3, _b;
    i2 ? (_a3 = Ni()) == null ? void 0 : _a3.scrollIntoView(document.getElementById(t20), e3) : (_b = document.getElementById(t20)) == null ? void 0 : _b.scrollIntoView({ behavior: "smooth" });
  } };
}
function Ri() {
  const { scrollTo: t19 } = Ai();
  return F("div", { className: "center-flex", children: F("div", { className: "scroll-down center-gr", onClick: () => {
    t19("home-scroll");
  }, children: F("img", { className: "icon", src: "data:image/svg+xml,%3csvg%20width='10'%20height='16'%20viewBox='0%200%2010%2016'%20fill='none'%20xmlns='http://www.w3.org/2000/svg'%3e%3cpath%20d='M8.29411%2010.29L6.00411%2012.59V1C6.00411%200.734784%205.89876%200.48043%205.71122%200.292893C5.52368%200.105357%205.26933%200%205.00411%200C4.7389%200%204.48454%200.105357%204.29701%200.292893C4.10947%200.48043%204.00411%200.734784%204.00411%201V12.59L1.71411%2010.29C1.52581%2010.1017%201.27041%209.99591%201.00411%209.99591C0.737811%209.99591%200.482416%2010.1017%200.294113%2010.29C0.105809%2010.4783%202.09808e-05%2010.7337%202.09808e-05%2011C2.09808e-05%2011.2663%200.105809%2011.5217%200.294113%2011.71L4.29411%2015.71C4.38922%2015.801%204.50136%2015.8724%204.62411%2015.92C4.74381%2015.9729%204.87324%2016.0002%205.00411%2016.0002C5.13498%2016.0002%205.26441%2015.9729%205.38411%2015.92C5.50686%2015.8724%205.61901%2015.801%205.71411%2015.71L9.71411%2011.71C9.90242%2011.5217%2010.0082%2011.2663%2010.0082%2011C10.0082%2010.7337%209.90242%2010.4783%209.71411%2010.29C9.62087%2010.1968%209.51018%2010.1228%209.38836%2010.0723C9.26654%2010.0219%209.13597%209.99591%209.00411%209.99591C8.73781%209.99591%208.48242%2010.1017%208.29411%2010.29Z'%20fill='white'%20fill-opacity='0.5'/%3e%3c/svg%3e", alt: "arrow" }) }) });
}
function Di() {
  const { width: t19, height: e2 } = Ai();
  return F("section", { id: "home", children: [t19 && e2 && F(Se, {}), F("div", { className: "container", children: [F(Ri, {}), F("div", { className: "text-wrapper", children: F("div", { className: "row center-y gap-50", children: [F("h1", { className: "capitalize", children: ["from idea", F("br", {}), " to life"] }), F("p", { className: "to-small text-white capitalize", children: ["Arhitecture modern technology", F("br", {}), " MasBo is an architectural group working in the field of architecture and", F("br", {}), " urban planning. For our customers, we are known as a reliable partner", F("br", {}), " with high standards of quality and responsibility."] })] }) })] })] });
}
function qi() {
  const { width: t19, height: e2, isLargeScreen: o2 } = Ai((r2) => {
    (t19 && e2 || o2) && (gi.set(".scroll-indicator div", { width: "0%" }), gi.to(".scroll-indicator div", { ease: "power1.out", width: "100%", scrollTrigger: { scroller: r2.scroller, trigger: "#home-scroll", start: "top top", end: () => "+=" + window.innerHeight, scrub: true } }));
  });
  return t19 && e2 && Gt(F("div", { className: "scroll-indicator", children: F("div", {}) }), document.getElementById("modal-root"));
}
function zi({ arrow: t19 = true, ...e2 }) {
  return F("div", { className: "main-button", children: F("button", { className: "font-bold text-white", ...e2, children: F("div", { className: "row gap-10 center-y", children: [e2.children, t19 && F("img", { alt: "arrow", className: "icon", src: "data:image/svg+xml,%3csvg%20width='7'%20height='11'%20viewBox='0%200%207%2011'%20fill='none'%20xmlns='http://www.w3.org/2000/svg'%3e%3cpath%20d='M1.7103%2010.487L5.9503%206.19701C6.04402%206.10405%206.11842%205.99344%206.16919%205.87159C6.21996%205.74973%206.24609%205.61902%206.24609%205.48701C6.24609%205.355%206.21996%205.22429%206.16919%205.10243C6.11842%204.98057%206.04402%204.86997%205.9503%204.77701L1.7103%200.537009C1.61733%200.443281%201.50673%200.368886%201.38487%200.318117C1.26301%200.267349%201.13231%200.241211%201.0003%200.241211C0.868284%200.241211%200.737578%200.267349%200.615719%200.318117C0.49386%200.368886%200.383259%200.443281%200.290296%200.537009C0.104044%200.724371%20-0.000496897%200.977823%20-0.000496908%201.24201C-0.00049692%201.50619%200.104044%201.75965%200.290296%201.94701L3.8303%205.48701L0.290295%209.02701C0.105551%209.21327%200.00140007%209.46467%200.000295224%209.72701C-0.000465813%209.85862%200.0247589%209.98908%200.0745235%2010.1109C0.124288%2010.2328%200.197614%2010.3436%200.290295%2010.437C0.379913%2010.5341%200.487879%2010.6124%200.607955%2010.6675C0.72803%2010.7227%200.857835%2010.7534%200.989871%2010.7581C1.12191%2010.7627%201.25355%2010.7412%201.37721%2010.6946C1.50086%2010.6481%201.61407%2010.5775%201.7103%2010.487Z'%20fill='white'/%3e%3c/svg%3e" })] }) }) });
}
const Bi = "/masbo_website/assets/img-2-BiZDErvq.jpg";
var Ii = "undefined" != typeof globalThis ? globalThis : "undefined" != typeof window ? window : "undefined" != typeof global ? global : "undefined" != typeof self ? self : {};
function Fi(t19) {
  if (t19.__esModule) return t19;
  var e2 = t19.default;
  if ("function" == typeof e2) {
    var o2 = function t20() {
      return this instanceof t20 ? Reflect.construct(e2, arguments, this.constructor) : e2.apply(this, arguments);
    };
    o2.prototype = e2.prototype;
  } else o2 = {};
  return Object.defineProperty(o2, "__esModule", { value: true }), Object.keys(t19).forEach(function(e3) {
    var r2 = Object.getOwnPropertyDescriptor(t19, e3);
    Object.defineProperty(o2, e3, r2.get ? r2 : { enumerable: true, get: function() {
      return t19[e3];
    } });
  }), o2;
}
var Ui = { exports: {} };
const $i = Fi(Ce);
var Yi;
var Xi = (Yi || (Yi = 1, (() => {
  var t19 = { 296: (t20, e3, o3) => {
    var r3 = /^\s+|\s+$/g, L2 = /^[-+]0x[0-9a-f]+$/i, n2 = /^0b[01]+$/i, i2 = /^0o[0-7]+$/i, s2 = parseInt, d2 = "object" == typeof o3.g && o3.g && o3.g.Object === Object && o3.g, k2 = "object" == typeof self && self && self.Object === Object && self, h2 = d2 || k2 || Function("return this")(), a2 = Object.prototype.toString, u2 = Math.max, p2 = Math.min, c2 = function() {
      return h2.Date.now();
    };
    function l2(t21) {
      var e4 = typeof t21;
      return !!t21 && ("object" == e4 || "function" == e4);
    }
    function w2(t21) {
      if ("number" == typeof t21) return t21;
      if (function(t22) {
        return "symbol" == typeof t22 || /* @__PURE__ */ function(t23) {
          return !!t23 && "object" == typeof t23;
        }(t22) && "[object Symbol]" == a2.call(t22);
      }(t21)) return NaN;
      if (l2(t21)) {
        var e4 = "function" == typeof t21.valueOf ? t21.valueOf() : t21;
        t21 = l2(e4) ? e4 + "" : e4;
      }
      if ("string" != typeof t21) return 0 === t21 ? t21 : +t21;
      t21 = t21.replace(r3, "");
      var o4 = n2.test(t21);
      return o4 || i2.test(t21) ? s2(t21.slice(2), o4 ? 2 : 8) : L2.test(t21) ? NaN : +t21;
    }
    t20.exports = function(t21, e4, o4) {
      var r4, L3, n3, i3, s3, d3, k3 = 0, h3 = false, a3 = false, M2 = true;
      if ("function" != typeof t21) throw new TypeError("Expected a function");
      function f2(e5) {
        var o5 = r4, n4 = L3;
        return r4 = L3 = void 0, k3 = e5, i3 = t21.apply(n4, o5);
      }
      function W2(t22) {
        var o5 = t22 - d3;
        return void 0 === d3 || o5 >= e4 || o5 < 0 || a3 && t22 - k3 >= n3;
      }
      function j2() {
        var t22 = c2();
        if (W2(t22)) return m2(t22);
        s3 = setTimeout(j2, function(t23) {
          var o5 = e4 - (t23 - d3);
          return a3 ? p2(o5, n3 - (t23 - k3)) : o5;
        }(t22));
      }
      function m2(t22) {
        return s3 = void 0, M2 && r4 ? f2(t22) : (r4 = L3 = void 0, i3);
      }
      function v2() {
        var t22 = c2(), o5 = W2(t22);
        if (r4 = arguments, L3 = this, d3 = t22, o5) {
          if (void 0 === s3) return function(t23) {
            return k3 = t23, s3 = setTimeout(j2, e4), h3 ? f2(t23) : i3;
          }(d3);
          if (a3) return s3 = setTimeout(j2, e4), f2(d3);
        }
        return void 0 === s3 && (s3 = setTimeout(j2, e4)), i3;
      }
      return e4 = w2(e4) || 0, l2(o4) && (h3 = !!o4.leading, n3 = (a3 = "maxWait" in o4) ? u2(w2(o4.maxWait) || 0, e4) : n3, M2 = "trailing" in o4 ? !!o4.trailing : M2), v2.cancel = function() {
        void 0 !== s3 && clearTimeout(s3), k3 = 0, r4 = d3 = L3 = s3 = void 0;
      }, v2.flush = function() {
        return void 0 === s3 ? i3 : m2(c2());
      }, v2;
    };
  }, 96: (t20, e3, o3) => {
    var r3 = "Expected a function", L2 = /^\s+|\s+$/g, n2 = /^[-+]0x[0-9a-f]+$/i, i2 = /^0b[01]+$/i, s2 = /^0o[0-7]+$/i, d2 = parseInt, k2 = "object" == typeof o3.g && o3.g && o3.g.Object === Object && o3.g, h2 = "object" == typeof self && self && self.Object === Object && self, a2 = k2 || h2 || Function("return this")(), u2 = Object.prototype.toString, p2 = Math.max, c2 = Math.min, l2 = function() {
      return a2.Date.now();
    };
    function w2(t21) {
      var e4 = typeof t21;
      return !!t21 && ("object" == e4 || "function" == e4);
    }
    function M2(t21) {
      if ("number" == typeof t21) return t21;
      if (function(t22) {
        return "symbol" == typeof t22 || /* @__PURE__ */ function(t23) {
          return !!t23 && "object" == typeof t23;
        }(t22) && "[object Symbol]" == u2.call(t22);
      }(t21)) return NaN;
      if (w2(t21)) {
        var e4 = "function" == typeof t21.valueOf ? t21.valueOf() : t21;
        t21 = w2(e4) ? e4 + "" : e4;
      }
      if ("string" != typeof t21) return 0 === t21 ? t21 : +t21;
      t21 = t21.replace(L2, "");
      var o4 = i2.test(t21);
      return o4 || s2.test(t21) ? d2(t21.slice(2), o4 ? 2 : 8) : n2.test(t21) ? NaN : +t21;
    }
    t20.exports = function(t21, e4, o4) {
      var L3 = true, n3 = true;
      if ("function" != typeof t21) throw new TypeError(r3);
      return w2(o4) && (L3 = "leading" in o4 ? !!o4.leading : L3, n3 = "trailing" in o4 ? !!o4.trailing : n3), function(t22, e5, o5) {
        var L4, n4, i3, s3, d3, k3, h3 = 0, a3 = false, u3 = false, f2 = true;
        if ("function" != typeof t22) throw new TypeError(r3);
        function W2(e6) {
          var o6 = L4, r4 = n4;
          return L4 = n4 = void 0, h3 = e6, s3 = t22.apply(r4, o6);
        }
        function j2(t23) {
          var o6 = t23 - k3;
          return void 0 === k3 || o6 >= e5 || o6 < 0 || u3 && t23 - h3 >= i3;
        }
        function m2() {
          var t23 = l2();
          if (j2(t23)) return v2(t23);
          d3 = setTimeout(m2, function(t24) {
            var o6 = e5 - (t24 - k3);
            return u3 ? c2(o6, i3 - (t24 - h3)) : o6;
          }(t23));
        }
        function v2(t23) {
          return d3 = void 0, f2 && L4 ? W2(t23) : (L4 = n4 = void 0, s3);
        }
        function g2() {
          var t23 = l2(), o6 = j2(t23);
          if (L4 = arguments, n4 = this, k3 = t23, o6) {
            if (void 0 === d3) return function(t24) {
              return h3 = t24, d3 = setTimeout(m2, e5), a3 ? W2(t24) : s3;
            }(k3);
            if (u3) return d3 = setTimeout(m2, e5), W2(k3);
          }
          return void 0 === d3 && (d3 = setTimeout(m2, e5)), s3;
        }
        return e5 = M2(e5) || 0, w2(o5) && (a3 = !!o5.leading, i3 = (u3 = "maxWait" in o5) ? p2(M2(o5.maxWait) || 0, e5) : i3, f2 = "trailing" in o5 ? !!o5.trailing : f2), g2.cancel = function() {
          void 0 !== d3 && clearTimeout(d3), h3 = 0, L4 = k3 = n4 = d3 = void 0;
        }, g2.flush = function() {
          return void 0 === d3 ? s3 : v2(l2());
        }, g2;
      }(t21, e4, { leading: L3, maxWait: e4, trailing: n3 });
    };
  }, 703: (t20, e3, o3) => {
    var r3 = o3(414);
    function L2() {
    }
    function n2() {
    }
    n2.resetWarningCache = L2, t20.exports = function() {
      function t21(t22, e5, o5, L3, n3, i2) {
        if (i2 !== r3) {
          var s2 = new Error("Calling PropTypes validators directly is not supported by the `prop-types` package. Use PropTypes.checkPropTypes() to call them. Read more at http://fb.me/use-check-prop-types");
          throw s2.name = "Invariant Violation", s2;
        }
      }
      function e4() {
        return t21;
      }
      t21.isRequired = t21;
      var o4 = { array: t21, bigint: t21, bool: t21, func: t21, number: t21, object: t21, string: t21, symbol: t21, any: t21, arrayOf: e4, element: t21, elementType: t21, instanceOf: e4, node: t21, objectOf: e4, oneOf: e4, oneOfType: e4, shape: e4, exact: e4, checkPropTypes: n2, resetWarningCache: L2 };
      return o4.PropTypes = o4, o4;
    };
  }, 697: (t20, e3, o3) => {
    t20.exports = o3(703)();
  }, 414: (t20) => {
    t20.exports = "SECRET_DO_NOT_PASS_THIS_OR_YOU_WILL_BE_FIRED";
  } }, e2 = {};
  function o2(r3) {
    var L2 = e2[r3];
    if (void 0 !== L2) return L2.exports;
    var n2 = e2[r3] = { exports: {} };
    return t19[r3](n2, n2.exports, o2), n2.exports;
  }
  o2.n = (t20) => {
    var e3 = t20 && t20.__esModule ? () => t20.default : () => t20;
    return o2.d(e3, { a: e3 }), e3;
  }, o2.d = (t20, e3) => {
    for (var r3 in e3) o2.o(e3, r3) && !o2.o(t20, r3) && Object.defineProperty(t20, r3, { enumerable: true, get: e3[r3] });
  }, o2.g = function() {
    if ("object" == typeof globalThis) return globalThis;
    try {
      return this || new Function("return this")();
    } catch (t20) {
      if ("object" == typeof window) return window;
    }
  }(), o2.o = (t20, e3) => Object.prototype.hasOwnProperty.call(t20, e3), o2.r = (t20) => {
    "undefined" != typeof Symbol && Symbol.toStringTag && Object.defineProperty(t20, Symbol.toStringTag, { value: "Module" }), Object.defineProperty(t20, "__esModule", { value: true });
  };
  var r2 = {};
  (() => {
    o2.r(r2), o2.d(r2, { LazyLoadComponent: () => B2, LazyLoadImage: () => tt2, trackWindowScroll: () => O2 });
    const t20 = $i;
    var e3 = o2.n(t20), L2 = o2(697);
    function n2() {
      return "undefined" != typeof window && "IntersectionObserver" in window && "isIntersecting" in window.IntersectionObserverEntry.prototype;
    }
    function i2(t21) {
      return i2 = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function(t22) {
        return typeof t22;
      } : function(t22) {
        return t22 && "function" == typeof Symbol && t22.constructor === Symbol && t22 !== Symbol.prototype ? "symbol" : typeof t22;
      }, i2(t21);
    }
    function s2(t21, e4) {
      var o3 = Object.keys(t21);
      if (Object.getOwnPropertySymbols) {
        var r3 = Object.getOwnPropertySymbols(t21);
        e4 && (r3 = r3.filter(function(e5) {
          return Object.getOwnPropertyDescriptor(t21, e5).enumerable;
        })), o3.push.apply(o3, r3);
      }
      return o3;
    }
    function d2(t21, e4, o3) {
      return (e4 = h2(e4)) in t21 ? Object.defineProperty(t21, e4, { value: o3, enumerable: true, configurable: true, writable: true }) : t21[e4] = o3, t21;
    }
    function k2(t21, e4) {
      for (var o3 = 0; o3 < e4.length; o3++) {
        var r3 = e4[o3];
        r3.enumerable = r3.enumerable || false, r3.configurable = true, "value" in r3 && (r3.writable = true), Object.defineProperty(t21, h2(r3.key), r3);
      }
    }
    function h2(t21) {
      var e4 = function(t22) {
        if ("object" !== i2(t22) || null === t22) return t22;
        var e5 = t22[Symbol.toPrimitive];
        if (void 0 !== e5) {
          var o3 = e5.call(t22, "string");
          if ("object" !== i2(o3)) return o3;
          throw new TypeError("@@toPrimitive must return a primitive value.");
        }
        return String(t22);
      }(t21);
      return "symbol" === i2(e4) ? e4 : String(e4);
    }
    function a2(t21, e4) {
      return a2 = Object.setPrototypeOf ? Object.setPrototypeOf.bind() : function(t22, e5) {
        return t22.__proto__ = e5, t22;
      }, a2(t21, e4);
    }
    function u2(t21) {
      return u2 = Object.setPrototypeOf ? Object.getPrototypeOf.bind() : function(t22) {
        return t22.__proto__ || Object.getPrototypeOf(t22);
      }, u2(t21);
    }
    var p2 = function(t21) {
      t21.forEach(function(t22) {
        t22.isIntersecting && t22.target.onVisible();
      });
    }, c2 = {}, l2 = function(t21) {
      !function(t22, e4) {
        if ("function" != typeof e4 && null !== e4) throw new TypeError("Super expression must either be null or a function");
        t22.prototype = Object.create(e4 && e4.prototype, { constructor: { value: t22, writable: true, configurable: true } }), Object.defineProperty(t22, "prototype", { writable: false }), e4 && a2(t22, e4);
      }(w3, t21);
      var o3, r3, L3, h3, l3 = (L3 = w3, h3 = function() {
        if ("undefined" == typeof Reflect || !Reflect.construct) return false;
        if (Reflect.construct.sham) return false;
        if ("function" == typeof Proxy) return true;
        try {
          return Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function() {
          })), true;
        } catch (t22) {
          return false;
        }
      }(), function() {
        var t22, e4 = u2(L3);
        if (h3) {
          var o4 = u2(this).constructor;
          t22 = Reflect.construct(e4, arguments, o4);
        } else t22 = e4.apply(this, arguments);
        return function(t23, e5) {
          if (e5 && ("object" === i2(e5) || "function" == typeof e5)) return e5;
          if (void 0 !== e5) throw new TypeError("Derived constructors may only return object or undefined");
          return function(t24) {
            if (void 0 === t24) throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
            return t24;
          }(t23);
        }(this, t22);
      });
      function w3(t22) {
        var e4;
        if (function(t23, e5) {
          if (!(t23 instanceof e5)) throw new TypeError("Cannot call a class as a function");
        }(this, w3), (e4 = l3.call(this, t22)).supportsObserver = !t22.scrollPosition && t22.useIntersectionObserver && n2(), e4.supportsObserver) {
          var o4 = t22.threshold;
          e4.observer = function(t23) {
            return c2[t23] = c2[t23] || new IntersectionObserver(p2, { rootMargin: t23 + "px" }), c2[t23];
          }(o4);
        }
        return e4;
      }
      return o3 = w3, r3 = [{ key: "componentDidMount", value: function() {
        this.placeholder && this.observer && (this.placeholder.onVisible = this.props.onVisible, this.observer.observe(this.placeholder)), this.supportsObserver || this.updateVisibility();
      } }, { key: "componentWillUnmount", value: function() {
        this.observer && this.placeholder && this.observer.unobserve(this.placeholder);
      } }, { key: "componentDidUpdate", value: function() {
        this.supportsObserver || this.updateVisibility();
      } }, { key: "getPlaceholderBoundingBox", value: function() {
        var t22 = arguments.length > 0 && void 0 !== arguments[0] ? arguments[0] : this.props.scrollPosition, e4 = this.placeholder.getBoundingClientRect(), o4 = this.placeholder.style, r4 = parseInt(o4.getPropertyValue("margin-left"), 10) || 0, L4 = parseInt(o4.getPropertyValue("margin-top"), 10) || 0;
        return { bottom: t22.y + e4.bottom + L4, left: t22.x + e4.left + r4, right: t22.x + e4.right + r4, top: t22.y + e4.top + L4 };
      } }, { key: "isPlaceholderInViewport", value: function() {
        if ("undefined" == typeof window || !this.placeholder) return false;
        var t22 = this.props, e4 = t22.scrollPosition, o4 = t22.threshold, r4 = this.getPlaceholderBoundingBox(e4), L4 = e4.y + window.innerHeight, n3 = e4.x, i3 = e4.x + window.innerWidth, s3 = e4.y;
        return Boolean(s3 - o4 <= r4.bottom && L4 + o4 >= r4.top && n3 - o4 <= r4.right && i3 + o4 >= r4.left);
      } }, { key: "updateVisibility", value: function() {
        this.isPlaceholderInViewport() && this.props.onVisible();
      } }, { key: "render", value: function() {
        var t22 = this, o4 = this.props, r4 = o4.className, L4 = o4.height, n3 = o4.placeholder, i3 = o4.style, k3 = o4.width;
        if (n3 && "function" != typeof n3.type) return e3().cloneElement(n3, { ref: function(e4) {
          return t22.placeholder = e4;
        } });
        var h4 = function(t23) {
          for (var e4 = 1; e4 < arguments.length; e4++) {
            var o5 = null != arguments[e4] ? arguments[e4] : {};
            e4 % 2 ? s2(Object(o5), true).forEach(function(e5) {
              d2(t23, e5, o5[e5]);
            }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(t23, Object.getOwnPropertyDescriptors(o5)) : s2(Object(o5)).forEach(function(e5) {
              Object.defineProperty(t23, e5, Object.getOwnPropertyDescriptor(o5, e5));
            });
          }
          return t23;
        }({ display: "inline-block" }, i3);
        return void 0 !== k3 && (h4.width = k3), void 0 !== L4 && (h4.height = L4), e3().createElement("span", { className: r4, ref: function(e4) {
          return t22.placeholder = e4;
        }, style: h4 }, n3);
      } }], r3 && k2(o3.prototype, r3), Object.defineProperty(o3, "prototype", { writable: false }), w3;
    }(e3().Component);
    l2.propTypes = { onVisible: L2.PropTypes.func.isRequired, className: L2.PropTypes.string, height: L2.PropTypes.oneOfType([L2.PropTypes.number, L2.PropTypes.string]), placeholder: L2.PropTypes.element, threshold: L2.PropTypes.number, useIntersectionObserver: L2.PropTypes.bool, scrollPosition: L2.PropTypes.shape({ x: L2.PropTypes.number.isRequired, y: L2.PropTypes.number.isRequired }), width: L2.PropTypes.oneOfType([L2.PropTypes.number, L2.PropTypes.string]) }, l2.defaultProps = { className: "", placeholder: null, threshold: 100, useIntersectionObserver: true };
    const w2 = l2;
    var M2 = o2(296), f2 = o2.n(M2), W2 = o2(96), j2 = o2.n(W2), m2 = function(t21) {
      var e4 = getComputedStyle(t21, null);
      return e4.getPropertyValue("overflow") + e4.getPropertyValue("overflow-y") + e4.getPropertyValue("overflow-x");
    };
    const v2 = function(t21) {
      if (!(t21 instanceof HTMLElement)) return window;
      for (var e4 = t21; e4 && e4 instanceof HTMLElement; ) {
        if (/(scroll|auto)/.test(m2(e4))) return e4;
        e4 = e4.parentNode;
      }
      return window;
    };
    function g2(t21) {
      return g2 = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function(t22) {
        return typeof t22;
      } : function(t22) {
        return t22 && "function" == typeof Symbol && t22.constructor === Symbol && t22 !== Symbol.prototype ? "symbol" : typeof t22;
      }, g2(t21);
    }
    var _2 = ["delayMethod", "delayTime"];
    function y2() {
      return y2 = Object.assign ? Object.assign.bind() : function(t21) {
        for (var e4 = 1; e4 < arguments.length; e4++) {
          var o3 = arguments[e4];
          for (var r3 in o3) Object.prototype.hasOwnProperty.call(o3, r3) && (t21[r3] = o3[r3]);
        }
        return t21;
      }, y2.apply(this, arguments);
    }
    function b2(t21, e4) {
      return b2 = Object.setPrototypeOf ? Object.setPrototypeOf.bind() : function(t22, e5) {
        return t22.__proto__ = e5, t22;
      }, b2(t21, e4);
    }
    function C2(t21, e4) {
      if (e4 && ("object" === g2(e4) || "function" == typeof e4)) return e4;
      if (void 0 !== e4) throw new TypeError("Derived constructors may only return object or undefined");
      return x2(t21);
    }
    function x2(t21) {
      if (void 0 === t21) throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
      return t21;
    }
    function V2(t21) {
      return V2 = Object.setPrototypeOf ? Object.getPrototypeOf.bind() : function(t22) {
        return t22.__proto__ || Object.getPrototypeOf(t22);
      }, V2(t21);
    }
    var H2 = function() {
      return "undefined" == typeof window ? 0 : window.scrollX || window.pageXOffset;
    }, T2 = function() {
      return "undefined" == typeof window ? 0 : window.scrollY || window.pageYOffset;
    };
    const O2 = function(t21) {
      var o3 = function(o4) {
        !function(t22, e4) {
          if ("function" != typeof e4 && null !== e4) throw new TypeError("Super expression must either be null or a function");
          t22.prototype = Object.create(e4 && e4.prototype, { constructor: { value: t22, writable: true, configurable: true } }), Object.defineProperty(t22, "prototype", { writable: false }), e4 && b2(t22, e4);
        }(k3, o4);
        var r3, L3, i3, s3, d3 = (i3 = k3, s3 = function() {
          if ("undefined" == typeof Reflect || !Reflect.construct) return false;
          if (Reflect.construct.sham) return false;
          if ("function" == typeof Proxy) return true;
          try {
            return Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function() {
            })), true;
          } catch (t22) {
            return false;
          }
        }(), function() {
          var t22, e4 = V2(i3);
          if (s3) {
            var o5 = V2(this).constructor;
            t22 = Reflect.construct(e4, arguments, o5);
          } else t22 = e4.apply(this, arguments);
          return C2(this, t22);
        });
        function k3(t22) {
          var o5;
          if (function(t23, e4) {
            if (!(t23 instanceof e4)) throw new TypeError("Cannot call a class as a function");
          }(this, k3), (o5 = d3.call(this, t22)).useIntersectionObserver = t22.useIntersectionObserver && n2(), o5.useIntersectionObserver) return C2(o5);
          var r4 = o5.onChangeScroll.bind(x2(o5));
          return "debounce" === t22.delayMethod ? o5.delayedScroll = f2()(r4, t22.delayTime) : "throttle" === t22.delayMethod && (o5.delayedScroll = j2()(r4, t22.delayTime)), o5.state = { scrollPosition: { x: H2(), y: T2() } }, o5.baseComponentRef = e3().createRef(), o5;
        }
        return r3 = k3, (L3 = [{ key: "componentDidMount", value: function() {
          this.addListeners();
        } }, { key: "componentWillUnmount", value: function() {
          this.removeListeners();
        } }, { key: "componentDidUpdate", value: function() {
          "undefined" == typeof window || this.useIntersectionObserver || v2(this.baseComponentRef.current) !== this.scrollElement && (this.removeListeners(), this.addListeners());
        } }, { key: "addListeners", value: function() {
          "undefined" == typeof window || this.useIntersectionObserver || (this.scrollElement = v2(this.baseComponentRef.current), this.scrollElement.addEventListener("scroll", this.delayedScroll, { passive: true }), window.addEventListener("resize", this.delayedScroll, { passive: true }), this.scrollElement !== window && window.addEventListener("scroll", this.delayedScroll, { passive: true }));
        } }, { key: "removeListeners", value: function() {
          "undefined" == typeof window || this.useIntersectionObserver || (this.scrollElement.removeEventListener("scroll", this.delayedScroll), window.removeEventListener("resize", this.delayedScroll), this.scrollElement !== window && window.removeEventListener("scroll", this.delayedScroll));
        } }, { key: "onChangeScroll", value: function() {
          this.useIntersectionObserver || this.setState({ scrollPosition: { x: H2(), y: T2() } });
        } }, { key: "render", value: function() {
          var o5 = this.props, r4 = (o5.delayMethod, o5.delayTime, function(t22, e4) {
            if (null == t22) return {};
            var o6, r5, L5 = function(t23, e5) {
              if (null == t23) return {};
              var o7, r6, L6 = {}, n4 = Object.keys(t23);
              for (r6 = 0; r6 < n4.length; r6++) o7 = n4[r6], e5.indexOf(o7) >= 0 || (L6[o7] = t23[o7]);
              return L6;
            }(t22, e4);
            if (Object.getOwnPropertySymbols) {
              var n3 = Object.getOwnPropertySymbols(t22);
              for (r5 = 0; r5 < n3.length; r5++) o6 = n3[r5], e4.indexOf(o6) >= 0 || Object.prototype.propertyIsEnumerable.call(t22, o6) && (L5[o6] = t22[o6]);
            }
            return L5;
          }(o5, _2)), L4 = this.useIntersectionObserver ? null : this.state.scrollPosition;
          return e3().createElement(t21, y2({ forwardRef: this.baseComponentRef, scrollPosition: L4 }, r4));
        } }]) && function(t22, e4) {
          for (var o5 = 0; o5 < e4.length; o5++) {
            var r4 = e4[o5];
            r4.enumerable = r4.enumerable || false, r4.configurable = true, "value" in r4 && (r4.writable = true), Object.defineProperty(t22, (L4 = function(t23) {
              if ("object" !== g2(t23) || null === t23) return t23;
              var e5 = t23[Symbol.toPrimitive];
              if (void 0 !== e5) {
                var o6 = e5.call(t23, "string");
                if ("object" !== g2(o6)) return o6;
                throw new TypeError("@@toPrimitive must return a primitive value.");
              }
              return String(t23);
            }(r4.key), "symbol" === g2(L4) ? L4 : String(L4)), r4);
          }
          var L4;
        }(r3.prototype, L3), Object.defineProperty(r3, "prototype", { writable: false }), k3;
      }(e3().Component);
      return o3.propTypes = { delayMethod: L2.PropTypes.oneOf(["debounce", "throttle"]), delayTime: L2.PropTypes.number, useIntersectionObserver: L2.PropTypes.bool }, o3.defaultProps = { delayMethod: "throttle", delayTime: 300, useIntersectionObserver: true }, o3;
    };
    function S2(t21) {
      return S2 = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function(t22) {
        return typeof t22;
      } : function(t22) {
        return t22 && "function" == typeof Symbol && t22.constructor === Symbol && t22 !== Symbol.prototype ? "symbol" : typeof t22;
      }, S2(t21);
    }
    function Z2(t21, e4) {
      return Z2 = Object.setPrototypeOf ? Object.setPrototypeOf.bind() : function(t22, e5) {
        return t22.__proto__ = e5, t22;
      }, Z2(t21, e4);
    }
    function E2(t21) {
      return E2 = Object.setPrototypeOf ? Object.getPrototypeOf.bind() : function(t22) {
        return t22.__proto__ || Object.getPrototypeOf(t22);
      }, E2(t21);
    }
    var P2 = function(t21) {
      !function(t22, e4) {
        if ("function" != typeof e4 && null !== e4) throw new TypeError("Super expression must either be null or a function");
        t22.prototype = Object.create(e4 && e4.prototype, { constructor: { value: t22, writable: true, configurable: true } }), Object.defineProperty(t22, "prototype", { writable: false }), e4 && Z2(t22, e4);
      }(s3, t21);
      var o3, r3, L3, n3, i3 = (L3 = s3, n3 = function() {
        if ("undefined" == typeof Reflect || !Reflect.construct) return false;
        if (Reflect.construct.sham) return false;
        if ("function" == typeof Proxy) return true;
        try {
          return Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function() {
          })), true;
        } catch (t22) {
          return false;
        }
      }(), function() {
        var t22, e4 = E2(L3);
        if (n3) {
          var o4 = E2(this).constructor;
          t22 = Reflect.construct(e4, arguments, o4);
        } else t22 = e4.apply(this, arguments);
        return function(t23, e5) {
          if (e5 && ("object" === S2(e5) || "function" == typeof e5)) return e5;
          if (void 0 !== e5) throw new TypeError("Derived constructors may only return object or undefined");
          return function(t24) {
            if (void 0 === t24) throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
            return t24;
          }(t23);
        }(this, t22);
      });
      function s3(t22) {
        return function(t23, e4) {
          if (!(t23 instanceof e4)) throw new TypeError("Cannot call a class as a function");
        }(this, s3), i3.call(this, t22);
      }
      return o3 = s3, (r3 = [{ key: "render", value: function() {
        return e3().createElement(w2, this.props);
      } }]) && function(t22, e4) {
        for (var o4 = 0; o4 < e4.length; o4++) {
          var r4 = e4[o4];
          r4.enumerable = r4.enumerable || false, r4.configurable = true, "value" in r4 && (r4.writable = true), Object.defineProperty(t22, (L4 = function(t23) {
            if ("object" !== S2(t23) || null === t23) return t23;
            var e5 = t23[Symbol.toPrimitive];
            if (void 0 !== e5) {
              var o5 = e5.call(t23, "string");
              if ("object" !== S2(o5)) return o5;
              throw new TypeError("@@toPrimitive must return a primitive value.");
            }
            return String(t23);
          }(r4.key), "symbol" === S2(L4) ? L4 : String(L4)), r4);
        }
        var L4;
      }(o3.prototype, r3), Object.defineProperty(o3, "prototype", { writable: false }), s3;
    }(e3().Component);
    const N2 = O2(P2);
    function A2(t21) {
      return A2 = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function(t22) {
        return typeof t22;
      } : function(t22) {
        return t22 && "function" == typeof Symbol && t22.constructor === Symbol && t22 !== Symbol.prototype ? "symbol" : typeof t22;
      }, A2(t21);
    }
    function R2(t21, e4) {
      return R2 = Object.setPrototypeOf ? Object.setPrototypeOf.bind() : function(t22, e5) {
        return t22.__proto__ = e5, t22;
      }, R2(t21, e4);
    }
    function D2(t21) {
      if (void 0 === t21) throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
      return t21;
    }
    function q2(t21) {
      return q2 = Object.setPrototypeOf ? Object.getPrototypeOf.bind() : function(t22) {
        return t22.__proto__ || Object.getPrototypeOf(t22);
      }, q2(t21);
    }
    var z2 = function(t21) {
      !function(t22, e4) {
        if ("function" != typeof e4 && null !== e4) throw new TypeError("Super expression must either be null or a function");
        t22.prototype = Object.create(e4 && e4.prototype, { constructor: { value: t22, writable: true, configurable: true } }), Object.defineProperty(t22, "prototype", { writable: false }), e4 && R2(t22, e4);
      }(d3, t21);
      var o3, r3, L3, i3, s3 = (L3 = d3, i3 = function() {
        if ("undefined" == typeof Reflect || !Reflect.construct) return false;
        if (Reflect.construct.sham) return false;
        if ("function" == typeof Proxy) return true;
        try {
          return Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function() {
          })), true;
        } catch (t22) {
          return false;
        }
      }(), function() {
        var t22, e4 = q2(L3);
        if (i3) {
          var o4 = q2(this).constructor;
          t22 = Reflect.construct(e4, arguments, o4);
        } else t22 = e4.apply(this, arguments);
        return function(t23, e5) {
          if (e5 && ("object" === A2(e5) || "function" == typeof e5)) return e5;
          if (void 0 !== e5) throw new TypeError("Derived constructors may only return object or undefined");
          return D2(t23);
        }(this, t22);
      });
      function d3(t22) {
        var e4;
        !function(t23, e5) {
          if (!(t23 instanceof e5)) throw new TypeError("Cannot call a class as a function");
        }(this, d3), e4 = s3.call(this, t22);
        var o4 = t22.afterLoad, r4 = t22.beforeLoad, L4 = t22.scrollPosition, n3 = t22.visibleByDefault;
        return e4.state = { visible: n3 }, n3 && (r4(), o4()), e4.onVisible = e4.onVisible.bind(D2(e4)), e4.isScrollTracked = Boolean(L4 && Number.isFinite(L4.x) && L4.x >= 0 && Number.isFinite(L4.y) && L4.y >= 0), e4;
      }
      return o3 = d3, (r3 = [{ key: "componentDidUpdate", value: function(t22, e4) {
        e4.visible !== this.state.visible && this.props.afterLoad();
      } }, { key: "onVisible", value: function() {
        this.props.beforeLoad(), this.setState({ visible: true });
      } }, { key: "render", value: function() {
        if (this.state.visible) return this.props.children;
        var t22 = this.props, o4 = t22.className, r4 = t22.delayMethod, L4 = t22.delayTime, i4 = t22.height, s4 = t22.placeholder, d4 = t22.scrollPosition, k3 = t22.style, h3 = t22.threshold, a3 = t22.useIntersectionObserver, u3 = t22.width;
        return this.isScrollTracked || a3 && n2() ? e3().createElement(w2, { className: o4, height: i4, onVisible: this.onVisible, placeholder: s4, scrollPosition: d4, style: k3, threshold: h3, useIntersectionObserver: a3, width: u3 }) : e3().createElement(N2, { className: o4, delayMethod: r4, delayTime: L4, height: i4, onVisible: this.onVisible, placeholder: s4, style: k3, threshold: h3, width: u3 });
      } }]) && function(t22, e4) {
        for (var o4 = 0; o4 < e4.length; o4++) {
          var r4 = e4[o4];
          r4.enumerable = r4.enumerable || false, r4.configurable = true, "value" in r4 && (r4.writable = true), Object.defineProperty(t22, (L4 = function(t23) {
            if ("object" !== A2(t23) || null === t23) return t23;
            var e5 = t23[Symbol.toPrimitive];
            if (void 0 !== e5) {
              var o5 = e5.call(t23, "string");
              if ("object" !== A2(o5)) return o5;
              throw new TypeError("@@toPrimitive must return a primitive value.");
            }
            return String(t23);
          }(r4.key), "symbol" === A2(L4) ? L4 : String(L4)), r4);
        }
        var L4;
      }(o3.prototype, r3), Object.defineProperty(o3, "prototype", { writable: false }), d3;
    }(e3().Component);
    z2.propTypes = { afterLoad: L2.PropTypes.func, beforeLoad: L2.PropTypes.func, useIntersectionObserver: L2.PropTypes.bool, visibleByDefault: L2.PropTypes.bool }, z2.defaultProps = { afterLoad: function() {
      return {};
    }, beforeLoad: function() {
      return {};
    }, useIntersectionObserver: true, visibleByDefault: false };
    const B2 = z2;
    function I2(t21) {
      return I2 = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function(t22) {
        return typeof t22;
      } : function(t22) {
        return t22 && "function" == typeof Symbol && t22.constructor === Symbol && t22 !== Symbol.prototype ? "symbol" : typeof t22;
      }, I2(t21);
    }
    var F2 = ["afterLoad", "beforeLoad", "delayMethod", "delayTime", "effect", "placeholder", "placeholderSrc", "scrollPosition", "threshold", "useIntersectionObserver", "visibleByDefault", "wrapperClassName", "wrapperProps"];
    function U2(t21, e4) {
      var o3 = Object.keys(t21);
      if (Object.getOwnPropertySymbols) {
        var r3 = Object.getOwnPropertySymbols(t21);
        e4 && (r3 = r3.filter(function(e5) {
          return Object.getOwnPropertyDescriptor(t21, e5).enumerable;
        })), o3.push.apply(o3, r3);
      }
      return o3;
    }
    function $2(t21) {
      for (var e4 = 1; e4 < arguments.length; e4++) {
        var o3 = null != arguments[e4] ? arguments[e4] : {};
        e4 % 2 ? U2(Object(o3), true).forEach(function(e5) {
          Y2(t21, e5, o3[e5]);
        }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(t21, Object.getOwnPropertyDescriptors(o3)) : U2(Object(o3)).forEach(function(e5) {
          Object.defineProperty(t21, e5, Object.getOwnPropertyDescriptor(o3, e5));
        });
      }
      return t21;
    }
    function Y2(t21, e4, o3) {
      return (e4 = G2(e4)) in t21 ? Object.defineProperty(t21, e4, { value: o3, enumerable: true, configurable: true, writable: true }) : t21[e4] = o3, t21;
    }
    function X2() {
      return X2 = Object.assign ? Object.assign.bind() : function(t21) {
        for (var e4 = 1; e4 < arguments.length; e4++) {
          var o3 = arguments[e4];
          for (var r3 in o3) Object.prototype.hasOwnProperty.call(o3, r3) && (t21[r3] = o3[r3]);
        }
        return t21;
      }, X2.apply(this, arguments);
    }
    function G2(t21) {
      var e4 = function(t22) {
        if ("object" !== I2(t22) || null === t22) return t22;
        var e5 = t22[Symbol.toPrimitive];
        if (void 0 !== e5) {
          var o3 = e5.call(t22, "string");
          if ("object" !== I2(o3)) return o3;
          throw new TypeError("@@toPrimitive must return a primitive value.");
        }
        return String(t22);
      }(t21);
      return "symbol" === I2(e4) ? e4 : String(e4);
    }
    function K2(t21, e4) {
      return K2 = Object.setPrototypeOf ? Object.setPrototypeOf.bind() : function(t22, e5) {
        return t22.__proto__ = e5, t22;
      }, K2(t21, e4);
    }
    function J2(t21) {
      return J2 = Object.setPrototypeOf ? Object.getPrototypeOf.bind() : function(t22) {
        return t22.__proto__ || Object.getPrototypeOf(t22);
      }, J2(t21);
    }
    var Q2 = function(t21) {
      !function(t22, e4) {
        if ("function" != typeof e4 && null !== e4) throw new TypeError("Super expression must either be null or a function");
        t22.prototype = Object.create(e4 && e4.prototype, { constructor: { value: t22, writable: true, configurable: true } }), Object.defineProperty(t22, "prototype", { writable: false }), e4 && K2(t22, e4);
      }(s3, t21);
      var o3, r3, L3, n3, i3 = (L3 = s3, n3 = function() {
        if ("undefined" == typeof Reflect || !Reflect.construct) return false;
        if (Reflect.construct.sham) return false;
        if ("function" == typeof Proxy) return true;
        try {
          return Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function() {
          })), true;
        } catch (t22) {
          return false;
        }
      }(), function() {
        var t22, e4 = J2(L3);
        if (n3) {
          var o4 = J2(this).constructor;
          t22 = Reflect.construct(e4, arguments, o4);
        } else t22 = e4.apply(this, arguments);
        return function(t23, e5) {
          if (e5 && ("object" === I2(e5) || "function" == typeof e5)) return e5;
          if (void 0 !== e5) throw new TypeError("Derived constructors may only return object or undefined");
          return function(t24) {
            if (void 0 === t24) throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
            return t24;
          }(t23);
        }(this, t22);
      });
      function s3(t22) {
        var e4;
        return function(t23, e5) {
          if (!(t23 instanceof e5)) throw new TypeError("Cannot call a class as a function");
        }(this, s3), (e4 = i3.call(this, t22)).state = { loaded: false }, e4;
      }
      return o3 = s3, (r3 = [{ key: "onImageLoad", value: function() {
        var t22 = this;
        return this.state.loaded ? null : function(e4) {
          t22.props.onLoad(e4), t22.props.afterLoad(), t22.setState({ loaded: true });
        };
      } }, { key: "getImg", value: function() {
        var t22 = this.props, o4 = (t22.afterLoad, t22.beforeLoad, t22.delayMethod, t22.delayTime, t22.effect, t22.placeholder, t22.placeholderSrc, t22.scrollPosition, t22.threshold, t22.useIntersectionObserver, t22.visibleByDefault, t22.wrapperClassName, t22.wrapperProps, function(t23, e4) {
          if (null == t23) return {};
          var o5, r4, L4 = function(t24, e5) {
            if (null == t24) return {};
            var o6, r5, L5 = {}, n5 = Object.keys(t24);
            for (r5 = 0; r5 < n5.length; r5++) o6 = n5[r5], e5.indexOf(o6) >= 0 || (L5[o6] = t24[o6]);
            return L5;
          }(t23, e4);
          if (Object.getOwnPropertySymbols) {
            var n4 = Object.getOwnPropertySymbols(t23);
            for (r4 = 0; r4 < n4.length; r4++) o5 = n4[r4], e4.indexOf(o5) >= 0 || Object.prototype.propertyIsEnumerable.call(t23, o5) && (L4[o5] = t23[o5]);
          }
          return L4;
        }(t22, F2));
        return e3().createElement("img", X2({}, o4, { onLoad: this.onImageLoad() }));
      } }, { key: "getLazyLoadImage", value: function() {
        var t22 = this.props, o4 = t22.beforeLoad, r4 = t22.className, L4 = t22.delayMethod, n4 = t22.delayTime, i4 = t22.height, s4 = t22.placeholder, d3 = t22.scrollPosition, k3 = t22.style, h3 = t22.threshold, a3 = t22.useIntersectionObserver, u3 = t22.visibleByDefault, p3 = t22.width;
        return e3().createElement(B2, { beforeLoad: o4, className: r4, delayMethod: L4, delayTime: n4, height: i4, placeholder: s4, scrollPosition: d3, style: k3, threshold: h3, useIntersectionObserver: a3, visibleByDefault: u3, width: p3 }, this.getImg());
      } }, { key: "getWrappedLazyLoadImage", value: function(t22) {
        var o4 = this.props, r4 = o4.effect, L4 = o4.height, n4 = o4.placeholderSrc, i4 = o4.width, s4 = o4.wrapperClassName, d3 = o4.wrapperProps, k3 = this.state.loaded, h3 = k3 ? " lazy-load-image-loaded" : "", a3 = k3 || !n4 ? {} : { backgroundImage: "url(".concat(n4, ")"), backgroundSize: "100% 100%" };
        return e3().createElement("span", X2({ className: s4 + " lazy-load-image-background " + r4 + h3, style: $2($2({}, a3), {}, { color: "transparent", display: "inline-block", height: L4, width: i4 }) }, d3), t22);
      } }, { key: "render", value: function() {
        var t22 = this.props, e4 = t22.effect, o4 = t22.placeholderSrc, r4 = t22.visibleByDefault, L4 = t22.wrapperClassName, n4 = t22.wrapperProps, i4 = this.getLazyLoadImage();
        return (e4 || o4) && !r4 || L4 || n4 ? this.getWrappedLazyLoadImage(i4) : i4;
      } }]) && function(t22, e4) {
        for (var o4 = 0; o4 < e4.length; o4++) {
          var r4 = e4[o4];
          r4.enumerable = r4.enumerable || false, r4.configurable = true, "value" in r4 && (r4.writable = true), Object.defineProperty(t22, G2(r4.key), r4);
        }
      }(o3.prototype, r3), Object.defineProperty(o3, "prototype", { writable: false }), s3;
    }(e3().Component);
    Q2.propTypes = { onLoad: L2.PropTypes.func, afterLoad: L2.PropTypes.func, beforeLoad: L2.PropTypes.func, delayMethod: L2.PropTypes.string, delayTime: L2.PropTypes.number, effect: L2.PropTypes.string, placeholderSrc: L2.PropTypes.string, threshold: L2.PropTypes.number, useIntersectionObserver: L2.PropTypes.bool, visibleByDefault: L2.PropTypes.bool, wrapperClassName: L2.PropTypes.string, wrapperProps: L2.PropTypes.object }, Q2.defaultProps = { onLoad: function() {
    }, afterLoad: function() {
      return {};
    }, beforeLoad: function() {
      return {};
    }, delayMethod: "throttle", delayTime: 300, effect: "", placeholderSrc: null, threshold: 100, useIntersectionObserver: true, visibleByDefault: false, wrapperClassName: "" };
    const tt2 = Q2;
  })(), Ui.exports = r2;
})()), Ui.exports);
function Gi({ el: t19 }) {
  return F("li", { children: [F("div", { className: "placeholder-1", children: F(Xi.LazyLoadImage, { src: t19.img, width: "100%", height: "127px", effect: "opacity", alt: "project-image" }) }), F("span", { className: "up-case font-reg text-white", children: t19.date }), F("h5", { children: t19.title }), F("p", { className: "to-middle text-white capitalize", children: t19.description })] });
}
const Ki = [{ img: Bi, title: "How the industrial zone turned into a colorful microdistrict", date: "25 september ", description: "We offer innovative engineering solutions that ensure the successful achievement of the client's goals. Because engineering is a result-oriented strategy in action." }, { img: "/masbo_website/assets/img-11-CrLJoGSl.jpg", title: "How the industrial zone turned into a colorful microdistrict", date: "25 september ", description: "We offer innovative engineering solutions that ensure the successful achievement of the client's goals. Because engineering is a result-oriented strategy in action." }, { img: "/masbo_website/assets/img-12-CMpzjhR5.jpg", title: "How the industrial zone turned into a colorful microdistrict", date: "25 september ", description: "We offer innovative engineering solutions that ensure the successful achievement of the client's goals. Because engineering is a result-oriented strategy in action." }];
function Ji() {
  return Ai((t19) => {
    const e2 = gi.utils.toArray(".projects-list .placeholder-1");
    gi.set(e2, { clipPath: "inset(0 100% 0 0)" }), gi.to(e2, { ease: "none", clipPath: "inset(0)", scrollTrigger: { trigger: ".projects-list", start: "left 30%", toggleActions: "play none none none", ...t19 } });
  }), F("ul", { className: "data row gap-85", children: Ki.map((t19, e2) => F(Gi, { el: t19 }, e2)) });
}
function Qi() {
  return F("section", { className: "projects-list", children: F("div", { className: "row center-y full-height", children: F("div", { className: "container", children: [F("div", { className: "text-wrapper row gap-50", children: [F("h1", { className: "capitalize", children: ["how we are", F("br", {}), " working"] }), F("div", { children: [F("p", { className: "to-middle text-white capitalize", children: "Arhitecture modern technology Collaboration is a priority at MasBo. We believe that the best result can only be achieved through constant dialogue between all stakeholders. Our practice brings together experts in the field of architecture, design, engineering and construction, to solve any tasks assigned to us." }), F(zi, { type: "button", children: "learn more" })] })] }), F(Ji, {})] }) }) });
}
const ts = "/masbo_website/assets/img-16-BcCvOyYk.jpg", es = "/masbo_website/assets/img-17-wiKgS99T.jpg", os = "data:image/svg+xml,%3csvg%20width='64'%20height='68'%20viewBox='0%200%2064%2068'%20fill='none'%20xmlns='http://www.w3.org/2000/svg'%3e%3cpath%20d='M13.9167%2012.5556L1%2019.7778V42.8889M13.9167%2012.5556L38.4583%2019.7778M13.9167%2012.5556V35.6667M38.4583%2019.7778V9.66667L50.0833%201L63%209.66667V22.6667M38.4583%2019.7778V22.6667M38.4583%2047.2222L50.0833%2039.2778L63%2047.2222V22.6667M38.4583%2047.2222V66L13.9167%2058.0556M38.4583%2047.2222V42.8889M13.9167%2058.0556L1%2066V42.8889M13.9167%2058.0556V35.6667M1%2042.8889L13.9167%2035.6667M13.9167%2035.6667L38.4583%2042.8889M38.4583%2022.6667L50.0833%2014L63%2022.6667M38.4583%2022.6667V42.8889'%20stroke='white'%20stroke-width='1.5'/%3e%3c/svg%3e", rs = "data:image/svg+xml,%3csvg%20width='56'%20height='68'%20viewBox='0%200%2056%2068'%20fill='none'%20xmlns='http://www.w3.org/2000/svg'%3e%3cpath%20d='M1%2067L0.999998%2014.4748L23.6667%202L23.6667%2066.3367L12.3333%2066.3367L12.3333%2036.798L33.6667%2024.9798L55%2036.798L55%2056.4949L33.6667%2056.4949L33.6667%2066.3367L44.3333%2066.3367L44.3333%2030.8889'%20stroke='white'%20stroke-width='1.5'/%3e%3c/svg%3e", Ls = "data:image/svg+xml,%3csvg%20width='42'%20height='68'%20viewBox='0%200%2042%2068'%20fill='none'%20xmlns='http://www.w3.org/2000/svg'%3e%3cpath%20d='M23.6667%2029.0833V13.5104L1%202V56.1667L23.6667%2067M23.6667%2029.0833L41%2037.2083M23.6667%2029.0833V43.9792M41%2037.2083V59.5521L23.6667%2067M41%2037.2083L23.6667%2043.9792M23.6667%2067V43.9792'%20stroke='white'%20stroke-width='1.5'/%3e%3c/svg%3e", ns = "data:image/svg+xml,%3csvg%20width='64'%20height='63'%20viewBox='0%200%2064%2063'%20fill='none'%20xmlns='http://www.w3.org/2000/svg'%3e%3cpath%20d='M22.0261%202L1%2011.732V61L22.0261%2051.268M22.0261%202L42.513%2012.3402M22.0261%202V51.268M42.513%2012.3402L63%202V51.5722L42.513%2061M42.513%2012.3402V61M42.513%2061L22.0261%2051.268'%20stroke='white'%20stroke-width='1.5'/%3e%3c/svg%3e", is = "data:image/svg+xml,%3csvg%20width='65'%20height='65'%20viewBox='0%200%2065%2065'%20fill='none'%20xmlns='http://www.w3.org/2000/svg'%3e%3cpath%20d='M51.266%2031.5053L64%2036.8105V64H51.266M51.266%2031.5053V22.2211L38.5319%2016.9158M51.266%2031.5053L38.5319%2036.8105M51.266%2031.5053V64M38.5319%2016.9158V6.96842L25.7979%201M38.5319%2016.9158L25.7979%2022.2211M38.5319%2016.9158V36.8105M25.7979%201L13.0638%206.96842V40.7895M25.7979%201V22.2211M13.0638%2040.7895L1%2046.0947V64H25.7979M13.0638%2040.7895L25.7979%2046.0947M25.7979%2064H38.5319M25.7979%2064V46.0947M25.7979%2022.2211V46.0947M38.5319%2064V36.8105M38.5319%2064H51.266'%20stroke='white'%20stroke-width='1.5'/%3e%3c/svg%3e";
function ss({ img: t19, icon: e2, title: o2, className: r2 }) {
  return F("div", { className: r2, children: [F(Xi.LazyLoadImage, { src: t19, width: "100%", height: "100%", effect: "opacity", alt: o2 }), F("div", { className: "column center-y center-x gap-10", children: [F("img", { className: "icon", alt: "icon", src: e2 }), F("h5", { children: o2 })] })] });
}
function ds() {
  return F("div", { className: "container", children: F("div", { className: "row center-x center-y full-height", children: F("div", { className: "text-wrapper row gap-50", children: [F("h1", { className: "capitalize", children: ["What we ", F("br", {}), " engage?"] }), F("div", { children: [F("p", { className: "to-middle text-white capitalize", children: "Our portfolio is a long-term experience, a variety of complex projects and the implementation of innovative solutions. We approach each client and his project as a unique challenge that we accept. Responsibly performing our work, we will confidently bring it to life." }), F(zi, { arrow: true, type: "button", children: "Learn more" })] })] }) }) });
}
const ks = [{ img: "/masbo_website/assets/img-13-gvxAk8Ki.jpg", icon: ns, title: "Interior", className: "placeholder-2" }, { img: "/masbo_website/assets/img-14-D2ut6RlI.jpg", icon: os, title: "Architecture", className: "placeholder-1" }, { img: "/masbo_website/assets/img-15-DrmZ1q9_.jpg", icon: rs, title: "Engineering", className: "placeholder-2" }, { img: ts, icon: Ls, title: "Construction", className: "placeholder-1" }, { img: es, icon: "data:image/svg+xml,%3csvg%20width='80'%20height='58'%20viewBox='0%200%2080%2058'%20fill='none'%20xmlns='http://www.w3.org/2000/svg'%3e%3cpath%20d='M28.6923%201L1%2021.2062V57H12.0769M28.6923%201L55.1539%2021.7835M28.6923%201V57M55.1539%2021.7835V57M55.1539%2021.7835H12.0769V57M55.1539%2057H71.1539V40.2577M55.1539%2057H28.6923M71.1539%2040.2577V40.2577C66.1769%2039.6559%2062.9543%2034.7008%2064.4224%2029.9073L71.1539%207.92784L78.0143%2029.6498C79.5636%2034.5552%2076.2632%2039.6586%2071.1539%2040.2577V40.2577ZM28.6923%2057H12.0769'%20stroke='white'%20stroke-width='1.5'/%3e%3c/svg%3e", title: "Landscape Design", className: "placeholder-2" }, { img: Bi, icon: is, title: "Investment projects", className: "placeholder-1" }];
function hs() {
  return F("section", { className: "services", children: [F("div", { className: "row", children: ks.slice(0, 4).map((t19, e2) => F(ss, { ...t19 }, e2)) }), F("div", { className: "row", children: [F(ss, { ...ks[4] }), F(ds, {}), F(ss, { ...ks[5] })] })] });
}
const as = ({ src: t19, alt: e2, className: o2 }) => F("div", { className: o2, children: F(Xi.LazyLoadImage, { src: t19, width: "100%", height: "100%", effect: "opacity", alt: e2 }) }), us = ({ icon: t19, title: e2, text: o2 }) => F("div", { className: "column center-y center-x gap-10", children: [F("img", { className: "icon", alt: "icon", src: t19 }), F("h5", { children: e2 }), F("p", { className: "to-middle text-center text-white capitalize", dangerouslySetInnerHTML: { __html: o2 } })] });
function ps() {
  return F("section", { className: "investment-projects", children: F("div", { className: "row full-height", children: [F("div", { className: "section-block", children: [F(as, { src: es, alt: "img-17", className: "placeholder-1 full-height" }), F("div", { className: "description", children: [F("h1", { className: "capitalize", children: ["Investment", F("br", {}), " projects"] }), F("p", { className: "to-middle text-white capitalize", children: "Our portfolio is a long-term experience, a variety of complex projects and the implementation of innovative solutions. We approach each client and his project as a unique challenge that we accept. Responsibly performing our work, we will confidently bring it to life." }), F(zi, { arrow: false, type: "button", children: "Order The Project" })] })] }), F("div", { className: "section-block", children: [F(as, { src: "/masbo_website/assets/img-19-C2NWmUJ9.jpg", alt: "img-19", className: "placeholder-1" }), F(us, { icon: is, title: "Investment projects", text: "MasBo is an architectural group working in <br/> the field of architecture and urban planning." }), F(as, { src: "/masbo_website/assets/img-20-CzdFevMc.jpg", alt: "img-20", className: "placeholder-2" })] }), F("div", { className: "section-block", children: [F(as, { src: "/masbo_website/assets/img-18-Cerp6Fko.jpg", alt: "img-18", className: "placeholder-1" }), F(as, { src: ts, alt: "img-16", className: "placeholder-2" })] })] }) });
}
const cs = [{ num: 123, title: "successful projects" }, { num: 1235, title: "people who work with us" }, { num: 23, title: "urban planning projects" }, { num: 1012, title: "Modern interiors " }];
function ls() {
  return Ai((t19) => {
    gi.utils.toArray("li h2").forEach((e2, o2) => {
      gi.to(e2, { innerText: cs[o2].num, duration: 2, ease: "power1.out", snap: { innerText: 1 }, scrollTrigger: { trigger: ".about .container", start: "top 20%", toggleActions: "play none none none", scroller: t19.scroller } });
    });
  }), F("ul", { className: "row wrap gap-150", children: cs.map((t19, e2) => F("li", { children: [F("h2", { children: "0" }), F("span", { className: "fs-14 text-white capitalize", children: t19.title })] }, e2)) });
}
function ws() {
  const { width: t19, height: e2 } = Ai();
  return F("section", { className: "about", children: F("div", { className: "container column end-x", children: [F("div", { className: "row center-y", children: [F("div", { className: "text-wrapper  center-y row gap-50", children: [F("h1", { className: "capitalize", children: ["from idea", F("br", {}), " to life"] }), F("p", { className: "to-small text-white capitalize", children: ["Arhitecture modern technology", F("br", {}), " MasBo is an architectural group working in the field of", F("br", {}), " architecture and urban planning. For our customers, we are known", F("br", {}), "as a reliable partner with high standards of quality and", F("br", {}), " responsibility."] })] }), F("div", { className: "play self-center-y center-gr", children: F("img", { className: "icon", src: "data:image/svg+xml,%3csvg%20width='16'%20height='18'%20viewBox='0%200%2016%2018'%20fill='none'%20xmlns='http://www.w3.org/2000/svg'%3e%3cpath%20d='M13.8658%205.99832L4.80958%200.458317C4.31953%200.156477%203.76332%20-0.00164499%203.19744%201.29041e-05C2.63157%200.0016708%202.07618%200.163049%201.5877%200.467756C1.09921%200.772464%200.695033%201.20964%200.416212%201.73489C0.137391%202.26014%20-0.00613872%202.85475%200.000201292%203.45832V14.5783C0.000201292%2015.4854%200.338002%2016.3552%200.93929%2016.9966C1.54058%2017.638%202.3561%2017.9983%203.20645%2017.9983C3.76936%2017.9973%204.32216%2017.8387%204.80958%2017.5383L13.8658%2011.9983C14.3524%2011.6979%2014.7564%2011.2663%2015.0373%2010.7468C15.3182%2010.2272%2015.466%209.63804%2015.466%209.03832C15.466%208.43859%2015.3182%207.84941%2015.0373%207.32988C14.7564%206.81035%2014.3524%206.37873%2013.8658%206.07832V5.99832ZM12.9283%2010.1883L3.87208%2015.8083C3.66909%2015.931%203.43976%2015.9955%203.20645%2015.9955C2.97314%2015.9955%202.74381%2015.931%202.54083%2015.8083C2.33842%2015.6837%202.17034%2015.5044%202.0535%2015.2885C1.93665%2015.0725%201.87516%2014.8276%201.8752%2014.5783V3.41832C1.87516%203.16901%201.93665%202.92409%202.0535%202.70818C2.17034%202.49226%202.33842%202.31297%202.54083%202.18832C2.74464%202.06747%202.97329%202.00221%203.20645%201.99832C3.43945%202.00342%203.66783%202.06861%203.87208%202.18832L12.9283%207.76832C13.1308%207.89292%2013.299%208.07219%2013.4159%208.28811C13.5328%208.50402%2013.5943%208.74897%2013.5943%208.99832C13.5943%209.24766%2013.5328%209.49261%2013.4159%209.70853C13.299%209.92445%2013.1308%2010.1037%2012.9283%2010.2283V10.1883Z'%20fill='%231C6BCF'/%3e%3c/svg%3e", alt: "arrow" }) })] }), F(ls, {}), t19 && e2 && F(Se, {})] }) });
}
function Ms() {
  return F("section", { className: "architecture", children: F("div", { className: "row full-height", children: [F("div", { className: "section-block full-height", children: [F(us, { icon: os, title: "Architecture", text: "MasBo is an architectural group working in  <br/> the field of architecture and urban planning." }), F(us, { icon: rs, title: "Engineering", text: "Modern solutions for the modern city." }), F(as, { src: "/masbo_website/assets/img-1-BNwLU0Tj.jpg", alt: "img-1", className: "placeholder-2" })] }), F("div", { className: "section-block full-height", children: [F(as, { src: Bi, alt: "img-2", className: "placeholder-1 full-height" }), F("div", { className: "description", children: [F("h1", { className: "capitalize", children: ["innovative ", F("br", {}), " engineering &", F("br", {}), " architecture", F("br", {}), " solutions"] }), F("p", { className: "to-middle text-white capitalize", children: "We offer innovative engineering solutions that ensure the successful achievement of the client's goals. Because engineering is a result-oriented strategy in action. An individual approach and attention to detail in the development of engineering systems allows us to obtain reliable, verified solutions. Simply put, we think over the operation of facilities based on practical experience and scientific knowledge." }), F(zi, { arrow: false, type: "button", children: "Order The Project" })] })] }), F("div", { className: "section-block full-height", children: [F(as, { src: "/masbo_website/assets/img-3-B4znrZ0Z.jpg", alt: "img-3", className: "placeholder-2" }), F(as, { src: "/masbo_website/assets/img-4-C-U5Vtyg.jpg", alt: "img-4", className: "placeholder-1" })] })] }) });
}
function fs() {
  return F("section", { className: "construction", children: F("div", { className: "row full-height", children: [F("div", { className: "section-block", children: [F(as, { src: "/masbo_website/assets/img-5-BIAjnhja.jpg", alt: "img-5", className: "placeholder-1" }), F(us, { icon: Ls, title: "Construction", text: "MasBo is an architectural group working in <br/> the field of architecture and urban planning." })] }), F("div", { className: "section-block full-height", children: [F(as, { src: "/masbo_website/assets/img-6-Bbs3LRR4.jpg", alt: "img-6", className: "placeholder-2 full-height" }), F("div", { className: "description", children: [F("h1", { className: "capitalize", children: ["innovative ", F("br", {}), " engineering", F("br", {}), " solutions"] }), F("p", { className: "to-middle text-white capitalize", children: "We offer innovative engineering solutions that ensure the successful achievement of the client's goals. Because engineering is a result-oriented strategy in action. An individual approach and attention to detail in the development of engineering systems allows us to obtain reliable, verified solutions. Simply put, we think over the operation of facilities based on practical experience and scientific knowledge." }), F(zi, { arrow: false, type: "button", children: "Order The Project" })] })] }), F("div", { className: "section-block", children: [F(us, { icon: ns, title: "Interior", text: "MasBo is an architectural group working in <br/> the field of architecture and urban planning." }), F(as, { src: "/masbo_website/assets/img-7-BmamNXji.jpg", alt: "img-7", className: "placeholder-2" }), F(as, { src: "/masbo_website/assets/img-8-BtYqCmbC.jpg", alt: "img-8", className: "placeholder-1" })] }), F("div", { className: "section-block full-height ", children: [F(as, { src: "/masbo_website/assets/img-9-BxUptN8g.jpg", alt: "img-9", className: "placeholder-1 full-height" }), F("div", { className: "description", children: [F("h1", { className: "capitalize", children: ["interior & ", F("br", {}), " landscape", F("br", {}), " design"] }), F("p", { className: "to-middle text-white capitalize", children: "We create a comfortable space for living and working, entertainment and education. High-quality and thoughtful design not only pleases the eye, but creates a healthy environment for a comfortable and intuitive use of the room." }), F(zi, { arrow: false, type: "button", children: "Order The Project" })] })] }), F("div", { className: "section-block", children: [F(as, { src: "/masbo_website/assets/img-10-CBSuR36R.jpg", alt: "img-10", className: "placeholder-2" }), F(us, { icon: os, title: "Landscape Design", text: "MasBo is an architectural group working in <br/> the field of architecture and urban planning." })] })] }) });
}
const Ws = ["/masbo_website/assets/team-circle-DaJto7iH.jpg", "/masbo_website/assets/team-circle-1-C89-BzF6.jpg", "/masbo_website/assets/team-circle-2-B_7NMk-k.jpg", "/masbo_website/assets/team-circle-3-BSRnSoOJ.jpg", "/masbo_website/assets/team-circle-4-B3Mfvny-.jpg"];
function js() {
  const t19 = ht(null), e2 = "Meeting our team".split("").map((t20, e3) => F("span", { children: " " === t20 ? " " : t20 }, e3));
  return Ai((e3) => {
    const o2 = gi.utils.toArray(".team li"), r2 = t19.current.querySelectorAll("span");
    gi.set(r2, { opacity: 0, y: 20 }), gi.to(r2, { opacity: 1, y: 0, delay: 0.3, duration: 3, stagger: 0.05, ease: "expo.out", scrollTrigger: { trigger: ".team", start: "left 40%", toggleActions: "play none none none", ...e3 } }), gi.set(o2, { opacity: 0, y: 25 }), gi.to(o2, { opacity: 1, y: 0, delay: 0.3, duration: 3, stagger: 0.09, ease: "expo.out", scrollTrigger: { trigger: ".team", start: "left 40%", toggleActions: "play none none none", ...e3 } });
  }), F(m, { children: [F("h1", { ref: t19, children: e2 }), F("ul", { className: "row", children: Ws.map((t20, e3) => F("li", { children: F("img", { src: t20, alt: `team-img-${e3 + 1}` }) }, e3)) })] });
}
function ms() {
  return F("section", { className: "team", children: F("div", { className: "container full-height", children: F("div", { className: "column center-y center-x gap-25 full-height", children: [F("span", { className: "fs-14 text-white text-center up-case", children: "confidently to bring idea to life." }), F(js, {}), F("p", { className: "to-middle text-white text-center capitalize", children: "MasBo is an architectural group working in the field of architecture and urban planning. The company was founded in 2006. We offer a full range of services from interior design, individual cottages to the design and construction of residential complexes." }), F(zi, { arrow: true, children: "Let’s work together" })] }) }) });
}
function vs() {
  return F("section", { id: "home-scroll", children: [F("div", { className: "row", children: [F(ws, {}), F(Ms, {}), F(fs, {}), F(Qi, {}), F(hs, {}), F(ps, {}), F(ms, {})] }), F(qi, {})] });
}
function gs() {
  return F("div", { id: "home-page", children: [F(Di, {}), F(vs, {})] });
}
function _s(t19) {
  return F("div", { onClick: t19.onClick, className: "close-menu", children: F("div", { className: "close-menu-wrapper", children: [F("div", {}), F("div", {})] }) });
}
var ys, bs = {};
!function() {
  if (ys) return bs;
  ys = 1, Object.defineProperty(bs, "__esModule", { value: true }), bs.parse = function(t20, e3) {
    const o3 = new n2(), r3 = t20.length;
    if (r3 < 2) return o3;
    const L3 = (e3 == null ? void 0 : e3.decode) || d2;
    let k2 = 0;
    do {
      const e4 = t20.indexOf("=", k2);
      if (-1 === e4) break;
      const n3 = t20.indexOf(";", k2), d3 = -1 === n3 ? r3 : n3;
      if (e4 > d3) {
        k2 = t20.lastIndexOf(";", e4 - 1) + 1;
        continue;
      }
      const h2 = i2(t20, k2, e4), a2 = s2(t20, e4, h2), u2 = t20.slice(h2, a2);
      if (void 0 === o3[u2]) {
        let r4 = i2(t20, e4 + 1, d3), n4 = s2(t20, d3, r4);
        const k3 = L3(t20.slice(r4, n4));
        o3[u2] = k3;
      }
      k2 = d3 + 1;
    } while (k2 < r3);
    return o3;
  }, bs.serialize = function(n3, i3, s3) {
    const d3 = (s3 == null ? void 0 : s3.encode) || encodeURIComponent;
    if (!t19.test(n3)) throw new TypeError(`argument name is invalid: ${n3}`);
    const k2 = d3(i3);
    if (!e2.test(k2)) throw new TypeError(`argument val is invalid: ${i3}`);
    let h2 = n3 + "=" + k2;
    if (!s3) return h2;
    if (void 0 !== s3.maxAge) {
      if (!Number.isInteger(s3.maxAge)) throw new TypeError(`option maxAge is invalid: ${s3.maxAge}`);
      h2 += "; Max-Age=" + s3.maxAge;
    }
    if (s3.domain) {
      if (!o2.test(s3.domain)) throw new TypeError(`option domain is invalid: ${s3.domain}`);
      h2 += "; Domain=" + s3.domain;
    }
    if (s3.path) {
      if (!r2.test(s3.path)) throw new TypeError(`option path is invalid: ${s3.path}`);
      h2 += "; Path=" + s3.path;
    }
    if (s3.expires) {
      if (!function(t20) {
        return "[object Date]" === L2.call(t20);
      }(s3.expires) || !Number.isFinite(s3.expires.valueOf())) throw new TypeError(`option expires is invalid: ${s3.expires}`);
      h2 += "; Expires=" + s3.expires.toUTCString();
    }
    s3.httpOnly && (h2 += "; HttpOnly");
    s3.secure && (h2 += "; Secure");
    s3.partitioned && (h2 += "; Partitioned");
    if (s3.priority) {
      switch ("string" == typeof s3.priority ? s3.priority.toLowerCase() : void 0) {
        case "low":
          h2 += "; Priority=Low";
          break;
        case "medium":
          h2 += "; Priority=Medium";
          break;
        case "high":
          h2 += "; Priority=High";
          break;
        default:
          throw new TypeError(`option priority is invalid: ${s3.priority}`);
      }
    }
    if (s3.sameSite) {
      switch ("string" == typeof s3.sameSite ? s3.sameSite.toLowerCase() : s3.sameSite) {
        case true:
        case "strict":
          h2 += "; SameSite=Strict";
          break;
        case "lax":
          h2 += "; SameSite=Lax";
          break;
        case "none":
          h2 += "; SameSite=None";
          break;
        default:
          throw new TypeError(`option sameSite is invalid: ${s3.sameSite}`);
      }
    }
    return h2;
  };
  const t19 = /^[\u0021-\u003A\u003C\u003E-\u007E]+$/, e2 = /^[\u0021-\u003A\u003C-\u007E]*$/, o2 = /^([.]?[a-z0-9]([a-z0-9-]{0,61}[a-z0-9])?)([.][a-z0-9]([a-z0-9-]{0,61}[a-z0-9])?)*$/i, r2 = /^[\u0020-\u003A\u003D-\u007E]*$/, L2 = Object.prototype.toString, n2 = (() => {
    const t20 = function() {
    };
    return t20.prototype = /* @__PURE__ */ Object.create(null), t20;
  })();
  function i2(t20, e3, o3) {
    do {
      const o4 = t20.charCodeAt(e3);
      if (32 !== o4 && 9 !== o4) return e3;
    } while (++e3 < o3);
    return o3;
  }
  function s2(t20, e3, o3) {
    for (; e3 > o3; ) {
      const o4 = t20.charCodeAt(--e3);
      if (32 !== o4 && 9 !== o4) return e3 + 1;
    }
    return o3;
  }
  function d2(t20) {
    if (-1 === t20.indexOf("%")) return t20;
    try {
      return decodeURIComponent(t20);
    } catch (e3) {
      return t20;
    }
  }
}();
/**
 * react-router v7.1.5
 *
 * Copyright (c) Remix Software Inc.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE.md file in the root directory of this source tree.
 *
 * @license MIT
 */
var Cs = "popstate";
function xs(t19 = {}) {
  return function(t20, e2, o2, r2 = {}) {
    let { window: L2 = document.defaultView, v5Compat: n2 = false } = r2, i2 = L2.history, s2 = "POP", d2 = null, k2 = h2();
    null == k2 && (k2 = 0, i2.replaceState({ ...i2.state, idx: k2 }, ""));
    function h2() {
      return (i2.state || { idx: null }).idx;
    }
    function a2() {
      s2 = "POP";
      let t21 = h2(), e3 = null == t21 ? null : t21 - k2;
      k2 = t21, d2 && d2({ action: s2, location: l2.location, delta: e3 });
    }
    function u2(t21, e3) {
      s2 = "PUSH";
      let o3 = Os(l2.location, t21, e3);
      k2 = h2() + 1;
      let r3 = Ts(o3, k2), a3 = l2.createHref(o3);
      try {
        i2.pushState(r3, "", a3);
      } catch (t22) {
        if (t22 instanceof DOMException && "DataCloneError" === t22.name) throw t22;
        L2.location.assign(a3);
      }
      n2 && d2 && d2({ action: s2, location: l2.location, delta: 1 });
    }
    function p2(t21, e3) {
      s2 = "REPLACE";
      let o3 = Os(l2.location, t21, e3);
      k2 = h2();
      let r3 = Ts(o3, k2), L3 = l2.createHref(o3);
      i2.replaceState(r3, "", L3), n2 && d2 && d2({ action: s2, location: l2.location, delta: 0 });
    }
    function c2(t21) {
      let e3 = "null" !== L2.location.origin ? L2.location.origin : L2.location.href, o3 = "string" == typeof t21 ? t21 : Ss(t21);
      return o3 = o3.replace(/ $/, "%20"), Vs(e3, `No window.location.(origin|href) available to create URL for href: ${o3}`), new URL(o3, e3);
    }
    let l2 = { get action() {
      return s2;
    }, get location() {
      return t20(L2, i2);
    }, listen(t21) {
      if (d2) throw new Error("A history only accepts one active listener");
      return L2.addEventListener(Cs, a2), d2 = t21, () => {
        L2.removeEventListener(Cs, a2), d2 = null;
      };
    }, createHref: (t21) => e2(L2, t21), createURL: c2, encodeLocation(t21) {
      let e3 = c2(t21);
      return { pathname: e3.pathname, search: e3.search, hash: e3.hash };
    }, push: u2, replace: p2, go: (t21) => i2.go(t21) };
    return l2;
  }(function(t20, e2) {
    let { pathname: o2, search: r2, hash: L2 } = t20.location;
    return Os("", { pathname: o2, search: r2, hash: L2 }, e2.state && e2.state.usr || null, e2.state && e2.state.key || "default");
  }, function(t20, e2) {
    return "string" == typeof e2 ? e2 : Ss(e2);
  }, 0, t19);
}
function Vs(t19, e2) {
  if (false === t19 || null == t19) throw new Error(e2);
}
function Hs(t19, e2) {
  if (!t19) {
    "undefined" != typeof console && console.warn(e2);
    try {
      throw new Error(e2);
    } catch (t20) {
    }
  }
}
function Ts(t19, e2) {
  return { usr: t19.state, key: t19.key, idx: e2 };
}
function Os(t19, e2, o2 = null, r2) {
  return { pathname: "string" == typeof t19 ? t19 : t19.pathname, search: "", hash: "", ..."string" == typeof e2 ? Zs(e2) : e2, state: o2, key: e2 && e2.key || r2 || Math.random().toString(36).substring(2, 10) };
}
function Ss({ pathname: t19 = "/", search: e2 = "", hash: o2 = "" }) {
  return e2 && "?" !== e2 && (t19 += "?" === e2.charAt(0) ? e2 : "?" + e2), o2 && "#" !== o2 && (t19 += "#" === o2.charAt(0) ? o2 : "#" + o2), t19;
}
function Zs(t19) {
  let e2 = {};
  if (t19) {
    let o2 = t19.indexOf("#");
    o2 >= 0 && (e2.hash = t19.substring(o2), t19 = t19.substring(0, o2));
    let r2 = t19.indexOf("?");
    r2 >= 0 && (e2.search = t19.substring(r2), t19 = t19.substring(0, r2)), t19 && (e2.pathname = t19);
  }
  return e2;
}
function Es(t19, e2, o2 = "/") {
  return function(t20, e3, o3, r2) {
    let L2 = "string" == typeof e3 ? Zs(e3) : e3, n2 = Xs(L2.pathname || "/", o3);
    if (null == n2) return null;
    let i2 = Ps(t20);
    !function(t21) {
      t21.sort((t22, e4) => t22.score !== e4.score ? e4.score - t22.score : function(t23, e5) {
        let o4 = t23.length === e5.length && t23.slice(0, -1).every((t24, o5) => t24 === e5[o5]);
        return o4 ? t23[t23.length - 1] - e5[e5.length - 1] : 0;
      }(t22.routesMeta.map((t23) => t23.childrenIndex), e4.routesMeta.map((t23) => t23.childrenIndex)));
    }(i2);
    let s2 = null;
    for (let t21 = 0; null == s2 && t21 < i2.length; ++t21) {
      let e4 = Ys(n2);
      s2 = Us(i2[t21], e4, r2);
    }
    return s2;
  }(t19, e2, o2, false);
}
function Ps(t19, e2 = [], o2 = [], r2 = "") {
  let L2 = (t20, L3, n2) => {
    let i2 = { relativePath: void 0 === n2 ? t20.path || "" : n2, caseSensitive: true === t20.caseSensitive, childrenIndex: L3, route: t20 };
    i2.relativePath.startsWith("/") && (Vs(i2.relativePath.startsWith(r2), `Absolute route path "${i2.relativePath}" nested under path "${r2}" is not valid. An absolute child route path must start with the combined path of all its parent routes.`), i2.relativePath = i2.relativePath.slice(r2.length));
    let s2 = Qs([r2, i2.relativePath]), d2 = o2.concat(i2);
    t20.children && t20.children.length > 0 && (Vs(true !== t20.index, `Index routes must not have child routes. Please remove all child routes from route path "${s2}".`), Ps(t20.children, e2, d2, s2)), (null != t20.path || t20.index) && e2.push({ path: s2, score: Fs(s2, t20.index), routesMeta: d2 });
  };
  return t19.forEach((t20, e3) => {
    var _a3;
    if ("" !== t20.path && ((_a3 = t20.path) == null ? void 0 : _a3.includes("?"))) for (let o3 of Ns(t20.path)) L2(t20, e3, o3);
    else L2(t20, e3);
  }), e2;
}
function Ns(t19) {
  let e2 = t19.split("/");
  if (0 === e2.length) return [];
  let [o2, ...r2] = e2, L2 = o2.endsWith("?"), n2 = o2.replace(/\?$/, "");
  if (0 === r2.length) return L2 ? [n2, ""] : [n2];
  let i2 = Ns(r2.join("/")), s2 = [];
  return s2.push(...i2.map((t20) => "" === t20 ? n2 : [n2, t20].join("/"))), L2 && s2.push(...i2), s2.map((e3) => t19.startsWith("/") && "" === e3 ? "/" : e3);
}
var As = /^:[\w-]+$/, Rs = 3, Ds = 2, qs = 1, zs = 10, Bs = -2, Is = (t19) => "*" === t19;
function Fs(t19, e2) {
  let o2 = t19.split("/"), r2 = o2.length;
  return o2.some(Is) && (r2 += Bs), e2 && (r2 += Ds), o2.filter((t20) => !Is(t20)).reduce((t20, e3) => t20 + (As.test(e3) ? Rs : "" === e3 ? qs : zs), r2);
}
function Us(t19, e2, o2 = false) {
  let { routesMeta: r2 } = t19, L2 = {}, n2 = "/", i2 = [];
  for (let t20 = 0; t20 < r2.length; ++t20) {
    let s2 = r2[t20], d2 = t20 === r2.length - 1, k2 = "/" === n2 ? e2 : e2.slice(n2.length) || "/", h2 = $s({ path: s2.relativePath, caseSensitive: s2.caseSensitive, end: d2 }, k2), a2 = s2.route;
    if (!h2 && d2 && o2 && !r2[r2.length - 1].route.index && (h2 = $s({ path: s2.relativePath, caseSensitive: s2.caseSensitive, end: false }, k2)), !h2) return null;
    Object.assign(L2, h2.params), i2.push({ params: L2, pathname: Qs([n2, h2.pathname]), pathnameBase: td(Qs([n2, h2.pathnameBase])), route: a2 }), "/" !== h2.pathnameBase && (n2 = Qs([n2, h2.pathnameBase]));
  }
  return i2;
}
function $s(t19, e2) {
  "string" == typeof t19 && (t19 = { path: t19, caseSensitive: false, end: true });
  let [o2, r2] = function(t20, e3 = false, o3 = true) {
    Hs("*" === t20 || !t20.endsWith("*") || t20.endsWith("/*"), `Route path "${t20}" will be treated as if it were "${t20.replace(/\*$/, "/*")}" because the \`*\` character must always follow a \`/\` in the pattern. To get rid of this warning, please change the route path to "${t20.replace(/\*$/, "/*")}".`);
    let r3 = [], L3 = "^" + t20.replace(/\/*\*?$/, "").replace(/^\/*/, "/").replace(/[\\.*+^${}|()[\]]/g, "\\$&").replace(/\/:([\w-]+)(\?)?/g, (t21, e4, o4) => (r3.push({ paramName: e4, isOptional: null != o4 }), o4 ? "/?([^\\/]+)?" : "/([^\\/]+)"));
    t20.endsWith("*") ? (r3.push({ paramName: "*" }), L3 += "*" === t20 || "/*" === t20 ? "(.*)$" : "(?:\\/(.+)|\\/*)$") : o3 ? L3 += "\\/*$" : "" !== t20 && "/" !== t20 && (L3 += "(?:(?=\\/|$))");
    let n3 = new RegExp(L3, e3 ? void 0 : "i");
    return [n3, r3];
  }(t19.path, t19.caseSensitive, t19.end), L2 = e2.match(o2);
  if (!L2) return null;
  let n2 = L2[0], i2 = n2.replace(/(.)\/+$/, "$1"), s2 = L2.slice(1);
  return { params: r2.reduce((t20, { paramName: e3, isOptional: o3 }, r3) => {
    if ("*" === e3) {
      let t21 = s2[r3] || "";
      i2 = n2.slice(0, n2.length - t21.length).replace(/(.)\/+$/, "$1");
    }
    const L3 = s2[r3];
    return t20[e3] = o3 && !L3 ? void 0 : (L3 || "").replace(/%2F/g, "/"), t20;
  }, {}), pathname: n2, pathnameBase: i2, pattern: t19 };
}
function Ys(t19) {
  try {
    return t19.split("/").map((t20) => decodeURIComponent(t20).replace(/\//g, "%2F")).join("/");
  } catch (e2) {
    return Hs(false, `The URL path "${t19}" could not be decoded because it is a malformed URL segment. This is probably due to a bad percent encoding (${e2}).`), t19;
  }
}
function Xs(t19, e2) {
  if ("/" === e2) return t19;
  if (!t19.toLowerCase().startsWith(e2.toLowerCase())) return null;
  let o2 = e2.endsWith("/") ? e2.length - 1 : e2.length, r2 = t19.charAt(o2);
  return r2 && "/" !== r2 ? null : t19.slice(o2) || "/";
}
function Gs(t19, e2, o2, r2) {
  return `Cannot include a '${t19}' character in a manually specified \`to.${e2}\` field [${JSON.stringify(r2)}].  Please separate it out to the \`to.${o2}\` field. Alternatively you may provide the full path as a string in <Link to="..."> and the router will parse it for you.`;
}
function Ks(t19) {
  let e2 = function(t20) {
    return t20.filter((t21, e3) => 0 === e3 || t21.route.path && t21.route.path.length > 0);
  }(t19);
  return e2.map((t20, o2) => o2 === e2.length - 1 ? t20.pathname : t20.pathnameBase);
}
function Js(t19, e2, o2, r2 = false) {
  let L2;
  "string" == typeof t19 ? L2 = Zs(t19) : (L2 = { ...t19 }, Vs(!L2.pathname || !L2.pathname.includes("?"), Gs("?", "pathname", "search", L2)), Vs(!L2.pathname || !L2.pathname.includes("#"), Gs("#", "pathname", "hash", L2)), Vs(!L2.search || !L2.search.includes("#"), Gs("#", "search", "hash", L2)));
  let n2, i2 = "" === t19 || "" === L2.pathname, s2 = i2 ? "/" : L2.pathname;
  if (null == s2) n2 = o2;
  else {
    let t20 = e2.length - 1;
    if (!r2 && s2.startsWith("..")) {
      let e3 = s2.split("/");
      for (; ".." === e3[0]; ) e3.shift(), t20 -= 1;
      L2.pathname = e3.join("/");
    }
    n2 = t20 >= 0 ? e2[t20] : "/";
  }
  let d2 = function(t20, e3 = "/") {
    let { pathname: o3, search: r3 = "", hash: L3 = "" } = "string" == typeof t20 ? Zs(t20) : t20, n3 = o3 ? o3.startsWith("/") ? o3 : function(t21, e4) {
      let o4 = e4.replace(/\/+$/, "").split("/");
      return t21.split("/").forEach((t22) => {
        ".." === t22 ? o4.length > 1 && o4.pop() : "." !== t22 && o4.push(t22);
      }), o4.length > 1 ? o4.join("/") : "/";
    }(o3, e3) : e3;
    return { pathname: n3, search: ed(r3), hash: od(L3) };
  }(L2, n2), k2 = s2 && "/" !== s2 && s2.endsWith("/"), h2 = (i2 || "." === s2) && o2.endsWith("/");
  return d2.pathname.endsWith("/") || !k2 && !h2 || (d2.pathname += "/"), d2;
}
var Qs = (t19) => t19.join("/").replace(/\/\/+/g, "/"), td = (t19) => t19.replace(/\/+$/, "").replace(/^\/*/, "/"), ed = (t19) => t19 && "?" !== t19 ? t19.startsWith("?") ? t19 : "?" + t19 : "", od = (t19) => t19 && "#" !== t19 ? t19.startsWith("#") ? t19 : "#" + t19 : "";
var rd = ["POST", "PUT", "PATCH", "DELETE"];
new Set(rd);
var Ld = ["GET", ...rd];
new Set(Ld);
var nd = B(null);
nd.displayName = "DataRouter";
var id = B(null);
id.displayName = "DataRouterState";
var sd = B({ isTransitioning: false });
sd.displayName = "ViewTransition", B(/* @__PURE__ */ new Map()).displayName = "Fetchers", B(null).displayName = "Await";
var dd = B(null);
dd.displayName = "Navigation";
var kd = B(null);
kd.displayName = "Location";
var hd = B({ outlet: null, matches: [], isDataRoute: false });
hd.displayName = "Route";
var ad = B(null);
function ud() {
  return null != ct(kd);
}
function pd() {
  return Vs(ud(), "useLocation() may be used only in the context of a <Router> component."), ct(kd).location;
}
ad.displayName = "RouteError";
var cd = "You should call navigate() in a React.useEffect(), not when your component is first rendered.";
function ld(t19) {
  ct(dd).static || kt(t19);
}
function wd() {
  let { isDataRoute: t19 } = ct(hd);
  return t19 ? function() {
    let { router: t20 } = function(t21) {
      let e3 = ct(nd);
      return Vs(e3, gd(t21)), e3;
    }("useNavigate"), e2 = _d("useNavigate"), o2 = ht(false);
    return ld(() => {
      o2.current = true;
    }), pt(async (r2, L2 = {}) => {
      Hs(o2.current, cd), o2.current && ("number" == typeof r2 ? t20.navigate(r2) : await t20.navigate(r2, { fromRouteId: e2, ...L2 }));
    }, [t20, e2]);
  }() : function() {
    Vs(ud(), "useNavigate() may be used only in the context of a <Router> component.");
    let t20 = ct(nd), { basename: e2, navigator: o2 } = ct(dd), { matches: r2 } = ct(hd), { pathname: L2 } = pd(), n2 = JSON.stringify(Ks(r2)), i2 = ht(false);
    ld(() => {
      i2.current = true;
    });
    let s2 = pt((r3, s3 = {}) => {
      if (Hs(i2.current, cd), !i2.current) return;
      if ("number" == typeof r3) return void o2.go(r3);
      let d2 = Js(r3, JSON.parse(n2), L2, "path" === s3.relative);
      null == t20 && "/" !== e2 && (d2.pathname = "/" === d2.pathname ? e2 : Qs([e2, d2.pathname])), (s3.replace ? o2.replace : o2.push)(d2, s3.state, s3);
    }, [e2, o2, n2, L2, t20]);
    return s2;
  }();
}
function Md(t19, { relative: e2 } = {}) {
  let { matches: o2 } = ct(hd), { pathname: r2 } = pd(), L2 = JSON.stringify(Ks(o2));
  return ut(() => Js(t19, JSON.parse(L2), r2, "path" === e2), [t19, L2, r2, e2]);
}
function fd(t19, e2, o2, r2) {
  var _a3;
  Vs(ud(), "useRoutes() may be used only in the context of a <Router> component.");
  let { navigator: L2, static: n2 } = ct(dd), { matches: i2 } = ct(hd), s2 = i2[i2.length - 1], d2 = s2 ? s2.params : {}, k2 = s2 ? s2.pathname : "/", h2 = s2 ? s2.pathnameBase : "/", a2 = s2 && s2.route;
  {
    let t20 = a2 && a2.path || "";
    bd(k2, !a2 || t20.endsWith("*") || t20.endsWith("*?"), `You rendered descendant <Routes> (or called \`useRoutes()\`) at "${k2}" (under <Route path="${t20}">) but the parent route path has no trailing "*". This means if you navigate deeper, the parent won't match anymore and therefore the child routes will never render.

Please change the parent <Route path="${t20}"> to <Route path="${"/" === t20 ? "*" : `${t20}/*`}">.`);
  }
  let u2, p2 = pd();
  if (e2) {
    let t20 = "string" == typeof e2 ? Zs(e2) : e2;
    Vs("/" === h2 || ((_a3 = t20.pathname) == null ? void 0 : _a3.startsWith(h2)), `When overriding the location using \`<Routes location>\` or \`useRoutes(routes, location)\`, the location pathname must begin with the portion of the URL pathname that was matched by all parent routes. The current pathname base is "${h2}" but pathname "${t20.pathname}" was given in the \`location\` prop.`), u2 = t20;
  } else u2 = p2;
  let c2 = u2.pathname || "/", l2 = c2;
  if ("/" !== h2) {
    let t20 = h2.replace(/^\//, "").split("/");
    l2 = "/" + c2.replace(/^\//, "").split("/").slice(t20.length).join("/");
  }
  let w2 = !n2 && o2 && o2.matches && o2.matches.length > 0 ? o2.matches : Es(t19, { pathname: l2 });
  Hs(a2 || null != w2, `No routes matched location "${u2.pathname}${u2.search}${u2.hash}" `), Hs(null == w2 || void 0 !== w2[w2.length - 1].route.element || void 0 !== w2[w2.length - 1].route.Component || void 0 !== w2[w2.length - 1].route.lazy, `Matched leaf route at location "${u2.pathname}${u2.search}${u2.hash}" does not have an element or Component. This means it will render an <Outlet /> with a null value by default resulting in an "empty" page.`);
  let M2 = function(t20, e3 = [], o3 = null) {
    if (null == t20) {
      if (!o3) return null;
      if (o3.errors) t20 = o3.matches;
      else {
        if (0 !== e3.length || o3.initialized || !(o3.matches.length > 0)) return null;
        t20 = o3.matches;
      }
    }
    let r3 = t20, L3 = o3 == null ? void 0 : o3.errors;
    if (null != L3) {
      let t21 = r3.findIndex((t22) => t22.route.id && void 0 !== (L3 == null ? void 0 : L3[t22.route.id]));
      Vs(t21 >= 0, `Could not find a matching route for errors on route IDs: ${Object.keys(L3).join(",")}`), r3 = r3.slice(0, Math.min(r3.length, t21 + 1));
    }
    let n3 = false, i3 = -1;
    if (o3) for (let t21 = 0; t21 < r3.length; t21++) {
      let e4 = r3[t21];
      if ((e4.route.HydrateFallback || e4.route.hydrateFallbackElement) && (i3 = t21), e4.route.id) {
        let { loaderData: t22, errors: L4 } = o3, s3 = e4.route.loader && !t22.hasOwnProperty(e4.route.id) && (!L4 || void 0 === L4[e4.route.id]);
        if (e4.route.lazy || s3) {
          n3 = true, r3 = i3 >= 0 ? r3.slice(0, i3 + 1) : [r3[0]];
          break;
        }
      }
    }
    return r3.reduceRight((t21, s3, d3) => {
      let k3, h3 = false, a3 = null, u3 = null;
      o3 && (k3 = L3 && s3.route.id ? L3[s3.route.id] : void 0, a3 = s3.route.errorElement || jd, n3 && (i3 < 0 && 0 === d3 ? (bd("route-fallback", false, "No `HydrateFallback` element provided to render during initial hydration"), h3 = true, u3 = null) : i3 === d3 && (h3 = true, u3 = s3.route.hydrateFallbackElement || null)));
      let p3 = e3.concat(r3.slice(0, d3 + 1)), c3 = () => {
        let e4;
        return e4 = k3 ? a3 : h3 ? u3 : s3.route.Component ? f(s3.route.Component, null) : s3.route.element ? s3.route.element : t21, f(vd, { match: s3, routeContext: { outlet: t21, matches: p3, isDataRoute: null != o3 }, children: e4 });
      };
      return o3 && (s3.route.ErrorBoundary || s3.route.errorElement || 0 === d3) ? f(md, { location: o3.location, revalidation: o3.revalidation, component: a3, error: k3, children: c3(), routeContext: { outlet: null, matches: p3, isDataRoute: true } }) : c3();
    }, null);
  }(w2 && w2.map((t20) => Object.assign({}, t20, { params: Object.assign({}, d2, t20.params), pathname: Qs([h2, L2.encodeLocation ? L2.encodeLocation(t20.pathname).pathname : t20.pathname]), pathnameBase: "/" === t20.pathnameBase ? h2 : Qs([h2, L2.encodeLocation ? L2.encodeLocation(t20.pathnameBase).pathname : t20.pathnameBase]) })), i2, o2, r2);
  return e2 && M2 ? f(kd.Provider, { value: { location: { pathname: "/", search: "", hash: "", state: null, key: "default", ...u2 }, navigationType: "POP" } }, M2) : M2;
}
function Wd() {
  let t19 = function() {
    var _a3;
    let t20 = ct(ad), e3 = function(t21) {
      let e4 = ct(id);
      return Vs(e4, gd(t21)), e4;
    }("useRouteError"), o3 = _d("useRouteError");
    if (void 0 !== t20) return t20;
    return (_a3 = e3.errors) == null ? void 0 : _a3[o3];
  }(), e2 = function(t20) {
    return null != t20 && "number" == typeof t20.status && "string" == typeof t20.statusText && "boolean" == typeof t20.internal && "data" in t20;
  }(t19) ? `${t19.status} ${t19.statusText}` : t19 instanceof Error ? t19.message : JSON.stringify(t19), o2 = t19 instanceof Error ? t19.stack : null, r2 = "rgba(200,200,200, 0.5)", L2 = { padding: "0.5rem", backgroundColor: r2 }, n2 = { padding: "2px 4px", backgroundColor: r2 }, i2 = null;
  return console.error("Error handled by React Router default ErrorBoundary:", t19), i2 = f(m, null, f("p", null, "💿 Hey developer 👋"), f("p", null, "You can provide a way better UX than this when your app throws errors by providing your own ", f("code", { style: n2 }, "ErrorBoundary"), " or", " ", f("code", { style: n2 }, "errorElement"), " prop on your route.")), f(m, null, f("h2", null, "Unexpected Application Error!"), f("h3", { style: { fontStyle: "italic" } }, e2), o2 ? f("pre", { style: L2 }, o2) : null, i2);
}
B(null);
var jd = f(Wd, null), md = class extends v {
  constructor(t19) {
    super(t19), this.state = { location: t19.location, revalidation: t19.revalidation, error: t19.error };
  }
  static getDerivedStateFromError(t19) {
    return { error: t19 };
  }
  static getDerivedStateFromProps(t19, e2) {
    return e2.location !== t19.location || "idle" !== e2.revalidation && "idle" === t19.revalidation ? { error: t19.error, location: t19.location, revalidation: t19.revalidation } : { error: void 0 !== t19.error ? t19.error : e2.error, location: e2.location, revalidation: t19.revalidation || e2.revalidation };
  }
  componentDidCatch(t19, e2) {
    console.error("React Router caught the following error during render", t19, e2);
  }
  render() {
    return void 0 !== this.state.error ? f(hd.Provider, { value: this.props.routeContext }, f(ad.Provider, { value: this.state.error, children: this.props.component })) : this.props.children;
  }
};
function vd({ routeContext: t19, match: e2, children: o2 }) {
  let r2 = ct(nd);
  return r2 && r2.static && r2.staticContext && (e2.route.errorElement || e2.route.ErrorBoundary) && (r2.staticContext._deepestRenderedBoundaryId = e2.route.id), f(hd.Provider, { value: t19 }, o2);
}
function gd(t19) {
  return `${t19} must be used within a data router.  See https://reactrouter.com/en/main/routers/picking-a-router.`;
}
function _d(t19) {
  let e2 = function(t20) {
    let e3 = ct(hd);
    return Vs(e3, gd(t20)), e3;
  }(t19), o2 = e2.matches[e2.matches.length - 1];
  return Vs(o2.route.id, `${t19} can only be used on routes that contain a unique "id"`), o2.route.id;
}
var yd = {};
function bd(t19, e2, o2) {
  e2 || yd[t19] || (yd[t19] = true, Hs(false, o2));
}
function Cd(t19) {
  Vs(false, "A <Route> is only ever to be used as the child of <Routes> element, never rendered directly. Please wrap your <Route> in a <Routes>.");
}
function xd({ basename: t19 = "/", children: e2 = null, location: o2, navigationType: r2 = "POP", navigator: L2, static: n2 = false }) {
  Vs(!ud(), "You cannot render a <Router> inside another <Router>. You should never have more than one in your app.");
  let i2 = t19.replace(/^\/*/, "/"), s2 = ut(() => ({ basename: i2, navigator: L2, static: n2, future: {} }), [i2, L2, n2]);
  "string" == typeof o2 && (o2 = Zs(o2));
  let { pathname: d2 = "/", search: k2 = "", hash: h2 = "", state: a2 = null, key: u2 = "default" } = o2, p2 = ut(() => {
    let t20 = Xs(d2, i2);
    return null == t20 ? null : { location: { pathname: t20, search: k2, hash: h2, state: a2, key: u2 }, navigationType: r2 };
  }, [i2, d2, k2, h2, a2, u2, r2]);
  return Hs(null != p2, `<Router basename="${i2}"> is not able to match the URL "${d2}${k2}${h2}" because it does not start with the basename, so the <Router> won't render anything.`), null == p2 ? null : f(dd.Provider, { value: s2 }, f(kd.Provider, { children: e2, value: p2 }));
}
function Vd({ children: t19, location: e2 }) {
  return fd(Hd(t19), e2);
}
function Hd(t19, e2 = []) {
  let o2 = [];
  return At.forEach(t19, (t20, r2) => {
    if (!we(t20)) return;
    let L2 = [...e2, r2];
    if (t20.type === m) return void o2.push.apply(o2, Hd(t20.props.children, L2));
    Vs(t20.type === Cd, `[${"string" == typeof t20.type ? t20.type : t20.type.name}] is not a <Route> component. All component children of <Routes> must be a <Route> or <React.Fragment>`), Vs(!t20.props.index || !t20.props.children, "An index route cannot have child routes.");
    let n2 = { id: t20.props.id || L2.join("-"), caseSensitive: t20.props.caseSensitive, element: t20.props.element, Component: t20.props.Component, index: t20.props.index, path: t20.props.path, loader: t20.props.loader, action: t20.props.action, hydrateFallbackElement: t20.props.hydrateFallbackElement, HydrateFallback: t20.props.HydrateFallback, errorElement: t20.props.errorElement, ErrorBoundary: t20.props.ErrorBoundary, hasErrorBoundary: true === t20.props.hasErrorBoundary || null != t20.props.ErrorBoundary || null != t20.props.errorElement, shouldRevalidate: t20.props.shouldRevalidate, handle: t20.props.handle, lazy: t20.props.lazy };
    t20.props.children && (n2.children = Hd(t20.props.children, L2)), o2.push(n2);
  }), o2;
}
St(function({ routes: t19, future: e2, state: o2 }) {
  return fd(t19, void 0, o2, e2);
});
var Td = "get", Od = "application/x-www-form-urlencoded";
function Sd(t19) {
  return null != t19 && "string" == typeof t19.tagName;
}
var Zd = null;
var Ed = /* @__PURE__ */ new Set(["application/x-www-form-urlencoded", "multipart/form-data", "text/plain"]);
function Pd(t19) {
  return null == t19 || Ed.has(t19) ? t19 : (Hs(false, `"${t19}" is not a valid \`encType\` for \`<Form>\`/\`<fetcher.Form>\` and will default to "${Od}"`), null);
}
function Nd(t19, e2) {
  let o2, r2, L2, n2, i2;
  if (Sd(s2 = t19) && "form" === s2.tagName.toLowerCase()) {
    let i3 = t19.getAttribute("action");
    r2 = i3 ? Xs(i3, e2) : null, o2 = t19.getAttribute("method") || Td, L2 = Pd(t19.getAttribute("enctype")) || Od, n2 = new FormData(t19);
  } else if (function(t20) {
    return Sd(t20) && "button" === t20.tagName.toLowerCase();
  }(t19) || function(t20) {
    return Sd(t20) && "input" === t20.tagName.toLowerCase();
  }(t19) && ("submit" === t19.type || "image" === t19.type)) {
    let i3 = t19.form;
    if (null == i3) throw new Error('Cannot submit a <button> or <input type="submit"> without a <form>');
    let s3 = t19.getAttribute("formaction") || i3.getAttribute("action");
    if (r2 = s3 ? Xs(s3, e2) : null, o2 = t19.getAttribute("formmethod") || i3.getAttribute("method") || Td, L2 = Pd(t19.getAttribute("formenctype")) || Pd(i3.getAttribute("enctype")) || Od, n2 = new FormData(i3, t19), !function() {
      if (null === Zd) try {
        new FormData(document.createElement("form"), 0), Zd = false;
      } catch (t20) {
        Zd = true;
      }
      return Zd;
    }()) {
      let { name: e3, type: o3, value: r3 } = t19;
      if ("image" === o3) {
        let t20 = e3 ? `${e3}.` : "";
        n2.append(`${t20}x`, "0"), n2.append(`${t20}y`, "0");
      } else e3 && n2.append(e3, r3);
    }
  } else {
    if (Sd(t19)) throw new Error('Cannot submit element that is not <form>, <button>, or <input type="submit|image">');
    o2 = Td, r2 = null, L2 = Od, i2 = t19;
  }
  var s2;
  return n2 && "text/plain" === L2 && (i2 = n2, n2 = void 0), { action: r2, method: o2.toLowerCase(), encType: L2, formData: n2, body: i2 };
}
function Ad(t19, e2) {
  if (false === t19 || null == t19) throw new Error(e2);
}
function Rd(t19) {
  return null != t19 && (null == t19.href ? "preload" === t19.rel && "string" == typeof t19.imageSrcSet && "string" == typeof t19.imageSizes : "string" == typeof t19.rel && "string" == typeof t19.href);
}
async function Dd(t19, e2, o2) {
  return function(t20, e3) {
    let o3 = /* @__PURE__ */ new Set();
    return new Set(e3), t20.reduce((t21, e4) => {
      let r2 = JSON.stringify(function(t22) {
        let e5 = {}, o4 = Object.keys(t22).sort();
        for (let r3 of o4) e5[r3] = t22[r3];
        return e5;
      }(e4));
      return o3.has(r2) || (o3.add(r2), t21.push({ key: r2, link: e4 })), t21;
    }, []);
  }((await Promise.all(t19.map(async (t20) => {
    let r2 = e2.routes[t20.route.id];
    if (r2) {
      let t21 = await async function(t22, e3) {
        if (t22.id in e3) return e3[t22.id];
        try {
          let o3 = await import(t22.module);
          return e3[t22.id] = o3, o3;
        } catch (e4) {
          return console.error(`Error loading route module \`${t22.module}\`, reloading page...`), console.error(e4), window.__reactRouterContext && window.__reactRouterContext.isSpaMode, window.location.reload(), new Promise(() => {
          });
        }
      }(r2, o2);
      return t21.links ? t21.links() : [];
    }
    return [];
  }))).flat(1).filter(Rd).filter((t20) => "stylesheet" === t20.rel || "preload" === t20.rel).map((t20) => "stylesheet" === t20.rel ? { ...t20, rel: "prefetch", as: "style" } : { ...t20, rel: "prefetch" }));
}
function qd(t19, e2, o2, r2, L2, n2) {
  let i2 = (t20, e3) => !o2[e3] || t20.route.id !== o2[e3].route.id, s2 = (t20, e3) => {
    var _a3;
    return o2[e3].pathname !== t20.pathname || ((_a3 = o2[e3].route.path) == null ? void 0 : _a3.endsWith("*")) && o2[e3].params["*"] !== t20.params["*"];
  };
  return "assets" === n2 ? e2.filter((t20, e3) => i2(t20, e3) || s2(t20, e3)) : "data" === n2 ? e2.filter((e3, n3) => {
    var _a3;
    let d2 = r2.routes[e3.route.id];
    if (!d2 || !d2.hasLoader) return false;
    if (i2(e3, n3) || s2(e3, n3)) return true;
    if (e3.route.shouldRevalidate) {
      let r3 = e3.route.shouldRevalidate({ currentUrl: new URL(L2.pathname + L2.search + L2.hash, window.origin), currentParams: ((_a3 = o2[0]) == null ? void 0 : _a3.params) || {}, nextUrl: new URL(t19, window.origin), nextParams: e3.params, defaultShouldRevalidate: true });
      if ("boolean" == typeof r3) return r3;
    }
    return true;
  }) : [];
}
function zd(t19, e2) {
  return o2 = t19.map((t20) => {
    let o3 = e2.routes[t20.route.id];
    if (!o3) return [];
    let r2 = [o3.module];
    return o3.imports && (r2 = r2.concat(o3.imports)), r2;
  }).flat(1), [...new Set(o2)];
  var o2;
}
var Bd = B(void 0);
function Id() {
  let t19 = ct(Bd);
  return Ad(t19, "You must render this element inside a <HydratedRouter> element"), t19;
}
function Fd(t19, e2) {
  return (o2) => {
    t19 && t19(o2), o2.defaultPrevented || e2(o2);
  };
}
function Ud({ page: t19, ...e2 }) {
  let { router: o2 } = function() {
    let t20 = ct(nd);
    return Ad(t20, "You must render this element inside a <DataRouterContext.Provider> element"), t20;
  }(), r2 = ut(() => Es(o2.routes, t19, o2.basename), [o2.routes, t19, o2.basename]);
  return r2 ? f($d, { page: t19, matches: r2, ...e2 }) : null;
}
function $d({ page: t19, matches: e2, ...o2 }) {
  let r2 = pd(), { manifest: L2, routeModules: n2 } = Id(), { loaderData: i2, matches: s2 } = function() {
    let t20 = ct(id);
    return Ad(t20, "You must render this element inside a <DataRouterStateContext.Provider> element"), t20;
  }(), d2 = ut(() => qd(t19, e2, s2, L2, r2, "data"), [t19, e2, s2, L2, r2]), k2 = ut(() => qd(t19, e2, s2, L2, r2, "assets"), [t19, e2, s2, L2, r2]), h2 = ut(() => {
    if (t19 === r2.pathname + r2.search + r2.hash) return [];
    let o3 = /* @__PURE__ */ new Set(), s3 = false;
    if (e2.forEach((t20) => {
      var _a3;
      let e3 = L2.routes[t20.route.id];
      e3 && e3.hasLoader && (!d2.some((e4) => e4.route.id === t20.route.id) && t20.route.id in i2 && ((_a3 = n2[t20.route.id]) == null ? void 0 : _a3.shouldRevalidate) || e3.hasClientLoader ? s3 = true : o3.add(t20.route.id));
    }), 0 === o3.size) return [];
    let k3 = function(t20) {
      let e3 = "string" == typeof t20 ? new URL(t20, "undefined" == typeof window ? "server://singlefetch/" : window.location.origin) : t20;
      return "/" === e3.pathname ? e3.pathname = "_root.data" : e3.pathname = `${e3.pathname.replace(/\/$/, "")}.data`, e3;
    }(t19);
    return s3 && o3.size > 0 && k3.searchParams.set("_routes", e2.filter((t20) => o3.has(t20.route.id)).map((t20) => t20.route.id).join(",")), [k3.pathname + k3.search];
  }, [i2, r2, L2, d2, e2, t19, n2]), a2 = ut(() => zd(k2, L2), [k2, L2]), u2 = function(t20) {
    let { manifest: e3, routeModules: o3 } = Id(), [r3, L3] = it([]);
    return dt(() => {
      let r4 = false;
      return Dd(t20, e3, o3).then((t21) => {
        r4 || L3(t21);
      }), () => {
        r4 = true;
      };
    }, [t20, e3, o3]), r3;
  }(k2);
  return f(m, null, h2.map((t20) => f("link", { key: t20, rel: "prefetch", as: "fetch", href: t20, ...o2 })), a2.map((t20) => f("link", { key: t20, rel: "modulepreload", href: t20, ...o2 })), u2.map(({ key: t20, link: e3 }) => f("link", { key: t20, ...e3 })));
}
function Yd(...t19) {
  return (e2) => {
    t19.forEach((t20) => {
      "function" == typeof t20 ? t20(e2) : null != t20 && (t20.current = e2);
    });
  };
}
Bd.displayName = "FrameworkContext";
var Xd = "undefined" != typeof window && void 0 !== window.document && void 0 !== window.document.createElement;
try {
  Xd && (window.__reactRouterVersion = "7.1.5");
} catch (Q2) {
}
function Gd({ basename: t19, children: e2, window: o2 }) {
  let r2 = ht();
  null == r2.current && (r2.current = xs({ window: o2, v5Compat: true }));
  let L2 = r2.current, [n2, i2] = it({ action: L2.action, location: L2.location }), s2 = pt((t20) => {
    xt(() => i2(t20));
  }, [i2]);
  return kt(() => L2.listen(s2), [L2, s2]), f(xd, { basename: t19, children: e2, location: n2.location, navigationType: n2.action, navigator: L2 });
}
var Kd = /^(?:[a-z][a-z0-9+.-]*:|\/\/)/i, Jd = Pt(function({ onClick: t19, discover: e2 = "render", prefetch: o2 = "none", relative: r2, reloadDocument: L2, replace: n2, state: i2, target: s2, to: d2, preventScrollReset: k2, viewTransition: h2, ...a2 }, u2) {
  let p2, { basename: c2 } = ct(dd), l2 = "string" == typeof d2 && Kd.test(d2), w2 = false;
  if ("string" == typeof d2 && l2 && (p2 = d2, Xd)) try {
    let t20 = new URL(window.location.href), e3 = d2.startsWith("//") ? new URL(t20.protocol + d2) : new URL(d2), o3 = Xs(e3.pathname, c2);
    e3.origin === t20.origin && null != o3 ? d2 = o3 + e3.search + e3.hash : w2 = true;
  } catch (t20) {
    Hs(false, `<Link to="${d2}"> contains an invalid URL which will probably break when clicked - please update to a valid URL path.`);
  }
  let M2 = function(t20, { relative: e3 } = {}) {
    Vs(ud(), "useHref() may be used only in the context of a <Router> component.");
    let { basename: o3, navigator: r3 } = ct(dd), { hash: L3, pathname: n3, search: i3 } = Md(t20, { relative: e3 }), s3 = n3;
    return "/" !== o3 && (s3 = "/" === n3 ? o3 : Qs([o3, n3])), r3.createHref({ pathname: s3, search: i3, hash: L3 });
  }(d2, { relative: r2 }), [W2, j2, v2] = function(t20, e3) {
    let o3 = ct(Bd), [r3, L3] = it(false), [n3, i3] = it(false), { onFocus: s3, onBlur: d3, onMouseEnter: k3, onMouseLeave: h3, onTouchStart: a3 } = e3, u3 = ht(null);
    dt(() => {
      if ("render" === t20 && i3(true), "viewport" === t20) {
        let t21 = new IntersectionObserver((t22) => {
          t22.forEach((t23) => {
            i3(t23.isIntersecting);
          });
        }, { threshold: 0.5 });
        return u3.current && t21.observe(u3.current), () => {
          t21.disconnect();
        };
      }
    }, [t20]), dt(() => {
      if (r3) {
        let t21 = setTimeout(() => {
          i3(true);
        }, 100);
        return () => {
          clearTimeout(t21);
        };
      }
    }, [r3]);
    let p3 = () => {
      L3(true);
    }, c3 = () => {
      L3(false), i3(false);
    };
    return o3 ? "intent" !== t20 ? [n3, u3, {}] : [n3, u3, { onFocus: Fd(s3, p3), onBlur: Fd(d3, c3), onMouseEnter: Fd(k3, p3), onMouseLeave: Fd(h3, c3), onTouchStart: Fd(a3, p3) }] : [false, u3, {}];
  }(o2, a2), g2 = function(t20, { target: e3, replace: o3, state: r3, preventScrollReset: L3, relative: n3, viewTransition: i3 } = {}) {
    let s3 = wd(), d3 = pd(), k3 = Md(t20, { relative: n3 });
    return pt((h3) => {
      if (function(t21, e4) {
        return !(0 !== t21.button || e4 && "_self" !== e4 || function(t22) {
          return !!(t22.metaKey || t22.altKey || t22.ctrlKey || t22.shiftKey);
        }(t21));
      }(h3, e3)) {
        h3.preventDefault();
        let e4 = void 0 !== o3 ? o3 : Ss(d3) === Ss(k3);
        s3(t20, { replace: e4, state: r3, preventScrollReset: L3, relative: n3, viewTransition: i3 });
      }
    }, [d3, s3, k3, o3, r3, e3, t20, L3, n3, i3]);
  }(d2, { replace: n2, state: i2, target: s2, preventScrollReset: k2, relative: r2, viewTransition: h2 });
  let _2 = f("a", { ...a2, ...v2, href: p2 || M2, onClick: w2 || L2 ? t19 : function(e3) {
    t19 && t19(e3), e3.defaultPrevented || g2(e3);
  }, ref: Yd(u2, j2), target: s2, "data-discover": l2 || "render" !== e2 ? void 0 : "true" });
  return W2 && !l2 ? f(m, null, _2, f(Ud, { page: M2 })) : _2;
});
Jd.displayName = "Link";
var Qd = Pt(function({ "aria-current": t19 = "page", caseSensitive: e2 = false, className: o2 = "", end: r2 = false, style: L2, to: n2, viewTransition: i2, children: s2, ...d2 }, k2) {
  let h2 = Md(n2, { relative: d2.relative }), a2 = pd(), u2 = ct(id), { navigator: p2, basename: c2 } = ct(dd), l2 = null != u2 && function(t20, e3 = {}) {
    let o3 = ct(sd);
    Vs(null != o3, "`useViewTransitionState` must be used within `react-router-dom`'s `RouterProvider`.  Did you accidentally import `RouterProvider` from `react-router`?");
    let { basename: r3 } = ek("useViewTransitionState"), L3 = Md(t20, { relative: e3.relative });
    if (!o3.isTransitioning) return false;
    let n3 = Xs(o3.currentLocation.pathname, r3) || o3.currentLocation.pathname, i3 = Xs(o3.nextLocation.pathname, r3) || o3.nextLocation.pathname;
    return null != $s(L3.pathname, i3) || null != $s(L3.pathname, n3);
  }(h2) && true === i2, w2 = p2.encodeLocation ? p2.encodeLocation(h2).pathname : h2.pathname, M2 = a2.pathname, W2 = u2 && u2.navigation && u2.navigation.location ? u2.navigation.location.pathname : null;
  e2 || (M2 = M2.toLowerCase(), W2 = W2 ? W2.toLowerCase() : null, w2 = w2.toLowerCase()), W2 && c2 && (W2 = Xs(W2, c2) || W2);
  const j2 = "/" !== w2 && w2.endsWith("/") ? w2.length - 1 : w2.length;
  let m2, v2 = M2 === w2 || !r2 && M2.startsWith(w2) && "/" === M2.charAt(j2), g2 = null != W2 && (W2 === w2 || !r2 && W2.startsWith(w2) && "/" === W2.charAt(w2.length)), _2 = { isActive: v2, isPending: g2, isTransitioning: l2 }, y2 = v2 ? t19 : void 0;
  m2 = "function" == typeof o2 ? o2(_2) : [o2, v2 ? "active" : null, g2 ? "pending" : null, l2 ? "transitioning" : null].filter(Boolean).join(" ");
  let b2 = "function" == typeof L2 ? L2(_2) : L2;
  return f(Jd, { ...d2, "aria-current": y2, className: m2, ref: k2, style: b2, to: n2, viewTransition: i2 }, "function" == typeof s2 ? s2(_2) : s2);
});
Qd.displayName = "NavLink";
var tk = Pt(({ discover: t19 = "render", fetcherKey: e2, navigate: o2, reloadDocument: r2, replace: L2, state: n2, method: i2 = Td, action: s2, onSubmit: d2, relative: k2, preventScrollReset: h2, viewTransition: a2, ...u2 }, p2) => {
  let c2 = function() {
    let { router: t20 } = ek("useSubmit"), { basename: e3 } = ct(dd), o3 = _d("useRouteId");
    return pt(async (r3, L3 = {}) => {
      let { action: n3, method: i3, encType: s3, formData: d3, body: k3 } = Nd(r3, e3);
      if (false === L3.navigate) {
        let e4 = L3.fetcherKey || rk();
        await t20.fetch(e4, o3, L3.action || n3, { preventScrollReset: L3.preventScrollReset, formData: d3, body: k3, formMethod: L3.method || i3, formEncType: L3.encType || s3, flushSync: L3.flushSync });
      } else await t20.navigate(L3.action || n3, { preventScrollReset: L3.preventScrollReset, formData: d3, body: k3, formMethod: L3.method || i3, formEncType: L3.encType || s3, replace: L3.replace, state: L3.state, fromRouteId: o3, flushSync: L3.flushSync, viewTransition: L3.viewTransition });
    }, [t20, e3, o3]);
  }(), l2 = function(t20, { relative: e3 } = {}) {
    let { basename: o3 } = ct(dd), r3 = ct(hd);
    Vs(r3, "useFormAction must be used inside a RouteContext");
    let [L3] = r3.matches.slice(-1), n3 = { ...Md(t20 || ".", { relative: e3 }) }, i3 = pd();
    if (null == t20) {
      n3.search = i3.search;
      let t21 = new URLSearchParams(n3.search), e4 = t21.getAll("index"), o4 = e4.some((t22) => "" === t22);
      if (o4) {
        t21.delete("index"), e4.filter((t22) => t22).forEach((e5) => t21.append("index", e5));
        let o5 = t21.toString();
        n3.search = o5 ? `?${o5}` : "";
      }
    }
    t20 && "." !== t20 || !L3.route.index || (n3.search = n3.search ? n3.search.replace(/^\?/, "?index&") : "?index");
    "/" !== o3 && (n3.pathname = "/" === n3.pathname ? o3 : Qs([o3, n3.pathname]));
    return Ss(n3);
  }(s2, { relative: k2 }), w2 = "get" === i2.toLowerCase() ? "get" : "post", M2 = "string" == typeof s2 && Kd.test(s2);
  return f("form", { ref: p2, method: w2, action: l2, onSubmit: r2 ? d2 : (t20) => {
    if (d2 && d2(t20), t20.defaultPrevented) return;
    t20.preventDefault();
    let r3 = t20.nativeEvent.submitter, s3 = (r3 == null ? void 0 : r3.getAttribute("formmethod")) || i2;
    c2(r3 || t20.currentTarget, { fetcherKey: e2, method: s3, navigate: o2, replace: L2, state: n2, relative: k2, preventScrollReset: h2, viewTransition: a2 });
  }, ...u2, "data-discover": M2 || "render" !== t19 ? void 0 : "true" });
});
function ek(t19) {
  let e2 = ct(nd);
  return Vs(e2, function(t20) {
    return `${t20} must be used within a data router.  See https://reactrouter.com/en/main/routers/picking-a-router.`;
  }(t19)), e2;
}
tk.displayName = "Form";
var ok = 0, rk = () => `__${String(++ok)}__`;
new TextEncoder();
const Lk = "/masbo_website/assets/MASBO_Logo%202-CZaHQsdR.svg";
function nk() {
  return F(Jd, { className: "logo", to: "/", children: F("img", { className: "icon", src: Lk, alt: "logo" }) });
}
const ik = (t19) => f("svg", { width: 242, height: 171, viewBox: "0 0 242 171", fill: "none", xmlns: "http://www.w3.org/2000/svg", ...t19 }, f("path", { d: "M17.3359 96.9757L14.8417 96.9757", stroke: "white", strokeWidth: 0.146182, strokeMiterlimit: 10, strokeLinecap: "square" }), f("path", { d: "M17.3359 99.4608L14.8417 99.4608", stroke: "white", strokeWidth: 0.146182, strokeMiterlimit: 10, strokeLinecap: "square" }), f("path", { d: "M17.3359 77.2704L14.8417 77.2704", stroke: "white", strokeWidth: 0.146182, strokeMiterlimit: 10, strokeLinecap: "square" }), f("path", { d: "M17.3359 87.0938L14.8417 87.0938", stroke: "white", strokeWidth: 0.146182, strokeMiterlimit: 10, strokeLinecap: "square" }), f("path", { d: "M17.3359 79.814L14.8417 79.814", stroke: "white", strokeWidth: 0.146182, strokeMiterlimit: 10, strokeLinecap: "square" }), f("path", { d: "M17.3359 82.2406L14.8417 82.2406", stroke: "white", strokeWidth: 0.146182, strokeMiterlimit: 10, strokeLinecap: "square" }), f("path", { d: "M17.3359 84.7257L14.8417 84.7257", stroke: "white", strokeWidth: 0.146182, strokeMiterlimit: 10, strokeLinecap: "square" }), f("path", { d: "M17.3354 116.564L14.8412 116.564", stroke: "white", strokeWidth: 0.146182, strokeMiterlimit: 10, strokeLinecap: "square" }), f("path", { d: "M144.583 102.392L144.583 79.1196", stroke: "white", strokeWidth: 0.146182, strokeMiterlimit: 10, strokeLinecap: "square" }), f("path", { d: "M144.583 79.1196L144.583 70.2245", stroke: "white", strokeWidth: 0.146182, strokeMiterlimit: 10, strokeLinecap: "square" }), f("path", { d: "M145.288 114.715L145.288 105.242", stroke: "white", strokeWidth: 0.146182, strokeMiterlimit: 10, strokeLinecap: "square" }), f("path", { d: "M144.583 65.0204L144.583 55.8987", stroke: "white", strokeWidth: 0.146182, strokeMiterlimit: 10, strokeLinecap: "square" }), f("path", { d: "M72.6475 79.1196L82.6655 79.1196", stroke: "white", strokeWidth: 0.146182, strokeMiterlimit: 10, strokeLinecap: "square" }), f("path", { d: "M82.6655 79.1196L97.2402 79.1196", stroke: "white", strokeWidth: 0.146182, strokeMiterlimit: 10, strokeLinecap: "square" }), f("path", { d: "M97.2401 79.1196L107.101 79.1196", stroke: "white", strokeWidth: 0.146182, strokeMiterlimit: 10, strokeLinecap: "square" }), f("path", { d: "M82.6655 103.159L82.6655 79.1196", stroke: "white", strokeWidth: 0.146182, strokeMiterlimit: 10, strokeLinecap: "square" }), f("path", { d: "M82.6655 79.1196L82.6655 70.2245", stroke: "white", strokeWidth: 0.146182, strokeMiterlimit: 10, strokeLinecap: "square" }), f("path", { d: "M97.2402 103.159L97.2402 79.1196", stroke: "white", strokeWidth: 0.146182, strokeMiterlimit: 10, strokeLinecap: "square" }), f("path", { d: "M97.2402 79.1196L97.2402 70.2245", stroke: "white", strokeWidth: 0.146182, strokeMiterlimit: 10, strokeLinecap: "square" }), f("path", { d: "M97.2954 65.0204L97.2954 55.9205", stroke: "white", strokeWidth: 0.146182, strokeMiterlimit: 10, strokeLinecap: "square" }), f("path", { d: "M114.303 16.8315L114.522 17.2335L12.0805 78.4837L12.2998 77.8479L114.303 16.8315Z", stroke: "white", strokeWidth: 0.146182, strokeMiterlimit: 10, strokeLinecap: "square" }), f("path", { d: "M12.2993 77.8478L12.08 78.4837L10.2436 74.8438L10.8329 75.0192L12.2993 77.8478Z", stroke: "white", strokeWidth: 0.146182, strokeMiterlimit: 10, strokeLinecap: "square" }), f("path", { d: "M216.36 66.4091L216.957 66.2337L214.25 70.568L214.14 69.9321L216.36 66.4091Z", stroke: "white", strokeWidth: 0.146182, strokeMiterlimit: 10, strokeLinecap: "square" }), f("path", { d: "M214.14 69.9321L214.25 70.568L127.302 17.2335L127.521 16.8315L214.14 69.9321Z", stroke: "white", strokeWidth: 0.146182, strokeMiterlimit: 10, strokeLinecap: "square" }), f("path", { d: "M216.47 74.4418L216.847 74.6756L214.627 78.9515L214.407 78.3156L216.47 74.4418Z", stroke: "white", strokeWidth: 0.146182, strokeMiterlimit: 10, strokeLinecap: "square" }), f("path", { d: "M214.408 78.3156L214.627 78.9515L127.302 27.2323L127.521 26.8303L214.408 78.3156Z", stroke: "white", strokeWidth: 0.146182, strokeMiterlimit: 10, strokeLinecap: "square" }), f("path", { d: "M114.303 26.8303L114.522 27.2323L26.9773 77.9063L27.1966 77.2704L114.303 26.8303Z", stroke: "white", strokeWidth: 0.146182, strokeMiterlimit: 10, strokeLinecap: "square" }), f("path", { d: "M27.1963 77.2704L26.977 77.9063L24.9762 73.9813L25.6271 74.2079L27.1963 77.2704Z", stroke: "white", strokeWidth: 0.146182, strokeMiterlimit: 10, strokeLinecap: "square" }), f("path", { d: "M40.0376 121.359L40.0376 121.768L22.3724 121.768L22.3724 121.359L40.0376 121.359Z", stroke: "white", strokeWidth: 0.146182, strokeMiterlimit: 10, strokeLinecap: "square" }), f("path", { d: "M22.5918 121.534L22.1053 121.534L22.1053 107.377L22.5918 107.377L22.5918 121.534Z", stroke: "white", strokeWidth: 0.146182, strokeMiterlimit: 10, strokeLinecap: "square" }), f("path", { d: "M240.926 118.589L240.926 119.802L224.117 119.802L223.453 118.589L240.926 118.589Z", stroke: "white", strokeWidth: 0.146182, strokeMiterlimit: 10, strokeLinecap: "square" }), f("path", { d: "M223.451 118.589L224.644 119.802L224.644 167.07L223.451 165.798L223.451 118.589Z", stroke: "white", strokeWidth: 0.146182, strokeMiterlimit: 10, strokeLinecap: "square" }), f("path", { d: "M223.451 165.798L224.644 167.07L74.1608 167.07L74.4828 165.798L223.451 165.798Z", stroke: "white", strokeWidth: 0.146182, strokeMiterlimit: 10, strokeLinecap: "square" }), f("path", { d: "M74.4839 165.798L74.1618 167.07L21.7762 133.726L22.9137 133.031L74.4839 165.798Z", stroke: "white", strokeWidth: 0.146182, strokeMiterlimit: 10, strokeLinecap: "square" }), f("path", { d: "M22.9136 133.039L21.7761 133.726L21.7761 122.207L22.9136 121.001L22.9136 133.039Z", stroke: "white", strokeWidth: 0.146182, strokeMiterlimit: 10, strokeLinecap: "square" }), f("path", { d: "M22.9136 120.957L22.4819 122.17L0.999978 122.17C0.88349 122.17 0.787585 121.9 0.787585 121.571L0.787585 121.564C0.787585 121.235 0.88349 120.964 0.999978 120.964L22.9136 120.964L22.9136 120.957Z", stroke: "white", strokeWidth: 0.146182, strokeMiterlimit: 10, strokeLinecap: "square" }), f("path", { d: "M240.926 122.309L240.926 122.433L226.981 122.433L226.92 122.309L240.926 122.309Z", fill: "#1C6BCF", stroke: "#1C6BCF", strokeWidth: 0.292364, strokeMiterlimit: 10, strokeLinecap: "square" }), f("path", { d: "M226.919 122.287L227.083 122.463L227.083 169.672L226.919 169.497L226.919 122.287Z", fill: "#1C6BCF", stroke: "#1C6BCF", strokeWidth: 0.292364, strokeMiterlimit: 10, strokeLinecap: "square" }), f("path", { d: "M226.919 169.496L227.083 169.672L73.5103 169.672L73.5651 169.497L226.919 169.496Z", fill: "#1C6BCF", stroke: "#1C6BCF", strokeWidth: 0.292364, strokeMiterlimit: 10, strokeLinecap: "square" }), f("path", { d: "M73.5649 169.497L73.5101 169.672L19.3429 135.232L19.4457 135.115L73.5649 169.497Z", fill: "#1C6BCF", stroke: "#1C6BCF", strokeWidth: 0.292364, strokeMiterlimit: 10, strokeLinecap: "square" }), f("path", { d: "M19.4463 135.115L19.3435 135.231L19.3435 124.772L19.4463 124.655L19.4463 135.115Z", stroke: "white", strokeWidth: 0.292364, strokeMiterlimit: 10, strokeLinecap: "square" }), f("path", { d: "M19.4463 124.655L19.4189 124.772L0.780702 124.772L0.780702 124.655L19.4463 124.655Z", stroke: "white", strokeWidth: 0.292364, strokeMiterlimit: 10, strokeLinecap: "square" }), f("path", { d: "M81.5965 65.4881L81.5965 65.0204L107.087 65.0204L107.087 65.4881L81.5965 65.4881Z", stroke: "white", strokeWidth: 0.146182, strokeMiterlimit: 10, strokeLinecap: "square" }), f("path", { d: "M134.722 65.4881L134.722 65.0204L160.171 65.0204L160.171 65.4881L134.722 65.4881Z", stroke: "white", strokeWidth: 0.146182, strokeMiterlimit: 10, strokeLinecap: "square" }), f("path", { d: "M167.949 69.7639L167.949 70.2244L134.722 70.2244L134.722 69.7639L167.949 69.7639Z", stroke: "white", strokeWidth: 0.146182, strokeMiterlimit: 10, strokeLinecap: "square" }), f("path", { d: "M107.073 70.2244L73.5656 70.2244L73.5656 69.7639L107.073 69.7639", stroke: "white", strokeWidth: 0.146182, strokeMiterlimit: 10, strokeLinecap: "square" }), f("path", { d: "M17.3358 74.9023L17.8223 74.9023L17.8223 119.225L17.3358 119.225L17.3358 74.9023Z", stroke: "white", strokeWidth: 0.146182, strokeMiterlimit: 10, strokeLinecap: "square" }), f("path", { d: "M40.2494 119.458L39.8177 118.991L202.114 118.991L201.675 119.458", stroke: "white", strokeWidth: 0.146182, strokeMiterlimit: 10, strokeLinecap: "square" }), f("path", { d: "M198.264 69.3547L196.53 69.3547", stroke: "white", strokeWidth: 0.146182, strokeMiterlimit: 10, strokeLinecap: "square" }), f("path", { d: "M201.676 71.8398L196.53 71.8398", stroke: "white", strokeWidth: 0.146182, strokeMiterlimit: 10, strokeLinecap: "square" }), f("path", { d: "M201.676 74.2664L196.53 74.2664", stroke: "white", strokeWidth: 0.146182, strokeMiterlimit: 10, strokeLinecap: "square" }), f("path", { d: "M201.676 76.7514L196.53 76.7514", stroke: "white", strokeWidth: 0.146182, strokeMiterlimit: 10, strokeLinecap: "square" }), f("path", { d: "M201.676 79.1781L196.53 79.1781", stroke: "white", strokeWidth: 0.146182, strokeMiterlimit: 10, strokeLinecap: "square" }), f("path", { d: "M201.676 81.6631L196.53 81.6631", stroke: "white", strokeWidth: 0.146182, strokeMiterlimit: 10, strokeLinecap: "square" }), f("path", { d: "M201.676 84.0898L196.53 84.0898", stroke: "white", strokeWidth: 0.146182, strokeMiterlimit: 10, strokeLinecap: "square" }), f("path", { d: "M201.676 86.5748L196.53 86.5748", stroke: "white", strokeWidth: 0.146182, strokeMiterlimit: 10, strokeLinecap: "square" }), f("path", { d: "M201.676 89.0015L196.53 89.0015", stroke: "white", strokeWidth: 0.146182, strokeMiterlimit: 10, strokeLinecap: "square" }), f("path", { d: "M201.676 91.4866L196.53 91.4866", stroke: "white", strokeWidth: 0.146182, strokeMiterlimit: 10, strokeLinecap: "square" }), f("path", { d: "M201.676 93.9132L196.53 93.9132", stroke: "white", strokeWidth: 0.146182, strokeMiterlimit: 10, strokeLinecap: "square" }), f("path", { d: "M201.676 96.3983L196.53 96.3983", stroke: "white", strokeWidth: 0.146182, strokeMiterlimit: 10, strokeLinecap: "square" }), f("path", { d: "M201.676 98.8249L196.53 98.8249", stroke: "white", strokeWidth: 0.146182, strokeMiterlimit: 10, strokeLinecap: "square" }), f("path", { d: "M201.676 101.31L196.53 101.31", stroke: "white", strokeWidth: 0.146182, strokeMiterlimit: 10, strokeLinecap: "square" }), f("path", { d: "M201.676 103.737L196.53 103.737", stroke: "white", strokeWidth: 0.146182, strokeMiterlimit: 10, strokeLinecap: "square" }), f("path", { d: "M201.676 106.222L196.53 106.222", stroke: "white", strokeWidth: 0.146182, strokeMiterlimit: 10, strokeLinecap: "square" }), f("path", { d: "M201.676 108.648L196.53 108.648", stroke: "white", strokeWidth: 0.146182, strokeMiterlimit: 10, strokeLinecap: "square" }), f("path", { d: "M201.676 111.133L196.53 111.133", stroke: "white", strokeWidth: 0.146182, strokeMiterlimit: 10, strokeLinecap: "square" }), f("path", { d: "M201.676 113.56L196.53 113.56", stroke: "white", strokeWidth: 0.146182, strokeMiterlimit: 10, strokeLinecap: "square" }), f("path", { d: "M201.676 118.472L196.53 118.472", stroke: "white", strokeWidth: 0.146182, strokeMiterlimit: 10, strokeLinecap: "square" }), f("path", { d: "M201.676 116.104L196.53 116.104", stroke: "white", strokeWidth: 0.146182, strokeMiterlimit: 10, strokeLinecap: "square" }), f("path", { d: "M202.114 119.225L201.675 119.225L201.675 71.2039L202.114 71.2039", stroke: "white", strokeWidth: 0.146182, strokeMiterlimit: 10, strokeLinecap: "square" }), f("path", { d: "M72.6475 103.159L82.6655 103.159", stroke: "white", strokeWidth: 0.146182, strokeMiterlimit: 10, strokeLinecap: "square" }), f("path", { d: "M82.6655 103.159L97.2402 103.159", stroke: "white", strokeWidth: 0.146182, strokeMiterlimit: 10, strokeLinecap: "square" }), f("path", { d: "M97.2401 103.159L107.101 103.159", stroke: "white", strokeWidth: 0.146182, strokeMiterlimit: 10, strokeLinecap: "square" }), f("path", { d: "M217.121 74.3833L216.737 75.0192L127.192 21.7432L127.576 21.0489L217.121 74.3833Z", stroke: "white", strokeWidth: 0.146182, strokeMiterlimit: 10, strokeLinecap: "square" }), f("path", { d: "M24.8119 74.8438L24.4898 74.1494L114.248 21.1658L114.57 21.8017L24.8119 74.8438Z", stroke: "white", strokeWidth: 0.146182, strokeMiterlimit: 10, strokeLinecap: "square" }), f("path", { d: "M176.384 118.991L175.946 118.991L175.946 55.9497L176.384 55.9497L176.384 118.991Z", stroke: "white", strokeWidth: 0.146182, strokeMiterlimit: 10, strokeLinecap: "square" }), f("path", { d: "M49.2945 103.971L54.8242 103.971", stroke: "white", strokeWidth: 0.146182, strokeMiterlimit: 10, strokeLinecap: "square" }), f("path", { d: "M55.5233 103.971L61.5396 103.971", stroke: "white", strokeWidth: 0.146182, strokeMiterlimit: 10, strokeLinecap: "square" }), f("path", { d: "M49.2945 103.159L54.8242 103.159", stroke: "white", strokeWidth: 0.146182, strokeMiterlimit: 10, strokeLinecap: "square" }), f("path", { d: "M55.5233 103.159L61.5396 103.159", stroke: "white", strokeWidth: 0.146182, strokeMiterlimit: 10, strokeLinecap: "square" }), f("path", { d: "M54.8242 114.715L54.8242 103.971", stroke: "white", strokeWidth: 0.146182, strokeMiterlimit: 10, strokeLinecap: "square" }), f("path", { d: "M54.8242 103.159L54.8242 81.1369", stroke: "white", strokeWidth: 0.146182, strokeMiterlimit: 10, strokeLinecap: "square" }), f("path", { d: "M55.5239 114.715L55.5239 103.971", stroke: "white", strokeWidth: 0.146182, strokeMiterlimit: 10, strokeLinecap: "square" }), f("path", { d: "M55.5239 103.159L55.5239 80.7349", stroke: "white", strokeWidth: 0.146182, strokeMiterlimit: 10, strokeLinecap: "square" }), f("path", { d: "M65.7129 118.991L65.2743 118.991L65.2743 51.0381L65.7129 51.0381L65.7129 118.991Z", stroke: "white", strokeWidth: 0.146182, strokeMiterlimit: 10, strokeLinecap: "square" }), f("path", { d: "M169.011 102.392L159.102 102.392", stroke: "white", strokeWidth: 0.146182, strokeMiterlimit: 10, strokeLinecap: "square" }), f("path", { d: "M159.103 102.392L144.583 102.392", stroke: "white", strokeWidth: 0.146182, strokeMiterlimit: 10, strokeLinecap: "square" }), f("path", { d: "M144.583 102.392L134.723 102.392", stroke: "white", strokeWidth: 0.146182, strokeMiterlimit: 10, strokeLinecap: "square" }), f("path", { d: "M169.011 79.1196L159.102 79.1196", stroke: "white", strokeWidth: 0.146182, strokeMiterlimit: 10, strokeLinecap: "square" }), f("path", { d: "M159.103 79.1196L144.583 79.1196", stroke: "white", strokeWidth: 0.146182, strokeMiterlimit: 10, strokeLinecap: "square" }), f("path", { d: "M144.583 79.1196L134.723 79.1196", stroke: "white", strokeWidth: 0.146182, strokeMiterlimit: 10, strokeLinecap: "square" }), f("path", { d: "M196.53 118.991L196.098 118.991L196.098 67.8563L196.53 67.8563L196.53 118.991Z", stroke: "white", strokeWidth: 0.146182, strokeMiterlimit: 10, strokeLinecap: "square" }), f("path", { d: "M193.392 118.991L192.96 118.991L192.96 87.3277L193.392 86.8672L193.392 118.991Z", stroke: "white", strokeWidth: 0.146182, strokeMiterlimit: 10, strokeLinecap: "square" }), f("path", { d: "M192.96 87.3277L178.659 87.3277L178.221 86.8672L193.392 86.8672", stroke: "white", strokeWidth: 0.0730909, strokeMiterlimit: 10, strokeLinecap: "square" }), f("path", { d: "M178.221 86.7503L178.659 87.2108L178.659 118.991L178.221 118.991L178.221 86.7503Z", stroke: "white", strokeWidth: 0.146182, strokeMiterlimit: 10, strokeLinecap: "square" }), f("path", { d: "M192.035 118.991L192.035 88.2998L179.632 88.2998L179.632 118.991", stroke: "white", strokeWidth: 0.146182, strokeMiterlimit: 10, strokeLinecap: "square" }), f("path", { d: "M192.035 103.971L179.632 103.971", stroke: "white", strokeWidth: 0.146182, strokeMiterlimit: 10, strokeLinecap: "square" }), f("path", { d: "M193.392 87.0938L193.09 87.0938L193.09 83.337L193.392 83.0519L193.392 87.0938Z", stroke: "white", strokeWidth: 0.0730909, strokeMiterlimit: 10, strokeLinecap: "square" }), f("path", { d: "M193.392 83.0519L192.96 83.3369L178.659 75.3115L178.221 74.5587L193.392 83.0519Z", stroke: "white", strokeWidth: 0.146182, strokeMiterlimit: 10, strokeLinecap: "square" }), f("path", { d: "M178.221 74.5587L178.659 75.3115L178.659 87.0938L178.221 87.0938L178.221 74.5587Z", stroke: "white", strokeWidth: 0.0194495, strokeMiterlimit: 10, strokeLinecap: "square" }), f("path", { d: "M178.221 74.5587L178.659 75.3115L178.659 86.8672L178.221 87.3277L178.221 74.5587Z", stroke: "white", strokeWidth: 0.146182, strokeMiterlimit: 10, strokeLinecap: "square" }), f("path", { d: "M192.96 83.337L193.392 83.0519L193.392 87.3277", stroke: "white", strokeWidth: 0.0730909, strokeMiterlimit: 10, strokeLinecap: "square" }), f("path", { d: "M192.035 85.822L192.035 83.9728L179.632 77.0438L179.632 85.822L192.035 85.822Z", stroke: "white", strokeWidth: 0.146182, strokeMiterlimit: 10, strokeLinecap: "square" }), f("path", { d: "M127.41 13.0162L127.41 13.0749", stroke: "white", strokeWidth: 0.0194495, strokeMiterlimit: 10, strokeLinecap: "square" }), f("path", { d: "M127.41 13.1331L127.41 13.1919", stroke: "white", strokeWidth: 0.0194495, strokeMiterlimit: 10, strokeLinecap: "square" }), f("path", { d: "M45.8818 118.991L45.4502 118.991L45.4502 66.7599L45.8818 66.7599L45.8818 118.991Z", stroke: "white", strokeWidth: 0.146182, strokeMiterlimit: 10, strokeLinecap: "square" }), f("path", { d: "M40.0376 118.991L40.0376 119.4L14.8418 119.4L14.4101 118.991L40.0376 118.991Z", stroke: "white", strokeWidth: 0.146182, strokeMiterlimit: 10, strokeLinecap: "square" }), f("path", { d: "M14.4101 118.991L14.8418 119.4L14.8418 121.534L14.4101 121.534L14.4101 118.991Z", stroke: "white", strokeWidth: 0.146182, strokeMiterlimit: 10, strokeLinecap: "square" }), f("path", { d: "M10.1891 75.5966L9.80539 74.9607L114.248 13.2501L114.57 13.9444L10.1891 75.5966Z", fill: "#1C6BCF", stroke: "#1C6BCF", strokeWidth: 0.448078, strokeMiterlimit: 10, strokeLinecap: "square" }), f("path", { d: "M217.443 66.3506L217.066 67.045L127.192 13.9444L127.575 13.2501L217.443 66.3506Z", fill: "#1C6BCF", stroke: "#1C6BCF", strokeWidth: 0.448078, strokeMiterlimit: 10, strokeLinecap: "square" }), f("path", { d: "M202.114 65.7732L201.675 65.7732L201.675 62.7107L202.114 62.7107L202.114 65.7732Z", stroke: "white", strokeWidth: 0.146182, strokeMiterlimit: 10, strokeLinecap: "square" }), f("path", { d: "M40.1406 65.7732L39.6541 65.7732L39.6541 61.5558L40.1406 61.5558L40.1406 65.7732Z", stroke: "white", strokeWidth: 0.146182, strokeMiterlimit: 10, strokeLinecap: "square" }), f("path", { d: "M39.8179 142.804L38.2898 142.804", stroke: "white", strokeWidth: 0.146182, strokeMiterlimit: 10, strokeLinecap: "square" }), f("path", { d: "M39.8179 140.487L34.6513 140.487", stroke: "white", strokeWidth: 0.146182, strokeMiterlimit: 10, strokeLinecap: "square" }), f("path", { d: "M40.0376 138.119L31.205 138.119", stroke: "white", strokeWidth: 0.146182, strokeMiterlimit: 10, strokeLinecap: "square" }), f("path", { d: "M39.8179 135.75L27.2234 135.75", stroke: "white", strokeWidth: 0.146182, strokeMiterlimit: 10, strokeLinecap: "square" }), f("path", { d: "M40.0376 133.382L22.5917 133.382", stroke: "white", strokeWidth: 0.146182, strokeMiterlimit: 10, strokeLinecap: "square" }), f("path", { d: "M39.8179 131.014L22.9133 131.014", stroke: "white", strokeWidth: 0.146182, strokeMiterlimit: 10, strokeLinecap: "square" }), f("path", { d: "M39.8179 128.646L22.9133 128.646", stroke: "white", strokeWidth: 0.146182, strokeMiterlimit: 10, strokeLinecap: "square" }), f("path", { d: "M39.8179 126.271L22.9133 126.271", stroke: "white", strokeWidth: 0.146182, strokeMiterlimit: 10, strokeLinecap: "square" }), f("path", { d: "M39.8179 123.902L22.9133 123.902", stroke: "white", strokeWidth: 0.146182, strokeMiterlimit: 10, strokeLinecap: "square" }), f("path", { d: "M45.4512 69.3547L41.7509 69.3547", stroke: "white", strokeWidth: 0.146182, strokeMiterlimit: 10, strokeLinecap: "square" }), f("path", { d: "M45.4512 71.8398L40.3462 71.8398", stroke: "white", strokeWidth: 0.146182, strokeMiterlimit: 10, strokeLinecap: "square" }), f("path", { d: "M45.4512 74.2664L40.2982 74.2664", stroke: "white", strokeWidth: 0.146182, strokeMiterlimit: 10, strokeLinecap: "square" }), f("path", { d: "M45.4512 76.7514L40.2503 76.7515", stroke: "white", strokeWidth: 0.146182, strokeMiterlimit: 10, strokeLinecap: "square" }), f("path", { d: "M45.4512 79.1781L40.2503 79.1781", stroke: "white", strokeWidth: 0.146182, strokeMiterlimit: 10, strokeLinecap: "square" }), f("path", { d: "M45.4512 81.6632L40.2503 81.6632", stroke: "white", strokeWidth: 0.146182, strokeMiterlimit: 10, strokeLinecap: "square" }), f("path", { d: "M45.4512 84.0898L40.2503 84.0898", stroke: "white", strokeWidth: 0.146182, strokeMiterlimit: 10, strokeLinecap: "square" }), f("path", { d: "M45.4512 86.5749L40.2503 86.5749", stroke: "white", strokeWidth: 0.146182, strokeMiterlimit: 10, strokeLinecap: "square" }), f("path", { d: "M45.4512 89.0015L40.2503 89.0015", stroke: "white", strokeWidth: 0.146182, strokeMiterlimit: 10, strokeLinecap: "square" }), f("path", { d: "M45.4512 91.4866L40.2503 91.4866", stroke: "white", strokeWidth: 0.0548182, strokeMiterlimit: 10, strokeLinecap: "square" }), f("path", { d: "M45.4512 93.9133L40.2503 93.9133", stroke: "white", strokeWidth: 0.146182, strokeMiterlimit: 10, strokeLinecap: "square" }), f("path", { d: "M45.4512 96.3983L40.2503 96.3983", stroke: "white", strokeWidth: 0.146182, strokeMiterlimit: 10, strokeLinecap: "square" }), f("path", { d: "M45.4512 98.8249L40.2503 98.8249", stroke: "white", strokeWidth: 0.146182, strokeMiterlimit: 10, strokeLinecap: "square" }), f("path", { d: "M45.4512 101.31L40.2503 101.31", stroke: "white", strokeWidth: 0.146182, strokeMiterlimit: 10, strokeLinecap: "square" }), f("path", { d: "M45.4512 103.737L40.2503 103.737", stroke: "white", strokeWidth: 0.146182, strokeMiterlimit: 10, strokeLinecap: "square" }), f("path", { d: "M45.4512 106.222L40.2503 106.222", stroke: "white", strokeWidth: 0.146182, strokeMiterlimit: 10, strokeLinecap: "square" }), f("path", { d: "M45.4512 108.648L40.2503 108.648", stroke: "white", strokeWidth: 0.146182, strokeMiterlimit: 10, strokeLinecap: "square" }), f("path", { d: "M45.4512 111.133L40.2503 111.133", stroke: "white", strokeWidth: 0.146182, strokeMiterlimit: 10, strokeLinecap: "square" }), f("path", { d: "M45.4512 116.045L40.2503 116.045", stroke: "white", strokeWidth: 0.146182, strokeMiterlimit: 10, strokeLinecap: "square" }), f("path", { d: "M45.4512 113.677L40.2503 113.677", stroke: "white", strokeWidth: 0.146182, strokeMiterlimit: 10, strokeLinecap: "square" }), f("path", { d: "M45.4512 118.589L40.2503 118.589", stroke: "white", strokeWidth: 0.146182, strokeMiterlimit: 10, strokeLinecap: "square" }), f("path", { d: "M201.894 104.833L201.894 105.242L40.2489 105.242L40.2489 104.833L201.894 104.833Z", stroke: "white", strokeWidth: 0.146182, strokeMiterlimit: 10, strokeLinecap: "square" }), f("path", { d: "M201.676 119.21L201.683 129.867L201.683 165.104", stroke: "white", strokeWidth: 0.292364, strokeMiterlimit: 10, strokeLinecap: "square" }), f("path", { d: "M193.611 118.991L193.611 104.877", stroke: "white", strokeWidth: 0.146182, strokeMiterlimit: 10, strokeLinecap: "square" }), f("path", { d: "M186.566 118.991L186.566 104.877", stroke: "white", strokeWidth: 0.146182, strokeMiterlimit: 10, strokeLinecap: "square" }), f("path", { d: "M172.478 118.991L172.478 105.242", stroke: "white", strokeWidth: 0.146182, strokeMiterlimit: 10, strokeLinecap: "square" }), f("path", { d: "M165.496 118.991L165.496 105.242", stroke: "white", strokeWidth: 0.146182, strokeMiterlimit: 10, strokeLinecap: "square" }), f("path", { d: "M158.452 118.991L158.452 115.921L158.452 105.242", stroke: "white", strokeWidth: 0.146182, strokeMiterlimit: 10, strokeLinecap: "square" }), f("path", { d: "M151.408 118.991L151.408 115.921L151.408 105.242", stroke: "white", strokeWidth: 0.146182, strokeMiterlimit: 10, strokeLinecap: "square" }), f("path", { d: "M144.418 118.991L144.418 115.921L144.418 105.242", stroke: "white", strokeWidth: 0.146182, strokeMiterlimit: 10, strokeLinecap: "square" }), f("path", { d: "M137.381 118.991L137.381 115.921L137.381 105.242", stroke: "white", strokeWidth: 0.146182, strokeMiterlimit: 10, strokeLinecap: "square" }), f("path", { d: "M130.336 118.991L130.336 105.242", stroke: "white", strokeWidth: 0.146182, strokeMiterlimit: 10, strokeLinecap: "square" }), f("path", { d: "M123.292 118.991L123.292 105.242", stroke: "white", strokeWidth: 0.146182, strokeMiterlimit: 10, strokeLinecap: "square" }), f("path", { d: "M116.303 118.991L116.303 105.242", stroke: "white", strokeWidth: 0.146182, strokeMiterlimit: 10, strokeLinecap: "square" }), f("path", { d: "M109.266 118.991L109.266 105.242", stroke: "white", strokeWidth: 0.146182, strokeMiterlimit: 10, strokeLinecap: "square" }), f("path", { d: "M102.222 118.991L102.222 115.921L102.222 105.242", stroke: "white", strokeWidth: 0.146182, strokeMiterlimit: 10, strokeLinecap: "square" }), f("path", { d: "M95.2329 118.991L95.2329 115.921L95.2329 105.242", stroke: "white", strokeWidth: 0.146182, strokeMiterlimit: 10, strokeLinecap: "square" }), f("path", { d: "M88.188 118.991L88.188 115.921L88.188 105.242", stroke: "white", strokeWidth: 0.146182, strokeMiterlimit: 10, strokeLinecap: "square" }), f("path", { d: "M81.1509 118.991L81.1509 115.921L81.1509 105.242", stroke: "white", strokeWidth: 0.146182, strokeMiterlimit: 10, strokeLinecap: "square" }), f("path", { d: "M74.1069 118.991L74.1069 105.242", stroke: "white", strokeWidth: 0.146182, strokeMiterlimit: 10, strokeLinecap: "square" }), f("path", { d: "M67.1172 118.991L67.1172 105.242", stroke: "white", strokeWidth: 0.146182, strokeMiterlimit: 10, strokeLinecap: "square" }), f("path", { d: "M60.0801 118.991L60.0801 115.921L60.0801 105.242", stroke: "white", strokeWidth: 0.146182, strokeMiterlimit: 10, strokeLinecap: "square" }), f("path", { d: "M53.0361 118.991L53.0361 115.921L53.0361 105.242", stroke: "white", strokeWidth: 0.146182, strokeMiterlimit: 10, strokeLinecap: "square" }), f("path", { d: "M198.264 118.991L198.264 104.833", stroke: "white", strokeWidth: 0.146182, strokeMiterlimit: 10, strokeLinecap: "square" }), f("path", { d: "M191.227 118.991L191.227 104.877", stroke: "white", strokeWidth: 0.146182, strokeMiterlimit: 10, strokeLinecap: "square" }), f("path", { d: "M184.237 118.991L184.237 104.877", stroke: "white", strokeWidth: 0.146182, strokeMiterlimit: 10, strokeLinecap: "square" }), f("path", { d: "M177.192 118.991L177.192 105.242", stroke: "white", strokeWidth: 0.146182, strokeMiterlimit: 10, strokeLinecap: "square" }), f("path", { d: "M170.148 118.991L170.148 105.242", stroke: "white", strokeWidth: 0.146182, strokeMiterlimit: 10, strokeLinecap: "square" }), f("path", { d: "M163.166 118.991L163.166 105.242", stroke: "white", strokeWidth: 0.146182, strokeMiterlimit: 10, strokeLinecap: "square" }), f("path", { d: "M156.122 118.991L156.122 115.921L156.122 105.242", stroke: "white", strokeWidth: 0.146182, strokeMiterlimit: 10, strokeLinecap: "square" }), f("path", { d: "M149.079 118.991L149.079 115.921L149.079 105.242", stroke: "white", strokeWidth: 0.146182, strokeMiterlimit: 10, strokeLinecap: "square" }), f("path", { d: "M142.04 118.991L142.04 115.921L142.04 105.242", stroke: "white", strokeWidth: 0.146182, strokeMiterlimit: 10, strokeLinecap: "square" }), f("path", { d: "M135.051 118.991L135.051 115.921L135.051 105.242", stroke: "white", strokeWidth: 0.146182, strokeMiterlimit: 10, strokeLinecap: "square" }), f("path", { d: "M128.007 118.991L128.007 105.242", stroke: "white", strokeWidth: 0.146182, strokeMiterlimit: 10, strokeLinecap: "square" }), f("path", { d: "M120.963 118.991L120.963 105.242", stroke: "white", strokeWidth: 0.146182, strokeMiterlimit: 10, strokeLinecap: "square" }), f("path", { d: "M113.981 118.991L113.981 105.242", stroke: "white", strokeWidth: 0.146182, strokeMiterlimit: 10, strokeLinecap: "square" }), f("path", { d: "M106.936 118.991L106.936 115.921L106.936 105.242", stroke: "white", strokeWidth: 0.146182, strokeMiterlimit: 10, strokeLinecap: "square" }), f("path", { d: "M99.8921 118.991L99.8921 115.921L99.8921 105.242", stroke: "white", strokeWidth: 0.146182, strokeMiterlimit: 10, strokeLinecap: "square" }), f("path", { d: "M92.8481 118.991L92.8481 115.921L92.8481 105.242", stroke: "white", strokeWidth: 0.146182, strokeMiterlimit: 10, strokeLinecap: "square" }), f("path", { d: "M85.8657 118.991L85.8657 115.921L85.8657 105.242", stroke: "white", strokeWidth: 0.146182, strokeMiterlimit: 10, strokeLinecap: "square" }), f("path", { d: "M78.8213 118.991L78.8213 105.242", stroke: "white", strokeWidth: 0.146182, strokeMiterlimit: 10, strokeLinecap: "square" }), f("path", { d: "M71.7764 118.991L71.7764 105.242", stroke: "white", strokeWidth: 0.146182, strokeMiterlimit: 10, strokeLinecap: "square" }), f("path", { d: "M64.7871 118.991L64.7871 105.242", stroke: "white", strokeWidth: 0.146182, strokeMiterlimit: 10, strokeLinecap: "square" }), f("path", { d: "M57.7505 118.991L57.7505 115.921L57.7505 105.242", stroke: "white", strokeWidth: 0.146182, strokeMiterlimit: 10, strokeLinecap: "square" }), f("path", { d: "M50.7061 118.991L50.7061 115.921L50.7061 105.242", stroke: "white", strokeWidth: 0.146182, strokeMiterlimit: 10, strokeLinecap: "square" }), f("path", { d: "M134.722 50.0587L134.722 114.715", stroke: "white", strokeWidth: 0.365455, strokeMiterlimit: 10, strokeLinecap: "square" }), f("path", { d: "M134.722 114.715L169.011 114.715", stroke: "white", strokeWidth: 0.365455, strokeMiterlimit: 10, strokeLinecap: "square" }), f("path", { d: "M169.011 114.715L169.011 70.3998", stroke: "white", strokeWidth: 0.365455, strokeMiterlimit: 10, strokeLinecap: "square" }), f("path", { d: "M169.011 70.3999L134.722 50.0587", stroke: "white", strokeWidth: 0.365455, strokeMiterlimit: 10, strokeLinecap: "square" }), f("path", { d: "M107.101 114.715L107.101 50.0587", stroke: "white", strokeWidth: 0.511636, strokeMiterlimit: 10, strokeLinecap: "square" }), f("path", { d: "M72.6473 114.715L107.101 114.715", stroke: "white", strokeWidth: 0.365455, strokeMiterlimit: 10, strokeLinecap: "square" }), f("path", { d: "M72.647 70.5095L72.647 114.715", stroke: "white", strokeWidth: 0.365455, strokeMiterlimit: 10, strokeLinecap: "square" }), f("path", { d: "M107.101 50.0587L72.6473 70.5095", stroke: "white", strokeWidth: 0.365455, strokeMiterlimit: 10, strokeLinecap: "square" }), f("path", { d: "M61.9717 76.5249L61.54 77.3289L49.295 84.3237L48.8633 84.0898L61.9717 76.5249Z", stroke: "white", strokeWidth: 0.146182, strokeMiterlimit: 10, strokeLinecap: "square" }), f("path", { d: "M48.8627 84.0898L49.2944 84.3237L49.2944 114.715L48.8627 115.183L48.8627 84.0898Z", stroke: "white", strokeWidth: 0.146182, strokeMiterlimit: 10, strokeLinecap: "square" }), f("path", { d: "M48.8633 115.183L49.295 114.715L61.54 114.715L61.9717 115.183L48.8633 115.183Z", stroke: "white", strokeWidth: 0.146182, strokeMiterlimit: 10, strokeLinecap: "square" }), f("path", { d: "M61.9717 115.183L61.54 114.715L61.54 77.3289L61.9717 76.5249L61.9717 115.183Z", stroke: "white", strokeWidth: 0.146182, strokeMiterlimit: 10, strokeLinecap: "square" }), f("path", { d: "M74.5391 166.434L74.1074 166.434L74.1074 150.829L74.5391 150.544L74.5391 166.434Z", stroke: "white", strokeWidth: 0.146182, strokeMiterlimit: 10, strokeLinecap: "square" }), f("path", { d: "M74.5391 150.544L74.1074 150.829L22.2699 119.4L22.4823 118.991L74.5391 150.544Z", stroke: "white", strokeWidth: 0.146182, strokeMiterlimit: 10, strokeLinecap: "square" }), f("path", { d: "M159.103 114.715L159.103 105.242", stroke: "white", strokeWidth: 0.146182, strokeMiterlimit: 10, strokeLinecap: "square" }), f("path", { d: "M159.103 102.392L159.103 79.1196", stroke: "white", strokeWidth: 0.146182, strokeMiterlimit: 10, strokeLinecap: "square" }), f("path", { d: "M159.103 79.1196L159.103 70.2244", stroke: "white", strokeWidth: 0.146182, strokeMiterlimit: 10, strokeLinecap: "square" }), f("path", { d: "M144.583 114.715L144.583 105.242", stroke: "white", strokeWidth: 0.146182, strokeMiterlimit: 10, strokeLinecap: "square" }), f("path", { d: "M112.836 135.29L112.946 135.349", stroke: "white", strokeWidth: 0.146182, strokeMiterlimit: 10, strokeLinecap: "square" }), f("path", { d: "M115.275 161.581L115.275 151.121", stroke: "white", strokeWidth: 0.146182, strokeMiterlimit: 10, strokeLinecap: "square" }), f("path", { d: "M115.275 160.888L115.275 138.638", stroke: "white", strokeWidth: 0.146182, strokeMiterlimit: 10, strokeLinecap: "square" }), f("path", { d: "M126.438 161.581L115.276 161.581", stroke: "white", strokeWidth: 0.146182, strokeMiterlimit: 10, strokeLinecap: "square" }), f("path", { d: "M115.276 138.638L126.438 138.638", stroke: "white", strokeWidth: 0.146182, strokeMiterlimit: 10, strokeLinecap: "square" }), f("path", { d: "M126.438 138.638L126.438 161.581", stroke: "white", strokeWidth: 0.146182, strokeMiterlimit: 10, strokeLinecap: "square" }), f("path", { d: "M128.822 135.29L128.711 135.349", stroke: "white", strokeWidth: 0.146182, strokeMiterlimit: 10, strokeLinecap: "square" }), f("path", { d: "M128.768 163.138L128.768 161.924", stroke: "white", strokeWidth: 0.146182, strokeMiterlimit: 10, strokeLinecap: "square" }), f("path", { d: "M128.766 161.924L128.822 161.924", stroke: "white", strokeWidth: 0.146182, strokeMiterlimit: 10, strokeLinecap: "square" }), f("path", { d: "M128.822 163.138L128.766 163.138", stroke: "white", strokeWidth: 0.146182, strokeMiterlimit: 10, strokeLinecap: "square" }), f("path", { d: "M128.822 163.138L128.925 163.138", stroke: "white", strokeWidth: 0.146182, strokeMiterlimit: 10, strokeLinecap: "square" }), f("path", { d: "M128.925 161.924L128.822 161.924", stroke: "white", strokeWidth: 0.146182, strokeMiterlimit: 10, strokeLinecap: "square" }), f("path", { d: "M128.924 163.138L129.089 163.138", stroke: "white", strokeWidth: 0.146182, strokeMiterlimit: 10, strokeLinecap: "square" }), f("path", { d: "M129.089 161.924L128.924 161.924", stroke: "white", strokeWidth: 0.146182, strokeMiterlimit: 10, strokeLinecap: "square" }), f("path", { d: "M129.089 163.138L129.199 163.138", stroke: "white", strokeWidth: 0.146182, strokeMiterlimit: 10, strokeLinecap: "square" }), f("path", { d: "M129.199 161.924L129.089 161.924", stroke: "white", strokeWidth: 0.146182, strokeMiterlimit: 10, strokeLinecap: "square" }), f("path", { d: "M129.199 163.138L129.089 163.138", stroke: "white", strokeWidth: 0.146182, strokeMiterlimit: 10, strokeLinecap: "square" }), f("path", { d: "M129.199 163.138L129.199 161.924", stroke: "white", strokeWidth: 0.146182, strokeMiterlimit: 10, strokeLinecap: "square" }), f("path", { d: "M129.199 161.924L129.089 161.924", stroke: "white", strokeWidth: 0.146182, strokeMiterlimit: 10, strokeLinecap: "square" }), f("path", { d: "M128.657 135.407L128.979 135.115L128.979 166.894L128.657 166.609L128.657 135.407Z", stroke: "white", strokeWidth: 0.146182, strokeMiterlimit: 10, strokeLinecap: "square" }), f("path", { d: "M128.657 166.609L128.979 166.894L112.733 166.894L113 166.609L128.657 166.609Z", stroke: "white", strokeWidth: 0.146182, strokeMiterlimit: 10, strokeLinecap: "square" }), f("path", { d: "M113 166.609L112.733 166.894L112.733 135.115L113 135.407L113 166.609Z", stroke: "white", strokeWidth: 0.146182, strokeMiterlimit: 10, strokeLinecap: "square" }), f("path", { d: "M113 135.407L112.733 135.115L128.979 135.115L128.657 135.407L113 135.407Z", stroke: "white", strokeWidth: 0.146182, strokeMiterlimit: 10, strokeLinecap: "square" }), f("path", { d: "M128.602 166.492L128.876 166.836L112.787 166.836L113.109 166.492", stroke: "white", strokeWidth: 0.146182, strokeMiterlimit: 10, strokeLinecap: "square" }), f("path", { d: "M114.625 1.4605L114.467 1.00003L127.521 1.00003L127.356 1.4605L114.625 1.4605Z", stroke: "white", strokeWidth: 0.146182, strokeMiterlimit: 10, strokeLinecap: "square" }), f("path", { d: "M17.3359 106.741L14.8417 106.741", stroke: "white", strokeWidth: 0.146182, strokeMiterlimit: 10, strokeLinecap: "square" }), f("path", { d: "M17.3354 109.167L14.8412 109.167", stroke: "white", strokeWidth: 0.146182, strokeMiterlimit: 10, strokeLinecap: "square" }), f("path", { d: "M17.3354 114.079L14.8412 114.079", stroke: "white", strokeWidth: 0.146182, strokeMiterlimit: 10, strokeLinecap: "square" }), f("path", { d: "M17.3359 101.887L14.8417 101.887", stroke: "white", strokeWidth: 0.146182, strokeMiterlimit: 10, strokeLinecap: "square" }), f("path", { d: "M17.3359 104.373L14.8417 104.373", stroke: "white", strokeWidth: 0.146182, strokeMiterlimit: 10, strokeLinecap: "square" }), f("path", { d: "M17.3354 111.711L14.8412 111.711", stroke: "white", strokeWidth: 0.146182, strokeMiterlimit: 10, strokeLinecap: "square" }), f("path", { d: "M17.3359 94.4322L14.8417 94.4322", stroke: "white", strokeWidth: 0.146182, strokeMiterlimit: 10, strokeLinecap: "square" }), f("path", { d: "M17.3359 89.6374L14.8417 89.6374", stroke: "white", strokeWidth: 0.146182, strokeMiterlimit: 10, strokeLinecap: "square" }), f("path", { d: "M17.3359 92.064L14.8417 92.064", stroke: "white", strokeWidth: 0.146182, strokeMiterlimit: 10, strokeLinecap: "square" }), f("path", { d: "M115.844 1.90634L126.047 1.90634L126.047 135.348L115.844 135.348L115.844 1.90634Z", stroke: "white", strokeWidth: 0.438546, strokeMiterlimit: 10, strokeLinecap: "square" }), f("path", { d: "M158.397 128.661L170.148 128.661L170.148 155.068L158.397 155.068L158.397 128.661Z", stroke: "white", strokeWidth: 0.388334, strokeMiterlimit: 10, strokeLinecap: "square" }), f("path", { d: "M77.327 128.453L89.0786 128.453L89.0786 154.861L77.327 154.861L77.327 128.453Z", stroke: "white", strokeWidth: 0.388334, strokeMiterlimit: 10, strokeLinecap: "square" }), f("path", { d: "M140.252 128.661L152.004 128.661L152.004 155.068L140.252 155.068L140.252 128.661Z", stroke: "white", strokeWidth: 0.388334, strokeMiterlimit: 10, strokeLinecap: "square" }), f("path", { d: "M95.4178 128.661L107.169 128.661L107.169 155.068L95.4178 155.068L95.4178 128.661Z", stroke: "white", strokeWidth: 0.388334, strokeMiterlimit: 10, strokeLinecap: "square" }), f("path", { d: "M201.777 71.2039L201.792 82.2552L201.792 118.801", stroke: "white", strokeWidth: 0.292364, strokeMiterlimit: 10, strokeLinecap: "square" }), f("path", { d: "M39.8931 70.641L39.9004 87.3935L39.9077 142.804", stroke: "white", strokeWidth: 0.292364, strokeMiterlimit: 10, strokeLinecap: "square" }), f("path", { d: "M14.8408 76.2545L14.8481 86.1802L14.8481 118.991", stroke: "white", strokeWidth: 0.292364, strokeMiterlimit: 10, strokeLinecap: "square" })), sk = (t19) => f("svg", { width: 232, height: 169, viewBox: "0 0 202 139", fill: "none", xmlns: "http://www.w3.org/2000/svg", ...t19 }, f("path", { d: "M30.5952 133.917H69.3037", stroke: "white", strokeWidth: 0.0182727, strokeMiterlimit: 10 }), f("path", { d: "M26.7368 130.467H56.5579H69.3031", fill: "white" }), f("path", { d: "M26.7368 130.467H56.5579H69.3031", stroke: "white", strokeWidth: 0.0182727, strokeMiterlimit: 10 }), f("path", { d: "M23.4204 127.017H56.558H69.3032", fill: "white" }), f("path", { d: "M23.4204 127.017H56.558H69.3032", stroke: "white", strokeWidth: 0.0182727, strokeMiterlimit: 10 }), f("path", { d: "M20.5225 123.597H56.5586H69.3038", fill: "white" }), f("path", { d: "M20.5225 123.597H56.5586H69.3038", stroke: "white", strokeWidth: 0.0182727, strokeMiterlimit: 10 }), f("path", { d: "M17.9937 120.147H56.5583L69.3035 120.147", fill: "white" }), f("path", { d: "M17.9937 120.147H56.5583L69.3035 120.147", stroke: "white", strokeWidth: 0.0182727, strokeMiterlimit: 10 }), f("path", { d: "M15.7393 116.697H55.037", stroke: "white", strokeWidth: 0.0182727, strokeMiterlimit: 10 }), f("path", { d: "M13.772 113.24H55.0364", stroke: "white", strokeWidth: 0.0182727, strokeMiterlimit: 10 }), f("path", { d: "M12.0522 109.79H55.0366", stroke: "white", strokeWidth: 0.0182727, strokeMiterlimit: 10 }), f("path", { d: "M10.5659 106.34H55.0372", stroke: "white", strokeWidth: 0.0182727, strokeMiterlimit: 10 }), f("path", { d: "M9.27051 102.89H55.0369", stroke: "white", strokeWidth: 0.0182727, strokeMiterlimit: 10 }), f("path", { d: "M8.14648 99.4402H55.0366", stroke: "white", strokeWidth: 0.0182727, strokeMiterlimit: 10 }), f("path", { d: "M7.21631 95.9904H55.0383", stroke: "white", strokeWidth: 0.0182727, strokeMiterlimit: 10 }), f("path", { d: "M6.48193 92.5405H55.0371", stroke: "white", strokeWidth: 0.0182727, strokeMiterlimit: 10 }), f("path", { d: "M5.89258 89.1198H55.0371", stroke: "white", strokeWidth: 0.0182727, strokeMiterlimit: 10 }), f("path", { d: "M5.47461 85.6699H55.0371", stroke: "white", strokeWidth: 0.0182727, strokeMiterlimit: 10 }), f("path", { d: "M5.22119 82.2201H49.8089", stroke: "white", strokeWidth: 0.0182727, strokeMiterlimit: 10 }), f("path", { d: "M5.13232 78.7701H49.8091", stroke: "white", strokeWidth: 0.0182727, strokeMiterlimit: 10 }), f("path", { d: "M5.19336 75.313H49.8085", stroke: "white", strokeWidth: 0.0182727, strokeMiterlimit: 10 }), f("path", { d: "M5.4126 71.8631H55.0368", stroke: "white", strokeWidth: 0.0182727, strokeMiterlimit: 10 }), f("path", { d: "M5.81055 68.4131H55.0373", stroke: "white", strokeWidth: 0.0182727, strokeMiterlimit: 10 }), f("path", { d: "M6.34473 64.9633H55.037", stroke: "white", strokeWidth: 0.0182727, strokeMiterlimit: 10 }), f("path", { d: "M7.07812 61.5134L55.0372 61.5134", stroke: "white", strokeWidth: 0.0182727, strokeMiterlimit: 10 }), f("path", { d: "M7.94775 58.0927L55.0366 58.0927", stroke: "white", strokeWidth: 0.0182727, strokeMiterlimit: 10 }), f("path", { d: "M9.01709 54.6428L55.037 54.6428", stroke: "white", strokeWidth: 0.0182727, strokeMiterlimit: 10 }), f("path", { d: "M10.2847 51.1929L55.0369 51.1929", stroke: "white", strokeWidth: 0.0182727, strokeMiterlimit: 10 }), f("path", { d: "M11.7441 47.743L55.0368 47.743", stroke: "white", strokeWidth: 0.0182727, strokeMiterlimit: 10 }), f("path", { d: "M13.437 44.2931L55.0372 44.2931", stroke: "white", strokeWidth: 0.0182727, strokeMiterlimit: 10 }), f("path", { d: "M15.3481 40.836L55.0365 40.836", stroke: "white", strokeWidth: 0.0182727, strokeMiterlimit: 10 }), f("path", { d: "M17.5137 37.386L69.3032 37.386", stroke: "white", strokeWidth: 0.0182727, strokeMiterlimit: 10 }), f("path", { d: "M19.9878 33.9362L69.3036 33.9362", stroke: "white", strokeWidth: 0.0182727, strokeMiterlimit: 10 }), f("path", { d: "M22.8311 30.4863L69.3032 30.4863", stroke: "white", strokeWidth: 0.0182727, strokeMiterlimit: 10 }), f("path", { d: "M26.0386 27.0656L69.3038 27.0656", stroke: "white", strokeWidth: 0.0182727, strokeMiterlimit: 10 }), f("path", { d: "M29.7788 23.6157L69.3027 23.6157", stroke: "white", strokeWidth: 0.0182727, strokeMiterlimit: 10 }), f("path", { d: "M69.3035 20.1659H69.1048H68.3716H65.1373H61.903H59.0936H58.9429H58.8401H58.6962H58.6688H58.1343H56.7844H56.0786H55.4345H55.2358H55.1261H54.8178H52.2002H48.966L45.7317 20.1659H42.4906H39.2563H36.022H34.583H34.2815H34.165", fill: "white" }), f("path", { d: "M69.3035 20.1659H69.1048H68.3716H65.1373H61.903H59.0936H58.9429H58.8401H58.6962H58.6688H58.1343H56.7844H56.0786H55.4345H55.2358H55.1261H54.8178H52.2002H48.966L45.7317 20.1659H42.4906H39.2563H36.022H34.583H34.2815H34.165", stroke: "white", strokeWidth: 0.0182727, strokeMiterlimit: 10 }), f("path", { d: "M13.375 44.3808L13.375 112.465", stroke: "white", strokeWidth: 0.0182727, strokeMiterlimit: 10 }), f("path", { d: "M16.6094 38.7675L16.6094 118.071", stroke: "white", strokeWidth: 0.0182727, strokeMiterlimit: 10 }), f("path", { d: "M7.08447 61.5134L7.08447 95.9904", stroke: "white", strokeWidth: 0.0182727, strokeMiterlimit: 10 }), f("path", { d: "M10.3188 51.4634L10.3188 105.638", stroke: "white", strokeWidth: 0.0182727, strokeMiterlimit: 10 }), f("path", { d: "M19.8511 34.1481L19.8511 122.698", stroke: "white", strokeWidth: 0.0182727, strokeMiterlimit: 10 }), f("path", { d: "M23.085 30.1866L23.085 126.659", stroke: "white", strokeWidth: 0.0182727, strokeMiterlimit: 10 }), f("path", { d: "M26.3193 26.7952L26.3193 130.043", stroke: "white", strokeWidth: 0.0182727, strokeMiterlimit: 10 }), f("path", { d: "M29.5537 23.7984L29.5537 133.047", stroke: "white", strokeWidth: 0.0182727, strokeMiterlimit: 10 }), f("path", { d: "M32.7876 21.1818L32.7876 135.657", stroke: "white", strokeWidth: 0.0182727, strokeMiterlimit: 10 }), f("path", { d: "M36.0215 18.8721L36.0215 137.966", stroke: "white", strokeWidth: 0.0182727, strokeMiterlimit: 10 }), f("path", { d: "M39.2563 18.8721L39.2563 137.966", stroke: "white", strokeWidth: 0.0182727, strokeMiterlimit: 10 }), f("path", { d: "M42.4912 18.8721L42.4912 137.966", stroke: "white", strokeWidth: 0.0182727, strokeMiterlimit: 10 }), f("path", { d: "M45.7319 18.8721L45.7319 137.966", stroke: "white", strokeWidth: 0.0182727, strokeMiterlimit: 10 }), f("path", { d: "M48.9653 18.8721L48.9653 137.966", stroke: "white", strokeWidth: 0.0182727, strokeMiterlimit: 10 }), f("path", { d: "M52.2012 18.8722L52.2012 73.5734", stroke: "white", strokeWidth: 0.0182727, strokeMiterlimit: 10 }), f("path", { d: "M52.2012 83.1483L52.2012 137.966", stroke: "white", strokeWidth: 0.0182727, strokeMiterlimit: 10 }), f("path", { d: "M55.4341 37.598V37.408V37.4007V37.386V33.9361V30.4863V27.0656V23.6157V23.1918V22.7971V22.7752V21.6057V20.8529V20.1658V19.413V19.0841V18.894V18.8721", fill: "white" }), f("path", { d: "M55.4341 37.598V37.408V37.4007V37.386V33.9361V30.4863V27.0656V23.6157V23.1918V22.7971V22.7752V21.6057V20.8529V20.1658V19.413V19.0841V18.894V18.8721", stroke: "white", strokeWidth: 0.0182727, strokeMiterlimit: 10 }), f("path", { d: "M55.4341 134.071V133.917V133.713V133.647V130.467V127.017V123.597V120.147V119.248V119.036", fill: "white" }), f("path", { d: "M55.4341 134.071V133.917V133.713V133.647V130.467V127.017V123.597V120.147V119.248V119.036", stroke: "white", strokeWidth: 0.0182727, strokeMiterlimit: 10 }), f("path", { d: "M58.6685 37.598V37.503V37.4957V37.386V33.9361V30.4863V27.0656V23.6157V23.1918V23.1479V22.7752V22.534", fill: "white" }), f("path", { d: "M58.6685 37.598V37.503V37.4957V37.386V33.9361V30.4863V27.0656V23.6157V23.1918V23.1479V22.7752V22.534", stroke: "white", strokeWidth: 0.0182727, strokeMiterlimit: 10 }), f("path", { d: "M58.6685 21.7885V20.3413V20.1659V19.5958V19.0842V18.938V18.8722", fill: "white" }), f("path", { d: "M58.6685 21.7885V20.3413V20.1659V19.5958V19.0842V18.938V18.8722", stroke: "white", strokeWidth: 0.0182727, strokeMiterlimit: 10 }), f("path", { d: "M58.6685 134.071V134.063V133.917V133.647V130.467V127.017V123.597V120.147V119.248V119.036", fill: "white" }), f("path", { d: "M58.6685 134.071V134.063V133.917V133.647V130.467V127.017V123.597V120.147V119.248V119.036", stroke: "white", strokeWidth: 0.0182727, strokeMiterlimit: 10 }), f("path", { d: "M61.9028 18.8721V37.598", stroke: "white", strokeWidth: 0.0182727, strokeMiterlimit: 10 }), f("path", { d: "M61.9028 119.036V137.966", stroke: "white", strokeWidth: 0.0182727, strokeMiterlimit: 10 }), f("path", { d: "M65.1377 18.8721V37.598", stroke: "white", strokeWidth: 0.0182727, strokeMiterlimit: 10 }), f("path", { d: "M65.1377 119.036V137.966", stroke: "white", strokeWidth: 0.0182727, strokeMiterlimit: 10 }), f("path", { d: "M68.3706 119.036V137.966", stroke: "white", strokeWidth: 0.0182727, strokeMiterlimit: 10 }), f("path", { d: "M198.928 30.7933V41.7715H201.285V30.7933H198.928ZM199.038 41.6546V30.9102H201.183V41.6546H199.038Z", fill: "white" }), f("path", { d: "M198.901 47.056V58.0343H201.259V47.056H198.901ZM199.011 57.9173V47.173H201.156V57.9173H199.011Z", fill: "white" }), f("path", { d: "M198.901 47.056V58.0343H201.259V47.056H198.901ZM199.011 57.9173V47.173H201.156V57.9173H199.011Z", fill: "white" }), f("path", { d: "M56.1616 55.2495V55.9073H57.0319V55.2495H56.1616ZM56.2713 55.7904V55.3664H56.9222V55.7904H56.2713Z", fill: "white" }), f("path", { d: "M56.1616 55.2495V55.9073H57.0319V55.2495H56.1616ZM56.2713 55.7904V55.3664H56.9222V55.7904H56.2713Z", fill: "white" }), f("path", { d: "M56.1616 100.829V101.487H57.0319V100.829H56.1616ZM56.2713 101.363V100.939H56.9222V101.363H56.2713Z", fill: "white" }), f("path", { d: "M56.1616 100.829V101.487H57.0319V100.829H56.1616ZM56.2713 101.363V100.939H56.9222V101.363H56.2713Z", fill: "white" }), f("path", { d: "M198.901 86.9053V97.8835H201.259V86.9053H198.901ZM199.011 97.7666V87.0222H201.156V97.7666H199.011Z", fill: "white" }), f("path", { d: "M198.901 86.9053V97.8835H201.259V86.9053H198.901ZM199.011 97.7666V87.0222H201.156V97.7666H199.011Z", fill: "white" }), f("path", { d: "M198.901 103.197V114.175H201.259V103.197H198.901ZM199.011 114.059V103.314H201.156V114.059H199.011Z", fill: "white" }), f("path", { d: "M198.901 103.197V114.175H201.259V103.197H198.901ZM199.011 114.059V103.314H201.156V114.059H199.011Z", fill: "white" }), f("path", { d: "M198.928 30.7933V41.7715H201.285V30.7933H198.928ZM199.038 41.6546V30.9102H201.183V41.6546H199.038Z", fill: "white" }), f("path", { d: "M89.8616 42.7948H89.752V29.77H89.8616V42.7948Z", fill: "white" }), f("path", { d: "M89.7994 29.8285L73.4019 29.8285V29.7115L89.7994 29.7115V29.8285Z", fill: "white" }), f("path", { d: "M121.785 135.533H100.379V135.306H121.785V135.533Z", fill: "white" }), f("path", { d: "M121.785 136.373H100.379V136.147H121.785V136.373Z", fill: "white" }), f("path", { d: "M121.785 135.533H100.379V135.306H121.785V135.533Z", fill: "white" }), f("path", { d: "M121.785 133.778H100.379V133.552H121.785V133.778Z", fill: "white" }), f("path", { d: "M121.785 138.127H100.379V137.901H121.785V138.127Z", fill: "white" }), f("path", { d: "M121.785 136.373H100.379V136.147H121.785V136.373Z", fill: "white" }), f("path", { d: "M119.23 20.7068H109.048V20.5898H119.23V20.7068Z", fill: "white" }), f("path", { d: "M119.23 21.5473H109.048V21.4303H119.23V21.5473Z", fill: "white" }), f("path", { d: "M119.23 20.7068H109.048V20.5898H119.23V20.7068Z", fill: "white" }), f("path", { d: "M119.23 18.9526H109.048V18.8357H119.23V18.9526Z", fill: "white" }), f("path", { d: "M119.23 23.3014H109.048V23.1845H119.23V23.3014Z", fill: "white" }), f("path", { d: "M119.23 21.5473H109.048V21.4303H119.23V21.5473Z", fill: "white" }), f("path", { d: "M179.037 134.816H171.308V134.699H179.037V134.816Z", fill: "white" }), f("path", { d: "M179.091 120.264H171.3V120.118H179.091V120.264Z", fill: "white" }), f("path", { d: "M179.09 134.758H178.98V120.176H179.09V134.758Z", fill: "white" }), f("path", { d: "M177.857 120.929L177.892 121.134L178.022 121.302L178.173 121.433L178.364 121.47L178.556 121.433L178.714 121.295L178.837 121.134L178.872 120.929L178.837 120.724L178.707 120.556L178.556 120.425L178.364 120.388L178.173 120.425L178.015 120.564L177.892 120.724L177.857 120.929ZM177.988 121.083L177.96 120.929L177.988 120.776L178.09 120.644L178.214 120.534L178.358 120.505L178.502 120.534L178.625 120.644L178.728 120.776L178.755 120.929L178.728 121.083L178.625 121.214L178.502 121.324L178.358 121.353L178.214 121.324L178.09 121.214L177.988 121.083Z", fill: "white" }), f("path", { d: "M178.111 133.53H178.001V122.427H178.111V133.53Z", fill: "white" }), f("path", { d: "M176.987 121.287H172.231V121.17H176.987V121.287Z", fill: "white" }), f("path", { d: "M171.934 133.685L171.836 133.633L177.325 121.99L177.423 122.043L171.934 133.685Z", fill: "white" }), f("path", { d: "M71.0379 35.6173H70.9282V24.756H71.0379V35.6173Z", fill: "white" }), f("path", { d: "M71.7981 35.6173H71.6885V24.756H71.7981V35.6173Z", fill: "white" }), f("path", { d: "M71.0379 35.6173H70.9282V24.756H71.0379V35.6173Z", fill: "white" }), f("path", { d: "M71.7981 35.6173H71.6885V24.756H71.7981V35.6173Z", fill: "white" }), f("path", { d: "M70.9282 35.0253V35.6831H71.7985V35.0253H70.9282ZM71.0379 35.5661V35.1422H71.6888V35.5661H71.0379Z", fill: "white" }), f("path", { d: "M71.4075 35.0838H71.2979V25.3042H71.4075V35.0838Z", fill: "white" }), f("path", { d: "M162.667 18.8503V21.3354L178.05 21.3354V18.8503L162.667 18.8503ZM162.776 21.2185V18.9599H177.947V21.2185L162.776 21.2185Z", fill: "white" }), f("path", { d: "M75.4841 36.2825H75.3745V23.2284H75.4841V36.2825Z", fill: "white" }), f("path", { d: "M78.5476 36.2825H78.438V23.2284H78.5476V36.2825Z", fill: "white" }), f("path", { d: "M81.6174 36.2825H81.5078V23.2284H81.6174V36.2825Z", fill: "white" }), f("path", { d: "M97.6104 28.6371L97.6378 28.7468L98.1996 28.564L98.741 28.3228L99.2549 27.9866L99.7414 27.5919L100.166 27.1388L100.536 26.6271L100.851 26.0789L101.078 25.5015L101.249 24.8949L101.146 24.8656L100.975 25.465L100.756 26.0278L100.447 26.5613L100.084 27.0657L99.666 27.5115L99.1932 27.8916L98.693 28.2205L98.1654 28.4544L97.6104 28.6371Z", fill: "white" }), f("path", { d: "M96.5048 33.5501L96.5039 33.4332L103.062 33.3787L103.062 33.4957L96.5048 33.5501Z", fill: "white" }), f("path", { d: "M97.0078 31.4439L97.0352 32.2041L97.1175 32.9277L97.2271 32.913L97.1449 32.1894L97.1175 31.4512L97.1517 30.8811L97.2888 30.1721L97.4806 29.2731L97.7616 28.5934L98.0631 27.9355L98.4536 27.3143L98.9059 26.7442L99.3787 26.2106L99.9063 25.7647L100.496 25.3481L101.105 25.0192L101.75 24.7195L102.421 24.5441L103.093 24.398L103.792 24.3322L104.484 24.3687L105.155 24.4564L105.169 24.3395L104.497 24.2518L103.785 24.2225L103.079 24.281L102.394 24.4345L101.715 24.6099L101.064 24.9169L100.441 25.2458L99.8447 25.6697L99.3102 26.1229L98.8237 26.6711L98.3714 27.2412L97.974 27.8771L97.6588 28.5422L97.3778 29.2366L97.186 30.1502L97.0421 30.8665L97.0078 31.4439Z", fill: "white" }), f("path", { d: "M100.016 27.8551L100.084 28.0378L100.207 28.1328L100.269 28.0451L100.173 27.9647L100.125 27.8404L100.153 27.6943L100.235 27.5993L100.372 27.5773L100.488 27.6285L100.564 27.7308L100.646 27.665L100.557 27.5335L100.386 27.4604L100.187 27.4969L100.05 27.6431L100.016 27.8551Z", fill: "white" }), f("path", { d: "M100.229 28.1474L100.42 28.1767L100.592 28.0743L100.688 27.8916L100.66 27.687L100.551 27.7089L100.578 27.8697L100.509 27.9866L100.4 28.0597L100.249 28.0305L100.229 28.1474Z", fill: "white" }), f("path", { d: "M96.4805 30.5813V30.6983H97.0972L97.3027 30.8591L97.4946 31.1222L97.5974 31.4073L97.6522 31.7508L97.6248 32.0651L97.4946 32.3867L97.3302 32.6352L97.0149 32.8618H96.501V32.9787H97.0492L97.4192 32.7156L97.5837 32.4452L97.7344 32.087L97.7618 31.7508L97.7002 31.3707L97.5837 31.0564L97.3781 30.7714L97.1383 30.5813H96.4805Z", fill: "white" }), f("path", { d: "M102.928 24.3759L103.133 24.6536L103.401 24.8729L103.688 24.9971L104.038 25.0556L104.367 25.0191L104.682 24.8729L104.949 24.6755L105.148 24.4051L105.066 24.332L104.874 24.5951L104.627 24.7706L104.332 24.9094L104.038 24.9387L103.716 24.8802L103.448 24.7706L103.202 24.5659L103.01 24.3028L102.928 24.3759Z", fill: "white" }), f("path", { d: "M103.037 24.3613H102.928V23.6742H103.037V24.3613Z", fill: "white" }), f("path", { d: "M105.217 24.3905H105.107V23.6816H105.217V24.3905Z", fill: "white" }), f("path", { d: "M103.044 33.3734L103.058 33.4904L103.51 33.4246L103.983 33.3003L104.374 33.0591L104.744 32.7887L105.093 32.4086L105.347 31.992L105.552 31.5534L105.669 31.0711L105.724 30.6179V23.6816H105.614V30.6106L105.559 31.0491L105.45 31.5169L105.258 31.9335L105.011 32.3428L104.675 32.701L104.319 32.9641L103.935 33.198L103.49 33.3149L103.044 33.3734Z", fill: "white" }), f("path", { d: "M96.4253 23.857V34.002H96.4801L102.777 33.7827L103.25 33.7608L103.709 33.6658L104.209 33.5123L104.627 33.2419L105.004 32.9056L105.354 32.5329L105.6 32.0797L105.806 31.59L105.923 31.1003L105.977 30.6179L106.005 23.6231H96.5007V23.7327H105.895L105.868 30.6106L105.813 31.0857L105.703 31.5535L105.511 32.0285L105.265 32.4671L104.929 32.8179L104.566 33.1468L104.155 33.41L103.689 33.5562L103.243 33.6439L102.743 33.6731L96.5349 33.8851V23.857H96.4253Z", fill: "white" }), f("path", { d: "M97.1167 32.8618V32.9787H103.023L103.455 32.8837L103.859 32.7375L104.229 32.5183L104.551 32.2478L104.846 31.8604L105.017 31.4731L105.154 31.0199L105.216 30.6179V24.3686H105.106V30.6106L105.052 30.9907L104.915 31.4292L104.75 31.8093L104.476 32.1601L104.175 32.4232L103.818 32.6279L103.428 32.7741L103.016 32.8618H97.1167Z", fill: "white" }), f("path", { d: "M97.5688 32.3209V32.4378H103.037L103.4 32.3428L103.756 32.2185L104.072 31.9773L104.339 31.685L104.503 31.3561L104.654 30.976L104.709 30.6178V24.851H104.599V30.6105L104.551 30.9541L104.407 31.3049L104.25 31.6265L103.996 31.8896L103.702 32.1162L103.373 32.2331L103.016 32.3209H97.5688Z", fill: "white" }), f("path", { d: "M153.574 133.117L153.464 133.113L153.492 132.032L153.602 132.035L153.574 133.117Z", fill: "white" }), f("path", { d: "M152.936 130.416L152.963 130.847L153.073 131.264L153.251 131.673L153.504 132.032L153.593 131.966L153.34 131.608L153.175 131.228L153.066 130.818L153.038 130.409L152.936 130.416Z", fill: "white" }), f("path", { d: "M152.963 130.438L153.066 130.445L153.128 129.663L153.292 128.925L153.19 128.896L153.018 129.649L152.963 130.438Z", fill: "white" }), f("path", { d: "M153.163 128.859L153.265 128.896L153.457 128.297L153.738 127.734L153.642 127.683L153.361 128.253L153.163 128.859Z", fill: "white" }), f("path", { d: "M153.648 127.675L153.73 127.748L154.093 127.273L154.511 126.915L154.443 126.827L154.011 127.193L153.648 127.675Z", fill: "white" }), f("path", { d: "M154.456 126.849L154.504 126.952L154.833 126.776L155.217 126.718L155.203 126.601L154.792 126.667L154.456 126.849Z", fill: "white" }), f("path", { d: "M155.204 126.718L155.588 126.776L155.917 126.981L155.972 126.879L155.608 126.659L155.218 126.601L155.204 126.718Z", fill: "white" }), f("path", { d: "M155.93 126.937L156.328 127.361L156.657 127.836L156.746 127.763L156.403 127.288L156.006 126.857L155.93 126.937Z", fill: "white" }), f("path", { d: "M156.649 127.851L156.903 128.421L157.067 129.013L157.177 128.984L157.006 128.384L156.752 127.807L156.649 127.851Z", fill: "white" }), f("path", { d: "M157.068 129.006L157.184 129.758L157.212 130.533L157.315 130.526L157.287 129.744L157.178 128.991L157.068 129.006Z", fill: "white" }), f("path", { d: "M156.602 132.053L156.684 132.127L156.937 131.798L157.143 131.388L157.259 130.964L157.314 130.541L157.211 130.519L157.157 130.943L157.047 131.345L156.848 131.732L156.602 132.053Z", fill: "white" }), f("path", { d: "M156.664 133.204L156.555 133.201L156.583 132.09L156.693 132.093L156.664 133.204Z", fill: "white" }), f("path", { d: "M153.834 130.445L153.868 130.76L153.978 131.059L154.129 131.352L154.368 131.6L154.636 131.754L154.958 131.849H155.239L155.574 131.783L155.835 131.622L156.068 131.403L156.239 131.132L156.362 130.84L156.417 130.511L156.308 130.489L156.253 130.811L156.143 131.074L155.986 131.33L155.766 131.534L155.526 131.673L155.232 131.732H154.965L154.67 131.644L154.43 131.505L154.211 131.271L154.074 131.008L153.971 130.723L153.944 130.431L153.834 130.445Z", fill: "white" }), f("path", { d: "M153.525 130.446L153.552 130.818L153.669 131.191L153.847 131.498L154.1 131.768L154.402 131.995L154.71 132.112L155.094 132.178L155.45 132.141L155.8 132.017L156.095 131.827L156.341 131.564L156.554 131.242L156.663 130.906L156.725 130.511L156.622 130.489L156.56 130.884L156.458 131.191L156.259 131.483L156.019 131.747L155.752 131.915L155.423 132.032L155.101 132.061L154.738 132.002L154.45 131.885L154.169 131.681L153.929 131.425L153.765 131.133L153.662 130.789L153.635 130.438L153.525 130.446Z", fill: "white" }), f("path", { d: "M152.819 134.875L157.232 134.999L157.26 133.143H157.205L152.874 133.018L152.819 134.875ZM157.123 134.882L152.929 134.765L152.984 133.143L157.15 133.259L157.123 134.882Z", fill: "white" }), f("path", { d: "M156.634 132.992L153.511 132.902L153.514 132.785L156.637 132.875L156.634 132.992Z", fill: "white" }), f("path", { d: "M154.808 127.473L154.779 127.36L155.203 127.24L155.231 127.353L154.808 127.473Z", fill: "white" }), f("path", { d: "M155.458 130.109H154.841V129.992H155.458V130.109Z", fill: "white" }), f("path", { d: "M154.409 128.18L154.491 128.26L154.745 127.96L155.019 127.69L154.951 127.61L154.67 127.873L154.409 128.18Z", fill: "white" }), f("path", { d: "M155.43 130.979H154.813V130.862H155.43V130.979Z", fill: "white" }), f("path", { d: "M155.582 127.495L155.188 127.345L155.225 127.235L155.618 127.385L155.582 127.495Z", fill: "white" }), f("path", { d: "M155.415 127.738L155.162 127.648L155.196 127.537L155.45 127.627L155.415 127.738Z", fill: "white" }), f("path", { d: "M154.974 127.694L154.948 127.58L155.175 127.519L155.202 127.634L154.974 127.694Z", fill: "white" }), f("path", { d: "M156.164 129.23L155.854 128.301L155.958 128.261L156.267 129.191L156.164 129.23Z", fill: "white" }), f("path", { d: "M156.478 129.13L156.587 129.817L156.615 130.533L156.724 130.526L156.697 129.81L156.587 129.108L156.478 129.13Z", fill: "white" }), f("path", { d: "M156.197 129.218L156.279 129.846L156.307 130.533L156.417 130.526L156.389 129.839L156.3 129.203L156.197 129.218Z", fill: "white" }), f("path", { d: "M156.115 128.158L156.341 128.633L156.478 129.166L156.581 129.137L156.444 128.596L156.211 128.107L156.115 128.158Z", fill: "white" }), f("path", { d: "M155.567 127.449L155.903 127.778L156.149 128.136L156.238 128.063L155.985 127.705L155.642 127.368L155.567 127.449Z", fill: "white" }), f("path", { d: "M155.396 127.719L155.65 127.99L155.869 128.311L155.958 128.245L155.732 127.916L155.471 127.639L155.396 127.719Z", fill: "white" }), f("path", { d: "M155.494 130.921L155.385 130.917L155.414 130.048L155.523 130.052L155.494 130.921Z", fill: "white" }), f("path", { d: "M154.156 128.004L154.238 128.077L154.519 127.719L154.848 127.42L154.78 127.332L154.444 127.631L154.156 128.004Z", fill: "white" }), f("path", { d: "M153.553 130.431L153.662 130.445L153.717 129.751L153.854 129.071L153.751 129.049L153.608 129.737L153.553 130.431Z", fill: "white" }), f("path", { d: "M153.861 130.431L153.97 130.445L154.025 129.817L154.135 129.159L154.032 129.137L153.916 129.802L153.861 130.431Z", fill: "white" }), f("path", { d: "M154.102 129.166L154.001 129.12L154.367 128.19L154.468 128.236L154.102 129.166Z", fill: "white" }), f("path", { d: "M153.724 129.042L153.826 129.079L153.991 128.567L154.244 128.099L154.148 128.041L153.895 128.523L153.724 129.042Z", fill: "white" }), f("path", { d: "M154.878 130.921L154.769 130.917L154.797 130.048L154.907 130.052L154.878 130.921Z", fill: "white" }), f("path", { d: "M170.63 135.626L170.52 135.625L170.639 119.333L170.749 119.334L170.63 135.626Z", fill: "white" }), f("path", { d: "M73.4563 41.9835H73.3467V23.2284H73.4563V41.9835Z", fill: "white" }), f("path", { d: "M69.3792 37.6346H69.2695V18.9087H69.3792V37.6346Z", fill: "white" }), f("path", { d: "M84.7688 36.2825H84.6592V23.2284H84.7688V36.2825Z", fill: "white" }), f("path", { d: "M94.8978 36.3409H84.7153V36.224H94.8978V36.3409Z", fill: "white" }), f("path", { d: "M84.7441 36.3237L84.6841 36.2258L94.8676 29.1188L94.9277 29.2166L84.7441 36.3237Z", fill: "white" }), f("path", { d: "M84.7649 36.3009L84.6621 36.2602L89.1998 23.2121L89.3026 23.2527L84.7649 36.3009Z", fill: "white" }), f("path", { d: "M94.8978 39.5789H84.7153V39.4619H94.8978V39.5789Z", fill: "white" }), f("path", { d: "M94.8978 42.846H84.7153V42.7291H94.8978V42.846Z", fill: "white" }), f("path", { d: "M56.2708 114.716H56.1611V87.563H56.2708V114.716Z", fill: "white" }), f("path", { d: "M57.0315 114.716H56.9219V87.563H57.0315V114.716Z", fill: "white" }), f("path", { d: "M56.1611 114.117V114.775H57.0314V114.117H56.1611ZM56.2708 114.658V114.234H56.9217V114.658H56.2708Z", fill: "white" }), f("path", { d: "M56.2708 114.716H56.1611V87.563H56.2708V114.716Z", fill: "white" }), f("path", { d: "M57.0315 114.716H56.9219V87.563H57.0315V114.716Z", fill: "white" }), f("path", { d: "M56.1611 114.117V114.775H57.0314V114.117H56.1611ZM56.2708 114.658V114.234H56.9217V114.658H56.2708Z", fill: "white" }), f("path", { d: "M55.0098 87.5046V114.775H58.1824V87.5046H55.0098ZM55.1125 114.658V87.6142H58.0727V114.658H55.1125Z", fill: "white" }), f("path", { d: "M56.2708 69.1076H56.1611V42.042H56.2708V69.1076Z", fill: "white" }), f("path", { d: "M57.0315 69.1076H56.9219V42.0421H57.0315V69.1076Z", fill: "white" }), f("path", { d: "M56.1611 68.5082V69.166H57.0314V68.5082H56.1611ZM56.2708 69.0491V68.6252H56.9217V69.0491H56.2708Z", fill: "white" }), f("path", { d: "M57.0315 69.1076H56.9219V68.5668H57.0315V69.1076Z", fill: "white" }), f("path", { d: "M56.2708 69.1076H56.1611V68.5667H56.2708V69.1076Z", fill: "white" }), f("path", { d: "M56.2708 69.1076H56.1611V42.042H56.2708V69.1076Z", fill: "white" }), f("path", { d: "M56.1611 68.5082V69.166H57.0314V68.5082H56.1611ZM56.2708 69.0491V68.6252H56.9217V69.0491H56.2708Z", fill: "white" }), f("path", { d: "M56.1611 41.9836V42.6414H57.0314V41.9836H56.1611ZM56.2708 42.5245V42.1005H56.9217V42.5245H56.2708Z", fill: "white" }), f("path", { d: "M57.0315 69.1076H56.9219V68.5668H57.0315V69.1076Z", fill: "white" }), f("path", { d: "M56.2708 69.1076H56.1611V68.5667H56.2708V69.1076Z", fill: "white" }), f("path", { d: "M55.0098 41.9835V69.166H58.1824V41.9835H55.0098ZM55.1125 69.0491V42.1005H58.0727V69.0491H55.1125Z", fill: "white" }), f("path", { d: "M118.667 20.5898V21.5473H119.284V20.5898H118.667ZM118.777 21.4303V20.7068H119.175V21.4303H118.777Z", fill: "white" }), f("path", { d: "M109.075 20.5898V21.5473H109.691V20.5898H109.075ZM109.184 21.4303V20.7068H109.582V21.4303H109.184Z", fill: "white" }), f("path", { d: "M128.089 44.5343L129.158 44.7462L130.227 44.9582H127.699L127.897 44.7462L127.699 44.9582V44.9363V23.4695H126.883V44.9582L117.907 44.5416H126.458V44.5343V23.4768H119.031L119.051 23.2502L119.065 23.0675L119.031 23.4768V23.0236V19.1206V18.6674L119.174 18.8355L119.031 18.6674H119.037H119.421H130.645L130.446 20.6993L130.22 23.0163V19.1133H130.213H119.414V19.1206V23.0163H130.22L130.426 23.2356L130.22 23.0163L130.645 18.6674V23.4695H128.082L128.089 44.5343ZM126.876 23.4695L126.685 33.0151L126.876 23.4695ZM128.082 23.4695L127.89 34.0604L127.849 36.2823L128.082 23.4695Z", fill: "white" }), f("path", { d: "M128.089 44.5343H130.652L130.227 44.951L128.089 44.5343Z", fill: "white" }), f("path", { d: "M130.618 47.6553L124.492 47.4434L118.332 47.2314H130.227L130.433 45.9377L130.227 47.2314V44.951L130.44 44.7463L130.652 44.5343V47.6553H117.907L118.332 47.2314L130.618 47.6553Z", fill: "white" }), f("path", { d: "M122.395 44.7463L126.883 44.951H118.332V44.9583V47.2314L118.119 47.4434L117.907 47.6553V47.648V44.5343L122.395 44.7463Z", fill: "white" }), f("path", { d: "M94.7805 42.7947L94.8284 39.5203L94.8833 36.2823L94.897 35.5587L95.0957 23.4695V47.2314L104.353 47.4945L102.633 47.4433L95.0957 47.2314H109.746V44.9509L109.958 44.7463L110.171 44.5343V47.3337L117.119 51.6168L116.92 51.975L109.862 47.6553H94.6982L94.7805 42.7947Z", fill: "white" }), f("path", { d: "M96.3291 44.5343H110.171L109.746 44.951L96.3291 44.5343Z", fill: "white" }), f("path", { d: "M93.5748 52.4866L85.7084 47.6553H83.2759L83.7007 47.2313L84.845 47.4506L84.4956 47.3848L83.7007 47.2313H85.5303L85.6673 47.3848L85.7084 47.4287L85.5303 47.2313L85.9209 44.5343V47.2533L93.7736 52.0919L93.5748 52.4866Z", fill: "white" }), f("path", { d: "M84.5155 44.9509V36.5162H84.5087H73.5999V37.386H83.7001L83.474 37.6126L83.2821 37.8026L83.6933 37.3933V37.4006V47.2387L83.5425 47.3922L83.2684 47.6626V47.6553V37.8246H83.2616H73.593V42.2027L66.3707 41.9907L58.1206 41.7495H73.2024V37.8172V36.0777V35.8365H73.1956H69.5159V37.8465L69.3172 37.8392L69.5159 37.8465H69.3172H55.2495L55.0233 40.317L55.2495 37.8465V41.7495L58.1206 42.2027H54.8589L55.0508 41.9834L54.8589 42.2027V37.4299H55.0576H69.1253V35.6318V35.4199L69.324 35.4418L70.7973 35.5953L69.1253 35.4199H73.5999L73.4011 35.6318L73.5999 35.4199V35.6318V36.085H84.9061L84.7348 36.2823L84.7417 36.2677L84.9061 36.0777V36.085V44.5343L84.5155 44.9509ZM71.1125 35.6172L71.1536 35.6245L71.3112 35.6391L71.1125 35.6172Z", fill: "white" }), f("path", { d: "M85.5298 47.2314V44.9509L85.0158 44.6074L85.2146 44.7463L85.5298 44.9509H84.5156L84.9062 44.5343H85.9203L85.5298 47.2314Z", fill: "white" }), f("path", { d: "M50.9258 74.7501H54.1052L53.6804 77.4764V75.196H51.3506L50.9258 74.7501Z", fill: "white" }), f("path", { d: "M51.1519 76.4604L50.9258 77.9003V74.7501L51.3438 75.1959L51.1519 76.4604Z", fill: "white" }), f("path", { d: "M51.3506 75.1959V77.4764H53.6804L54.1052 77.9003L53.4885 77.8053L54.1052 77.9003H50.9258L51.3506 75.1959Z", fill: "white" }), f("path", { d: "M53.6807 77.4764L53.8794 76.2046L54.1055 74.7501V77.9003L53.8794 77.6737L53.6807 77.4764Z", fill: "white" }), f("path", { d: "M51.3506 79.216V81.4964L54.1052 81.9203H50.9258L51.3506 79.216Z", fill: "white" }), f("path", { d: "M51.3501 81.4964H53.6799L54.1047 81.9203L51.3501 81.4964Z", fill: "white" }), f("path", { d: "M54.1055 78.7701V81.9203L53.6807 81.4964L54.1055 78.7701Z", fill: "white" }), f("path", { d: "M50.9258 78.7701H54.1052L53.6804 81.4964V79.216L53.7763 79.1209L53.6804 79.216L52.2825 78.9894L53.6804 79.216H51.3506H51.3438L50.9258 81.9203V78.7701L51.1519 79.0113L51.1588 79.0186L50.9258 78.7701Z", fill: "white" }), f("path", { d: "M49.6036 73.3394H54.8661L54.8798 71.8995H54.8592V68.8955H58.3196V70.0357H66.4807V73.186V83.6014V86.7516H58.3196V87.8041L58.1209 87.7749L57.0725 87.6214L58.3128 87.8041H54.8524L55.058 87.5702L55.0511 87.5775L54.8524 87.8041V83.3383H49.5898V83.331L49.6036 73.3394ZM66.0627 73.186H65.1034L59.8134 75.3494V78.412V81.4745L65.028 83.6014H66.0559V73.186H66.0627ZM58.3265 86.3277H66.0627V84.0473H65.2473V85.4579H58.3265V86.3277ZM58.3265 73.3394L58.3539 83.331L58.3265 83.3017L58.3539 83.331H58.3265V85.0121H64.8499V83.9742L59.4229 81.7668V78.4046V75.0425L64.8499 72.8059V71.768H58.3265V73.3394ZM58.3265 71.3587H65.2473V72.7693H66.0627V70.4889H58.3265V71.3587ZM57.9017 71.7753V70.0357V69.3487H55.2567V73.3394H57.9017V71.7753ZM56.8807 87.5922L56.6888 87.5629L56.4695 87.5337L56.8807 87.5922ZM55.2567 87.351H57.9017V86.7516V86.7443V85.0121V83.331H55.2567V87.351ZM55.243 83.331L55.0922 85.1436L55.243 83.331ZM50.0284 82.907H57.9085V73.7853H50.0284V73.7926V82.907Z", fill: "white" }), f("path", { d: "M179.036 120.205H171.354V120.176H179.036V120.205Z", fill: "white" }), f("path", { d: "M159.007 0.45317H157.376L156.986 2.61667V0.45317L129.474 0.45317V2.61667L127.445 2.16351H129.076V0.45317H127.445L127.021 2.61667V0.45317L99.5361 0.45317V2.61667L97.5078 2.16351L99.1113 2.16351V0.45317L97.5078 0.45317L97.083 9.77516e-06L99.5293 9.77516e-06L127.014 9.77516e-06L129.46 9.77516e-06L156.972 9.77516e-06L159.391 9.77516e-06L159.007 0.45317ZM127.021 0.219283L112.795 0.116962L127.021 0.219283ZM129.467 0.241213L139.197 0.314304L129.467 0.241213Z", fill: "white" }), f("path", { d: "M97.5147 0.453201V2.16354L99.543 2.6167H97.5147V18.6675H108.848H109.239L109.218 18.894L109.205 19.0768L109.239 18.6675V19.1206V20.8894V21.2476V23.0164V23.4695H108.848H96.3224L96.3087 24.0835V24.0981V44.549L96.3293 44.527L103.038 44.739L109.746 44.951H95.9044L95.9113 44.6294L95.9044 44.951V23.4622H95.089L94.6984 47.648V23.4622H73.6003V24.9606H69.1326L69.3313 24.7486L69.1326 24.9606V24.9533V24.7486V24.7413V19.106H59.1146V23.2137L58.6897 23.1699L57.2713 23.0164L59.1146 23.2137H54.8387V19.106L36.1869 19.106L33.1787 21.2037L30.2802 23.4842L27.553 25.9473L24.908 28.5567L22.4343 31.3195L20.0977 34.2285L17.905 37.2618L15.8767 40.412L14.0198 43.6792L12.3067 47.0706L10.7855 50.5205L9.46299 54.0946L8.69554 56.4847L8.30496 57.698L7.77048 59.708L7.31823 61.3891L6.55763 65.1387L6.3452 66.5128L5.96833 68.9175L5.57775 72.6963L5.37903 76.5336L5.37903 80.3416L5.39274 80.5536L5.57775 84.1862L5.96833 87.965L6.44114 90.9909L6.55763 91.7438L7.31823 95.4933L8.30496 99.1844L9.45614 102.788L10.7786 106.362L12.2998 109.812L14.0129 113.203L15.8699 116.47L17.8981 119.621L20.0909 122.654L22.4275 125.563L24.9012 128.326L27.5461 130.935L30.2733 133.398L33.1719 135.679L36.18 137.776H54.8593V133.669H59.1351V137.776H69.1189V131.352H69.1257H73.5934L73.3878 131.586L73.5934 131.352V133.42L73.2028 133.873V131.82H69.5163V131.827V137.791L69.3176 138.018L69.5163 137.791L89.1823 138.076L69.5163 137.791H100.18V137.784V136.468V135.211V133.888L75.2996 133.464L100.18 133.888H73.2028L73.6003 133.435H100.605L100.585 133.661L100.564 133.844L100.605 133.435V133.888V135.211H101.112V136.468H100.605V137.791V138.244L100.393 138.018L100.605 138.244H100.358H100.605H69.3244H69.1257H59.142H54.8661H35.9059L32.9252 136.052L30.0267 133.742L27.272 131.279L24.6271 128.64L22.126 125.877L19.7894 122.939L17.5624 119.906L15.5341 116.726L13.6497 113.423L11.9641 110.031L10.4155 106.552L9.06556 102.949L7.91438 99.316L6.92765 95.5957L6.13964 91.8461L5.57775 88.0381L5.18717 84.23L4.98845 80.3928L4.98845 76.5189L5.14606 73.4491L5.18717 72.6817L5.21458 72.4112L5.57775 68.8736L6.13964 65.0656L6.92765 61.316L7.91438 57.5957L8.1405 56.894L9.07241 53.9704L10.4223 50.367L11.1555 48.7151L7.00988 46.6613L6.94821 46.7709L6.7632 46.9098L6.53707 46.9464L6.3315 46.9171L6.13964 46.7855L6.00944 46.5882L5.96833 46.347L5.99574 46.1423L2.24755 44.2858L2.19273 44.4174L0.801717 43.745L0 43.3503L0.0822281 43.1383L1.88438 39.2645L3.87839 35.5149L6.04371 31.8531L8.38033 28.3447L10.9088 24.9533L13.5812 21.7154L16.3975 18.6236L19.3782 15.6854L21.0639 14.1943L22.5029 12.9225L23.3114 12.272L25.7371 10.3132L29.0879 7.91579L31.171 6.59283L32.5757 5.70113L32.7744 6.08852L29.314 8.28125L27.8819 9.31181L25.9701 10.6859L22.7633 13.266L19.666 16.0289L18.3709 17.2934L16.6853 18.9379L13.869 22.0296L12.9439 23.1479L11.224 25.2383L8.72294 28.6298L6.38632 32.1089L4.221 35.7415L2.2544 39.4911L1.58287 40.931L0.541331 43.1602L0.808567 43.2918L2.01457 43.8765L3.11093 41.5303L3.65912 40.3608L5.24199 37.3495L5.5709 36.7282L6.13278 35.7854L7.65399 33.2199L8.20217 32.3866L9.90154 29.7992L12.3204 26.5321L14.3692 24.0323L14.8831 23.4111L15.7808 22.4243L17.6103 20.4143L19.481 18.5578L20.4472 17.593L23.4279 14.896L26.5526 12.4036L29.7868 10.0647L31.8836 8.69786L33.1033 7.90117L33.2404 8.14967L33.3021 8.26663L30.2322 10.262L32.843 14.6109C33.8228 13.9677 34.3984 13.6461 34.4053 13.6388L34.419 13.6315L36.6597 13.6096V8.28854H33.3363L33.2678 8.16429L33.1102 7.87193H54.825V6.13235H32.795L32.7676 6.0739L32.5689 5.6792H55.243V8.28854H55.0854V13.193L55.2773 13.4195H55.3253V13.478V13.5365H55.2636L55.0854 13.7119V18.6675H59.094H69.112H69.1463H69.3107H97.0762V2.6167V0.00735474L97.5147 0.453201ZM109.047 18.894L109.095 18.8429L109.047 18.894ZM100.605 136.022H100.687V135.664H100.605V136.022ZM56.2092 133.83L57.3398 133.954L58.258 134.056L56.2092 133.83ZM55.2567 137.791H58.7171V134.1H58.6966H58.7171H55.2567V137.791ZM32.8772 20.8967L30.0746 16.6648C29.2249 17.3007 28.3684 17.9731 27.5187 18.6675L30.52 22.7752L32.8772 20.8967ZM30.0267 23.1699L30.4378 22.841L27.4365 18.7332C26.58 19.4422 25.7303 20.1731 24.9286 20.904L28.1217 24.8729L30.0267 23.1699ZM27.2652 25.6257L28.0326 24.9387L24.8395 20.9698C24.0926 21.6496 23.3457 22.3512 22.6262 23.0529L25.8262 27.051L27.2652 25.6257ZM24.6202 28.2716L25.7508 27.146L22.544 23.1479C21.708 23.9739 20.8789 24.829 20.084 25.6842L23.6266 29.3607L24.6202 28.2716ZM22.1191 31.0271L23.5581 29.4411L20.0155 25.7646C19.2686 26.5759 18.5285 27.4091 17.8159 28.257L21.5367 31.758L22.1191 31.0271ZM19.7825 33.9727L21.4682 31.8458L17.7405 28.3374C17.021 29.1926 16.3153 30.0696 15.6369 30.954L19.5427 34.287L19.7825 33.9727ZM19.481 34.382L15.5752 31.0418C14.89 31.9408 14.2116 32.869 13.5675 33.7973L17.6103 36.9329L19.481 34.382ZM17.5487 37.0279L13.5058 33.8923C12.848 34.8425 12.2108 35.8146 11.6078 36.7794L15.8288 39.725L17.5487 37.0279ZM15.5341 40.1781L15.7671 39.8127L11.5529 36.8744C10.9499 37.8538 10.3469 38.8625 9.7782 39.8931L14.1362 42.634L15.5341 40.1781ZM13.6497 43.4818L14.0746 42.7363L9.71652 39.9954C9.13408 41.0552 8.57905 42.1223 8.06513 43.1749L12.5534 45.6819L13.6497 43.4818ZM7.05784 46.0912L7.09895 46.3324L7.07155 46.5517L11.2035 48.5982L11.9709 46.8733L12.5122 45.7842L8.02401 43.2772C7.61973 44.1104 7.2223 44.9656 6.84542 45.8354L6.9345 45.8938L7.05784 46.0912ZM6.10537 46.5224L6.20816 46.6832L6.35891 46.7929L6.53707 46.8221L6.71523 46.7929L6.86598 46.6832L6.96876 46.5224L6.99617 46.3324L6.96876 46.1423L6.86598 45.9815L6.71523 45.8719L6.53707 45.8427L6.35891 45.8719L6.20816 45.9815L6.10537 46.1423L6.07797 46.3324L6.10537 46.5224ZM2.30922 44.1762L6.05056 46.0254L6.11908 45.9085L6.30409 45.7696L6.53022 45.7257L6.73578 45.755L6.74949 45.7623C7.12636 44.8998 7.5238 44.0446 7.92808 43.2114L3.83042 40.9236L2.30922 44.1762ZM5.61886 37.5176L4.02914 40.507L3.87839 40.8286L7.97605 43.1164C8.48997 42.0639 9.045 40.9967 9.62744 39.9296L5.65998 37.4299L5.61886 37.5176ZM5.94092 36.911L5.70794 37.3422L9.67541 39.8419C10.2442 38.8113 10.8471 37.7954 11.4501 36.8159L7.57861 34.1189L5.94092 36.911ZM9.12037 31.7361L7.9966 33.4318L7.64714 34.0239L11.5187 36.7209C12.1217 35.7561 12.7589 34.784 13.4168 33.8265L9.66171 30.9175L9.12037 31.7361ZM10.2441 30.0404L9.72338 30.8225L13.4784 33.7315C14.1225 32.8033 14.8009 31.875 15.4861 30.976L11.8476 27.8623L10.2441 30.0404ZM12.6356 26.8025L11.9161 27.7746L15.5547 30.8883C16.233 30.0039 16.9388 29.1268 17.6583 28.2643L14.1431 24.9606L12.6356 26.8025ZM15.1983 23.6815L14.2185 24.8729L17.7337 28.1839C18.4463 27.3361 19.1864 26.4955 19.9333 25.6842L16.5551 22.1831L15.1983 23.6815ZM17.8981 20.7067L17.2198 21.4522L16.6373 22.0954L20.0155 25.5965C20.8104 24.734 21.6395 23.8788 22.4823 23.0529L19.4056 19.2156L17.8981 20.7067ZM20.7418 17.8854L19.481 19.1352L22.5577 22.9725C23.2772 22.2635 24.0241 21.5619 24.771 20.8894L21.6737 17.0448L20.7418 17.8854ZM23.6952 15.2176L21.756 16.9717L24.8532 20.8163C25.6618 20.0854 26.5046 19.3545 27.368 18.6455L24.4284 14.6182L23.6952 15.2176ZM26.7855 12.6959L24.5106 14.5525L27.4502 18.5724C28.2999 17.8781 29.1564 17.1983 30.0061 16.5697L27.2309 12.3743L26.7855 12.6959ZM30.15 10.2839L29.9924 10.3863L27.9915 11.8262L27.32 12.3085L30.0952 16.4967C30.9997 15.8242 31.8973 15.1956 32.7607 14.6255L30.15 10.2839ZM32.8224 14.7279C31.9659 15.2907 31.0682 15.9192 30.1637 16.5917L32.9663 20.8236L35.4057 19.0329L32.8224 14.7279ZM36.6665 13.6973L34.4532 13.7192C34.371 13.7704 33.8091 14.0847 32.9115 14.6767L35.4879 18.9744L35.9059 18.6675H36.6665V13.6973ZM39.7295 8.252H36.7693V13.573L39.7295 13.5511V8.252ZM39.7295 13.668L36.7693 13.69V18.6675H39.7295V13.668ZM42.7993 8.252H39.8391V13.5511L42.7993 13.5292V8.252ZM42.7993 13.6388L39.8391 13.6607V18.6602H42.7993V13.6388ZM45.8349 8.252H42.9021V13.5219L45.8349 13.4999V8.252ZM45.8349 13.6169L42.9021 13.6388V18.6675H45.8349V13.6169ZM48.9047 8.252H45.9445V13.4999L48.9047 13.478V8.252ZM48.9047 13.5876L45.9445 13.6096V18.6602H48.9047V13.5876ZM51.9402 8.252H49.0075V13.4707L51.9402 13.4488V8.252ZM51.9402 13.5657L49.0075 13.5876V18.6675H51.9402V13.5657ZM54.9963 8.252H52.0499V13.4415L54.736 13.4195L54.0781 12.6521L53.6259 12.1258L53.7835 11.9723L53.9411 11.8188L54.9963 13.0614V8.252ZM54.9963 13.8142L54.6126 14.1797L53.8794 14.8814L53.5985 14.5525L53.8863 14.2747L54.6537 13.5365L52.0499 13.5584V18.6602L54.8387 18.6602H54.9963V13.8142ZM58.7171 22.8117V19.1206H55.2567V22.8117H58.7171L59.0255 23.1406L58.7171 22.8117ZM73.4838 24.9533L73.4016 24.946L71.7433 24.7779L71.6337 24.7705L73.4838 24.9533ZM73.429 23.93L73.4016 24.0031L73.3673 24.0981L73.429 23.93ZM69.5232 19.1206V24.5513H73.2097V23.0237H94.6984H96.3293H108.848V23.0164V21.7007V20.4436V19.1206H108.828H69.5232Z", fill: "white" }), f("path", { d: "M127.446 0.45317V2.16351L129.467 2.61667L127.021 2.61667L127.446 0.45317Z", fill: "white" }), f("path", { d: "M162.919 21.518L150.318 21.0648L162.529 21.0648V19.1133H162.515L148.461 19.1133V23.0163V23.2283V63.1944L148.221 63.4722L148.461 63.2017L152.23 63.6549H148.064V47.6334H140.41V44.8048L132.591 40.01L132.79 39.6226L140.677 44.4832H148.071V23.4768L144.206 23.2356L143.651 23.1991L148.071 23.4768H140.417L140.643 23.2356L140.417 23.4768V19.0256L132.598 14.2016L132.797 13.8434L140.684 18.6748L159.021 18.6967V2.61668L156.992 2.61668L157.39 0.453186V2.16352L157.945 2.28777L157.39 2.16352L159.021 2.16352V0.453186L159.411 2.28882e-05V0.0146408V2.60937V18.6894L162.926 18.6967L162.919 21.518ZM140.622 44.6805L140.629 44.6878L140.622 44.6805ZM148.064 19.1206H140.835L140.636 18.9086L140.622 18.894L140.835 19.1206L140.787 19.6323L140.835 19.1206V23.0237H140.841H148.064V19.1206ZM141.164 44.5124L140.698 44.4905L141.164 44.5124L144.343 44.6805L144.706 44.7024L141.164 44.5124ZM148.064 44.8925H140.835L140.725 44.7901L140.835 44.8998V47.1802H148.064V44.8925ZM159.349 2.61668L159.014 18.6967L159.349 2.61668Z", fill: "white" }), f("path", { d: "M163.509 133.128L163.317 133.194L163.159 133.157L162.988 133.055L162.892 132.879V132.667L162.988 132.492L163.139 132.397L163.31 132.36L163.502 132.426L163.639 132.572L163.673 132.777L163.639 132.982L163.509 133.128ZM163.461 132.66L163.399 132.594L163.29 132.572L163.2 132.594L163.111 132.667L163.091 132.784L163.111 132.879L163.2 132.974L163.29 132.996L163.399 132.974L163.468 132.879L163.488 132.784L163.461 132.66Z", fill: "white" }), f("path", { d: "M163.159 134.144L163.118 134.005L163.159 133.866L163.289 133.822L163.42 133.866L163.461 134.005L163.42 134.144L163.289 134.188L163.159 134.144ZM163.337 134.012L163.324 133.968L163.283 133.954L163.242 133.968L163.228 134.012L163.242 134.056L163.283 134.071L163.324 134.056L163.337 134.012Z", fill: "white" }), f("path", { d: "M165.578 130.709L165.695 130.986L165.729 131.315L165.194 133.398L165.064 133.581L164.879 133.647H161.741L161.542 133.581L161.419 133.42L160.843 131.322L160.871 131.008L160.987 130.723L161.165 130.475L161.398 130.285L161.672 130.182L162.467 130.029L163.283 129.97H163.29L164.112 130.029L164.907 130.182L165.16 130.27L165.4 130.46L165.578 130.709ZM165.112 130.372L164.872 130.285L164.091 130.138L163.276 130.08L162.467 130.138L161.686 130.285L161.439 130.372L161.227 130.54L161.069 130.767L160.96 131.023L160.932 131.301L161.487 133.347L161.583 133.471L161.727 133.523H164.831L164.975 133.471L165.071 133.347L165.599 131.301L165.571 131.023L165.462 130.767L165.304 130.54L165.112 130.372Z", fill: "white" }), f("path", { d: "M161.118 134.275L161.303 134.37H165.297L165.469 134.268L165.565 134.107L165.9 131.096L166.01 131.103L165.667 134.151L165.544 134.356L165.325 134.487H161.275L161.042 134.363L160.926 134.151L160.556 131.103L160.665 131.089L161.028 134.115L161.118 134.275Z", fill: "white" }), f("path", { d: "M165.276 129.788L165.64 129.97L165.996 130.255L166.277 130.584L166.482 130.986L166.599 131.425L166.654 131.885V135.035H159.938V131.885L160 131.425L160.11 131.008L160.308 130.606L160.603 130.255L160.939 129.985L161.323 129.795L161.946 129.583L162.625 129.459L163.276 129.429L163.926 129.459L164.612 129.583L165.276 129.788ZM163.926 129.568L163.282 129.539L162.645 129.568L161.98 129.685L161.371 129.89L161.007 130.065L160.685 130.321L160.411 130.643L160.219 131.023L160.11 131.432L160.055 131.878V134.904H166.558V131.878L166.503 131.439L166.393 131.023L166.201 130.643L165.934 130.328L165.598 130.065L165.242 129.89L164.605 129.678L163.926 129.568Z", fill: "white" }), f("path", { d: "M123.683 34.0458L123.874 34.0092L124.066 34.0458L124.203 34.192L124.265 34.3966L124.231 34.5647L124.135 34.7474L123.97 34.8498H123.772L123.607 34.7474L123.518 34.5866L123.484 34.4039L123.546 34.1993L123.683 34.0458ZM123.703 34.5282L123.772 34.6232L123.881 34.6451L123.97 34.6232L124.059 34.5282L124.08 34.4332L124.059 34.3162L123.97 34.2431L123.881 34.2212L123.772 34.2431L123.71 34.3089L123.689 34.4258L123.703 34.5282Z", fill: "white" }), f("path", { d: "M125.163 34.2943L125.204 34.4332L125.163 34.572L125.033 34.6159L124.903 34.572L124.862 34.4332L124.903 34.2943L125.033 34.2505L125.163 34.2943ZM124.978 34.4332L124.992 34.477L125.033 34.4916L125.074 34.477L125.088 34.4332L125.074 34.3893L125.033 34.3747L124.992 34.3893L124.978 34.4332Z", fill: "white" }), f("path", { d: "M121.442 32.7009L121.525 32.4304L121.703 32.1746L121.936 31.9846L122.196 31.8603L122.504 31.8238L124.457 32.3939L124.629 32.5328L124.69 32.7301V36.0777L124.629 36.2896L124.478 36.4212L122.511 37.0352L122.217 37.0059L121.949 36.8817L121.716 36.6916L121.538 36.4431L121.442 36.1508L121.298 35.3029L121.244 34.4331V34.4258L121.298 33.5487L121.442 32.7009ZM121.401 35.2956L121.538 36.1289L121.621 36.392L121.778 36.6186L121.991 36.7867L122.23 36.9036L122.491 36.9329L124.409 36.3408L124.526 36.2385L124.574 36.085V32.774L124.526 32.6205L124.409 32.5181L122.491 31.9554L122.23 31.9846L121.991 32.1015L121.778 32.2696L121.621 32.4962L121.538 32.7521L121.401 33.5853L121.346 34.4551L121.401 35.2956Z", fill: "white" }), f("path", { d: "M125.28 36.7428L125.375 36.5455V32.2843L125.273 32.1016L125.129 31.9992L122.299 31.6411L122.313 31.5242L125.163 31.8896L125.355 32.0212L125.485 32.2551V36.5747L125.362 36.8232L125.163 36.9475L122.313 37.3422L122.299 37.2252L125.129 36.8379L125.28 36.7428Z", fill: "white" }), f("path", { d: "M121.073 32.3062L121.244 31.9188L121.511 31.5388L121.819 31.2391L122.196 31.0198L122.607 30.8956L123.039 30.8371H125.993V38H123.039L122.607 37.9342L122.217 37.8173L121.84 37.6053L121.511 37.291L121.258 36.9329L121.079 36.5236L120.881 35.8585L120.764 35.1348L120.737 34.4405L120.764 33.7461L120.881 33.0152L121.073 32.3062ZM120.84 34.4332L120.867 35.1129L120.977 35.8219L121.169 36.4724L121.333 36.8598L121.573 37.2033L121.874 37.4957L122.231 37.7003L122.614 37.8173L123.032 37.8757H125.869V30.9394H123.032L122.621 30.9979L122.231 31.1148L121.874 31.3195L121.58 31.6045L121.333 31.9627L121.169 32.3428L120.97 33.0225L120.86 33.7388L120.84 34.4332Z", fill: "white" }), f("path", { d: "M128.09 62.3246L127.884 62.8875L128.09 62.3246V63.8596L127.877 63.6111L128.09 63.8596L83.2759 63.8596L83.7007 63.4064L126.089 63.8376L83.7007 63.4064L127.699 63.4064V62.7778H127.644L83.7007 62.7778L83.5774 62.6463L83.7007 62.7778V63.4064L83.2759 63.8523V63.8596V63.8523V63.8596V63.8523V62.3246L104.326 62.5366L83.2759 62.3246L128.09 62.3246Z", fill: "#1C6BCF" }), f("path", { d: "M57.1691 42.0419L56.7854 41.9834L55.2573 41.7422H58.1284L73.6009 42.1954H58.1284L57.1691 42.0419Z", fill: "white" }), f("path", { d: "M54.8662 114.504L54.921 114.534L55.0649 114.621L55.1951 114.702L54.8662 114.504H55.5446L56.223 114.519L56.9836 114.541L57.9703 114.563L55.5446 114.504H73.6072L73.2783 114.855L73.6072 114.512V114.519V120.966H73.6003H69.4342L64.9391 129.334L64.5759 129.122L69.1326 120.68V119.277H69.1189H54.8731L54.8662 114.504ZM55.2568 114.928V118.86H55.2636H69.3245H69.5232L69.3245 119.072L69.5232 118.86V120.542L69.3382 120.739L69.5232 120.542H73.2098V114.936H73.196H55.5446H55.2568L55.0581 114.724L54.9896 114.65L55.2568 114.928L54.9827 117.983L55.2568 114.928Z", fill: "white" }), f("path", { d: "M121.566 133.888V133.435H148.063L148.276 133.676L148.262 133.661L148.063 133.435L148.262 105.127L148.283 102.247L148.063 133.435V76.2119L148.2 76.3654L148.07 76.2119L151.839 76.6651H148.461V76.7235V133.683V133.895V137.798H156.279H156.423H167.003H167.168H201.038V137.769L201.011 114.336H199.181V114.343L199.209 135.847H181.263H179.632H167.099H167.003H156.423H156.389H150.325V119.555V117.815V78.6312H151.846V76.687L152.147 76.3435L151.846 76.687L148.077 76.2338H152.243L152.079 77.2498L152.243 76.2338V78.7189L160.089 83.5575L159.89 83.9157L151.976 79.0552H150.715V117.823H156.588L163.57 113.532L163.796 113.89L156.821 118.188V119.562L156.43 119.146L156.711 118.195L156.43 119.146V118.276H156.423H150.715V119.146H156.423L156.814 119.562H156.807H150.708V135.423H150.715H156.423H156.43H156.814H166.606H179.632V119.548H179.618H164.577L164.968 118.254V119.124H180.043L179.632 135.416L179.776 129.802L180.043 119.124V135.423H180.858V135.401V118.261L180.893 118.225L180.858 118.261H180.845H164.961L164.571 117.808H164.591H180.975L183.538 115.074L186.011 117.713L188.458 115.074L190.904 117.713L193.377 115.074L195.824 117.713L197.818 115.586L198.099 115.886L195.817 118.32L193.371 115.71L190.897 118.32L188.451 115.71L186.004 118.32L183.531 115.71L181.249 118.144V135.423H198.784V135.401L198.757 113.912H201.401L201.278 121.945L201.401 113.912L201.429 138.244L201.196 137.974L201.223 138.003L201.436 138.244L183.079 138.003L167.168 137.798L201.436 138.244H167.003H166.612H156.821H156.43H121.572L121.785 138.018L121.572 138.244V137.791V136.468H121.065V135.211H121.572V133.888H121.566ZM152.031 78.8286L151.908 78.697L152.031 78.8286ZM153.819 135.649L156.382 135.839L153.819 135.649ZM181.249 118.144L181.084 125.475L181.249 118.144ZM156.423 137.798L166.612 138.23L161.275 138.003L156.423 137.798ZM132.015 133.618L135.901 133.683L139.197 133.742L132.015 133.618ZM121.984 135.211V136.475V137.798L139.135 138.018L121.984 137.798H148.063V133.895H121.984V135.211ZM121.607 137.835L121.6 137.915L121.607 137.835ZM121.477 135.657V136.015H121.559V135.657H121.477Z", fill: "white" }), f("path", { d: "M198.956 97.6495L199.717 97.803L199.819 97.8249L201.039 98.0661H199.182V103.044L198.97 103.256L198.956 103.27L198.757 103.46V103.468V103.46V97.6129L198.956 97.6495Z", fill: "white" }), f("path", { d: "M201.43 103.468H198.757L199.182 103.044L201.43 103.468Z", fill: "white" }), f("path", { d: "M201.43 103.468L201.368 103.402L201.43 103.46L201.204 103.424L200.47 103.285L200.306 103.256L199.182 103.044H201.039V103.036V98.0661L201.402 97.6422L201.039 98.0661L198.757 97.6129H201.43V103.468Z", fill: "white" }), f("path", { d: "M201.12 46.9683L201.456 47.3557H198.784L199.209 46.9025H201.066V46.8952V41.925L201.251 41.713L201.066 41.925L200.175 41.7496L201.066 41.925H199.209V46.9025L198.784 47.3557V47.3483V41.4718L198.982 41.5084L199.716 41.6546L199.99 41.713L198.784 41.4718H201.456L201.23 44.6513L201.456 41.4718V47.3557L201.12 46.9683Z", fill: "white" }), f("path", { d: "M152.23 63.6476L148.461 63.1944H151.839V62.5366H150.325V62.5074V21.0721L162.926 21.5253H150.715V21.5838V62.1273L150.386 62.4781L150.715 62.1273L150.907 62.2004L150.715 62.1273H151.976L159.891 57.2667L160.089 57.6541L152.243 62.4635L152.23 63.6476L152.113 63.516L152.23 63.6476ZM152.106 62.4489L151.997 62.7486L152.106 62.4489Z", fill: "white" }), f("path", { d: "M199.209 21.0648V21.0722V30.6105L198.784 31.0564V31.0491V21.518L199.209 21.0648Z", fill: "white" }), f("path", { d: "M199.209 30.6105L201.429 31.0564H198.784L199.209 30.6105Z", fill: "white" }), f("path", { d: "M201.43 31.0564L201.231 31.0198L200.505 30.8736L200.395 30.8517L199.21 30.6105L201.039 30.6398V30.6251V19.1206L201.128 19.0183L201.039 19.1206H201.026L178.221 19.1206L177.803 18.6967H177.831L201.43 18.6967L201.252 24.047L201.43 18.6967V31.0564L201.32 30.9394L201.43 31.0564Z", fill: "white" }), f("path", { d: "M178.221 20.7067V21.0649L177.796 21.518V19.8954V18.6967L178.221 19.1133L178.145 19.5519L178.221 19.1133V19.4715V20.7067Z", fill: "white" }), f("path", { d: "M178.221 21.0649L198.784 21.518L177.796 21.518L178.221 21.0649Z", fill: "white" }), f("path", { d: "M198.784 21.518L178.22 21.0649L199.209 21.0649L198.784 21.518Z", fill: "white" }), f("path", { d: "M164.968 118.254L164.577 119.548V117.808L164.968 118.254Z", fill: "white" }), f("path", { d: "M183.902 63.6476L166.182 63.1944H183.511L183.902 63.6476Z", fill: "#F6DD70" }), f("path", { d: "M183.901 62.1127V63.6476L183.511 63.1944L183.901 62.1127Z", fill: "#F6DD70" }), f("path", { d: "M161.397 76.6724V78.6166H161.404H199.208L198.783 79.0405H198.749H161.007L161.397 76.6724Z", fill: "#1C6BCF" }), f("path", { d: "M199.21 78.6166V78.6239L199.182 86.7516L198.757 87.1975L198.785 79.0405L199.21 78.6166Z", fill: "#1C6BCF" }), f("path", { d: "M201.327 87.1829L201.204 87.1609L200.47 87.0148L200.217 86.9636L199.182 86.7516H201.005L201.19 86.9636L201.204 86.9782L201.402 87.1975H198.757L199.182 86.7516L201.327 87.1829Z", fill: "#F6DD70" }), f("path", { d: "M201.402 57.7638V87.1975L201.004 86.7516L201.402 57.7638Z", fill: "#F6DD70" }), f("path", { d: "M201.401 57.7638L201.004 86.7516V58.217L199.208 58.217V62.1127V63.6476V76.6724H166.598H165.166H161.397L161.281 76.5335L161.397 76.6651L161.007 79.0406V76.2192H165.166V63.6476L161.397 63.1944H165.564L165.18 76.2192L165.365 69.9334L165.564 63.1944V76.2192H166.18L166.605 63.6476V76.2192H198.783V63.6476H191.637L192.061 63.1944H198.783V62.5366H198.777H192.061V63.1944L191.637 63.6476V62.427L186.545 58.7871L186.771 58.4216L191.938 62.1127H198.783V57.7638L201.401 57.7638Z", fill: "#1C6BCF" }), f("path", { d: "M183.9 62.1127L183.51 63.1944V62.5366H183.482H161.397V63.1944L165.166 63.6476H161.007V62.1127H183.9Z", fill: "#1C6BCF" }), f("path", { d: "M183.902 63.6476H166.606L166.182 63.1944L183.902 63.6476Z", fill: "#1C6BCF" }), f("path", { d: "M166.38 63.4064L166.6 63.6476L166.38 70.35L166.182 76.2192V63.1944L166.38 63.4064Z", fill: "#1C6BCF" }), f("path", { d: "M88.6476 41.2598L89.8057 42.4951L90.9569 41.2598L91.2378 41.5595L89.8057 43.0944L88.3667 41.5595L88.6476 41.2598Z", fill: "white" }), f("path", { d: "M96.0479 37.2107V41.8885H97.7609V37.2107H96.0479ZM96.1575 41.7716V37.3277H97.6513V41.7716H96.1575Z", fill: "white" }), f("path", { d: "M97.6509 37.8174V41.2819H98.0415V37.8174H97.6509ZM97.7605 41.1722V37.9343H97.9318V41.1722H97.7605Z", fill: "white" }), f("path", { d: "M97.9873 37.8173V37.9343H98.7685L98.7822 37.9123C99.3303 37.218 99.9059 37.2545 100.954 37.3934C103.716 37.8246 103.777 39.4619 103.777 39.5496C103.777 39.6373 103.716 41.2818 100.954 41.7058C99.9059 41.8446 99.3303 41.8812 98.7822 41.1868L98.7685 41.1649H97.9873V41.2818H98.7205C99.2961 41.9981 99.9265 41.9616 100.975 41.8227C103.771 41.3842 103.887 39.7177 103.894 39.5569C103.894 39.5569 103.894 39.5569 103.894 39.5496V39.5423C103.887 39.3815 103.777 37.7077 100.982 37.2765C99.9333 37.1376 99.3029 37.0937 98.7274 37.8173H97.9873Z", fill: "white" }), f("path", { d: "M98.6377 39.5643C98.6377 40.0978 98.809 40.5437 99.1311 40.8653C99.4874 41.2161 100.015 41.3842 100.618 41.3257C102.365 41.1138 103.037 40.4779 103.297 39.9736C103.434 39.7104 103.434 39.3888 103.297 39.1257C103.037 38.6214 102.365 37.9855 100.618 37.7735C100.022 37.7224 99.5011 37.8905 99.1379 38.2413C98.8159 38.5629 98.6377 39.0234 98.6377 39.5643ZM98.7473 39.5643C98.7473 39.0526 98.9118 38.6287 99.2201 38.3217C99.5559 37.9928 100.049 37.832 100.611 37.8832C102.393 38.0951 103.003 38.7895 103.208 39.1769C103.325 39.4108 103.325 39.6812 103.208 39.9151C103.003 40.3098 102.4 40.9968 100.611 41.2088C100.042 41.26 99.5422 41.1065 99.2064 40.7776C98.9049 40.4852 98.7473 40.0686 98.7473 39.5643Z", fill: "white" }), f("path", { d: "M99.6733 39.1768V39.9297H100.605V39.1768H99.6733ZM99.783 39.8127V39.2938H100.502V39.8127H99.783Z", fill: "white" })), dk = (t19) => f("svg", { width: 233, height: 191, viewBox: "0 0 203 191", fill: "none", xmlns: "http://www.w3.org/2000/svg", ...t19 }, f("path", { d: "M30.4962 155.267L45.8227 155.267L45.8227 155.089L30.6638 155.089L30.6638 131.67L73.7368 131.67L73.7368 155.089L53.4787 155.089L53.4787 155.267L73.9043 155.267L73.9043 131.491L30.4962 131.491L30.4962 155.267Z", fill: "white" }), f("path", { d: "M53.4796 155.267L73.9052 155.267L73.9052 131.67L78.3706 131.67L78.3706 119.836L78.203 119.836L78.203 131.491L73.7376 131.491L73.7376 155.089L53.4796 155.089L53.4796 155.267Z", fill: "white" }), f("path", { d: "M1.2784 155.267L45.8302 155.267L45.8302 155.089L1.43867 155.089C0.666518 133.799 1.9996 112.462 5.40144 91.677C8.12583 75.0257 12.1687 58.6929 17.428 43.1217C24.5595 22.0026 32.6162 6.54787 35.9233 1.2409L61.3387 17.8767L61.3388 44.0152L61.5064 44.0152L61.5063 17.7757L35.8723 1.00003L35.8286 1.06996C32.5433 6.307 24.443 21.8239 17.2751 43.0518C12.0157 58.6308 7.96556 74.9791 5.24117 91.6381C1.83204 112.462 0.498957 133.845 1.2784 155.174L1.2784 155.267Z", fill: "white" }), f("path", { d: "M46.5084 131.67L78.3706 131.67L78.3706 43.9219L46.5084 43.9219L46.5084 113.247L54.055 113.247L54.055 125.718L46.5084 125.718L46.5084 131.67ZM78.203 131.491L46.6759 131.491L46.6759 125.904L54.2299 125.904L54.2299 113.076L46.6832 113.076L46.6832 44.1007L78.2103 44.1007L78.2103 131.491L78.203 131.491Z", fill: "white" }), f("path", { d: "M78.2905 120.029L78.191 120.029L78.191 119.929L78.191 119.75L78.191 119.651L78.2905 119.651L99.5854 119.651L99.5854 78.4974L78.2905 78.4974L78.191 78.4974L78.191 78.3978L78.191 78.2191L78.191 78.1195L78.2905 78.1195L99.8525 78.1195L99.9521 78.1195L99.9521 78.2191L99.9521 119.929L99.9521 120.029L99.8525 120.029L78.2905 120.029Z", fill: "white", stroke: "white", strokeWidth: 0.199146 }), f("path", { d: "M30.4887 108.39L46.5947 108.39L46.5947 108.212L30.6636 108.212C30.7874 106.013 33.0529 66.9914 41.1751 44.1007L46.5874 44.1007L46.5874 43.922L41.0585 43.922L41.0367 43.9763C32.696 67.4342 30.5106 107.885 30.4887 108.289L30.4887 108.39Z", fill: "white" }), f("path", { d: "M46.5081 44.1007L61.4995 44.1007L61.4995 30.1457L46.5081 30.1457L46.5081 44.1007ZM61.332 43.922L46.6756 43.922L46.6756 30.3244L61.332 30.3244L61.332 43.922Z", fill: "white" }), f("path", { d: "M47.8043 130.255L77.0806 130.255L77.0806 45.3361L47.8043 45.3361L47.8043 113.153L47.9718 113.153L47.9718 45.5148L76.913 45.5148L76.913 130.077L47.9718 130.077L47.9718 125.811L47.8043 125.811L47.8043 130.255Z", fill: "white" }), f("path", { d: "M30.5769 137.256L73.8247 137.256L73.8247 137.435L30.5769 137.435L30.5769 137.256Z", fill: "white" }), f("path", { d: "M47.8045 42.4923L60.21 42.4923L60.21 31.7463L47.8045 31.7463L47.8045 42.4923ZM60.0424 42.3136L47.9721 42.3136L47.9721 31.925L60.0424 31.925L60.0424 42.3136Z", fill: "white" }), f("path", { d: "M77.0007 68.2812L79.7324 68.2812L79.7324 68.4599L77.0007 68.4599L77.0007 68.2812Z", fill: "white" }), f("path", { d: "M45.1453 125.718L47.877 125.718L47.877 125.896L45.1453 125.896L45.1453 125.718Z", fill: "white" }), f("path", { d: "M53.2382 152.447L53.4058 152.447L53.4058 155.361L53.2382 155.361L53.2382 152.447Z", fill: "white" }), f("path", { d: "M45.8236 152.447L45.9912 152.447L45.9912 155.361L45.8236 155.361L45.8236 152.447Z", fill: "white" }), f("path", { d: "M45.1453 113.192L47.877 113.192L47.877 113.371L45.1453 113.371L45.1453 113.192Z", fill: "white" }), f("path", { d: "M45.2332 119.439L47.9648 119.439L47.9648 119.618L45.2332 119.618L45.2332 119.439Z", fill: "white" }), f("path", { d: "M77.0007 62.7023L79.7324 62.7023L79.7324 62.881L77.0007 62.881L77.0007 62.7023Z", fill: "white" }), f("path", { d: "M78.2759 78.188L110.655 78.188L110.655 12.0801L78.2759 12.0801L78.2759 78.188ZM110.495 78.0093L78.4507 78.0093L78.4507 12.2588L110.495 12.2588L110.495 78.0093Z", fill: "white" }), f("path", { d: "M78.3633 75.2276L110.575 75.2276L110.575 75.4064L78.3633 75.4064L78.3633 75.2276Z", fill: "white" }), f("path", { d: "M78.3633 72.3527L110.575 72.3527L110.575 72.5314L78.3633 72.5314L78.3633 72.3527Z", fill: "white" }), f("path", { d: "M78.3633 69.47L110.575 69.47L110.575 69.6487L78.3633 69.6487L78.3633 69.47Z", fill: "white" }), f("path", { d: "M78.3633 66.5873L110.575 66.5873L110.575 66.766L78.3633 66.766L78.3633 66.5873Z", fill: "white" }), f("path", { d: "M78.3633 63.7046L110.575 63.7046L110.575 63.8833L78.3633 63.8833L78.3633 63.7046Z", fill: "white" }), f("path", { d: "M78.3633 60.8219L110.575 60.8219L110.575 61.0006L78.3633 61.0006L78.3633 60.8219Z", fill: "white" }), f("path", { d: "M78.3633 57.9392L110.575 57.9392L110.575 58.1179L78.3633 58.1179L78.3633 57.9392Z", fill: "white" }), f("path", { d: "M78.3633 55.0643L110.575 55.0642L110.575 55.243L78.3633 55.243L78.3633 55.0643Z", fill: "white" }), f("path", { d: "M78.3633 52.1816L110.575 52.1816L110.575 52.3603L78.3633 52.3603L78.3633 52.1816Z", fill: "white" }), f("path", { d: "M78.3633 49.2988L110.575 49.2988L110.575 49.4776L78.3633 49.4776L78.3633 49.2988Z", fill: "white" }), f("path", { d: "M78.3633 46.4161L110.575 46.4161L110.575 46.5948L78.3633 46.5948L78.3633 46.4161Z", fill: "white" }), f("path", { d: "M78.3633 43.5335L110.575 43.5335L110.575 43.7122L78.3633 43.7122L78.3633 43.5335Z", fill: "white" }), f("path", { d: "M78.3633 40.6508L110.575 40.6507L110.575 40.8295L78.3633 40.8295L78.3633 40.6508Z", fill: "white" }), f("path", { d: "M78.3633 37.7758L110.575 37.7758L110.575 37.9545L78.3633 37.9545L78.3633 37.7758Z", fill: "white" }), f("path", { d: "M78.3633 34.8931L110.575 34.8931L110.575 35.0718L78.3633 35.0718L78.3633 34.8931Z", fill: "white" }), f("path", { d: "M78.3633 32.0104L110.575 32.0104L110.575 32.1891L78.3633 32.1891L78.3633 32.0104Z", fill: "white" }), f("path", { d: "M78.3633 29.1276L110.575 29.1276L110.575 29.3063L78.3633 29.3063L78.3633 29.1276Z", fill: "white" }), f("path", { d: "M78.3633 26.245L110.575 26.245L110.575 26.4237L78.3633 26.4237L78.3633 26.245Z", fill: "white" }), f("path", { d: "M78.3633 23.3623L110.575 23.3623L110.575 23.541L78.3633 23.541L78.3633 23.3623Z", fill: "white" }), f("path", { d: "M78.3633 20.4873L110.575 20.4873L110.575 20.6661L78.3633 20.6661L78.3633 20.4873Z", fill: "white" }), f("path", { d: "M78.3633 17.6047L110.575 17.6047L110.575 17.7834L78.3633 17.7834L78.3633 17.6047Z", fill: "white" }), f("path", { d: "M78.3633 14.722L110.575 14.722L110.575 14.9007L78.3633 14.9007L78.3633 14.722Z", fill: "white" }), f("path", { d: "M107.785 12.1656L107.953 12.1656L107.953 78.0948L107.785 78.0948L107.785 12.1656Z", fill: "white" }), f("path", { d: "M105.081 12.1656L105.249 12.1656L105.249 78.0948L105.081 78.0948L105.081 12.1656Z", fill: "white" }), f("path", { d: "M102.379 12.1656L102.547 12.1656L102.547 78.0948L102.379 78.0948L102.379 12.1656Z", fill: "white" }), f("path", { d: "M99.685 12.1656L99.8525 12.1656L99.8525 78.0948L99.685 78.0948L99.685 12.1656Z", fill: "white" }), f("path", { d: "M96.9824 12.1656L97.1499 12.1656L97.1499 78.0948L96.9824 78.0948L96.9824 12.1656Z", fill: "white" }), f("path", { d: "M94.2797 12.1656L94.4473 12.1656L94.4473 78.0948L94.2797 78.0948L94.2797 12.1656Z", fill: "white" }), f("path", { d: "M91.5771 12.1656L91.7446 12.1656L91.7446 78.0948L91.5771 78.0948L91.5771 12.1656Z", fill: "white" }), f("path", { d: "M88.8749 12.1656L89.0425 12.1656L89.0425 78.0948L88.8749 78.0948L88.8749 12.1656Z", fill: "white" }), f("path", { d: "M86.1723 12.1656L86.3398 12.1656L86.3398 78.0948L86.1723 78.0948L86.1723 12.1656Z", fill: "white" }), f("path", { d: "M83.477 12.1656L83.6445 12.1656L83.6445 78.0948L83.477 78.0948L83.477 12.1656Z", fill: "white" }), f("path", { d: "M80.7744 12.1656L80.9419 12.1656L80.9419 78.0948L80.7744 78.0948L80.7744 12.1656Z", fill: "white" }), f("path", { d: "M1.2784 155.267L30.6639 155.267L30.6639 144.77L10.0708 144.77C9.78666 138.585 9.91778 121.903 12.4018 102.439C14.2375 88.0872 17.0347 74.2875 20.7352 61.4202C25.3463 45.3672 31.3632 30.7439 38.6186 17.9311L61.5063 30.371L61.5063 17.7757L35.8723 1.00003L35.8286 1.06996C32.4996 6.32254 24.29 21.8627 17.0638 43.0984C11.7607 58.6852 7.70333 75.0412 5.0008 91.6925C1.62081 112.516 0.375128 133.876 1.2784 155.182L1.2784 155.267ZM30.4964 155.089L1.43868 155.089C0.542685 133.822 1.79565 112.509 5.16107 91.7314C7.8636 75.0878 11.9138 58.7473 17.2168 43.1683C24.4066 22.0414 32.5652 6.55564 35.9233 1.2409L61.3387 17.8767L61.3388 30.0912L38.5603 17.7135L38.5166 17.7834C31.2321 30.6196 25.1933 45.2895 20.575 61.3814C16.8745 74.2564 14.0699 88.0639 12.2415 102.431C9.74294 121.996 9.62639 138.748 9.91049 144.871L9.91781 144.956L30.5037 144.956L30.5037 155.089L30.4964 155.089Z", fill: "white" }), f("path", { d: "M66.4531 190.202L83.0034 190.202L83.0034 177.311L66.4531 177.311L66.4531 190.202ZM82.8359 190.023L66.6206 190.023L66.6206 177.49L82.8359 177.49L82.8359 190.023Z", fill: "white" }), f("path", { d: "M74.6409 176.06L83.0034 176.06L83.0034 167.28L74.6481 167.28L74.6481 176.06L74.6409 176.06ZM82.8359 175.881L74.8157 175.881L74.8157 167.459L82.8359 167.459L82.8359 175.881Z", fill: "white" }), f("path", { d: "M74.6409 166.355L83.0034 166.355L83.0034 157.575L74.6481 157.575L74.6481 166.355L74.6409 166.355ZM82.8359 166.177L74.8157 166.177L74.8157 157.754L82.8359 157.754L82.8359 166.177Z", fill: "white" }), f("path", { d: "M84.7877 183.945L84.6882 183.945L84.6882 183.846L84.6882 133.402L84.6882 133.303L84.7877 133.303L99.8447 133.303L99.9443 133.303L99.9443 133.402L99.9443 183.846L99.9443 183.945L99.8447 183.945L84.7877 183.945ZM85.0622 133.681L85.0622 183.567L99.5849 183.567L99.5849 133.681L85.0622 133.681Z", fill: "white", stroke: "white", strokeWidth: 0.199146 }), f("path", { d: "M86.1056 182.564L98.6641 182.564L98.6641 134.793L86.1056 134.793L86.1056 182.564ZM98.5038 182.385L86.2805 182.385L86.2805 134.972L98.5038 134.972L98.5038 182.385Z", fill: "white" }), f("path", { d: "M62.8032 137.349L62.9707 137.349L62.9707 155.182L62.8032 155.182L62.8032 137.349Z", fill: "white" }), f("path", { d: "M68.2011 137.349L68.3687 137.349L68.3687 155.182L68.2011 155.182L68.2011 137.349Z", fill: "white" }), f("path", { d: "M62.8175 153.294L73.7515 153.294L73.7515 153.472L62.8175 153.472L62.8175 153.294Z", fill: "white" }), f("path", { d: "M62.8175 151.74L73.7515 151.74L73.7515 151.918L62.8175 151.918L62.8175 151.74Z", fill: "white" }), f("path", { d: "M62.8175 150.186L73.7515 150.186L73.7515 150.364L62.8175 150.364L62.8175 150.186Z", fill: "white" }), f("path", { d: "M62.8175 148.632L73.7515 148.632L73.7515 148.81L62.8175 148.81L62.8175 148.632Z", fill: "white" }), f("path", { d: "M62.8175 147.078L73.7515 147.078L73.7515 147.256L62.8175 147.256L62.8175 147.078Z", fill: "white" }), f("path", { d: "M62.8175 145.516L73.7515 145.516L73.7515 145.695L62.8175 145.695L62.8175 145.516Z", fill: "white" }), f("path", { d: "M62.8175 143.962L73.7515 143.962L73.7515 144.141L62.8175 144.141L62.8175 143.962Z", fill: "white" }), f("path", { d: "M62.8175 142.408L73.7515 142.408L73.7515 142.587L62.8175 142.587L62.8175 142.408Z", fill: "white" }), f("path", { d: "M68.208 140.854L73.7515 140.854L73.7515 141.033L68.208 141.033L68.208 140.854Z", fill: "white" }), f("path", { d: "M68.208 139.3L73.7515 139.3L73.7515 139.478L68.208 139.478L68.208 139.3Z", fill: "white" }), f("path", { d: "M68.2725 137.296L68.3804 137.432L62.984 142.273L62.8761 142.136L68.2725 137.296Z", fill: "white" }), f("path", { d: "M1.27868 155.267L30.5841 155.267L30.5841 155.089L1.43896 155.089C0.542968 133.822 1.79593 112.509 5.16135 91.7314C7.86389 75.0878 11.914 58.7473 17.2171 43.1683C24.4069 22.0414 32.5655 6.55563 35.9236 1.24089L61.3755 17.9L61.4629 17.7446L35.8726 1.00002L35.8289 1.06995C32.4999 6.32253 24.2903 21.8627 17.0641 43.0984C11.761 58.6852 7.70362 75.0412 5.00108 91.6925C1.62109 112.516 0.375411 133.876 1.27868 155.182L1.27868 155.267Z", fill: "#1C6BCF", stroke: "#1C6BCF", strokeWidth: 0.69701, strokeMiterlimit: 10 }), f("path", { d: "M83.9062 78.3124L84.0737 78.3124L84.0737 119.836L83.9062 119.836L83.9062 78.3124Z", fill: "white" }), f("path", { d: "M18.7697 139.782L22.0259 138.5L15.9943 121.071L12.7382 122.353L18.7697 139.782ZM21.8146 138.391L18.8717 139.548L12.9567 122.454L15.8996 121.297L21.8146 138.391Z", fill: "white" }), f("path", { d: "M20.8376 126.813L24.0938 125.531L18.0622 108.103L14.8061 109.385L20.8376 126.813ZM23.8752 125.422L20.9323 126.58L15.0173 109.486L17.9602 108.328L23.8752 125.422Z", fill: "white" }), f("path", { d: "M22.8987 113.845L26.1548 112.563L20.1233 95.1347L16.8671 96.4167L22.8987 113.845ZM25.9436 112.454L23.0006 113.612L17.0856 96.5177L20.0286 95.36L25.9436 112.454Z", fill: "white" }), f("path", { d: "M9.90405 144.949L16.1177 144.949L16.1177 137.256L9.90405 137.256L9.90405 144.949ZM15.9574 144.77L10.0789 144.77L10.0789 137.435L15.9574 137.435L15.9574 144.77Z", fill: "white" }), f("path", { d: "M118.123 171.381L118.024 171.381L118.024 171.282L118.024 107.015L118.024 106.916L118.123 106.916L191.354 106.916L191.454 106.916L191.454 107.015L191.454 171.282L191.454 171.381L191.354 171.381L174.119 171.381L174.019 171.381L174.019 171.282L174.019 170.971L174.019 170.872L174.119 170.872L190.963 170.872L190.963 107.426L118.514 107.426L118.514 170.872L164.868 170.872L164.967 170.872L164.967 170.971L164.967 171.282L164.967 171.381L164.868 171.381L118.123 171.381Z", fill: "#1C6BCF", stroke: "#1C6BCF", strokeWidth: 0.199146 }), f("path", { d: "M159.448 141.383L191.354 141.383L191.354 107.015L159.448 107.015L159.448 141.383ZM191.063 141.072L159.739 141.072L159.739 107.326L191.063 107.326L191.063 141.072Z", fill: "white" }), f("path", { d: "M188.112 107L188.257 107L188.257 141.227L188.112 141.227L188.112 107Z", fill: "white" }), f("path", { d: "M185.512 107L185.657 107L185.657 141.227L185.512 141.227L185.512 107Z", fill: "white" }), f("path", { d: "M182.911 107L183.057 107L183.057 141.227L182.911 141.227L182.911 107Z", fill: "white" }), f("path", { d: "M180.31 107L180.456 107L180.456 141.227L180.31 141.227L180.31 107Z", fill: "white" }), f("path", { d: "M177.703 107L177.849 107L177.849 141.227L177.703 141.227L177.703 107Z", fill: "white" }), f("path", { d: "M175.102 107L175.248 107L175.248 141.227L175.102 141.227L175.102 107Z", fill: "white" }), f("path", { d: "M172.502 107L172.647 107L172.647 141.227L172.502 141.227L172.502 107Z", fill: "white" }), f("path", { d: "M169.901 107L170.047 107L170.047 141.227L169.901 141.227L169.901 107Z", fill: "white" }), f("path", { d: "M167.301 107L167.447 107L167.447 141.227L167.301 141.227L167.301 107Z", fill: "white" }), f("path", { d: "M164.693 107L164.838 107L164.838 141.227L164.693 141.227L164.693 107Z", fill: "white" }), f("path", { d: "M162.092 107L162.237 107L162.237 141.227L162.092 141.227L162.092 107Z", fill: "white" }), f("path", { d: "M159.593 112.936L191.222 112.936L191.222 113.092L159.593 113.092L159.593 112.936Z", fill: "white" }), f("path", { d: "M159.593 115.71L191.222 115.71L191.222 115.866L159.593 115.866L159.593 115.71Z", fill: "white" }), f("path", { d: "M159.593 118.484L191.222 118.484L191.222 118.64L159.593 118.64L159.593 118.484Z", fill: "white" }), f("path", { d: "M159.593 121.258L191.222 121.258L191.222 121.414L159.593 121.414L159.593 121.258Z", fill: "white" }), f("path", { d: "M159.593 124.04L191.222 124.04L191.222 124.195L159.593 124.195L159.593 124.04Z", fill: "white" }), f("path", { d: "M159.593 126.814L191.222 126.814L191.222 126.969L159.593 126.969L159.593 126.814Z", fill: "white" }), f("path", { d: "M159.593 129.588L191.222 129.588L191.222 129.743L159.593 129.743L159.593 129.588Z", fill: "white" }), f("path", { d: "M159.593 132.362L191.222 132.362L191.222 132.517L159.593 132.517L159.593 132.362Z", fill: "white" }), f("path", { d: "M159.593 135.135L191.222 135.135L191.222 135.291L159.593 135.291L159.593 135.135Z", fill: "white" }), f("path", { d: "M159.593 137.917L191.222 137.917L191.222 138.073L159.593 138.073L159.593 137.917Z", fill: "white" }), f("mask", { id: "path-100-inside-1_2323_4888", fill: "white" }, f("path", { d: "M191.391 161.927L202.689 161.927L202.689 121.033L191.391 121.033L191.391 121.647L202.106 121.647L202.106 161.313L191.391 161.313L191.391 161.927Z" })), f("path", { d: "M191.391 161.927L202.689 161.927L202.689 121.033L191.391 121.033L191.391 121.647L202.106 121.647L202.106 161.313L191.391 161.313L191.391 161.927Z", fill: "#1C6BCF" }), f("path", { d: "M191.391 161.927L191.391 162.624L190.694 162.624L190.694 161.927L191.391 161.927ZM202.689 161.927L203.386 161.927L203.386 162.624L202.689 162.624L202.689 161.927ZM202.689 121.033L202.689 120.336L203.386 120.336L203.386 121.033L202.689 121.033ZM191.391 121.033L190.694 121.033L190.694 120.336L191.391 120.336L191.391 121.033ZM191.391 121.647L191.391 122.344L190.694 122.344L190.694 121.647L191.391 121.647ZM202.106 121.647L202.106 120.95L202.803 120.95L202.803 121.647L202.106 121.647ZM202.106 161.313L202.803 161.313L202.803 162.01L202.106 162.01L202.106 161.313ZM191.391 161.313L190.694 161.313L190.694 160.616L191.391 160.616L191.391 161.313ZM191.391 161.23L202.689 161.23L202.689 162.624L191.391 162.624L191.391 161.23ZM201.992 161.927L201.992 121.033L203.386 121.033L203.386 161.927L201.992 161.927ZM202.689 121.73L191.391 121.73L191.391 120.336L202.689 120.336L202.689 121.73ZM192.088 121.033L192.088 121.647L190.694 121.647L190.694 121.033L192.088 121.033ZM191.391 120.95L202.106 120.95L202.106 122.344L191.391 122.344L191.391 120.95ZM202.803 121.647L202.803 161.313L201.409 161.313L201.409 121.647L202.803 121.647ZM202.106 162.01L191.391 162.01L191.391 160.616L202.106 160.616L202.106 162.01ZM192.088 161.313L192.088 161.927L190.694 161.927L190.694 161.313L192.088 161.313Z", fill: "#1C6BCF", mask: "url(#path-100-inside-1_2323_4888)" }), f("path", { d: "M114 124.56L118.218 124.56L118.218 124.327L114.218 124.327C114.255 123.659 114.612 120.481 118.269 120.178L118.254 119.945C116.054 120.123 115.02 121.336 114.532 122.322C114.007 123.387 114 124.397 114 124.444L114 124.56Z", fill: "white" }), f("path", { d: "M114 115.368L118.218 115.368L118.218 115.601L114.218 115.601C114.255 116.27 114.612 119.448 118.269 119.751L118.254 119.984C116.054 119.805 115.02 118.593 114.532 117.606C114.007 116.542 114 115.531 114 115.485L114 115.368Z", fill: "white" }), f("path", { d: "M145.163 175.688L145.163 171.189L144.945 171.189L144.945 175.455C144.318 175.416 141.339 175.035 141.055 171.134L140.836 171.15C141.004 173.496 142.14 174.6 143.065 175.12C144.063 175.68 145.01 175.688 145.054 175.688L145.163 175.688Z", fill: "white" }), f("path", { d: "M136.552 175.688L136.552 171.189L136.771 171.189L136.771 175.455C137.397 175.416 140.377 175.035 140.661 171.134L140.879 171.15C140.712 173.496 139.576 174.6 138.65 175.12C137.652 175.68 136.705 175.688 136.662 175.688L136.552 175.688Z", fill: "white" }), f("path", { d: "M114 159.184L118.218 159.184L118.218 158.951L114.218 158.951C114.255 158.283 114.612 155.105 118.269 154.802L118.254 154.569C116.054 154.747 115.02 155.959 114.532 156.946C114.007 158.011 114 159.021 114 159.067L114 159.184Z", fill: "white" }), f("path", { d: "M114 150L118.218 150L118.218 150.233L114.218 150.233C114.255 150.901 114.612 154.079 118.269 154.382L118.254 154.615C116.054 154.436 115.02 153.224 114.532 152.237C114.007 151.173 114 150.163 114 150.116L114 150Z", fill: "white" }), f("path", { d: "M173.857 169.883L174.44 169.883L174.44 173.597L173.857 173.597L173.857 169.883Z", fill: "white" }), f("path", { d: "M164.554 169.883L165.137 169.883L165.137 173.597L164.554 173.597L164.554 169.883Z", fill: "white" }), f("path", { d: "M118.32 129.588L159.594 129.588L159.594 129.743L118.32 129.743L118.32 129.588Z", fill: "white" }), f("path", { d: "M174.148 169.813L189.817 169.813L189.817 141.227L189.671 141.227L189.671 169.658L174.148 169.658L174.148 169.813Z", fill: "white" }), f("path", { d: "M119.674 169.813L164.845 169.813L164.845 169.658L119.82 169.658L119.82 129.665L119.674 129.665L119.674 169.813Z", fill: "white" })), kk = (t19) => f("svg", { width: 239, height: 227, viewBox: "0 0 199 217", fill: "none", xmlns: "http://www.w3.org/2000/svg", ...t19 }, f("path", { d: "M67.7524 104.995L67.7524 104.937L67.7524 102.367", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M42.4883 124.052L42.4883 121.424", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M59.1147 110.045L59.1147 109.871", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M60.9739 108.639L59.8428 109.491", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M59.812 107.201L60.734 106.507L60.9819 106.325L60.9819 108.639L60.734 108.458", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M60.1294 108.904L60.726 108.449L60.726 106.499", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M49.5923 117.218L49.5923 116.846L49.5923 116.052", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M42.4106 123.994L42.4804 124.044L48.965 119.151L52.0176 116.846L52.25 116.672", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M51.46 115.813L49.6006 117.217", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M50.2744 114.391L51.2118 113.68L51.4598 113.499L51.4598 115.813L51.2118 115.631", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M49.5923 116.854L51.2115 115.631L51.2115 113.68", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M46.7104 119.027L46.7104 118.234", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M45.084 119.465L45.084 120.259L45.084 120.631L46.9434 119.226", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M46.9434 118.06L46.9434 119.226L46.711 119.036L45.084 120.259", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M65.7075 104.697L65.7075 103.904", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M64.0884 105.127L64.0884 105.921L64.0884 106.292L65.9478 104.888", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M65.9477 103.722L65.9477 104.888L65.6998 104.706L64.0806 105.929", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M59.8428 110.953L61.6712 109.573L67.753 104.987", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M54.2329 114.647L54.2329 114.275L54.2329 113.54", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M56.0923 113.243L54.2329 114.647", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M55.8525 113.061L55.8525 112.325", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M56.0932 112.143L56.0932 113.242L55.8453 113.061L54.2261 114.284", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M59.812 102.185L60.734 101.491L60.9819 101.309L60.9819 103.623", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M61.6714 99.5985L61.1756 99.9704L61.1369 100.003L59.812 101.003", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M60.7335 103.433L60.9815 103.615L59.8193 104.491", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M59.812 104.127L60.734 103.433L60.734 101.491", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M50.2744 109.375L51.2118 108.664L51.4598 108.482L51.4598 110.796", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M52.0253 106.871L50.2744 108.193", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M51.2118 110.615L51.4598 110.796L50.2744 111.689", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M50.2744 111.325L51.2118 110.615L51.2118 108.664", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M53.978 107.788L53.978 110.334L53.978 110.424L53.978 110.838L53.978 110.986L53.978 112.763", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M59.7183 108.425L59.7183 107.863L59.7183 107.648L59.7183 107.268L59.7183 106.896L59.7183 106.648L59.7183 106.499L59.7183 106.086L59.7183 106.036L59.7183 103.458", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M59.8111 103.284L59.7182 103.458L59.1138 103.912L58.866 104.094L58.5018 104.367L53.9695 107.78L53.7448 107.846L53.4504 107.846L53.2257 107.78L52.0171 106.871L52.0171 110.061L52.0171 111.838", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M68.9619 96.483L67.792 97.3672", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M63.623 100.508L63.623 101.813L63.623 101.879L63.623 103.136L63.623 103.549L63.623 103.698L63.623 105.466", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M68.9614 101.45L68.9614 100.888L68.9614 100.822L68.9614 99.6729L68.9614 99.5241L68.9614 99.1109L68.9614 96.483", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M50.1817 110.648L49.5929 111.094L49.345 111.276L48.9653 111.565", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M44.4399 114.978L44.4399 117.606L44.4399 118.019L44.4399 118.168L44.4399 119.936", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M50.1812 115.614L50.1812 115.052L50.1812 114.457L50.1812 114.085L50.1812 113.837L50.1812 113.689L50.1812 113.276L50.1812 113.226L50.1812 110.648", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M43.7197 119.953L43.9211 120.019L44.2155 120.019L44.4402 119.953L44.8431 119.647L45.0755 119.474L46.7025 118.251L46.935 118.077L49.3444 116.259L49.5924 116.077L50.1811 115.631L50.2741 115.457", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M52.188 111.962L52.3351 112.069L52.7535 112.383L53.2416 112.747L53.4663 112.813L53.7065 112.813L53.7607 112.813L53.9854 112.747L53.9932 112.738L54.2411 112.557L55.8603 111.333L56.1082 111.152L58.5719 109.292L58.6959 109.201", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M61.811 104.673L61.9814 104.797L62.8802 105.474L63.1048 105.54L63.3993 105.54L63.6239 105.466L63.8408 105.301L64.0888 105.119L65.708 103.896L65.956 103.714L66.0102 103.673L66.0489 103.64L67.7534 102.359L67.7921 102.326L68.962 101.441L69.055 101.268", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M53.2334 112.755L53.2334 111.4L53.2334 110.986L53.2334 110.896L53.2334 107.788", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M67.7528 97.4003L66.1878 98.582L66.087 98.6564L66.0561 98.6812L66.0483 98.6894L66.0251 98.706L66.0173 98.7142L65.8624 98.8299L63.6311 100.508L63.4064 100.574L63.112 100.574L62.8873 100.508L61.6787 99.5985L61.6787 100.342L61.6787 100.408L61.6787 102.797L61.6787 104.565", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M62.8789 105.474L62.8789 104.119L62.8789 103.706L62.8789 101.326L62.8789 101.268L62.8789 100.524", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M53.4585 107.854L53.4585 110.722L53.4585 110.813L53.4585 111.053L53.4585 111.226L53.4585 112.821", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M53.7534 112.821L53.7534 111.044L53.7534 110.995L53.7534 110.581L53.7534 110.491L53.7534 107.846", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M59.812 108.251L59.812 108.201L59.812 107.714L59.812 107.193L59.812 106.821L59.812 106.474L59.812 106.425L59.812 106.177L59.812 106.011L59.812 105.962L59.812 104.499L59.812 104.127L59.812 103.284", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M69.0547 101.276L69.0547 100.871L69.0547 99.5076L69.0547 99.458L69.0547 99.2101L69.0547 99.0448L69.0547 96.3177", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M63.105 100.582L63.105 101.425L63.105 101.491L63.105 103.532L63.105 103.772L63.105 103.945L63.105 105.54", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M63.3989 105.549L63.3989 103.78L63.3989 103.731L63.3989 103.317L63.3989 101.722L63.3989 101.656L63.3989 100.582", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M43.9209 115.052L43.9209 118.003L43.9209 118.242L43.9209 118.416L43.9209 120.011", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M44.2158 120.011L44.2158 118.242L44.2158 118.193L44.2158 117.779L44.2158 115.052", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M50.2744 115.449L50.2744 114.391L50.2744 114.019L50.2744 113.672L50.2744 113.623L50.2744 113.375L50.2744 113.209L50.2744 113.16L50.2744 111.697L50.2744 111.325L50.2744 110.482", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M48.9726 111.565L44.4402 114.978L44.2155 115.044L43.9211 115.044L43.7197 114.978", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M58.6812 109.201L58.8671 109.061L59.115 108.879L59.1305 108.871L59.2545 108.78L59.4791 108.606L59.7194 108.425L59.8123 108.251", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M69.055 96.3094L69.0004 96.4092L68.9614 96.4841", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M50.2748 110.474L50.1812 110.649", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M59.812 97.2102L60.734 96.5161L60.9819 96.3342L60.9819 98.6482", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M60.7335 98.4663L60.9815 98.6481L60.2067 99.2349L60.168 99.2679L59.8193 99.5324", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M59.812 99.1606L59.9205 99.0779L59.9592 99.0449L60.734 98.4581L60.734 96.5078", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M50.2744 104.408L51.2118 103.697L51.4598 103.516L51.4598 105.83", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M51.2118 105.648L51.4598 105.83L50.2744 106.722", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M50.2744 106.35L51.2118 105.64L51.2118 103.689", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M53.978 102.813L53.978 106.003L53.978 107.78", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M59.7183 103.458L59.7183 102.896L59.7183 102.26L59.7183 101.888L59.7183 101.689L59.7183 101.078L59.7183 98.9291L59.7183 98.863L59.7183 98.4829", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M59.8108 98.3093L59.8108 98.3176L59.7178 98.4911L59.4621 98.6812L59.4234 98.7143L59.1135 98.9457L58.8656 99.1275L58.5015 99.4002", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M68.9619 91.5163L67.792 92.4005", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M63.623 95.5409L63.623 96.6483L63.623 96.8053L63.623 96.8549L63.623 96.8631L63.623 96.9127L63.623 97.1441L63.623 98.7308L63.623 100.499", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M68.9614 96.4829L68.9614 95.921L68.9614 95.8631L68.9614 94.7144L68.9614 91.5163", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M50.1817 105.681L49.5929 106.127L49.345 106.309L48.9653 106.598", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M44.4399 110.011L44.4399 113.209L44.4399 114.978", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M50.1812 110.648L50.1812 110.086L50.1812 109.449L50.1812 109.077L50.1812 108.879L50.1812 108.268L50.1812 105.689", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M43.7197 114.986L43.9211 115.052L44.2155 115.052L44.4402 114.986L48.9726 111.573", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M52.0254 106.871L53.2341 107.78L53.4587 107.846L53.7532 107.846L53.9778 107.78L58.5101 104.367L58.8743 104.094L59.1222 103.912L59.7265 103.458L59.8195 103.284", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M61.6714 99.5902L62.8801 100.499L63.1047 100.574L63.3992 100.574L63.6238 100.499L65.8474 98.8217L66.0023 98.706L66.01 98.6977L66.0333 98.6812L66.041 98.6729L66.0721 98.6481L66.1728 98.5738L67.7378 97.392", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M53.2334 107.78L53.2334 106.003L53.2334 102.813", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M58.5025 99.4002L53.9702 102.813L53.7455 102.879L53.4511 102.879L53.2264 102.813L52.2734 102.094", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M52.0253 102.301L52.0253 105.094L52.0253 106.871L50.2744 108.193", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M62.8789 100.508L62.8789 98.7391L62.8789 96.5904L62.8789 96.359L62.8789 96.3094L62.8789 96.3012L62.8789 96.2516L62.8789 96.0946L62.8789 95.5491", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M67.753 92.4253L66.0872 93.6814L66.0485 93.7145L63.6313 95.5326L63.4066 95.5987L63.1122 95.5987L62.8875 95.5326L61.9346 94.8136", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M61.6714 95.0202L61.6714 95.169L61.6714 95.326L61.6714 95.3756L61.6714 95.3839L61.6714 95.4169L61.6714 95.4334L61.6714 95.6648L61.6714 97.8135L61.6714 99.582L61.1756 99.9539L61.1369 99.9869L59.812 100.987", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M53.4585 102.888L53.4585 106.078L53.4585 107.854", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M53.7534 107.854L53.7534 106.078L53.7534 102.888", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M59.812 103.284L59.812 102.185L59.812 101.813L59.812 101.516L59.812 101.003L59.812 99.5407L59.812 99.1688L59.812 99.0118L59.812 98.9457L59.812 98.3259", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M69.0547 96.3094L69.0547 95.9044L69.0547 94.5409L69.0547 91.351", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M63.105 95.607L63.105 96.2516L63.105 96.4086L63.105 96.4582L63.105 96.4664L63.105 96.516L63.105 96.7474L63.105 98.7969L63.105 100.565", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M63.3989 100.574L63.3989 98.8052L63.3989 96.9788L63.3989 96.7474L63.3989 96.6978L63.3989 96.6896L63.3989 96.64L63.3989 96.483L63.3989 95.6152", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M43.9209 110.077L43.9209 113.276L43.9209 115.044", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M44.2158 115.044L44.2158 113.276L44.2158 110.077", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M50.2744 110.474L50.2744 109.375L50.2744 109.003L50.2744 108.706L50.2744 108.193L50.2744 106.73L50.2744 106.359L50.2744 105.516", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M48.9726 106.59L44.4402 110.003L44.2155 110.077L43.9211 110.077L43.7197 110.011", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M69.055 91.3344L69.055 91.3428L69.0004 91.4343L68.9614 91.5092", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M50.2748 105.499L50.2748 105.507L50.1812 105.682", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M59.7183 98.4746L59.7183 97.9209L59.7183 97.9127L59.7183 97.2846L59.7183 96.9127L59.7183 96.7061L59.7183 96.4995L59.7183 96.1028L59.7183 96.0946L59.7183 94.2021L59.7183 93.9707L59.7183 93.9211L59.7183 93.9129L59.7183 93.8633L59.7183 93.7063L59.7183 93.5162", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M59.8112 93.3344L59.7183 93.5079L59.5943 93.5988L59.4936 93.6732L59.4626 93.698L59.4549 93.7062L59.4316 93.7228L59.4239 93.731L59.2689 93.8467L59.1217 93.9542L58.8738 94.136L58.5097 94.4087L56.1699 96.1772L56.1311 96.2102L53.9851 97.83L53.7604 97.8961L53.466 97.8961L53.2413 97.83L52.0327 96.9209L50.2817 98.2432", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M53.978 97.8383L53.978 100.822L53.978 101.028L53.978 102.805", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M60.9737 93.6732L60.3306 94.1608L60.2299 94.2352L60.1989 94.2599L60.1912 94.2682L60.1602 94.293L60.0052 94.4087L59.8193 94.5492", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M68.962 86.5413L66.2272 88.6073L66.0876 88.7147L66.0799 88.723L66.0644 88.7313L66.0489 88.7478L66.0412 88.7561L65.9018 88.8635L63.6317 90.5742L63.407 90.6485L63.1126 90.6485L62.8879 90.5742L61.6793 89.6651L61.2145 90.0205L61.1757 90.0535L59.8276 91.07", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M59.812 92.2352L60.734 91.541L60.9819 91.3592L60.9819 93.6732L60.734 93.4914", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M61.6714 94.6153L61.6714 92.8468L61.6714 90.4254L61.6714 90.3675L61.6714 89.6568", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M59.812 94.1856L59.9128 94.1112L59.9437 94.0864L59.9515 94.0781L59.9825 94.0533L60.0832 93.979L60.7263 93.4914L60.7263 91.5411", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M50.2744 99.425L51.2118 98.7143L51.4598 98.5325L51.4598 100.846", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M52.0254 101.896L52.0254 100.119L52.0254 96.9292", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M51.2118 100.665L51.4598 100.846L50.2744 101.739", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M50.2744 101.375L51.2118 100.665L51.2118 98.7143", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M68.9614 91.4997L68.9614 90.946L68.9614 90.9378L68.9614 90.8882L68.9614 90.8799L68.9614 89.7312L68.9614 89.5163L68.9614 86.533", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M63.623 90.5659L63.623 91.8303L63.623 91.8881L63.623 93.5409L63.623 93.7558L63.623 95.5243", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M50.1812 105.673L50.1812 105.119L50.1812 105.111L50.1812 104.483L50.1812 104.111L50.1812 103.904L50.1812 103.689L50.1812 103.293L50.1812 103.284L50.1812 100.706", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M50.1811 100.706L49.5923 101.152L49.3444 101.334L48.9647 101.623L44.4324 105.036L44.2078 105.102L43.9134 105.102L43.7119 105.036", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M44.4399 105.036L44.4399 108.02L44.4399 108.234L44.4399 110.003", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M43.7197 110.003L43.9211 110.069L44.2155 110.069L44.4402 109.995L48.9726 106.582", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M52.126 101.97L52.2964 102.094L53.2416 102.805L53.4663 102.871L53.7607 102.871L53.9854 102.805L58.5177 99.3919", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M61.7715 94.6896L61.9419 94.8136L62.8871 95.5243L63.1118 95.5987L63.4062 95.5987L63.6309 95.5243L66.0404 93.7062L66.0791 93.6732L67.7525 92.4088", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M53.2334 102.805L53.2334 101.384L53.2334 101.028L53.2334 97.8383", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M62.8789 95.5326L62.8789 94.1112L62.8789 93.7641L62.8789 91.3427L62.8789 91.2849L62.8789 90.5742", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M68.9614 89.1693L68.9614 89.5164", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M53.7534 102.879L53.7534 101.103L53.7534 100.995L53.7534 97.9127", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M53.4585 97.9127L53.4585 101.103L53.4585 101.218L53.4585 102.879", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M59.812 98.3093L59.812 97.2185L59.812 96.8466L59.812 96.5408L59.812 96.4334L59.812 96.1855L59.812 96.045L59.812 96.0367L59.812 94.5492L59.812 94.2682L59.812 94.1856L59.812 94.0368L59.812 94.0203L59.812 93.9872L59.812 93.9789L59.812 93.9294L59.812 93.7723L59.812 93.3426", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M69.0547 91.3344L69.0547 90.9378L69.0547 90.9295L69.0547 89.5659L69.0547 89.4585L69.0547 89.2106L69.0547 86.3677", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M63.3989 95.5987L63.3989 93.8302L63.3989 93.7145L63.3989 91.7229L63.3989 91.6651L63.3989 90.6403", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M63.105 90.632L63.105 91.4419L63.105 91.4998L63.105 93.822L63.105 93.9294L63.105 95.5905", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M44.2158 110.069L44.2158 108.301L44.2158 108.185L44.2158 105.102", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M43.9209 105.102L43.9209 108.301L43.9209 108.408L43.9209 110.069", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M50.2744 105.499L50.2744 104.408L50.2744 104.036L50.2744 103.731L50.2744 103.615L50.2744 103.367L50.2744 103.226L50.2744 103.218L50.2744 101.755L50.2744 101.384L50.2744 100.541", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M58.5015 99.3919L58.8656 99.1192L59.1135 98.9374L59.4157 98.706L59.4544 98.673L59.7178 98.4746L59.8108 98.3011", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M69.055 86.3595L69.0004 86.4593L68.9614 86.5342", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M50.2748 100.524L50.1812 100.699", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M59.7183 93.4997L59.7183 92.946L59.7183 92.9377L59.7183 92.3014L59.7183 91.9295L59.7183 91.7229L59.7183 91.1113L59.7183 91.1031L59.7183 88.9379L59.7183 88.88L59.7183 88.5577", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M60.9741 88.6982L60.2227 89.2685L60.184 89.3015L59.812 89.5825", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M59.812 87.2603L60.734 86.5661L60.9819 86.3843L60.9819 88.6982L60.734 88.5164", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M61.6714 89.6403L61.6714 87.8718L61.6714 85.6653L61.6714 85.657L61.6714 85.4504L61.6714 85.4422L61.6714 85.3926L61.6714 85.3843L61.6714 85.1695L61.6714 84.7893L61.6714 84.7067", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M59.812 89.2106L59.936 89.1114L59.9748 89.0784L60.7263 88.5081L60.7263 86.5578", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M52.0249 91.9543L51.9397 92.0204L51.901 92.0534L51.3742 92.4501L51.3044 92.4997L50.2817 93.2682", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M50.2744 94.45L51.2118 93.7393L51.4598 93.5575L51.4598 95.8714", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M52.0254 96.9209L52.0254 95.1442L52.0254 93.1277L52.0254 93.0616L52.0254 92.9294L52.0254 91.9708", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M51.2118 95.6979L51.4598 95.8797L50.2744 96.7722", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M50.2744 96.4004L51.2118 95.6896L51.2118 93.7393", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M68.9614 86.533L68.9614 85.9794L68.9614 85.9711L68.9614 85.9132L68.9614 85.905L68.9614 84.7563L68.9614 81.5911", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M68.9615 81.5663L66.0794 83.7398L66.0717 83.7398L66.033 83.7646L66.0252 83.7646L63.6157 85.5827", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M50.1812 100.698L50.1812 100.144L50.1812 100.136L50.1812 99.4993L50.1812 99.1275L50.1812 98.9209L50.1812 98.3093L50.1812 98.301L50.1812 95.7475", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M44.4399 100.086L44.4399 103.26L44.4399 105.028", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M43.7197 105.028L43.9211 105.094L44.2155 105.094L44.4402 105.028L48.9726 101.615L49.3521 101.326L49.6001 101.144L50.1889 100.698", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M53.978 92.8964L53.978 94.5492L53.978 94.6153L53.978 96.0698L53.978 97.8466", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M50.2744 98.235L52.0253 96.9127L53.234 97.8217L53.4586 97.8879L53.7531 97.8879L53.9777 97.8217L56.1161 96.2103L56.1548 96.1772L58.5023 94.4087L58.8665 94.136L59.1143 93.9542L59.2539 93.8467L59.4088 93.731L59.4165 93.7228L59.4398 93.7063L59.4476 93.698L59.4785 93.6732L59.5792 93.5988L59.7109 93.4996L59.8039 93.3261", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M63.623 85.6157L63.623 86.6405L63.623 86.8553L63.623 86.8636L63.623 86.9132L63.623 86.9214L63.623 87.1363L63.623 88.7808L63.623 90.5493", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M59.812 91.0452L61.1524 90.0287L61.1911 89.9957L61.6637 89.6403L62.8723 90.5494L63.097 90.6155L63.3914 90.6155L63.6161 90.5494L65.8784 88.8387L66.0179 88.7313L66.0256 88.723L66.0411 88.7065L66.0566 88.6982L66.0643 88.69L66.2115 88.5825L68.9541 86.5165", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M53.2334 97.83L53.2334 96.0532L53.2334 94.0368L53.2334 93.979L53.2334 92.8964", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M53.2341 92.8633L52.6762 92.4418L52.0254 91.9543", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M62.8789 90.5577L62.8789 88.7892L62.8789 86.5827L62.8789 86.3678L62.8789 86.3595L62.8789 86.31L62.8789 86.3017L62.8789 86.0868L62.8789 85.624L62.8789 85.5992", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M62.8801 85.5909L62.3222 85.1695L61.7411 84.7315L61.6714 84.6819", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M53.7534 97.9044L53.7534 96.1276L53.7534 94.4335L53.7534 94.3756L53.7534 92.9625L53.7534 92.9377", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M53.753 92.9377L53.4585 92.9377", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M53.4585 92.9625L53.4585 94.1525L53.4585 94.2186L53.4585 96.1359L53.4585 97.9126", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M59.812 93.3344L59.812 92.2352L59.812 91.8634L59.812 91.5576L59.812 91.0452L59.812 91.037L59.812 89.5742L59.812 89.2023L59.812 89.0123L59.812 88.9544L59.812 88.3677", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M69.0547 86.3595L69.0547 85.9628L69.0547 85.9546L69.0547 84.591L69.0547 81.4259", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M63.3989 90.6237L63.3989 88.8552L63.3989 86.971L63.3989 86.7561L63.3989 86.7479L63.3989 86.6983L63.3989 86.69L63.3989 86.4752L63.3989 85.6901", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M63.3994 85.657L63.105 85.657", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M63.105 85.657L63.105 85.6818L63.105 86.2438L63.105 86.4586L63.105 86.4669L63.105 86.5165L63.105 86.5248L63.105 86.7396L63.105 88.847L63.105 90.6155", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M44.2158 105.094L44.2158 103.326L44.2158 100.152", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M43.9209 100.152L43.9209 103.326L43.9209 105.094", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M50.2744 100.524L50.2744 99.425L50.2744 99.0531L50.2744 98.7473L50.2744 98.2349L50.2744 98.2267L50.2744 96.7639L50.2744 96.3921L50.2744 95.5739", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M63.6251 85.5909L63.3989 85.6658", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M50.2748 95.5574L50.1812 95.7322", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M44.4421 100.061L44.2158 100.136", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M63.1051 85.6576L62.8789 85.5827", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M43.9225 100.128L43.7197 100.061", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M59.7183 88.566L59.7183 88.5412L59.7183 88.0041L59.7183 87.9793L59.7183 87.3347L59.7183 87.1363L59.7183 86.971L59.7183 86.7975L59.7183 86.186L59.7183 86.1612L59.7183 84.2026L59.7183 83.9877L59.7183 83.9795L59.7183 83.9299L59.7183 83.9216L59.7183 83.7067L59.7183 83.6406L59.7183 83.6158", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M59.7185 83.5993L59.6565 83.6489L59.5093 83.7563L59.5016 83.7646L59.4861 83.7728L59.4706 83.7894L59.4628 83.7976L59.3234 83.9051L59.1142 84.0621L58.8663 84.2439L58.5022 84.5166L56.2088 86.2438L56.1701 86.2769L55.4651 86.8058L55.3024 86.9297L53.9854 87.9214", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M60.9741 83.7563L60.3931 84.1943L60.2459 84.3017L60.2381 84.31L60.2072 84.3348L60.1994 84.3431L60.0599 84.4505L59.812 84.6406", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M59.812 82.3184L60.734 81.6242L60.9819 81.4424L60.9819 83.7563L60.734 83.5745", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M61.6714 84.7067L61.6714 84.6819L61.6714 84.1943L61.6714 82.9381L61.6714 80.6986L61.6714 80.4837L61.6714 80.4754L61.6714 80.4176L61.6714 80.4093L61.6714 80.3102L61.6714 79.773L61.6714 79.7482", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M59.812 84.2687L59.9592 84.1613L59.967 84.153L59.998 84.1282L60.0057 84.12L60.1529 84.0125L60.734 83.5745L60.734 81.6242", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M50.2744 89.5163L51.2118 88.8056L51.4598 88.6238L51.4598 90.9378", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M52.0254 91.9791L52.0254 91.9543L52.0254 90.2023L52.0254 88.3925L52.0254 88.1611L52.0254 88.1115L52.0254 88.1032L52.0254 88.0537L52.0254 87.971L52.0254 87.9214L52.0254 87.8966L52.0254 87.5826L52.0254 87.0454", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M51.2118 90.756L51.3668 90.8717L51.4598 90.9378L51.3668 91.0039L50.9717 91.3014L50.2744 91.8303", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M50.2744 91.4667L50.9717 90.9378L51.2118 90.756L51.2118 90.1279L51.2118 88.8139", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M68.9614 81.5911L68.9614 81.5663L68.9614 81.0292L68.9614 81.0044L68.9614 80.9713L68.9614 80.9465L68.9614 80.1615L68.9614 79.8226L68.9614 76.6575L68.9614 76.6327", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M50.1812 95.7557L50.1812 95.7309L50.1812 95.1938L50.1812 95.169L50.1812 94.5244L50.1812 94.3261L50.1812 94.1608L50.1812 93.9872L50.1812 93.4501L50.1812 93.3674L50.1812 93.3426L50.1812 92.855L50.1812 90.8138", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M44.4399 95.1442L44.4399 97.1854L44.4399 97.7804L44.4399 98.3176L44.4399 98.6564L44.4399 100.061L44.4399 100.086", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M44.4399 100.086L48.9723 96.6731L49.3518 96.3838L49.5998 96.202L50.1886 95.7558", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M53.978 87.9545L53.978 89.3677L53.978 89.5247L53.978 89.5743L53.978 89.5825L53.978 89.6321L53.978 89.8635L53.978 89.9875L53.978 90.5825L53.978 91.1196L53.978 91.4585L53.978 92.8634L53.978 92.8881", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M63.623 80.6738L63.623 81.8804L63.623 81.8887L63.623 81.9465L63.623 81.9548L63.623 83.8472L63.623 84.1861L63.623 85.591L63.623 85.6158", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M53.2334 92.8964L53.2334 92.8716L53.2334 92.0286L53.2334 91.1278L53.2334 89.318L53.2334 89.0866L53.2334 89.037L53.2334 89.0288L53.2334 88.9792L53.2334 88.8222L53.2334 87.971", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M53.2335 87.9297L52.6524 87.4917L52.6137 87.4669L52.5594 87.4256L52.389 87.3016L52.0171 87.0206", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M52.0254 91.979L52.6607 92.4584L53.2418 92.8964", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M62.8789 85.6157L62.8789 85.5909L62.8789 84.748L62.8789 83.8472L62.8789 81.3928L62.8789 81.3845L62.8789 81.3267L62.8789 81.3184L62.8789 80.6738L62.8789 80.649", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M62.8795 80.649L62.2984 80.211L62.2054 80.1449L62.035 80.0209L61.6631 79.74", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M53.7534 92.9625L53.7534 92.9377L53.7534 91.632L53.7534 91.194L53.7534 90.6485L53.7534 90.1692L53.7534 89.7064L53.7534 89.475L53.7534 89.4255L53.7534 89.4172L53.7534 89.3676L53.7534 89.2106L53.7534 88.0206", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M53.753 87.9958L53.5515 87.9958L53.4585 87.9958", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M53.4585 88.0206L53.4585 88.9709L53.4585 89.128L53.4585 89.1775L53.4585 89.1858L53.4585 89.2354L53.4585 89.4668L53.4585 90.3758L53.4585 90.4089L53.4585 91.1774L53.4585 91.8386L53.4585 92.9212L53.4585 92.9459", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M59.812 88.3932L59.812 88.3677", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M59.812 88.3677L59.812 87.2603L59.812 87.0619L59.812 86.8967L59.812 86.6239L59.812 86.1116L59.812 86.0868L59.812 84.6488L59.812 84.2769L59.812 84.2687L59.812 84.0538L59.812 84.0456L59.812 84.0208L59.812 83.996L59.812 83.9877L59.812 83.7728L59.812 83.4671", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M69.0547 81.3928L69.0547 81.0126L69.0547 80.9879L69.0547 80.0871L69.0547 79.6491L69.0547 76.4509", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M63.3989 85.6901L63.3989 85.6653L63.3989 84.3596L63.3989 83.9216L63.3989 81.7895L63.3989 81.7812L63.3989 81.7233L63.3989 81.7151L63.3989 80.7482", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M63.3994 80.7234L63.105 80.7234", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M63.105 80.7482L63.105 81.4919L63.105 81.5002L63.105 81.5581L63.105 81.5663L63.105 83.9216L63.105 84.5827L63.105 85.6653", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M69.0547 81.4183L69.0547 81.3928", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M44.2158 100.152L44.2158 100.127L44.2158 98.8217L44.2158 98.3837L44.2158 97.6317L44.2158 97.3507L44.2158 95.2103", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M43.9209 95.2186L43.9209 98.392L43.9209 99.0531L43.9209 100.136L43.9209 100.161", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M50.2744 95.5905L50.2744 94.4583L50.2744 94.26L50.2744 94.0947L50.2744 93.822L50.2744 93.384L50.2744 93.3013L50.2744 93.2765L50.2744 92.789L50.2744 91.8303L50.2744 91.4584L50.2744 91.0535L50.2744 90.6403", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M53.7534 92.963L53.9796 92.8881", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M63.3989 85.6906L63.6251 85.6157", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M50.1812 95.7569L50.2748 95.5822", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M50.2748 90.6237L50.1812 90.7985", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M44.4421 95.1194L44.2158 95.1943", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M53.2334 92.8964L53.4596 92.9713", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M43.9225 95.1943L43.7197 95.1277", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M59.7183 83.5993L59.7183 83.0622L59.7183 83.0374L59.7183 82.3928L59.7183 82.1696L59.7183 82.0291L59.7183 81.8556L59.7183 81.7812L59.7183 81.2441L59.7183 81.2193L59.7183 79.3268L59.7183 79.0128L59.7183 79.0045L59.7183 78.9466L59.7183 78.9384L59.7183 78.6905", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M59.7186 78.6574L59.5404 78.7979L59.5327 78.7979L59.4939 78.8227L59.4862 78.8227L59.1143 79.1037L58.8664 79.2855L58.8122 79.3268L58.51 79.5582L57.4021 80.3929L57.3401 80.4425L57.2471 80.5169L56.3872 81.1615L56.2477 81.2689L56.24 81.2772L56.2244 81.2854L56.2089 81.3019L56.2012 81.3102L56.0618 81.4176L55.5272 81.8226L55.3102 81.9879L53.9932 82.9795", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M60.974 78.8227L60.269 79.3516L60.2612 79.3516L60.2225 79.3764L60.2147 79.3764L59.7964 79.6904", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M62.8801 75.7071L61.6714 74.7981L61.2453 75.1204L61.2299 75.1369L61.2066 75.1534L61.1911 75.17L59.812 76.2112", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M59.812 77.3847L60.734 76.6905L60.9819 76.5087L60.9819 78.3764L60.9819 78.8309L60.734 78.6491", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M61.6714 79.74L61.6714 77.9963L61.6714 77.8475L61.6714 75.5336L61.6714 75.5088L61.6714 75.4757L61.6714 75.4509L61.6714 74.8311L61.6714 74.8063", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M59.812 79.3268L59.9825 79.1945L59.9903 79.1945L60.029 79.1697L60.0367 79.1697L60.7417 78.6408L60.7417 78.5582L60.7417 76.6905", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M50.2744 84.5745L51.2118 83.8637L51.4598 83.6819L51.4598 85.9959", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M52.0254 87.0371L52.0254 87.0123L52.0254 85.2604L52.0254 83.1448L52.0254 83.0869L52.0254 82.9547L52.0254 82.9464L52.0254 82.1035", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M51.2118 85.814L51.3668 85.9297L51.4598 85.9958L51.3668 86.0619L50.9717 86.3595L50.2744 86.8884", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M50.2744 86.5248L50.9717 85.9959L51.2118 85.8141L51.2118 85.1034L51.2118 83.8638", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M68.9614 76.6493L68.9614 76.6245L68.9614 76.0873L68.9614 76.0625L68.9614 76.0295L68.9614 76.0047L68.9614 75.1948L68.9614 74.8808L68.9614 74.8064L68.9614 72.352L68.9614 71.7156", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M50.1812 90.2271L50.1812 89.5825L50.1812 89.3594L50.1812 89.3098L50.1812 89.2189L50.1812 89.0453L50.1812 88.9709L50.1812 88.4338L50.1812 88.409L50.1812 87.847L50.1812 85.8802", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M44.4399 90.2023L44.4399 90.8386L44.4399 93.2931L44.4399 93.3674L44.4399 93.6815L44.4399 95.1112L44.4399 95.1359", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M50.1812 90.8146L50.1812 90.789", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M53.978 83.0126L53.978 84.5579L53.978 84.6158L53.978 84.9711L53.978 85.5662L53.978 86.1033L53.978 86.1777L53.978 86.4421L53.978 86.4917L53.978 87.9214L53.978 87.9462", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M63.623 75.7402L63.623 76.3765L63.623 76.9219L63.623 76.9467L63.623 76.9798L63.623 77.0046L63.623 78.8309L63.623 78.9053L63.623 79.2193L63.623 80.649L63.623 80.6738", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M53.2334 87.9545L53.2334 87.9297L53.2334 87.062L53.2334 87.0124L53.2334 86.6735L53.2334 86.186L53.2334 84.0704L53.2334 84.0125L53.2334 83.0291", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M52.0254 87.0372L52.3818 87.3099L52.5523 87.4338L52.6065 87.4752L52.6452 87.4999L53.2418 87.9462", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M62.8789 80.6738L62.8789 80.649L62.8789 79.7813L62.8789 79.3929L62.8789 78.9053L62.8789 76.9302L62.8789 76.4344L62.8789 76.4096L62.8789 76.3765L62.8789 76.3517L62.8789 75.7319L62.8789 75.7071", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M53.7534 88.0206L53.7534 87.9958L53.7534 86.6653L53.7534 86.6157L53.7534 86.2768L53.7534 86.2521L53.7534 85.6322L53.7534 85.1529L53.7534 84.4588L53.7534 84.4009L53.7534 83.0952L53.7534 83.0704", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M53.753 83.0538L53.4585 83.0538", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M53.4585 88.0206L53.5205 88.0206L53.753 88.0206", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M53.4585 83.0869L53.4585 84.1695L53.4585 84.2274L53.4585 85.3678L53.4585 85.4009L53.4585 86.2438L53.4585 86.4917L53.4585 86.8305L53.4585 86.8801L53.4585 87.9875L53.4585 88.0123", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M59.812 83.4258L59.812 82.3184L59.812 82.0952L59.812 81.963L59.812 81.9548L59.812 81.7068L59.812 81.682L59.812 81.1697L59.812 81.1449L59.812 79.7069L59.812 79.3351L59.812 79.2524L59.812 79.0789L59.812 79.0706L59.812 79.0128L59.812 79.0045L59.812 78.5169", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M69.0547 76.484L69.0547 76.079L69.0547 76.0542L69.0547 75.1287L69.0547 74.9964L69.0547 74.7485L69.0547 74.7237L69.0547 72.2858L69.0547 71.5503", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M63.3989 80.7482L63.3989 80.7234L63.3989 79.3929L63.3989 79.0045L63.3989 78.9797L63.3989 76.8393L63.3989 76.8145L63.3989 76.7815L63.3989 76.7567L63.3989 76.5501L63.3989 75.8146", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M63.3994 75.7815L63.105 75.7815", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M63.105 75.7815L63.105 75.8063L63.105 76.5253L63.105 76.55L63.105 76.5831L63.105 76.6079L63.105 76.7566L63.105 78.9714L63.105 79.2193L63.105 79.6077L63.105 80.7151L63.105 80.7399", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M43.9209 95.2186L44.0294 95.2186L44.0836 95.2186L44.2153 95.2186", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M44.2158 95.2185L44.2158 95.1938L44.2158 93.8632L44.2158 93.4748L44.2158 93.45L44.2158 91.0121L44.2158 90.2766", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M43.9209 90.2766L43.9209 91.2353L43.9209 93.45L43.9209 93.698L43.9209 94.0864L43.9209 95.1938L43.9209 95.2185", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M50.2744 90.6486L50.2744 90.4667L50.2744 89.5081L50.2744 89.285L50.2744 89.2354L50.2744 89.1528L50.2744 89.1445L50.2744 88.8966L50.2744 88.8718L50.2744 88.3594L50.2744 88.3346L50.2744 87.7727L50.2744 86.8967L50.2744 86.5248L50.2744 86.0455L50.2744 85.6819", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M63.6251 75.7071L63.3989 75.7737", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M63.3989 80.7487L63.6251 80.6821", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M50.2748 85.6819L50.1812 85.8566", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M62.8789 80.6738L63.1051 80.7404", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M59.7183 78.6822L59.7183 78.6574L59.7183 78.1202L59.7183 78.0954L59.7183 77.4508L59.7183 77.0789L59.7183 76.9054L59.7183 76.2939L59.7183 76.2691L59.7183 74.3518L59.7183 74.0543L59.7183 74.0295L59.7183 73.9964L59.7183 73.9717L59.7183 73.7485", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M59.7186 73.7155L59.5559 73.8394L59.5404 73.8559L59.5172 73.8725L59.5016 73.889L59.1221 74.1782L58.8741 74.3601L58.8199 74.4014L58.5178 74.6328L57.4098 75.4674L57.3478 75.517L57.2549 75.5914L56.2787 76.3269L56.271 76.3269L56.2322 76.3517L56.2244 76.3517L55.5504 76.8641L55.3102 77.0459L53.9932 78.0376", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M60.9741 73.8808L60.2847 74.4014L60.2691 74.4179L60.2459 74.4344L60.2304 74.451L59.812 74.765", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M59.812 72.4428L60.734 71.7486L60.9819 71.5668L60.9819 73.4015L60.9819 73.8808L60.734 73.699", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M61.6714 74.7981L61.6714 73.0543L61.6714 72.8808L61.6714 70.5916L61.6714 70.5669L61.6714 70.5338L61.6714 70.509L61.6714 70.3024L61.6714 69.8892L61.6714 69.8644", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M59.812 74.3932L59.9903 74.2609L60.0057 74.2444L60.029 74.2279L60.0444 74.2114L60.734 73.6907L60.734 73.5833L60.734 71.7487", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M50.2744 79.6326L51.2118 78.9219L51.4598 78.7401L51.4598 81.054", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M52.0254 82.1035L52.0254 82.0787L52.0254 80.3267L52.0254 78.3929L52.0254 78.1781L52.0254 78.1615L52.0254 78.1119L52.0254 78.0954L52.0254 77.9715L52.0254 77.9632L52.0254 77.8806L52.0254 77.5665L52.0254 77.1533", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M51.2118 80.8722L51.3668 80.9879L51.4598 81.054L51.3668 81.1201L50.9717 81.4176L50.2744 81.9465", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M50.2744 81.5829L50.9717 81.054L51.2118 80.8722L51.2118 80.1367L51.2118 78.9301", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M68.9614 71.7073L68.9614 71.6825L68.9614 71.1453L68.9614 71.1205L68.9614 71.0875L68.9614 71.0627L68.9614 69.9388L68.9614 67.3769L68.9614 66.7736", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M50.1812 85.8802L50.1812 85.8554L50.1812 85.3182L50.1812 85.2934L50.1812 84.6488L50.1812 84.3431L50.1812 84.2852L50.1812 84.1117L50.1812 83.4918L50.1812 83.4671L50.1812 82.872L50.1812 80.9383", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M50.1809 80.9135L49.5921 81.3597L49.3441 81.5415L49.104 81.7234L48.9645 81.8308L47.4847 82.9464L46.0746 84.0125L45.2844 84.6075L44.4399 85.2439", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M44.4399 85.2686L44.4399 85.8719L44.4399 88.4338L44.4399 90.1775L44.4399 90.2023", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M44.4399 90.2023L45.2844 89.566L46.0746 88.9709L47.4847 87.9049L48.9645 86.7892L49.104 86.6818L49.3364 86.5083L49.3441 86.5083L49.5921 86.3264L50.1809 85.8802", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M53.978 78.0706L53.978 79.3598L53.978 79.5747L53.978 79.583L53.978 79.6326L53.978 79.6408L53.978 79.8557L53.978 79.9962L53.978 80.5912L53.978 81.2358L53.978 81.4672L53.978 81.4754L53.978 82.9878L53.978 83.0126", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M53.978 83.0126L55.2951 82.0209L55.5275 81.8391L56.0622 81.4341L56.2016 81.3267L56.2093 81.3184L56.2248 81.3019L56.2403 81.2936L56.248 81.2854L56.3953 81.1779L57.232 80.5416L57.325 80.4672L57.387 80.4177L58.4948 79.583L58.797 79.3516L58.8513 79.3103L59.0992 79.1285L59.4943 78.831L59.502 78.831L59.5408 78.8062L59.5486 78.8062L59.7112 78.6822", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M63.623 70.7983L63.623 71.4015L63.623 71.9718L63.623 71.9965L63.623 72.0296L63.623 72.0544L63.623 73.9551L63.623 75.6988L63.623 75.7236", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M63.623 75.7402L66.0558 73.9056L66.0713 73.889L66.0945 73.8725L66.1101 73.856L68.9534 71.7073", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M53.2334 83.0126L53.2334 82.9878L53.2334 82.0374L53.2334 82.0291L53.2334 81.2358L53.2334 79.302L53.2334 79.0871L53.2334 79.0706L53.2334 79.021L53.2334 79.0128L53.2334 78.7979L53.2334 78.0706", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M53.2341 78.0459L52.5832 77.5501L52.4902 77.4757L52.3199 77.3517L52.0254 77.1286", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M62.8789 75.7402L62.8789 75.7154L62.8789 73.9716L62.8789 71.9717L62.8789 71.5089L62.8789 71.4842L62.8789 71.4511L62.8789 71.4263L62.8789 70.8065L62.8789 70.7817", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M53.7534 83.087L53.7534 83.0622L53.7534 81.649L53.7534 81.6407L53.7534 81.3102L53.7534 80.6491L53.7534 80.1697L53.7534 79.6904L53.7534 79.4756L53.7534 79.459L53.7534 79.4094L53.7534 79.4012L53.7534 79.1863L53.7534 78.1368L53.7534 78.112", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M53.7535 78.1202L53.4668 78.1202", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M53.4585 83.0869L53.753 83.0869", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M53.4585 78.145L53.4585 78.9714L53.4585 79.1863L53.4585 79.2028L53.4585 79.2524L53.4585 79.2689L53.4585 79.4838L53.4585 80.4094L53.4585 80.4424L53.4585 81.3267L53.4585 81.8804L53.4585 81.8886L53.4585 83.0787L53.4585 83.1035", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M59.812 78.5177L59.812 78.4921", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M59.812 78.4921L59.812 77.3847L59.812 77.0128L59.812 76.7401L59.812 76.2278L59.812 76.203L59.812 74.765L59.812 74.3931L59.812 74.2857L59.812 74.1287L59.812 74.1039L59.812 74.0708L59.812 74.046L59.812 73.5585", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M69.0547 71.5172L69.0547 71.1371L69.0547 71.1123L69.0547 69.7735L69.0547 67.3108L69.0547 66.5836", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M63.3989 75.8063L63.3989 75.7815L63.3989 74.0378L63.3989 71.8974L63.3989 71.8726L63.3989 71.8395L63.3989 71.8147L63.3989 71.5833L63.3989 70.8809", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M63.105 70.8396L63.105 70.8644L63.105 71.5834L63.105 71.6082L63.105 71.6412L63.105 71.666L63.105 71.79L63.105 74.0295L63.105 75.7732", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M69.0547 71.5428L69.0547 71.5172", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M43.9209 90.2766L44.2153 90.2766", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M44.2158 90.2767L44.2158 90.2519L44.2158 88.5082L44.2158 86.0455L44.2158 85.343", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M43.9209 85.3348L43.9209 86.2603L43.9209 88.4999L43.9209 90.2436L43.9209 90.2684", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M50.2744 85.7066L50.2744 85.4504L50.2744 84.5745L50.2744 84.2687L50.2744 84.2108L50.2744 83.9381L50.2744 83.4175L50.2744 83.3927L50.2744 82.7977L50.2744 81.9465L50.2744 81.5746L50.2744 81.0622L50.2744 80.7565", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M44.2153 85.31L43.9209 85.31", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M53.9796 78.0459L53.7534 78.1124", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M59.7183 78.6834L59.8118 78.5086", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M59.8118 73.5502L59.7183 73.7249", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M69.055 66.5754L69.0004 66.6669L68.9614 66.7418", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M63.6251 70.7735L63.3989 70.84", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M50.2748 80.7399L50.1812 80.9147", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M53.4596 78.1207L53.4362 78.1124L53.2334 78.0459", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M59.7183 73.7486L59.7183 73.7238L59.7183 73.1866L59.7183 73.1618L59.7183 72.5172L59.7183 72.1453L59.7183 71.9718L59.7183 71.7652L59.7183 71.352L59.7183 71.3272L59.7183 69.3769L59.7183 69.3686L59.7183 69.1124L59.7183 69.0876L59.7183 69.0546L59.7183 69.0298L59.7183 68.7901L59.7183 68.7819", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M60.9741 68.9389L60.2847 69.4595L60.2691 69.476L60.2459 69.4926L60.2304 69.5091L59.812 69.8231", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M61.6714 64.9225L61.2453 65.2448L61.2299 65.2613L61.2066 65.2779L61.1911 65.2944L59.812 66.3357", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M59.812 67.5009L60.734 66.8068L60.9819 66.625L60.9819 68.4265L60.9819 68.443L60.9819 68.9472L60.734 68.7653", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M61.6714 69.881L61.6714 69.8562L61.6714 68.1124L61.6714 67.9058L61.6714 67.8893L61.6714 65.6415L61.6714 65.625L61.6714 65.5919L61.6714 65.5671L61.6714 64.9308L61.6714 64.9225", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M59.812 69.4512L59.9903 69.319L60.0057 69.3025L60.029 69.286L60.0444 69.2694L60.734 68.7488L60.734 68.6083L60.734 68.5918L60.734 66.7902", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M50.2744 74.6989L51.2118 73.9882L51.4598 73.8064L51.4598 76.1203", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M52.0254 77.1616L52.0254 77.1368L52.0254 75.3848L52.0254 73.1948L52.0254 73.1866L52.0254 73.1287L52.0254 73.1205L52.0254 72.9965L52.0254 72.9882L52.0254 72.1949L52.0254 72.1866", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M51.2118 75.9385L51.3668 76.0542L51.4598 76.1203L51.3668 76.1864L50.9717 76.4839L50.2744 77.0128", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M50.2744 76.641L50.9717 76.1121L51.2118 75.9302L51.2118 75.1534L51.2118 73.9799", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M68.9614 66.7737L68.9614 66.7489L68.9614 66.2117L68.9614 66.1869L68.9614 66.1539L68.9614 66.1208L68.9614 64.9969L68.9614 64.7986L68.9614 62.4102L68.9614 62.402L68.9614 61.8152", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M68.9612 61.807L66.1023 63.9639L66.0868 63.9804L66.0635 63.9969L66.048 64.0135L63.6309 65.8398", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M50.1812 80.9383L50.1812 80.9135L50.1812 80.3763L50.1812 80.3515L50.1812 79.7069L50.1812 79.3764L50.1812 79.3598L50.1812 79.335L50.1812 79.1615L50.1812 78.9549L50.1812 78.5417L50.1812 78.5169L50.1812 78.4756L50.1812 77.8806L50.1812 75.9633", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M44.4399 80.3019L44.4399 80.8969L44.4399 80.9135L44.4399 83.3018L44.4399 83.5084L44.4399 85.2521L44.4399 85.2769", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M53.978 73.1122L53.978 74.608L53.978 74.6163L53.978 74.6741L53.978 74.6824L53.978 75.0378L53.978 75.6328L53.978 76.1121L53.978 76.3104L53.978 76.5087L53.978 76.517L53.978 78.0624L53.978 78.0872", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M63.623 65.8399L63.623 66.4266L63.623 66.4431L63.623 67.0381L63.623 67.0629L63.623 67.096L63.623 67.1208L63.623 68.8149L63.623 69.0215L63.623 70.7652L63.623 70.79", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M63.3989 70.8644L63.6236 70.79L66.0563 68.9554L66.0718 68.9389L66.0951 68.9224L66.1106 68.9058L68.9539 66.7572", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M53.2334 78.0706L53.2334 78.0458L53.2334 77.0624L53.2334 77.0542L53.2334 76.6575L53.2334 76.2939L53.2334 74.1039L53.2334 74.0956L53.2334 74.0378L53.2334 74.0295L53.2334 73.0957", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M62.8789 70.7983L62.8789 70.7735L62.8789 69.3851L62.8789 69.0298L62.8789 67.0051L62.8789 66.9886L62.8789 66.5671L62.8789 66.5423L62.8789 66.5093L62.8789 66.4845L62.8789 65.8481L62.8789 65.8399", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M61.6714 69.881L61.9426 70.0876L62.113 70.2115L62.8801 70.79", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M53.7534 78.145L53.7534 78.1202L53.7534 76.674L53.7534 76.6658L53.7534 76.3683L53.7534 76.2691L53.7534 75.6823L53.7534 75.203L53.7534 74.5088L53.7534 74.5006L53.7534 74.4427L53.7534 74.4345L53.7534 73.1783L53.7534 73.1701", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M53.4585 73.1783L53.4585 74.2113L53.4585 74.2196L53.4585 74.2774L53.4585 74.2857L53.4585 75.4261L53.4585 75.4592L53.4585 76.3682L53.4585 76.4922L53.4585 76.8889L53.4585 76.8971L53.4585 78.1202L53.4585 78.145", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M59.812 73.575L59.812 72.4428L59.812 72.071L59.812 71.947L59.812 71.7982L59.812 71.6908L59.812 71.2776L59.812 71.2528L59.812 69.8149L59.812 69.443L59.812 69.3025L59.812 69.286L59.812 69.1703L59.812 69.1455L59.812 69.1124L59.812 69.0876L59.812 68.6083", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M69.0547 66.6001L69.0547 66.1952L69.0547 66.1704L69.0547 64.9804L69.0547 64.8316L69.0547 64.7242L69.0547 62.3359L69.0547 62.3193L69.0547 61.6334", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M63.3989 70.8644L63.3989 70.8396L63.3989 69.0959L63.3989 68.9884L63.3989 66.9555L63.3989 66.9307L63.3989 66.8976L63.3989 66.8728L63.3989 66.6167L63.3989 66.6001L63.3989 65.9142", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M63.105 65.8977L63.105 66.6414L63.105 66.6662L63.105 66.6993L63.105 66.7241L63.105 66.8067L63.105 66.8232L63.105 69.0876L63.105 69.2033L63.105 70.8313", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M63.105 70.8644L63.3994 70.8644", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M44.2158 85.3347L44.2158 85.3099L44.2158 83.5662L44.2158 83.4588L44.2158 81.0787L44.2158 81.0622L44.2158 80.3763L44.2158 80.368", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M43.9209 80.368L43.9209 81.2854L43.9209 81.3019L43.9209 83.5745L43.9209 83.6902L43.9209 85.3182", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M50.2744 80.7647L50.2744 80.4837L50.2744 79.6325L50.2744 79.302L50.2744 79.2855L50.2744 79.2607L50.2744 79.1367L50.2744 78.9879L50.2744 78.8805L50.2744 78.4673L50.2744 78.4425L50.2744 78.4012L50.2744 77.8062L50.2744 76.9963L50.2744 76.6244L50.2744 76.079L50.2744 75.7815", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M53.9796 73.104L53.7534 73.1788", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M53.7534 78.1455L53.9796 78.0789", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M59.8118 68.6083L59.7183 68.783", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M63.6251 65.8316L63.3989 65.8981", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M50.2748 75.798L50.1812 75.9728", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M44.4421 80.3019L44.2158 80.3685", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M59.7183 68.7819L59.7183 68.2199L59.7183 68.2116L59.7183 67.567L59.7183 67.1952L59.7183 67.0051L59.7183 66.3936L59.7183 66.3853L59.7183 64.4019L59.7183 64.3936L59.7183 64.1705L59.7183 64.1457L59.7183 64.1127L59.7183 64.0879L59.7183 63.8152", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M59.7186 63.8152L59.5404 63.9474L59.525 63.9639L59.5016 63.9804L59.4862 63.997L59.1221 64.2697L58.8741 64.4515L58.8122 64.4928L58.51 64.7242L57.4021 65.5589L57.3401 65.6085L57.2471 65.6828L56.271 66.4183L56.2555 66.4349L56.2322 66.4514L56.2167 66.4679L55.5814 66.9472L55.3102 67.1538L53.9932 68.1455", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M60.9737 63.9805L60.2764 64.5094L60.261 64.5259L60.2377 64.5424L60.2222 64.5589L59.8193 64.8647", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M59.5098 62.7656L60.7339 61.8483L60.9818 61.6665L60.9818 63.4515L60.9818 63.4598L60.9818 63.9804L60.7339 63.7986", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M61.6714 64.9225L61.6714 63.154L61.6714 62.9309L61.6714 62.9226L61.6714 60.7079L61.6714 60.6831L61.6714 60.65L61.6714 60.6252L61.6714 59.9641", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M59.812 64.4928L59.9748 64.3688L59.9903 64.3523L60.0135 64.3358L60.029 64.3192L60.7263 63.7903L60.7263 63.6416L60.7263 63.6333L60.7263 61.8483", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M49.9731 69.9636L51.2128 69.0298L51.4607 68.848L51.4607 71.1619", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M52.0254 72.1949L52.0254 70.4264L52.0254 68.2529L52.0254 68.2282L52.0254 68.1951L52.0254 68.1703L52.0254 68.0629L52.0254 68.0381L52.0254 67.2447", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M51.2118 70.9718L51.3668 71.0875L51.4598 71.1537L51.3668 71.2198L50.9717 71.5173L50.2744 72.0462", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M50.2744 71.6825L50.9717 71.1536L51.2118 70.9718L51.2118 70.1785L51.2118 69.0215", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M68.9614 61.807L68.9614 61.245L68.9614 61.1872L68.9614 61.1789L68.9614 60.0385L68.9614 57.4353L68.9614 57.427L68.9614 56.8485", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M50.1812 75.9798L50.1812 75.4179L50.1812 75.4096L50.1812 74.765L50.1812 74.3931L50.1812 74.3849L50.1812 74.2031L50.1812 73.5833L50.1812 73.575L50.1812 73.5006L50.1812 72.9056L50.1812 70.9966", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M30.9053 57.1047L30.9053 58.4435", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M31.7964 57.7741L30.9132 57.1047L30.8512 56.989L30.766 56.8402L30.7505 56.6832", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M30.7505 56.6915L30.7505 58.5674", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M44.4399 75.3435L44.4399 75.922L44.4399 75.9302L44.4399 78.5417L44.4399 80.3102", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M53.978 68.1455L53.978 69.633L53.978 69.6578L53.978 69.6909L53.978 69.7157L53.978 70.0462L53.978 70.6412L53.978 71.3354L53.978 71.5172L53.978 71.5255L53.978 73.1039L53.978 73.1122", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M63.623 60.8732L63.623 61.4516L63.623 61.4599L63.623 62.0962L63.623 62.121L63.623 62.1541L63.623 62.1789L63.623 64.0631L63.623 65.8316L63.623 65.8399", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M63.623 65.8398L66.048 64.0135L66.0635 63.9969L66.0868 63.9804L66.1023 63.9639L68.9611 61.807", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M53.2334 73.1122L53.2334 72.0875L53.2334 72.0792L53.2334 71.3354L53.2334 69.162L53.2334 69.1372L53.2334 69.1041L53.2334 69.0793L53.2334 68.1455", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M53.2341 68.1455L52.5677 67.6414L52.5523 67.6249L52.0254 67.2282", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M62.8789 65.8399L62.8789 64.0713L62.8789 62.0219L62.8789 62.0136L62.8789 61.6252L62.8789 61.6004L62.8789 61.5673L62.8789 61.5425L62.8789 60.8814", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M62.8801 60.8732L61.6714 59.9641", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M53.7534 73.1866L53.7534 71.699L53.7534 71.6908L53.7534 71.4098L53.7534 70.7074L53.7534 70.228L53.7534 69.5587L53.7534 69.5339L53.7534 69.5008L53.7534 69.476L53.7534 68.2281", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M53.4585 68.2199L53.4585 69.2529L53.4585 69.2777L53.4585 69.3107L53.4585 69.3355L53.4585 70.4512L53.4585 70.4842L53.4585 71.4098L53.4585 71.9139L53.4585 71.9222L53.4585 73.1783", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M59.812 68.6166L59.812 67.5092L59.812 67.1373L59.812 66.8481L59.812 66.3357L59.812 66.3274L59.812 64.8647L59.812 64.4928L59.812 64.3358L59.812 64.3275L59.812 64.2449L59.812 64.2201L59.812 64.187L59.812 64.1622L59.812 63.6499", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M69.0547 61.6334L69.0547 61.2285L69.0547 61.2202L69.0547 59.8567L69.0547 57.3609L69.0547 57.3527L69.0547 56.675", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M63.3989 65.9059L63.3989 64.1374L63.3989 62.0135L63.3989 61.9887L63.3989 61.9557L63.3989 61.9309L63.3989 61.6334L63.3989 61.6251L63.3989 60.9475", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M63.105 60.9392L63.105 61.6995L63.105 61.7243L63.105 61.7574L63.105 61.7822L63.105 61.8318L63.105 61.84L63.105 64.1374L63.105 65.9059", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M43.9209 80.3763L44.2153 80.3763", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M43.9209 75.4096L43.9209 76.3104L43.9209 76.3187L43.9209 78.6078L43.9209 80.3763", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M50.2744 75.8063L50.2744 75.5005L50.2744 74.6906L50.2744 74.3187L50.2744 74.3105L50.2744 74.0295L50.2744 73.5089L50.2744 73.5006L50.2744 73.4262L50.2744 72.8312L50.2744 72.0378L50.2744 71.666L50.2744 71.104L50.2744 70.823", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M44.2158 80.368L44.2158 78.5995L44.2158 76.0872L44.2158 76.079L44.2158 75.4013", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M59.7183 68.783L59.8118 68.6083", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M63.3989 65.9065L63.6251 65.8316", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M50.2748 70.8396L50.1812 71.0143", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M43.9225 75.4101L43.7197 75.3435", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M52.188 112.813L52.5443 113.077L52.6684 113.168L53.1177 113.507L53.2416 113.598L53.6988 113.945L53.7065 113.937L53.8305 113.846L53.9854 113.73L54.2333 113.548L55.8526 112.325L56.1005 112.143L58.5642 110.284L58.6881 110.193", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M58.6812 110.193L58.9988 109.953L59.115 109.863L59.1305 109.854L59.2545 109.763L59.7194 109.408L59.8433 109.317L60.13 109.102L60.13 108.912L60.13 107.97L59.8045 107.73", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M42.9683 73.1618L46.3462 70.6165L46.3617 70.6L50.9638 67.1291L51.3589 66.8315L51.9322 66.4018L54.024 64.8234L54.0395 64.8068L54.0628 64.7903L54.0782 64.7738L55.2869 63.8565L55.682 63.559L57.2315 62.3855L57.2935 62.3359L57.309 62.3194L57.3322 62.3028L57.3477 62.2863L57.6576 62.0549L57.6731 62.0384L58.7965 61.1872L60.5629 59.8567L60.5784 59.8401L60.6017 59.8236L60.6172 59.8071L63.8479 57.3692L63.8867 57.3444L67.1329 54.8982L67.1716 54.8652L67.1794 54.8569", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M67.2031 55.3858L67.2031 54.9561L67.2031 54.8982L67.2031 54.8817L66.9319 54.6751L66.9242 54.6834L66.8855 54.7164L63.6392 57.1626L63.6005 57.1874L60.3697 59.6253L60.3542 59.6418L60.331 59.6583L60.3155 59.6749L58.8202 60.807L57.4257 61.8566L57.4102 61.8731", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M42.7051 72.9552L42.9762 73.1618L42.9762 73.2527L42.9762 73.6577", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M46.0831 70.4099L45.2928 71.0049L42.7051 72.9552L42.7051 73.451", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M50.9639 64.2366L51.8936 63.5342L51.9323 63.5011L52.1027 63.3771L52.1182 63.3606L52.1415 63.3441L52.157 63.3276L55.3722 60.8979L55.3877 60.8814L55.4109 60.8649L55.4265 60.8483L56.2555 60.2203L57.1386 59.5509L57.2239 59.4848L57.3169 59.4104L57.3789 59.3608L57.7275 59.0964L57.7275 58.8236L57.6965 58.7988L57.681 58.7823L57.3789 58.5509L57.3169 58.5013L57.2239 58.427L55.6744 57.2535L55.5891 57.1874L55.2792 56.956L55.194 56.8898L54.427 56.3114L54.4116 56.2948L53.8459 55.8734L53.8072 55.8403L53.4508 55.5759L53.4121 55.5428L51.909 54.4106L51.8703 54.3776L51.1498 53.8321L51.1343 53.8156L50.9871 53.6999L47.4775 56.3444L47.3303 56.4601L47.3147 56.4766L46.0751 57.4105L45.2849 58.0055L44.208 58.8154L44.208 59.0881L44.8046 59.5343L45.2849 59.898L45.6878 60.2037L45.9589 60.4103L46.0209 60.4517L46.0829 60.493L47.4929 61.559L49.1122 62.7821L49.5073 63.0796L49.7862 63.2862L50.1813 63.5837L50.7469 64.0052L50.7624 64.0217L50.9639 64.2366Z", stroke: "#1C6BCF", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M57.7512 58.8402L57.2399 59.2286L57.1546 59.2947L56.0855 60.0963L55.2565 60.7244L55.2409 60.7409L55.2177 60.7574L55.2022 60.774L51.987 63.2036L51.9715 63.2201L51.9482 63.2367L51.9405 63.2367L51.925 63.2449L50.9644 63.9722", stroke: "#1C6BCF", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M44.2158 58.8732L44.8124 59.3195L45.8738 60.1211L47.6403 61.4516L47.6558 61.4681L49.9568 63.2036L50.3519 63.5011L50.9175 63.9226L50.933 63.9391L50.964 63.9639L50.964 64.2366", stroke: "#1C6BCF", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M43.3247 49.4853L47.2372 46.535L47.4541 46.3697L51.6844 43.1798", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M51.684 43.6756L51.684 43.5682L51.684 43.2376L51.684 43.1798L51.4129 42.9732L47.1827 46.1631L46.9657 46.3284L46.0826 46.9978L45.2923 47.5928L43.0532 49.2786L43.0532 49.7745", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M43.0532 49.2869L43.3244 49.4935L43.3244 49.5844L43.3244 49.9893", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M43.0532 49.7828L43.3262 49.9908", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M27.4341 61.4681L30.7423 58.9724L32.0594 57.9807L36.4677 54.6585", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M36.4763 55.1462L36.4763 54.6503L36.2051 54.4437L32.0136 57.6006L31.7967 57.7659L30.9135 58.4353L30.8515 58.4848L30.7585 58.5592L27.1792 61.2616L27.1792 61.7243L27.1792 61.7574", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M27.1714 61.2615L27.4426 61.4681L27.4426 61.526L27.4426 61.559L27.4426 61.8565L27.4426 61.964", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M27.1714 61.7574L27.3664 61.9072L27.4444 61.9654", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M52.5445 115.937L52.2578 116.151L52.2578 116.672L53.9158 117.92L60.3231 113.086L60.3231 113.011L60.1216 112.862L60.1216 112.714L59.897 112.548L59.897 112.4L59.8504 112.358", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M53.9082 117.862L53.9082 117.938", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M60.3147 113.028L53.9075 117.862L53.7061 117.713", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M60.1133 112.879L53.7061 117.713L53.7061 117.614L53.7061 117.573", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M60.1139 112.73L59.8427 112.937L59.7885 112.978L59.7188 113.028L53.8307 117.465L53.7764 117.507L53.7067 117.556L53.4897 117.391", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M59.8972 112.565L59.8501 112.607", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M53.4897 117.251L53.4897 117.4L53.7081 117.234", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M59.8972 112.416L59.8501 112.458", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M53.2798 117.094L53.489 117.251L53.7059 117.085", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M59.6877 112.259L59.2461 112.59L59.2073 112.623L53.8306 116.68", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M53.2798 116.928L53.2798 117.094L53.7059 116.771", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M59.7197 112.284L59.6887 112.259L59.6887 112.094L59.2471 111.763", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M59.6877 112.094L59.2461 112.424L59.1221 112.515L53.8306 116.507", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M52.2505 116.151L52.5372 116.366L52.5991 116.416L52.6611 116.465L53.1104 116.804L53.2344 116.895L53.2732 116.928L53.6993 116.606", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M47.1829 46.1631L46.075 45.3284L45.7264 45.221L45.5172 45.2127L45.277 45.2623L30.8278 56.1544L30.7349 56.3527L30.7349 56.6833", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M30.9049 56.7741L30.7964 56.5758L30.7576 56.5097L30.7422 56.3527", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M30.7505 56.6915L30.766 56.8485L30.8512 56.9973L30.9132 57.113L31.7964 57.7824", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M30.9053 57.1047L30.9053 56.7741L32.0132 57.6088", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M27.1717 61.7243L26.6294 62.1292L26.6294 62.2367", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M43.6965 75.0047L41.3955 73.2692L41.38 73.2527L38.126 70.7983L38.1105 70.7818L34.8565 68.3273L34.841 68.3108L32.3309 66.4183L31.5871 65.8564L31.5716 65.8398L30.7659 65.2283L30.1538 64.7655L29.5805 64.3275L29.1853 64.03L26.8688 62.278L26.6519 62.1127", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M43.9225 75.0796L43.6963 75.0047L43.6963 75.1877", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M43.9209 75.4096L43.9209 75.0791L44.2153 75.0791", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M43.7197 75.3435L43.9211 75.4096L44.2155 75.4096L44.4402 75.3435L45.2847 74.7072L46.0749 74.1122L47.485 73.0461L48.9648 71.9304L49.1043 71.823L49.3444 71.6412L49.3754 71.6164L49.5924 71.4594L50.1811 71.0131", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M44.2158 75.4096L44.2158 75.0791L44.4405 75.013", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M44.4399 75.3435L44.4399 75.013L48.9723 71.5999L49.3518 71.3107L49.5998 71.1289L50.1886 70.6826", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M50.1812 71.0132L50.1812 70.6826L50.2431 70.5669L50.2741 70.509", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M50.1812 71.0131L50.2741 70.8396L50.2741 70.6165", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M50.2744 70.8396L50.2744 70.6165L50.2744 70.509L50.2744 70.2859", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M50.2752 70.6165L50.2752 70.5339L50.2752 70.2859L50.1822 70.1124L49.973 69.9554L49.7329 69.7736L49.7252 69.7653L49.7174 69.757L49.1905 69.3603L48.9736 69.1951", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M52.0261 66.9059L51.9409 66.972L51.3676 67.4018L49.3223 68.9471L48.9736 69.2116", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M52.0254 67.2365L52.0254 66.9059L52.7769 67.4679L52.7924 67.4844L53.2341 67.8232", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M49.1899 69.3686L51.8939 67.3274L51.9326 67.2943L52.0178 67.2282L52.5446 67.6249L52.5601 67.6414L53.2264 68.1455", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M53.2334 68.1455L53.2334 67.815L53.458 67.8811", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M53.2334 68.1455L53.4348 68.2116L53.458 68.2199L53.5278 68.2199L53.7525 68.2199L53.9771 68.1455L55.2942 67.1538L55.5654 66.9472L56.2007 66.4679L56.2162 66.4514L56.2394 66.4348L56.2549 66.4183L57.2311 65.6828L57.3241 65.6084L57.3861 65.5589L58.4939 64.7242L58.7961 64.4928L58.8581 64.4515L59.106 64.2697L59.4702 63.9969L59.4857 63.9804L59.5089 63.9639L59.5244 63.9474L59.7026 63.8151L59.7956 63.6416L59.7956 63.4185", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M53.4585 68.2199L53.4585 67.8893L53.753 67.8893", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M53.7534 68.2199L53.7534 67.8894L53.9781 67.8232", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M53.978 68.1455L53.978 67.815L55.2951 66.8233L55.3494 66.782L55.9847 66.3026L56.0002 66.2861L56.0234 66.2696L56.0389 66.253L57.232 65.3523L58.5026 64.3936L58.8047 64.1622L58.8668 64.1209L59.1146 63.9391L59.2619 63.8317L59.2774 63.8152L59.3006 63.7986L59.3161 63.7821L59.7112 63.4846", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M59.7183 63.8151L59.7183 63.4846L59.7802 63.3689L59.8112 63.311", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M59.812 63.6498L59.812 63.4267L59.812 63.3193L59.812 63.0962", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M59.8108 63.4267L59.8108 63.0962L59.7178 62.9226L59.5086 62.7656L59.2607 62.5838L58.8036 62.2367L58.7184 62.1706L58.5015 62.0053", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M61.6712 59.6253L61.0127 60.1211L60.9973 60.1376L60.974 60.1542L60.9585 60.1707L58.8124 61.7905L58.5103 62.0219", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M61.6714 59.9558L61.6714 59.6252L62.8801 60.5343", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M58.7271 62.1789L58.8123 62.1128L61.1753 60.3277L61.1908 60.3112L61.2141 60.2947L61.2296 60.2781L61.6711 59.9476L62.8798 60.8566L63.1044 60.9227L63.3989 60.9227L63.6235 60.8484L66.0408 59.022L66.0795 58.9972L68.9538 56.832", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M62.8789 60.8731L62.8789 60.5426L63.1035 60.6087", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M63.105 60.9392L63.105 60.6087L63.3994 60.6087", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M63.3989 60.9392L63.3989 60.6087L63.6236 60.5343", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M63.623 60.8731L63.623 60.5426L65.8234 58.8815L65.8621 58.8567L68.9534 56.5262", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M68.9614 56.8485L68.9614 56.518L69.0234 56.4023L69.0544 56.3444", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M68.9614 56.8496L69.0004 56.7748L69.055 56.6832", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M69.0543 56.675L69.0543 56.3444L69.0543 56.2701L69.0543 56.1213L69.0001 56.0304L68.9613 55.956L66.6603 54.2206L66.6448 54.204L63.3908 51.7496L63.3753 51.7331L60.1213 49.2787L60.1059 49.2621L58.8198 48.287L58.7035 48.1961L58.688 48.1795L57.4097 47.2126L57.3477 47.1631L57.2547 47.0887L55.4186 45.7086L54.8453 45.2706L54.4502 44.9731L53.8458 44.5186L53.4507 44.2211L52.1336 43.2294L51.9555 43.0971L51.9167 43.0641L51.7075 43.2211", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M147.529 197.362L147.529 192.809", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M172.794 178.305L172.794 178.099L172.794 173.76", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M148.451 195.197L148.451 194.602L148.451 192.875L149.923 191.768L150.318 191.47", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M147.529 197.354L151.937 194.04L156.857 190.33L161.815 186.594L167.115 182.603L172.809 178.305", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M150.311 193.792L148.451 195.197", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M150.311 191.478L150.311 193.792L149.916 193.495", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M148.451 194.61L149.923 193.503L149.923 191.776", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M169.013 179.694L169.013 179.099L169.013 177.372L170.268 176.43L170.292 176.413L170.485 176.264L170.88 175.967", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M170.881 175.967L170.881 176.859L170.881 176.892L170.881 178.289", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M170.486 177.991L170.881 178.289L169.021 179.694", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M169.013 179.099L170.485 177.991L170.485 176.595L170.485 176.562L170.485 176.264", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M154.999 189.67L154.999 189.503", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M153.534 190.148L153.534 190.776L153.534 191.371L155.394 189.966", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M155.393 189.214L155.393 189.966L154.998 189.669L153.526 190.776", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M159.771 186.075L159.771 185.908", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M158.299 187.024L158.299 187.189L158.299 187.784L160.158 186.379", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M160.158 185.619L160.158 186.371L159.763 186.074L158.291 187.181", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M164.923 182.191L164.923 182.024", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M163.443 183.14L163.443 183.305L163.443 183.9L165.302 182.495", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M165.31 181.735L165.31 182.487L164.922 182.19L163.45 183.297", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M168.673 174.099L168.619 174.206L168.572 174.297L168.51 174.347L168.03 174.711L168.006 174.727L167.1 175.413L161.7 179.487L161.336 179.76L154.131 185.198L153.89 185.247L153.681 185.239L153.333 185.132L151.923 184.065L147.522 187.388L147.514 187.388", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M147.529 192.346L147.529 192.139L147.529 187.379", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M150.311 188.776L148.451 190.181L148.451 189.586L148.451 187.859L149.923 186.751L150.318 186.454", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M151.931 189.024L151.931 187.305L151.931 184.057", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M150.311 186.462L150.311 188.776L149.916 188.479", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M148.451 189.594L149.923 188.487L149.923 186.76", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M170.881 173.273L169.021 174.678L169.021 174.082L169.021 172.355L170.176 171.479L170.238 171.43L170.253 171.413L170.261 171.405L170.284 171.388L170.331 171.347L170.424 171.273L170.478 171.231L170.873 170.934", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M170.881 170.95L170.881 171.62L170.881 171.835L170.881 171.884L170.881 171.909L170.881 172.008L170.881 173.264L170.486 172.967", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M172.795 168.323L172.64 168.446L169.649 170.703L169.556 170.777L169.51 170.818L169.486 170.835L169.479 170.843L169.463 170.86L169.401 170.909L168.688 171.446", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M169.013 174.083L170.485 172.975L170.485 171.719L170.485 171.62L170.485 171.595L170.485 171.545L170.485 171.331L170.485 171.248", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M153.339 190.09L153.339 188.602L153.339 188.429L153.339 188.371L153.339 188.007L153.339 185.123", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M168.673 179.066L168.673 177.347L168.673 177.116L168.673 177.041L168.673 176.868L168.673 176.62L168.673 176.454L168.673 176.405L168.673 175.231L168.673 175.198L168.673 174.421L168.673 174.347L168.673 174.107", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M154.139 190.156L154.139 188.594L154.139 188.437L154.139 187.999L154.139 187.826L154.139 187.412L154.139 185.189", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M168.58 174.297L168.58 175.124L168.58 175.157L168.58 176.471L168.58 176.52L168.58 176.934L168.58 177.545L168.58 178.76L168.58 179.264", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M152.07 189.131L152.241 189.255L153.139 189.933L153.341 190.09L153.527 190.148L153.69 190.197L153.899 190.206L154.139 190.156L155.007 189.503L155.402 189.206L157.912 187.313L158.307 187.016L159.779 185.908L160.174 185.611L161.36 184.718L161.724 184.446L163.08 183.429L163.467 183.14L164.939 182.033L165.326 181.743L168.596 179.272L168.642 179.181L168.697 179.074", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M147.529 187.379L147.529 182.809", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M172.794 168.322L172.794 168.165L172.794 163.752", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M150.311 183.809L148.451 185.214L148.451 184.619L148.451 182.892L149.923 181.785L150.318 181.487", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M151.931 184.057L151.931 182.338L151.931 179.479", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M150.311 181.495L150.311 183.809L149.916 183.512", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M147.529 187.371L151.937 184.057L153.347 185.123L153.696 185.231L153.905 185.239L154.145 185.189L161.35 179.752L161.715 179.479L167.115 175.405L168.021 174.719L168.044 174.702L168.532 174.339L168.594 174.289L168.641 174.198L168.695 174.091", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M148.451 184.627L149.923 183.52L149.923 181.793", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M170.881 168.298L169.021 169.703L169.021 169.108L169.021 167.38L170.238 166.463L170.284 166.422L170.478 166.273L170.873 165.975", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M170.881 165.984L170.881 166.876L170.881 166.951L170.881 168.298L170.486 168", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M169.013 169.116L170.485 168.008L170.485 166.661L170.485 166.587L170.485 166.29", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M153.339 185.123L153.339 183.404L153.339 180.157", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M168.673 169.116L168.673 169.124L168.619 169.232L168.572 169.322L168.51 169.372L168.2 169.603L168.107 169.678L168.061 169.719L168.038 169.736L168.03 169.744L168.014 169.76L167.952 169.81L167.108 170.446L164.745 172.231L164.722 172.248L161.708 174.521L161.344 174.793L154.138 180.231L153.898 180.281L153.689 180.272L153.34 180.165L152.186 179.297", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M168.673 174.099L168.673 172.38L168.673 172.099L168.673 172.025L168.673 171.438L168.673 170.364L168.673 170.265L168.673 170.24L168.673 170.223L168.673 170.19L168.673 170.116L168.673 169.975L168.673 169.463L168.673 169.389L168.673 169.149", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M154.139 185.189L154.139 183.471L154.139 180.223", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M168.58 169.331L168.58 169.893L168.58 170.108L168.58 170.157L168.58 170.182L168.58 170.281L168.58 171.496L168.58 172.57L168.58 173.785L168.58 174.281", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M168.672 164.149L168.626 164.265L168.579 164.356L168.517 164.405L168.06 164.752L168.013 164.794L167.115 165.471L164.922 167.124L164.829 167.199L164.783 167.24L164.76 167.256L164.752 167.265L164.736 167.281L164.674 167.331L161.73 169.554L161.467 169.752L161.444 169.769L161.366 169.827L154.161 175.264L153.921 175.314L153.711 175.306L153.363 175.198L151.953 174.132L147.552 177.454L147.544 177.454", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M147.529 182.396L147.529 182.123L147.529 177.429", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M148.451 180.239L148.451 179.644L148.451 177.917L149.923 176.81L150.318 176.512", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M150.311 176.512L150.311 178.826", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M151.931 179.082L151.931 177.363L151.931 174.116", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M149.923 178.537L150.318 178.834L148.459 180.239", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M148.451 179.644L149.923 178.537L149.923 176.81", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M169.013 164.728L169.013 164.133L169.013 162.405L170.206 161.505L170.222 161.488L170.23 161.48L170.276 161.447L170.284 161.439L170.299 161.422L170.369 161.364L170.462 161.29L170.478 161.282L170.873 160.984", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M172.794 158.373L172.639 158.497L169.687 160.72L169.594 160.794L169.525 160.852L169.509 160.868L169.501 160.877L169.455 160.91L169.447 160.918L169.432 160.934L168.68 161.505", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M170.881 161.001L170.881 161.612L170.881 161.893L170.881 161.91L170.881 161.976L170.881 161.984L170.881 162.009L170.881 163.323", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M170.486 163.025L170.881 163.323L169.021 164.728", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M169.013 164.133L170.485 163.025L170.485 161.711L170.485 161.686L170.485 161.678L170.485 161.612L170.485 161.604L170.485 161.323L170.485 161.306", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M153.339 180.14L153.339 178.429L153.339 178.421L153.339 175.182", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M168.673 169.116L168.673 167.397L168.673 167.124L168.673 167.05L168.673 166.851L168.673 166.604L168.673 166.463L168.673 166.455L168.673 165.298L168.673 165.223L168.673 164.48L168.673 164.405L168.673 164.166", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M154.139 180.214L154.139 178.496L154.139 177.826L154.139 175.248", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M168.58 164.347L168.58 165.133L168.58 165.207L168.58 166.504L168.58 166.521L168.58 166.918L168.58 167.587L168.58 168.802L168.58 168.818L168.58 169.306", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M152.031 179.157L152.201 179.281L153.34 180.14L153.689 180.248L153.898 180.256L154.138 180.206L161.343 174.768L161.707 174.496L164.713 172.231L164.737 172.215L167.107 170.422L167.944 169.793L168.006 169.744L168.022 169.727L168.029 169.719L168.053 169.703L168.099 169.661L168.192 169.587L168.51 169.347L168.572 169.298L168.618 169.207L168.665 169.099", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M147.529 177.421L147.529 173.438L147.529 172.479L147.529 172.455", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M172.794 158.364L172.794 158.207L172.794 158.199L172.794 153.422", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M148.451 175.264L148.451 174.669L148.451 172.942L149.923 171.835L150.318 171.537", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M151.929 169.141L147.529 172.463", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M150.311 171.537L150.311 173.851", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M151.931 174.107L151.931 172.388L151.931 170.116L151.931 169.157", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M149.923 173.562L150.318 173.859L148.459 175.264", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M147.529 177.421L151.937 174.107L153.347 175.173L153.696 175.281L153.905 175.289L154.145 175.239L161.35 169.802L161.42 169.752L161.443 169.736L161.715 169.529L164.651 167.314L164.713 167.265L164.728 167.248L164.736 167.24L164.759 167.223L164.806 167.182L164.899 167.108L167.099 165.447L167.998 164.769L168.044 164.728L168.509 164.381L168.571 164.331L168.618 164.24L168.664 164.133", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M148.451 174.669L149.923 173.562L149.923 171.835", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M169.013 159.753L169.013 159.158L169.013 157.439L170.23 156.521L170.237 156.521L170.284 156.488L170.292 156.488L170.485 156.34L170.88 156.042", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M172.795 153.398L172.78 153.414L172.64 153.522L169.51 155.885L169.502 155.885L169.456 155.918L169.448 155.918L168.673 156.505", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M170.881 156.034L170.881 156.926L170.881 156.935L170.881 157.009L170.881 157.017L170.881 158.356", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M170.486 158.05L170.881 158.348L169.021 159.753", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M169.013 159.158L170.485 158.05L170.485 156.711L170.485 156.703L170.485 156.629L170.485 156.621L170.485 156.323", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M153.339 175.173L153.339 173.454L153.339 170.231L153.339 170.207", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M154.137 170.273L153.897 170.322L153.688 170.314L153.339 170.207", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M168.673 164.141L168.673 162.422L168.673 162.149L168.673 162.075L168.673 161.488L168.673 161.48L168.673 160.348L168.673 160.323L168.673 160.315L168.673 160.248L168.673 160.24L168.673 160.215L168.673 160.108L168.673 159.968L168.673 159.513L168.673 159.439L168.673 159.224", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M154.139 175.24L154.139 173.521L154.139 170.298", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M168.58 159.381L168.58 159.406L168.58 159.885L168.58 160.166L168.58 160.174L168.58 160.24L168.58 160.248L168.58 160.273L168.58 161.546L168.58 161.554L168.58 162.62L168.58 163.835L168.58 163.843L168.58 164.339", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M161.615 164.637L161.522 164.711L161.476 164.752L161.452 164.769L161.445 164.777L161.429 164.794L161.367 164.843L161.359 164.852L158.16 167.265L158.136 167.281L154.146 170.289", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M147.529 172.488L147.529 172.463L147.529 168.479L147.529 168.43L147.529 168.091L147.529 167.554L147.529 167.529", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M172.794 153.431L172.794 153.265L172.794 153.241L172.794 148.456", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M148.451 170.322L148.451 169.727L148.451 169.322L148.451 168.951L148.451 167.992L149.923 166.885L150.318 166.587", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M151.93 164.199L150.451 165.314", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M150.311 166.604L150.311 168.917", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M151.931 169.165L151.931 169.141L151.931 167.455L151.931 165.157L151.931 164.769L151.931 164.232L151.931 164.207", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M149.923 168.62L150.078 168.736L150.318 168.917L150.078 169.099L149.83 169.281L148.451 170.322", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M147.529 172.479L151.937 169.165", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M148.451 169.736L149.83 168.694L149.923 168.628L149.923 168L149.923 166.909", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M169.013 154.811L169.013 154.216L169.013 152.489L170.237 151.571L170.253 151.555L170.284 151.53L170.299 151.513L170.478 151.381L170.873 151.084", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M170.881 151.092L170.881 151.951L170.881 151.976L170.881 152.026L170.881 152.051L170.881 153.398", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M170.486 153.117L170.881 153.414L169.021 154.819", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M169.013 154.224L170.485 153.117L170.485 151.77L170.485 151.745L170.485 151.695L170.485 151.67L170.485 151.398", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M153.339 170.207L153.339 169.058L153.339 168.513L153.339 167.959L153.339 167.587L153.339 165.29", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M153.897 165.38L153.696 165.372L153.688 165.372L153.347 165.265L153.339 165.265", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M154.139 170.298L154.139 170.273L154.139 168.579L154.139 168.455L154.139 167.356L154.139 166.984L154.139 165.347", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M168.58 154.439L168.58 154.464L168.58 155.191L168.58 155.199L168.58 155.274L168.58 155.282L168.58 156.588L168.58 156.612L168.58 157.687L168.58 158.877L168.58 158.901L168.58 159.373L168.58 159.397", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M161.63 164.645L161.708 164.587L164.729 162.306L164.776 162.265L167.1 160.513L167.999 159.835L168.014 159.819L168.022 159.81L168.069 159.777L168.076 159.769L168.092 159.753L168.162 159.695L168.255 159.62L168.51 159.43L168.572 159.381", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M168.673 159.182L168.673 157.488L168.673 157.183L168.673 157.108L168.673 156.546L168.673 156.521L168.673 155.356L168.673 155.348L168.673 155.274L168.673 155.265L168.673 154.563L168.673 154.488L168.673 154.249", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M168.581 154.439L168.519 154.488L168.085 154.811L168.077 154.811L168.031 154.844L168.023 154.844L167.101 155.538L166.574 155.935L166.404 156.067L164.97 157.15L164.916 157.191L164.877 157.224L164.808 157.282L164.792 157.298L164.784 157.307L164.738 157.34L164.73 157.348L164.715 157.364L164.622 157.439L164.575 157.472L164.374 157.621L163.893 157.984L163.785 158.067L163.576 158.224L163.483 158.298L163.258 158.463L163.165 158.538L162.964 158.687L162.917 158.72L162.762 158.835L162.514 159.017L161.708 159.62", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M153.689 170.339L153.899 170.347L154.139 170.298", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M147.529 167.546L147.529 167.521L147.529 163.455L147.529 162.604L147.529 162.579", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M172.794 148.49L172.794 148.464", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M148.451 165.38L148.451 164.785L148.451 164.306L148.451 163.934L148.451 163.058L149.148 162.529L149.241 162.463", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M151.93 159.257L150.451 160.372", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M149.242 162.471L149.923 161.959L150.319 161.662L150.319 163.934L150.319 163.976", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M151.931 164.199L151.931 162.711L151.931 162.505L151.931 159.282", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M149.924 163.686L150.079 163.802L150.288 163.959L150.319 163.984L150.079 164.166L149.831 164.347L149.203 164.819L149.149 164.86", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M149.149 164.265L149.831 163.752L149.924 163.686L149.924 162.976L149.924 161.959", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M169.013 149.877L169.013 149.282L169.013 147.555L170.237 146.638L170.253 146.621L170.284 146.596L170.299 146.58L170.478 146.447L170.873 146.15", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M170.881 146.15L170.881 147.009L170.881 147.034L170.881 147.084L170.881 147.109L170.881 148.456", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M170.486 148.175L170.881 148.472L169.021 149.877", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M169.013 149.282L170.485 148.175L170.485 146.828L170.485 146.803L170.485 146.753L170.485 146.728L170.485 146.456", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M153.339 165.29L153.339 165.265L153.339 164.091L153.339 163.703L153.339 163.571L153.339 161.653L153.339 160.356L153.339 160.331", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M153.897 160.447L153.688 160.439L153.339 160.331", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M154.139 165.356L154.139 165.331L154.139 163.637L154.139 163.488L154.139 163.1L154.139 161.05L154.139 160.414L154.139 160.389", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M168.58 149.522L168.58 150.216L168.58 150.241L168.58 150.29L168.58 150.315L168.58 151.629L168.58 151.654L168.58 152.728L168.58 153.918L168.58 153.943L168.58 154.414L168.58 154.439", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M168.58 149.497L168.518 149.547L168.099 149.861L168.084 149.877L168.053 149.902L168.037 149.918L167.108 150.621L166.496 151.084L166.441 151.125L164.931 152.265L164.838 152.34L164.814 152.356L164.807 152.356L164.76 152.389L164.752 152.389L164.644 152.472L164.621 152.489L164.59 152.513L164.481 152.596L164.311 152.72L163.892 153.034L163.435 153.381L163.218 153.546L163.195 153.563L163.133 153.604L162.97 153.728L162.382 154.174L161.894 154.538L161.7 154.687L161.692 154.695L161.646 154.728L161.638 154.736L161.599 154.769L161.529 154.827L161.514 154.844L161.506 154.852L161.46 154.885L161.452 154.893L161.436 154.91L161.343 154.976L161.297 155.009L160.615 155.521L160.507 155.604L160.352 155.72L160.298 155.761L160.259 155.794L160.205 155.835L159.98 156.001L159.887 156.075L159.686 156.224L159.639 156.257L158.647 157.009L158.399 157.191L158.214 157.331L158.167 157.373L156.951 158.29", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M160.669 160.43L161.343 159.926L161.451 159.844L161.498 159.802L161.668 159.678L161.684 159.662L161.699 159.653L162.505 159.05L162.753 158.868L162.931 158.736L162.978 158.703L163.179 158.554L163.28 158.48L163.505 158.315L163.598 158.24L163.807 158.083L163.915 158.001L164.38 157.654L164.597 157.488L164.62 157.472L164.736 157.389L164.752 157.373L164.76 157.364L164.806 157.331L164.814 157.323L164.829 157.306L164.899 157.249L164.938 157.216L164.992 157.174L166.41 156.108L166.58 155.976L167.107 155.579L168.045 154.869L168.052 154.869L168.099 154.836L168.107 154.836L168.525 154.521L168.587 154.472", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M168.673 154.241L168.673 152.546L168.673 152.241L168.673 152.166L168.673 151.604L168.673 151.58L168.673 150.406L168.673 150.381L168.673 150.332L168.673 150.307L168.673 149.629L168.673 149.555L168.673 149.34", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M153.339 165.29L153.665 165.397L153.688 165.405L153.897 165.414L154.137 165.364", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M154.139 165.356L154.348 165.199L154.58 165.025L156.688 163.43L156.936 163.24L158.09 162.372L158.152 162.323L158.167 162.306L158.175 162.298L158.198 162.281L158.245 162.24L158.338 162.166L158.384 162.133L158.632 161.951L159.368 161.397L159.492 161.306L159.957 160.951", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M147.529 162.604L147.529 162.579L147.529 158.488L147.529 158.48L147.529 158.083L147.529 157.67L147.529 157.645", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M172.794 143.548L172.794 143.522", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M148.451 160.447L148.451 159.852L148.451 159.339L148.451 158.968L148.451 158.116L149.148 157.587L149.241 157.521", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M149.242 157.53L149.923 157.017L150.319 156.72L150.319 158.959L150.319 159.034", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M151.931 159.29L151.931 159.265L151.931 157.753L151.931 157.579L151.931 154.769L151.931 154.356", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M149.923 158.744L150.078 158.86L150.272 159.001L150.318 159.034L150.078 159.215L149.83 159.397L149.179 159.893L149.156 159.91", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M149.149 159.323L149.831 158.811L149.924 158.744L149.924 158.009L149.924 157.017", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M169.013 144.935L169.013 144.34L169.013 142.613L170.237 141.696L170.253 141.679L170.284 141.654L170.299 141.638L170.478 141.506L170.873 141.208", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M170.881 141.208L170.881 142.068L170.881 142.092L170.881 142.142L170.881 142.167L170.881 143.514", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M170.486 143.233L170.881 143.53L169.021 144.935", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M169.013 144.34L170.485 143.233L170.485 141.886L170.485 141.861L170.485 141.811L170.485 141.787L170.485 141.514", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M153.339 160.323L153.339 158.629L153.339 156.678L153.339 155.406", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M153.897 155.505L153.688 155.497L153.339 155.389", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M168.673 149.324L168.673 149.299", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M154.139 160.389L154.139 158.695L154.139 156.083L154.139 155.48", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M168.58 144.555L168.58 144.58L168.58 145.274L168.58 145.299L168.58 145.348L168.58 145.373L168.58 146.687L168.58 146.712L168.58 147.786L168.58 148.976L168.58 149.001L168.58 149.472L168.58 149.497", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M168.58 149.523L168.626 149.432L168.681 149.323", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M161.343 150.018L161.312 150.042L161.203 150.125L161.033 150.249L160.615 150.563L160.351 150.761L160.258 150.836L160.072 150.976", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M161.708 154.712L161.716 154.703L161.918 154.555L162.406 154.191L162.979 153.761L163.157 153.629L163.196 153.596L163.219 153.579L163.436 153.414L163.909 153.059L164.327 152.745L164.498 152.621L164.606 152.538L164.637 152.513L164.66 152.497L164.769 152.414L164.777 152.414L164.823 152.381L164.831 152.381L164.839 152.373L164.932 152.298L166.442 151.158L166.496 151.117L167.109 150.654L168.054 149.943L168.069 149.927L168.1 149.902L168.116 149.885L168.511 149.588L168.573 149.538", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M168.673 149.299L168.673 147.605L168.673 147.299L168.673 147.224L168.673 146.662L168.673 146.638L168.673 145.456L168.673 145.431L168.673 145.381L168.673 145.357L168.673 144.679L168.673 144.605L168.673 144.39", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M153.689 160.463L153.899 160.472L154.139 160.422", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M147.529 157.662L147.529 157.637L147.529 153.505L147.529 153.497L147.529 152.703L147.529 152.695", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M172.794 138.605L172.794 138.44L172.794 138.415L172.794 134.77L172.794 134.721L172.794 134.638L172.794 134.382L172.794 133.63", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M148.451 155.505L148.451 154.91L148.451 154.364L148.451 153.993L148.451 153.183L149.148 152.654L149.241 152.588", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M149.242 152.588L149.923 152.075L150.319 151.778L150.319 153.984L150.319 153.993L150.319 154.092", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M151.931 154.348L151.931 154.323L151.931 152.786L151.931 152.778L151.931 152.637L151.931 149.39L151.931 149.381", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M149.923 153.803L150.078 153.918L150.241 154.042L150.249 154.05L150.318 154.1L150.078 154.282L149.83 154.464L149.148 154.976L148.451 155.505", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M148.451 154.91L149.148 154.381L149.83 153.869L149.923 153.803L149.923 153.026L149.923 152.075", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M169.013 139.993L169.013 139.398L169.013 137.671L169.532 137.283L170.113 136.845L170.237 136.754L170.253 136.737L170.284 136.712L170.299 136.696L170.478 136.564L170.493 136.547L170.865 136.266", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M172.795 133.646L172.64 133.762L172.299 134.018L172.129 134.142L172.074 134.184L172.036 134.208L171.253 134.803L170.858 135.101L170.409 135.44L170.014 135.737L169.518 136.117L169.502 136.134L169.471 136.159L169.456 136.175L168.751 136.704L168.673 136.762", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M170.881 136.274L170.881 136.836L170.881 137.134L170.881 137.159L170.881 137.208L170.881 137.233L170.881 137.415L170.881 138.291L170.881 138.58", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M170.486 138.291L170.881 138.588L169.021 139.993", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M169.013 139.407L170.485 138.299L170.485 138.01L170.485 137.134L170.485 136.952L170.485 136.927L170.485 136.878L170.485 136.853L170.485 136.58", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M153.339 155.414L153.339 155.389L153.339 153.695L153.339 151.72L153.339 151.712L153.339 150.456L153.339 150.447", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M153.341 150.447L151.931 149.381", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M154.137 150.513L153.897 150.563L153.688 150.555L153.339 150.447", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M168.673 144.391L168.673 144.365", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M154.139 155.48L154.139 155.455L154.139 153.761L154.139 153.092L154.139 151.117L154.139 151.108L154.139 150.522", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M168.579 139.621L168.579 140.349L168.579 140.373L168.579 140.423L168.579 140.448L168.579 141.762L168.579 141.787L168.579 142.861L168.579 144.051L168.579 144.076L168.579 144.547L168.579 144.572", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M161.344 145.076L160.507 145.712L160.259 145.894L159.12 146.753L158.64 147.117L158.392 147.299L158.252 147.406L158.245 147.406L158.198 147.439L158.191 147.439L158.02 147.563L157.912 147.646L157.896 147.662L157.749 147.778L157.671 147.836L157.377 148.059L157.33 148.092L157.152 148.233L157.083 148.29L156.68 148.596L156.478 148.745L155.951 149.142L155.719 149.315L155.704 149.323L155.494 149.48L155.2 149.704L154.975 149.877L154.735 150.059L154.123 150.522", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M161.343 150.042L161.359 150.026L161.382 150.009L161.49 149.927L161.498 149.927L161.545 149.894L161.552 149.894L161.707 149.778L162.335 149.299L162.583 149.117L162.978 148.819L163.218 148.638L163.226 148.629L163.466 148.447L164.667 147.538L164.783 147.447L164.799 147.431L164.83 147.406L164.837 147.398L164.845 147.39L164.938 147.324L166.449 146.183L166.503 146.142L167.115 145.679L168.06 144.968L168.076 144.952L168.107 144.927L168.122 144.91L168.518 144.613L168.58 144.563", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M168.673 144.357L168.673 142.663L168.673 142.357L168.673 142.282L168.673 141.721L168.673 141.696L168.673 140.522L168.673 140.497L168.673 140.448L168.673 140.423L168.673 139.745L168.673 139.671L168.673 139.431", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M151.931 154.348L152.202 154.555L152.372 154.679L153.341 155.414", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M153.339 155.414L153.688 155.521L153.897 155.53L154.137 155.48", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M154.139 155.48L154.983 154.844L155.208 154.67L155.502 154.447L155.727 154.274L156.688 153.546L156.936 153.356", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M149.241 146.447L149.148 146.514L147.529 147.737", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M172.794 133.646L172.794 133.489L172.794 133.481L172.794 129.762L172.794 129.754L172.794 128.68", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M148.451 150.546L148.451 149.951L148.451 149.389L148.451 149.018L148.451 148.224L149.148 147.695L149.241 147.629", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M159.12 141.795L158.639 142.158L158.391 142.34L158.26 142.439L158.244 142.456L158.213 142.481L158.198 142.497L157.911 142.712L157.686 142.886L157.392 143.109L157.167 143.282L156.687 143.646L156.493 143.795L155.734 144.373L155.509 144.547L155.215 144.77L154.99 144.943L154.758 145.125L154.649 145.208L154.479 145.332L154.138 145.588L153.898 145.638L153.688 145.629L153.34 145.522L152.635 144.993L152.542 144.919L151.93 144.456L151.426 144.836L151.38 144.869L150.458 145.563L149.931 145.96L149.915 145.976L149.613 146.208L149.257 146.481", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M149.242 147.629L149.923 147.117L150.319 146.819L150.319 149.009L150.319 149.018L150.319 149.133", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M151.931 149.389L151.931 147.935L151.931 147.803L151.931 147.795L151.931 147.671L151.931 145.299L151.931 144.415", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M149.923 148.844L150.078 148.96L150.233 149.075L150.241 149.075L150.318 149.133L150.078 149.315L149.83 149.497L149.148 150.009L148.451 150.538", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M148.451 149.951L149.148 149.423L149.83 148.91L149.923 148.844L149.923 148.051L149.923 147.117", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M169.013 135.035L169.013 134.44L169.013 132.713L169.532 132.316L169.571 132.291L169.625 132.25L169.796 132.126L170.152 131.853L170.237 131.787L170.284 131.754L170.478 131.605L170.532 131.564L170.865 131.308", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M172.795 128.68L172.64 128.795L172.089 129.217L172.082 129.217L171.299 129.812L170.904 130.109L170.416 130.481L170.021 130.779L169.51 131.167L169.463 131.2L169.021 131.531L168.851 131.655L168.797 131.696L168.758 131.721L168.502 131.919L168.409 131.994L167.333 132.804", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M170.881 131.308L170.881 131.812L170.881 132.192L170.881 132.2L170.881 132.275L170.881 132.283L170.881 132.415L170.881 132.952L170.881 133.291L170.881 133.341L170.881 133.638", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M170.486 133.332L170.881 133.63L169.021 135.035", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M169.013 134.44L170.485 133.332L170.485 133.035L170.485 132.985L170.485 132.647L170.485 132.109L170.485 131.977L170.485 131.969L170.485 131.894L170.485 131.886L170.485 131.597", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M153.339 150.447L153.339 148.993L153.339 148.728L153.339 147.927L153.339 147.786L153.339 146.737L153.339 146.728L153.339 146.365L153.339 145.481", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M154.139 150.522L154.139 149.596L154.139 148.803L154.139 147.332L154.139 147.191L154.139 146.968L154.139 146.142L154.139 146.133L154.139 145.555", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M168.579 134.655L168.579 135.398L168.579 135.423L168.579 135.473L168.579 135.498L168.579 136.555L168.579 136.812L168.579 136.82L168.579 137.894L168.579 139.109L168.579 139.117L168.579 139.613L168.579 139.621", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M168.672 134.456L168.618 134.564L168.572 134.655L168.509 134.704L168.486 134.721L168.393 134.795L168.083 135.035L168.068 135.051L168.037 135.076L168.021 135.093L167.316 135.622L167.107 135.779L166.495 136.241L166.441 136.283L165.077 137.307L164.829 137.489L164.806 137.506L164.791 137.522L164.76 137.547L164.744 137.564L164.674 137.613L164.667 137.613L163.45 138.531L163.21 138.712L163.202 138.721L162.962 138.902L162.583 139.192L162.335 139.373L161.692 139.861L161.521 139.985L161.506 140.002L161.475 140.026L161.459 140.043L161.366 140.109L161.359 140.117L161.335 140.134L161.266 140.183L161.095 140.307L160.491 140.762L160.243 140.944L159.104 141.803", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M154.139 150.522L154.751 150.059L154.983 149.877L155.208 149.704L155.502 149.48L155.719 149.315L155.727 149.307L155.959 149.125L156.486 148.728L156.68 148.58L157.083 148.274L157.153 148.216L157.331 148.076L157.377 148.042L157.672 147.819L157.749 147.761L157.896 147.654L157.92 147.638L158.028 147.555L158.198 147.431L158.206 147.431L158.253 147.398L158.26 147.398L158.392 147.299L158.64 147.117L159.12 146.753L160.259 145.894L160.507 145.712L161.344 145.076L161.367 145.059L161.483 144.968L161.499 144.952L161.53 144.927L161.545 144.91L161.693 144.795L162.328 144.315L162.576 144.134L162.963 143.844L163.203 143.663L163.211 143.654L163.451 143.472L164.396 142.762L164.567 142.638L164.66 142.563", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M168.673 139.423L168.673 137.712L168.673 137.423L168.673 137.349L168.673 136.762L168.673 136.754L168.673 136.638L168.673 135.58L168.673 135.555L168.673 135.506L168.673 135.481L168.673 134.787L168.673 134.713L168.673 134.473", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M153.339 150.447L153.688 150.555", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M153.898 150.572L154.14 150.522", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M149.242 120.697L149.242 121.102L149.242 121.763", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M147.608 192.752L147.811 192.602", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M147.608 192.495L147.809 192.346L152.071 189.131", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M168.673 176.859L169.758 176.041L169.781 176.025L172.64 173.868L172.795 173.752L173.082 173.537L173.082 173.314L173.082 173.281L172.934 173.173", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M139.704 128.961L139.611 129.035L139.379 129.209L139.154 129.374L138.867 129.589L138.65 129.754L138.279 130.035L137.473 130.647L137.256 130.812L136.597 131.308L136.551 131.341L136.543 131.349L136.435 131.432L136.326 131.514L136.264 131.564L136.032 131.737L135.853 131.878L135.807 131.911L135.087 132.448L134.994 132.523L134.637 132.795L134.513 132.886L134.343 133.018L134.072 133.225L133.948 133.316L133.483 133.671L133.359 133.762L133.266 133.837L132.243 134.605", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M147.608 182.744L147.811 182.594", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M147.608 182.487L147.809 182.338L152.024 179.165L152.032 179.157", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M168.673 166.851L169.711 166.066L169.758 166.025L172.632 163.86L172.787 163.744L173.074 163.529L173.074 163.306L173.074 163.273L172.927 163.166L172.873 163.124L172.865 163.116L172.787 163.058", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M147.607 182.743L147.607 182.495L147.522 182.429L147.514 182.421L147.506 182.413", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M156.37 140.704L156.37 140.679L156.37 140.663L156.37 140.63L156.37 140.572L156.37 140.53L156.37 140.481L156.37 140.406L156.37 140.2L156.099 139.993L155.727 140.274L155.502 140.448L155.471 140.473L155.215 140.671L154.991 140.844L153.805 141.737L152.643 142.613L152.55 142.687L152.062 143.059L151.954 143.142L151.783 143.266L151.435 143.53", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M147.738 146.315L148.011 146.523", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M148.01 147.009L148.01 146.795L148.01 146.728L148.01 146.596L148.01 146.505L149.033 145.737L149.149 145.646L149.335 145.505L149.351 145.489L149.823 145.134L150.071 144.952L150.451 144.662L150.861 144.357L151.334 144.001L152.047 143.464L152.326 143.258L152.543 143.092L152.636 143.018L154.069 141.935L155.82 140.613L155.835 140.597L156.37 140.192", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M149.241 145.175L149.148 145.249L148.761 145.547L148.211 145.96L147.963 146.142L147.738 146.315L147.738 146.811", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M154.137 145.224L153.897 145.274L153.688 145.266L153.339 145.158", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M153.339 145.481L153.688 145.588L153.897 145.596L154.137 145.547L154.478 145.291L154.649 145.167L154.757 145.084L154.99 144.902L155.214 144.729L155.509 144.505L155.733 144.332L156.493 143.753L156.686 143.605L157.167 143.241L157.391 143.067L157.686 142.844L157.91 142.671L158.197 142.456L158.213 142.439L158.244 142.415L158.259 142.398L158.391 142.299L158.639 142.117L159.119 141.754", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M154.139 145.555L154.139 145.224L154.255 145.134L154.526 144.927L156.269 143.613L156.688 143.299L157.974 142.332L157.989 142.315L158.02 142.291L158.036 142.274L159.113 141.464", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M168.58 134.324L168.402 134.465L167.867 134.87L167.852 134.886L167.821 134.911L167.805 134.927L167.108 135.448L167.1 135.456L166.496 135.911L166.442 135.952L165.078 136.977L164.83 137.159L164.59 137.34L164.574 137.357L164.544 137.382L164.528 137.398L164.458 137.448L164.451 137.448L163.459 138.2L163.211 138.382L161.32 139.811L161.305 139.828L161.274 139.853L161.259 139.869L161.166 139.935L161.158 139.944L160.894 140.142L160.515 140.431L160.267 140.613L159.128 141.473", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M168.579 134.655L168.579 134.324L168.626 134.233L168.672 134.126", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M159.119 141.795L160.258 140.935L160.506 140.754L161.11 140.299L161.281 140.175L161.374 140.101L161.381 140.092L161.474 140.026L161.49 140.01L161.521 139.985L161.536 139.968L162.35 139.357L162.598 139.175L162.977 138.886L163.218 138.704L163.225 138.696L163.465 138.514L164.682 137.597L164.69 137.597L164.759 137.547L164.775 137.531L164.806 137.506L164.821 137.489L164.845 137.473L165.092 137.291L166.456 136.266L166.51 136.225L167.122 135.762L167.332 135.605L168.037 135.076L168.052 135.06L168.083 135.035L168.099 135.018L168.408 134.779L168.501 134.704L168.525 134.688L168.587 134.638L168.633 134.547L168.687 134.44", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M168.673 134.456L168.673 134.126L168.658 133.969L168.619 133.903L168.511 133.713L168.487 133.696L168.394 133.622L167.317 132.812L167.155 132.688L167.093 132.647", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M172.795 128.349L172.578 128.514L172.524 128.556L171.865 129.052L171.858 129.052L170.409 130.143L170.014 130.44L169.278 130.994L169.231 131.027L168.79 131.357L168.681 131.44L168.565 131.523L168.534 131.547L168.402 131.647L167.108 132.622", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M172.795 128.68L172.795 128.523L172.795 128.349L172.64 128.234", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M156.687 116.201L156.284 115.895L156.269 115.879L156.191 115.821L156.176 115.804L155.734 115.474L155.509 115.399L155.215 115.399L154.99 115.474L153.425 116.656L153.41 116.672L152.991 116.986L151.442 118.16L151.364 118.217L151.349 118.234L151.202 118.35L151.124 118.408L151.109 118.416L150.838 118.622L150.621 118.788L150.164 119.135L150.148 119.151L150.047 119.226L149.652 119.523L149.265 119.821L149.172 119.994L149.172 120.325", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M149.149 120.202L149.149 119.978", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M149.149 120.531L149.149 120.449L149.149 120.308L149.149 120.201L149.18 120.259L149.242 120.374", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M149.242 120.697L149.242 120.515L149.242 120.366L150.171 121.069", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M147.119 123.366L146.189 122.663L145.965 122.589L145.67 122.589L145.446 122.663L144.26 123.556L143.571 124.077L143.563 124.077L143.207 124.349L143.067 124.449L143.044 124.465L143.028 124.473L142.959 124.523L142.943 124.531L142.935 124.539L142.819 124.63L141.851 125.366L141.843 125.374L141.75 125.448L141.58 125.572L140.58 126.324", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M140.595 126.333L139.712 127.002L139.619 127.176L139.619 127.506", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M139.611 127.392L139.611 127.167", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M139.611 127.498L139.611 127.721L139.704 127.895", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M139.611 127.721L139.611 127.498L139.611 127.391L139.642 127.448L139.704 127.564", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M139.704 127.895L139.704 127.564L140.587 128.234", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M137.474 130.647L136.544 129.944L136.32 129.87L136.025 129.87L135.801 129.944L135.297 130.324L135.235 130.366L135.127 130.448L134.956 130.572L134.615 130.828L134.042 131.258L133.794 131.44L133.771 131.456L133.678 131.531L133.151 131.928L133.097 131.969L132.903 132.118L131.935 132.853L130.455 133.969L130.362 134.142L130.362 134.473", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M130.368 134.367L130.368 134.142", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M130.368 134.473L130.368 134.516", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M130.462 134.532L130.399 134.415L130.368 134.357L130.368 134.465L130.368 134.507", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M147.529 147.406L143.439 144.324L143.423 144.307L140.921 142.423L140.556 142.15L140.309 141.968L140.161 141.861L140.146 141.844L139.611 141.439L138.472 140.58L138.457 140.563L133.599 136.903L130.461 134.539L130.461 134.547", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M147.529 147.737L147.529 147.406L148.172 146.919L149.148 146.183L149.381 146.009L149.683 145.778L149.698 145.762L150.07 145.481L150.45 145.191L151.325 144.53L151.922 144.076", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M147.529 147.737L149.156 146.522L149.249 146.456", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M151.931 144.423L151.931 144.092L152.636 144.621L153.341 145.15L153.341 145.481", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M149.242 146.447L149.598 146.175L149.9 145.943L149.916 145.927L150.443 145.53L151.364 144.836L151.411 144.803L151.915 144.423", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M69.8149 9.62767L73.7197 6.68567L73.7584 6.65261L73.9754 6.48733L78.8486 2.80982", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M78.8474 3.31393L78.8474 3.22303L78.8474 3.16518L78.8474 2.83461L78.8474 2.81809L78.5762 2.61149L73.703 6.28899L73.486 6.45427L73.4473 6.48733L72.5796 7.14845L71.7894 7.74347L69.5503 9.42934L69.5503 9.92518", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M69.5425 9.42935L69.8136 9.63595L69.8136 9.72685L69.8136 10.1318", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M67.792 104.962L67.792 102.334", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M71.5962 100.26L71.5962 99.4663", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M69.9687 100.689L69.9687 101.483L69.9687 101.855L71.8282 100.45", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M71.8282 99.2845L71.8282 100.45L71.5957 100.26L69.9687 101.483", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M67.7524 104.929L67.7912 104.962L73.8576 100.384L73.8576 97.7556", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M76.0659 98.1771L76.0659 97.8052L76.0659 96.8879", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M77.9255 96.7722L76.3218 97.9788", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M73.8579 97.7556L73.8579 100.384L74.7489 99.7142", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M77.6855 96.5903L77.6855 95.8548", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M77.9255 95.6731L77.9255 96.7722L77.6776 96.5904L76.3218 97.6151", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M82.7832 87.2768L84.6426 88.6817L84.6426 90.632L84.6426 91.0039L82.7832 89.599", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M85.9444 88.4751L81.1719 84.8802", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M84.6504 90.632L83.0311 89.4089L82.7832 89.5907L82.7832 87.2768L83.0311 89.4089", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M77.9478 90.8221L76.0884 92.227L76.0884 91.8551L76.0884 89.9048L77.7076 88.6817L77.9555 88.4999", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M77.9481 88.4999L77.9481 90.8138L77.7002 90.632", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M81.1801 89.8469L81.1801 84.8802L81.1336 84.9133L75.168 89.4172", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M77.7003 88.69L77.7003 90.6403L76.0811 91.8634", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M69.2241 95.9623L69.2241 98.9126L69.2241 99.1523L69.2241 99.3258L69.2241 100.921", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M69.0547 100.871L69.2251 100.929L69.5195 100.929L69.7287 100.863L69.7442 100.855L69.9611 100.689L71.5881 99.4663L71.8205 99.2928L73.8504 97.7639L75.028 96.8796", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M69.5186 100.929L69.5186 99.1605L69.5186 99.1109L69.5186 98.6977L69.5186 95.9706", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M75.0352 96.8714L75.0662 96.8466L75.1592 96.6813L75.1592 96.4582", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M75.1606 96.4516L75.1606 96.202", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M75.1606 96.673L75.1606 96.4499L75.1606 96.202L75.1606 95.4747L75.1606 95.0698L75.1606 94.8962L75.1606 94.8467L75.1606 94.5905L75.1606 94.4252L75.1606 94.3756L75.1606 94.3343L75.1606 91.6898", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M75.1598 91.7063L75.0669 91.8799L73.8583 92.7889L69.969 95.7227L69.7521 95.888L69.7366 95.8962L69.5274 95.9623L69.233 95.9623L69.0625 95.9045", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M75.0659 91.8799L75.0659 94.4252L75.0659 94.4666L75.0659 94.5161L75.0659 94.9293L75.0659 95.0781L75.0659 95.7475L75.0659 95.8384L75.0659 96.1359L75.0659 96.2846L75.0659 96.8466", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M69.7441 95.888L69.7441 96.6565L69.7441 98.5159L69.7441 98.9291L69.7441 99.0779L69.7441 99.3258L69.7441 100.846", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M82.7832 82.3101L84.6426 83.715L84.6426 85.6653L84.6426 86.0372L82.7832 84.6323", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M84.6504 85.6653L83.0311 84.4422L82.7832 84.624L82.7832 82.3101L83.0311 84.4422", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M77.9478 85.8554L76.0884 87.2603L76.0884 86.8884L76.0884 84.9381L77.7076 83.715L77.9555 83.5332", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M75.1606 89.4172L81.1263 84.9133L81.1727 84.8802L81.1727 80.3102", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M77.9481 83.5332L77.9481 85.8471L77.7002 85.6653", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M77.7003 83.715L77.7003 85.6653L76.0811 86.8884", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M69.2241 90.9956L69.2241 94.1938L69.2241 95.9623", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M69.0547 95.9045L69.2251 95.9623L69.5195 95.9623L69.7287 95.8962L69.7442 95.888L69.9611 95.7227L73.8504 92.7889L75.059 91.8799L75.152 91.7063", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M69.5186 95.9541L69.5186 94.1855L69.5186 90.9956", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M75.1606 91.7063L75.1606 91.4832L75.1606 89.9378L75.1606 89.4255L75.1606 86.7479", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M75.1606 89.7167L75.1606 89.4255", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M73.8583 87.8222L69.969 90.756L69.7521 90.9213L69.7366 90.9295L69.5274 90.9956L69.233 90.9956L69.0625 90.9378", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M75.0659 86.9049L75.0659 89.4833L75.0659 90.0948L75.0659 91.3014L75.0659 91.8634", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M75.1595 86.7396L75.0665 86.9132L73.8579 87.8222", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M69.7441 90.9213L69.7441 91.6816L69.7441 94.1195L69.7441 94.3426L69.7441 95.888", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M82.7832 79.6491L82.7832 77.3351L83.0311 77.517L84.6504 78.74L84.6504 80.6904L84.6504 81.0622", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M84.6495 81.054L82.79 79.6491L83.038 79.4673", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M85.9444 78.5252L81.1719 74.9303", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M83.0317 77.517L83.0317 79.4673L84.651 80.6904", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M76.0811 82.277L76.0811 81.9051L76.0811 79.9548L77.7003 78.7317L77.9483 78.5499", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M81.1801 79.897L81.1801 78.1285L81.1801 74.9386L81.1336 74.9716L75.168 79.4756", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M77.9487 78.5582L77.9487 80.8721", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M77.6999 80.6903L77.9478 80.8721L76.0884 82.277", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M76.0811 81.9052L77.7003 80.6821L77.7003 78.7318", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M75.0659 86.8966L75.0659 86.3429L75.0659 86.3347L75.0659 85.1281L75.0659 84.9133L75.0659 84.5166L75.0659 84.5083L75.0659 81.9299", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M75.1598 81.7646L75.0669 81.9382L73.8583 82.8472L69.7521 85.9463L69.5274 86.0124L69.233 86.0124L69.0625 85.9545", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M69.7441 85.9463L69.7441 88.9296L69.7441 89.1445L69.7441 89.3676L69.7441 90.913", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M69.0547 90.9295L69.2251 90.9874L69.5195 90.9874L69.7287 90.9213L69.7442 90.913L69.9611 90.7477L73.8504 87.814", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M69.5186 90.9791L69.5186 89.2106L69.5186 89.0949L69.5186 86.0124", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M69.2241 86.0124L69.2241 89.2106L69.2241 89.318L69.2241 90.9791", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M75.1606 86.7314L75.1606 86.5165L75.1606 86.5082L75.1606 84.9628L75.1606 84.8471L75.1606 84.5992L75.1606 84.4587L75.1606 84.4505L75.1606 81.7729", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M73.8579 87.8139L75.0665 86.9049L75.1595 86.7314", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M82.7832 74.6741L82.7832 72.3602L83.0311 72.542L84.6504 73.7651L84.6504 75.7154L84.6504 76.0873", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M84.6495 76.079L82.79 74.6741L83.038 74.4923", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M85.9444 73.575L83.3025 71.5751L83.2869 71.5668L81.2804 70.0462L81.1719 69.9636", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M83.0317 72.542L83.0317 74.4923L84.651 75.7154", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M76.0811 77.3021L76.0811 76.9302L76.0811 74.9799L77.7003 73.7568L77.9483 73.575", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M77.9487 73.5832L77.9487 75.8972", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M75.1606 79.4673L81.1263 74.9633L81.1727 74.9303L81.1727 73.1618L81.1727 70.9801L81.1727 69.9966", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M77.6999 75.7154L77.9478 75.8972L76.0884 77.3021", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M76.0811 76.9385L77.7003 75.7154L77.7003 73.7651", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M75.0659 81.9217L75.0659 81.368L75.0659 81.3597L75.0659 80.1532L75.0659 79.5416L75.0659 79.5334L75.0659 76.9798", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M75.0672 76.955L73.8586 77.8641L69.7524 80.9631", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M69.7441 80.9961L69.7441 84.1695L69.7441 85.938", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M69.0547 85.9546L69.2251 86.0124L69.5195 86.0124L69.7442 85.938L73.8504 82.839L75.059 81.93L75.152 81.7564", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M69.5186 86.0041L69.5186 84.2356L69.5186 81.0622", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M69.2241 81.0705L69.2241 84.2439L69.2241 86.0124", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M75.1606 81.7564L75.1606 81.5415L75.1606 81.5333L75.1606 79.9879L75.1606 79.4755L75.1606 79.4672L75.1606 76.8145", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M75.1595 76.7897L75.0659 76.9644", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M82.7832 69.7322L82.7832 67.4183L83.0311 67.6001L83.2946 67.7984L83.3023 67.8067L84.6426 68.8149L84.6426 70.7652L84.6426 71.1371", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M84.6504 71.1371L83.3101 70.1289L83.2946 70.1206L82.7832 69.7405L83.0311 69.5587", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M85.9449 68.6331L83.8066 67.0133L83.2952 66.6249L81.2886 65.1043L81.1802 65.0217", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M83.0317 67.6001L83.0317 69.5504L83.2952 69.7487L83.3029 69.757L84.6432 70.7652", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M76.0811 72.3684L76.0811 71.9965L76.0811 71.5916L76.0811 71.0297L76.0811 70.0462L77.7003 68.8231L77.9483 68.6413", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M81.1801 65.0217L81.1646 65.03L81.1336 65.0547L77.8564 67.5257L77.8409 67.5422L75.997 68.9306L75.9815 68.9471L75.168 69.5587", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M77.9487 68.6413L77.9487 70.9553", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M81.1802 69.9884L81.1802 69.9636L81.1802 68.2199L81.1802 66.0051L81.1802 65.9555L81.1802 65.8481L81.1802 65.6002L81.1802 65.0465", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M77.6999 70.7735L77.8548 70.8892L77.9478 70.9553L77.8548 71.0214L77.4829 71.3024L76.0884 72.3519", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M76.0811 71.9966L77.4756 70.947L77.7003 70.7817L77.7003 70.1537L77.7003 68.8397", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M75.0659 76.988L75.0659 76.9632L75.0659 76.4261L75.0659 76.4013L75.0659 75.5831L75.0659 75.2195L75.0659 74.5997L75.0659 74.5749L75.0659 72.0461L75.0659 72.0213", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M69.7441 76.0542L69.7441 79.2276L69.7441 79.5664L69.7441 80.9713L69.7441 80.9961", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M69.5186 81.0705L69.5186 81.0457L69.5186 79.74L69.5186 79.302L69.5186 76.1286", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M69.2241 76.1286L69.2241 79.302L69.2241 79.9631L69.2241 81.0457L69.2241 81.0705", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M75.1606 76.8145L75.1606 75.5088L75.1606 75.046L75.1606 74.5254L75.1606 74.5006L75.1606 71.8726", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M69.5186 76.1038L69.2241 76.1038", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M69.5186 81.071L69.7447 81.0044", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M75.0659 76.9892L75.1595 76.8145", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M82.7832 64.7986L82.7832 62.4846L83.0311 62.6664L83.2946 62.8648L84.6504 63.8812L84.6504 65.8316L84.6504 66.2034", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M84.6495 66.1952L83.3013 65.1787L82.79 64.7985L83.038 64.6167", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M85.9449 63.6912L85.5265 63.3771L85.2631 63.1788L84.7053 62.7573L83.7756 62.0549L83.2952 61.6913L81.2886 60.1707L81.1802 60.088", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M83.0317 62.6581L83.0317 64.6085L83.2952 64.8068L84.6432 65.8233", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M76.0811 67.4265L76.0811 67.0546L76.0811 66.5753L76.0811 66.0133L76.0811 65.1125L77.7003 63.8895L77.9483 63.7077", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M77.9487 63.6995L77.9487 66.0134", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M81.1802 65.0465L81.1802 65.0217L81.1802 63.278L81.1802 60.9888L81.1802 60.9806L81.1802 60.1128", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M77.6999 65.8399L77.8548 65.9556L77.9478 66.0217L77.8548 66.0878L77.4829 66.3688L76.0884 67.4183", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M76.0811 67.0546L77.4756 66.0051L77.7003 65.8398L77.7003 65.1291L77.7003 63.8895", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M75.0659 72.0213L75.0659 71.4842L75.0659 71.4594L75.0659 70.6164L75.0659 70.5669L75.0659 70.2859L75.0659 70.2115L75.0659 69.6743L75.0659 69.6495L75.0659 67.1207L75.0659 67.0959", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M69.7441 71.1206L69.7441 71.7569L69.7441 74.2113L69.7441 74.2857L69.7441 74.5997L69.7441 76.0294L69.7441 76.0542", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M69.5186 76.1286L69.5186 76.1038L69.5186 74.7733L69.5186 74.3849L69.5186 74.3601L69.5186 71.9222L69.5186 71.1867", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M69.2241 71.1867L69.2241 72.1453L69.2241 74.3601L69.2241 74.608L69.2241 74.9964L69.2241 76.1038L69.2241 76.1286", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M75.1606 71.8726L75.1606 70.5421L75.1606 70.4925L75.1606 70.385L75.1606 70.1289L75.1606 70.1041L75.1606 69.5834L75.1606 69.5586L75.1606 66.9307", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M69.7447 71.0958L69.5186 71.1624", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M69.2262 71.1623L69.0547 71.104", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M82.7832 59.8567L82.7832 57.5427L83.0311 57.7245L83.2946 57.9229L84.6504 58.9393L84.6504 60.8897L84.6504 61.2615", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M84.6495 61.2616L83.3013 60.2451L82.79 59.8649L83.038 59.6831", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M85.9439 58.7493L85.5255 58.4352L85.2621 58.2369L84.7043 57.8154L83.7513 57.0965L83.2942 56.7494L81.2644 55.2123L81.1714 55.1461", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M83.0317 57.7245L83.0317 59.6748L83.2952 59.8732L84.6432 60.8897", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M76.0811 62.4846L76.0811 62.1127L76.0811 61.6004L76.0811 61.0384L76.0811 60.1707L77.7003 58.9476L77.9483 58.7658", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M81.1801 55.1709L81.1801 55.1461L81.1646 55.1544L81.1336 55.1792L75.168 59.6831", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M77.9487 58.7658L77.9487 61.0797", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M75.1606 64.6498L81.1263 60.1459L81.1727 60.1128L81.1727 60.0881L81.1727 58.3443L81.1727 56.0221L81.1727 55.9891L81.1727 55.8403L81.1727 55.5924L81.1727 55.1792", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M77.6999 60.8979L77.8548 61.0136L77.9478 61.0797L77.8548 61.1458L77.4829 61.4268L76.0884 62.4763", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M76.0811 62.1128L77.4756 61.0632L77.7003 60.8979L77.7003 60.1542L77.7003 58.9476", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M75.0659 67.1043L75.0659 67.0795L75.0659 66.5423L75.0659 66.5175L75.0659 65.5919L75.0659 65.5837L75.0659 65.3357L75.0659 64.7159L75.0659 64.6911L75.0659 62.1623", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M75.0672 62.1375L73.9981 62.9474L73.9826 62.9639L73.8586 63.0548L72.5725 64.0217L71.7822 64.6167L69.7524 66.1456", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M69.7441 66.1538L69.7441 66.1786L69.7441 66.7819L69.7441 69.3438L69.7441 71.0875L69.7441 71.1123", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M69.5186 71.1867L69.5186 71.1619L69.5186 69.4182L69.5186 66.9555L69.5186 66.253", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M69.2241 66.253L69.2241 67.1786L69.2241 69.4182L69.2241 71.1619L69.2241 71.1867", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M75.1606 66.9389L75.1606 66.9141L75.1606 66.7158L75.1606 66.691L75.1606 65.5258L75.1606 65.5175L75.1606 65.1704", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M69.5186 71.1871L69.7447 71.1206", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M69.7447 66.1538L69.5186 66.2204", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M82.7832 54.9147L82.7832 52.6008L83.0311 52.7826L83.2946 52.981L84.6504 53.9974L84.6504 55.9478L84.6504 56.3196", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M84.6495 56.3197L82.79 54.9148L83.038 54.733", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M83.0317 52.7826L83.0317 54.733L84.651 55.956", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M76.0811 57.5427L76.0811 57.1708L76.0811 56.6254L76.0811 56.0387L76.0811 55.2288L77.7003 54.0057L77.9483 53.8239", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M77.9487 53.8239L77.9487 56.1378", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M81.1802 55.1462L81.1802 53.3942L81.1802 51.0141L81.1802 51.0059L81.1802 50.2125", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M77.7003 55.956L77.8553 56.0717L77.9483 56.1378L77.8553 56.2039L77.4602 56.5014L76.0811 57.5427", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M76.0811 57.1791L77.4602 56.1378L77.7003 55.956L77.7003 55.1792L77.7003 54.0057", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M75.0659 62.1623L75.0659 62.1375L75.0659 61.6004L75.0659 61.5756L75.0659 60.617L75.0659 60.5839L75.0659 60.3938L75.0659 60.1872L75.0659 59.774L75.0659 59.7492L75.0659 57.2039", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M69.7441 61.212L69.7441 61.807L69.7441 61.8152L69.7441 64.2035L69.7441 64.4101L69.7441 66.1539L69.7441 66.1787", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M69.7441 66.1787L71.774 64.6498L72.5643 64.0548L73.8503 63.0879L73.9744 62.997L73.9898 62.9805L75.059 62.1706", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M69.0547 66.1952L69.2251 66.253L69.5195 66.253", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M69.5186 66.2448L69.5186 66.22L69.5186 64.4763L69.5186 64.3688L69.5186 61.9888L69.5186 61.9805L69.5186 61.2946L69.5186 61.2864", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M69.2241 61.2864L69.2241 62.2037L69.2241 62.2119L69.2241 64.4845L69.2241 64.6002L69.2241 66.2283L69.2241 66.2531", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M75.1606 61.9978L75.1606 61.9722", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M75.1606 61.7491L75.1606 60.5508L75.1606 60.5178L75.1606 60.369L75.1606 60.2203L75.1606 60.1128L75.1606 59.6996L75.1606 59.6748L75.1606 57.0303", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M69.5186 61.2864L69.2241 61.2864", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M69.7447 61.212L69.5186 61.2785", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M82.7832 49.9563L82.7832 47.6424L83.0311 47.8242L83.2946 48.0225L84.6504 49.039L84.6504 50.9893L84.6504 51.3612", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M84.6495 51.3612L82.79 49.9563L83.038 49.7745", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M85.9448 48.8407L85.5264 48.5266L85.263 48.3283L84.7052 47.9068L83.7368 47.1796L83.729 47.1796L83.2873 46.849L81.2575 45.3202L81.1646 45.2541", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M83.0317 47.8242L83.0317 49.7745L84.651 50.9976", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M76.0811 52.5843L76.0811 52.2124L76.0811 51.6587L76.0811 51.0637L76.0811 50.2703L77.7003 49.0472L77.9483 48.8654", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M81.1801 50.2042L81.1801 48.4357L81.1801 46.0639L81.1801 46.0391L81.1801 45.2458L81.1336 45.2788L75.168 49.7827", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M77.9487 48.8654L77.9487 51.1794", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M77.7003 50.9976L77.8553 51.1133L77.9483 51.1794L77.8553 51.2455L77.4602 51.543L76.0811 52.5843", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M76.0811 52.2124L77.4602 51.1711L77.7003 50.9893L77.7003 50.196L77.7003 49.039", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M75.0659 57.2039L75.0659 56.6419L75.0659 56.6337L75.0659 55.6255L75.0659 55.6172L75.0659 55.4354L75.0659 54.8156L75.0659 54.8073L75.0659 52.2372", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M69.7441 56.2535L69.7441 56.832L69.7441 56.8403L69.7441 59.4517L69.7441 61.2202L69.7441 61.2285", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M69.2241 56.3196L69.2241 57.2204L69.2241 57.2287L69.2241 59.5178L69.2241 61.2863L69.2241 61.2946", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M75.1606 57.0386L75.1606 55.5511L75.1606 55.5428L75.1606 55.2618L75.1606 54.7412L75.1606 54.7329L75.1606 52.0719", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M69.5186 61.2863L69.5186 59.5178L69.5186 57.0055L69.5186 56.9973L69.5186 56.3196", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M69.5186 56.3196L69.2241 56.3196", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M69.7447 56.2535L69.5186 56.3284", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M67.791 50.3778L66.4972 49.4026L66.4817 49.3861L63.2278 46.9317L63.2122 46.9151L59.9583 44.4607L59.9428 44.4442L58.8194 43.593L58.525 43.3698L57.4093 42.5269L57.3473 42.4773L57.2543 42.403L55.24 40.8824L54.6589 40.4444L54.2638 40.1469L53.8377 39.8246L53.4426 39.5271L51.9473 38.3949", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M82.7832 44.9896L82.7832 42.6757L83.0311 42.8575L83.2946 43.0558L84.6504 44.0723L84.6504 46.0226L84.6504 46.3945", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M84.6495 46.3945L82.79 44.9896L83.038 44.8078", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M85.9439 43.874L85.5255 43.5599L85.2621 43.3616L84.7043 42.9401L83.7591 42.2211L83.7513 42.2129L83.2942 41.8658L81.2644 40.3369L81.1714 40.2708", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M83.0317 42.8575L83.0317 44.8078L84.651 46.0309", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M76.0811 47.6176L76.0811 47.2457L76.0811 46.7085L76.0811 46.1218L76.0811 45.3036L77.7003 44.0805L77.9483 43.8987", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M77.9487 43.8987L77.9487 46.2127", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M75.1606 49.7828L81.1263 45.2788L81.1727 45.2458L81.1727 43.4773L81.1727 41.1303L81.1727 41.1055L81.1727 40.2873", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M77.7003 46.0308L77.8553 46.1465L77.9483 46.2127L77.8553 46.2788L77.4602 46.5763L76.0811 47.6175", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M76.0811 47.2539L77.4602 46.2127L77.7003 46.0309L77.7003 45.2623L77.7003 44.0805", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M75.0659 52.2372L75.0659 51.6752L75.0659 50.6753L75.0659 50.6505L75.0659 50.4687L75.0659 49.8489L75.0659 47.2787", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M69.7441 51.2868L69.7441 51.8653L69.7441 51.8901L69.7441 54.485L69.7441 56.2535", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M69.7441 56.2535L71.774 54.7247L72.5643 54.1297L73.8503 53.1628L73.9744 53.0719L75.059 52.2537", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M69 56.0304L69 54.485L69 52.4521L69 52.4273L69 51.2868", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M69.2241 51.3612L69.2241 52.2619L69.2241 52.2867L69.2241 54.5511L69.2241 56.3196", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M75.1606 52.0719L75.1606 51.8488L75.1606 50.6092L75.1606 50.5844L75.1606 50.3034L75.1606 49.7827L75.1606 47.1052", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M69.5186 56.3196L69.5186 54.5511L69.5186 52.0554L69.5186 52.0306L69.5186 51.3529", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M68.9997 46.3201L67.791 45.4111L66.5127 44.4525L66.4972 44.4359L63.2433 41.9815L63.2278 41.965L59.9583 39.494L58.8194 38.6346L58.525 38.4114L57.4093 37.5685L57.3473 37.5189L57.2543 37.4445L55.24 35.9239L54.6589 35.4859L54.2638 35.1884L53.8377 34.8661L53.4426 34.5686L51.9473 33.4365", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M82.7832 40.0229L82.7832 37.709L83.0311 37.8908L83.2946 38.0891L84.6504 39.1056L84.6504 41.0559L84.6504 41.4278", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M84.6495 41.4278L82.79 40.0229L83.038 39.8411", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M85.9439 38.9155L85.5255 38.6015L85.2621 38.4031L84.7043 37.9817L83.7746 37.2792L83.7668 37.271L83.2942 36.9156L81.2644 35.3868L81.1714 35.3206", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M83.0317 37.8908L83.0317 39.8411L84.651 41.0642", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M76.0811 42.6591L76.0811 42.2873L76.0811 41.7749L76.0811 41.1799L76.0811 40.3369L77.7003 39.1139L77.9483 38.932", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M77.9487 38.932L77.9487 41.246", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M81.1802 40.2791L81.1802 38.5023L81.1802 36.1801L81.1802 36.1553L81.1802 35.3124", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M77.7003 41.0642L77.8553 41.1799L77.9483 41.246L77.8553 41.3121L77.4602 41.6096L76.0811 42.6509", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M76.0811 42.2872L77.4602 41.246L77.7003 41.0642L77.7003 40.3204L77.7003 39.1139", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M75.0659 47.2787L75.0659 46.7168L75.0659 45.7416L75.0659 45.7086L75.0659 45.502L75.0659 44.8822L75.0659 42.3038", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M69.7441 46.3201L69.7441 46.9234L69.7441 46.9482L69.7441 49.5183L69.7441 51.2868", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M69.7441 51.2868L71.774 49.758L72.5643 49.163L73.8503 48.1961L73.9744 48.1052L75.059 47.287", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M69 51.2868L69 49.5183L69 47.5101L69 47.4854L69 46.3201", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M51.9326 38.4197L53.4356 39.5519L53.8308 39.8494L54.2569 40.1717L54.652 40.4692L55.233 40.9072L57.2474 42.4277L57.3404 42.5021L57.4024 42.5517L58.518 43.3946L58.8124 43.6178L59.9358 44.469L59.9513 44.4855L63.2053 46.9399L63.2207 46.9565L66.4747 49.4109L66.4902 49.4274L67.7841 50.4026L68.9927 51.3116", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M69.5186 51.3612L69.5186 49.5927L69.5186 47.1217L69.5186 47.0969L69.5186 46.3945", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M69.2241 46.3945L69.2241 47.3201L69.2241 47.3449L69.2241 49.5927L69.2241 51.3612", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M75.1606 47.1052L75.1606 46.8821L75.1606 45.6673L75.1606 45.6425L75.1606 45.3367L75.1606 44.8161L75.1606 42.1385", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M69.5186 46.3945L69.2241 46.3945", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M69.5186 51.3617L69.7447 51.2868", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M75.1595 42.1385L75.0659 42.3133", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M69.7447 46.3201L69.5186 46.3867", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M69.2262 46.395L69 46.3201", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M68.9997 41.3617L67.791 40.4527L66.536 39.5023L66.5205 39.4858L63.251 37.0148L59.966 34.5356L58.8194 33.6761L58.525 33.453L57.4093 32.6101L57.3473 32.5605L57.2543 32.4861L55.24 30.9655L54.6589 30.5275L54.2638 30.23L53.8377 29.9077L53.4426 29.6102L51.9473 28.478", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M82.7832 35.0645L82.7832 32.7505L83.0311 32.9323L83.2946 33.1307L84.6504 34.1472L84.6504 36.0975L84.6504 36.4694", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M84.6495 36.4694L82.79 35.0645L83.038 34.8827", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M85.9439 33.9488L85.5255 33.6348L85.2621 33.4364L84.7043 33.015L83.79 32.3208L83.7823 32.3125L83.2942 31.9407L81.2644 30.4118L81.1714 30.3457", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M83.0317 32.9323L83.0317 34.8826L84.651 36.1057", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M76.0811 37.6924L76.0811 37.3205L76.0811 36.833L76.0811 36.2379L76.0811 35.3785L77.7003 34.1554L77.9483 33.9736", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M77.9487 33.9736L77.9487 36.2875", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M81.1802 35.3124L81.1802 33.5439L81.1802 31.2465L81.1802 31.2217L81.1802 30.354", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M77.7003 36.1057L77.8553 36.2214L77.9483 36.2876L77.8553 36.3537L77.4602 36.6512L76.0811 37.6924", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M76.0811 37.3206L77.4602 36.2793L77.7003 36.0975L77.7003 35.3785L77.7003 34.1472", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M75.0659 42.312L75.0659 41.7501L75.0659 40.7997L75.0659 40.7749L75.0659 40.5518L75.0659 39.9237L75.0659 37.3453", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M69.7441 41.3617L69.7441 41.9897L69.7441 42.0145L69.7441 44.5599L69.7441 46.3284", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M51.9326 33.453L53.4356 34.5852L53.8308 34.8827L54.2569 35.205L54.652 35.5025L55.233 35.9405L57.2474 37.461L57.3404 37.5354L57.4024 37.585L58.518 38.4279L58.8124 38.6511L59.9513 39.5105L63.2207 41.9815L63.2363 41.998L66.4902 44.4524L66.5057 44.469L67.7841 45.4276L68.9927 46.3366", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M69 46.3201L69 44.5516L69 42.5682L69 42.5435L69 41.3534", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M69.2241 41.4278L69.2241 42.3781L69.2241 42.4029L69.2241 44.626L69.2241 46.3945", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M75.1606 42.1468L75.1606 40.7254L75.1606 40.7006L75.1606 40.3783L75.1606 39.8576L75.1606 37.1801", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M69.5186 46.3945L69.5186 44.626L69.5186 42.1798L69.5186 42.155L69.5186 41.4278", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M69.5186 41.4278L69.2241 41.4278", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M69.2262 41.4282L69 41.3617", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M75.1594 31.9903L75.1594 32.2134L75.0664 32.3869L73.9817 33.2051L73.8578 33.296L72.5717 34.2629L71.7814 34.8579L69.7516 36.3867L69.5269 36.4611L69.2325 36.4611L69.0078 36.3867L67.7992 35.4777L66.5441 34.5273L63.2591 32.0481L59.9664 29.5689L58.8198 28.7094L58.5254 28.4863L57.4097 27.6434L57.3477 27.5938L57.2547 27.5194L55.2404 25.9988L54.6593 25.5608L54.2642 25.2633L53.8381 24.941L53.443 24.6435L51.9399 23.5113L51.9787 23.4783", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M51.9326 23.5196L51.9326 28.4863", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M82.7832 30.0978L82.7832 27.7838L83.0311 27.9657L83.2946 28.164L84.6504 29.1805L84.6504 31.1308L84.6504 31.5027", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M84.6495 31.5026L82.79 30.0977L83.038 29.9159", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M89.7249 31.8332L85.9441 28.9821L85.5257 28.6681L85.2622 28.4697L84.7045 28.0483L83.798 27.3624L83.2944 26.9822L81.2645 25.4534L81.1328 25.3542", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M83.0317 27.9656L83.0317 29.916L84.651 31.139", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M76.0811 32.7257L76.0811 32.3539L76.0811 31.8911L76.0811 31.2961L76.0811 30.4035L77.7003 29.1805L77.9483 28.9986", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M81.1792 30.354L81.1792 28.5855L81.1792 26.2881L81.1792 26.2798L81.1792 25.3873L81.1326 25.4203L77.8554 27.8913L77.8399 27.8995L75.996 29.2962L75.9805 29.3044L74.1211 30.7093", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M77.9487 29.0069L77.9487 31.3208", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M77.7003 31.139L77.8553 31.2547L77.9483 31.3208L77.8553 31.387L77.4602 31.6845L76.0811 32.7257", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M76.0811 32.3621L77.4602 31.3209L77.7003 31.139L77.7003 30.4449L77.7003 29.1887", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M75.0659 37.3453L75.0659 36.7834L75.0659 35.8578L75.0659 35.833L75.0659 35.5851L75.0659 34.9653L75.0659 32.3869", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M69.7441 36.395L69.7441 37.0479L69.7441 37.0726L69.7441 39.5932L69.7441 41.3617", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M57.3945 17.2719L57.3945 18.5859", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M58.2702 17.9331L57.4024 17.2802L57.3404 17.1645L57.2552 17.0158L57.2397 16.8588L57.2475 16.8505", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M57.2397 16.8505L57.2397 18.7016", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M69.5186 41.4361L69.7432 41.3699L71.7731 39.8411L72.5633 39.2461L73.8494 38.2792L73.9734 38.1883L75.0581 37.3701", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M69 41.3617L69 39.5932L69 37.6346L69 37.6098L69 36.395", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M51.9326 28.4863L53.4356 29.6185L53.8308 29.916L54.2569 30.2383L54.652 30.5358L55.233 30.9738L57.2474 32.4944L57.3404 32.5687L57.4024 32.6183L58.518 33.4613L58.8124 33.6844L59.9591 34.5439L63.2441 37.0231L66.5135 39.494L66.529 39.5106L67.7918 40.4609L69.0005 41.37", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M69.2241 41.4361L69.5186 41.4361", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M69.2241 36.4693L69.2241 37.4445L69.2241 37.4693L69.2241 39.6675L69.2241 41.436", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M75.1606 37.1801L75.1606 35.7834L75.1606 35.7587L75.1606 35.4116L75.1606 34.8909L75.1606 32.2134", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M69.5186 41.4278L69.5186 39.6593L69.5186 37.2379L69.5186 37.2131L69.5186 36.4611", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M73.7037 26.5029L73.9826 26.288L79.0108 22.4948L79.894 21.8254L80.4906 21.3792L80.4906 21.1065L77.6859 18.9909L77.1049 18.5529L76.7098 18.2554L75.9893 17.7099L75.5941 17.4124L74.3855 16.5034L73.9749 16.1976L73.7347 16.0158L73.3241 16.3216L72.5648 16.8918L71.7746 17.4868L66.9556 21.123L66.9556 21.3957L67.5521 21.842L68.4354 22.5114L68.8615 22.8337L71.7746 25.0484L72.5648 25.6434L73.7037 26.5029Z", stroke: "#1C6BCF", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M80.4909 21.1147L79.8943 21.561L78.8252 22.3626L73.6963 26.2302", stroke: "#1C6BCF", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M66.9399 21.2482L67.5365 21.6944L68.5979 22.496L69.0241 22.8183L73.6803 26.3306L73.6803 26.6033", stroke: "#1C6BCF", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M75.1606 96.2102L75.6023 96.549L75.7262 96.64L75.8192 96.7061L76.0671 96.8879L76.1911 96.9788L76.1988 96.9705L76.3228 96.8796L77.6786 95.8549L77.9265 95.6731L81.0333 93.3261L81.1108 93.2682", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M76.1904 95.8549L80.3664 92.7063L81.0327 92.2022L81.1334 92.1196", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M75.1606 95.0781L75.8192 95.5739L76.0671 95.7557L76.1911 95.8466L76.1911 96.9788", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M68.2793 34.1967L72.7729 30.8085L77.4524 27.2797L77.8475 26.9822L81.5896 24.1641", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M81.5901 24.6517L81.5901 24.1559L81.319 23.9493L81.2647 23.9906L77.8481 26.569L77.4529 26.8665L75.9809 27.9739L75.5858 28.2714L73.9665 29.4945L72.5564 30.5606L72.4712 30.6267L72.4635 30.6267L71.7584 31.1556L67.9932 33.9984L67.9932 34.4942", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M68.0088 33.9901L68.28 34.1967L68.28 34.2876L68.28 34.6926", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M52.7466 22.5031L57.2402 19.1148L58.5417 18.1314L58.5805 18.0983L62.9656 14.7927", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M62.9653 15.2968L62.9653 14.801L62.6942 14.5944L58.526 17.7347L58.3091 17.9L58.2704 17.9331L57.4026 18.5942L57.3406 18.6438L57.2477 18.7182L52.4829 22.313L52.4829 22.7345", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M52.4746 22.2965L52.7458 22.5031L52.7458 22.5196L52.7458 22.594L52.7458 22.8502L52.7458 22.908L52.7458 22.9989", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M75.0356 98.9705L74.749 99.1853L74.749 99.706L76.407 100.954L81.1717 97.359", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M76.4067 100.896L76.4067 100.972", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M76.2061 100.747L76.4075 100.896L81.1258 97.3342", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M76.2061 100.598L76.2061 100.64L76.2061 100.739L80.9243 97.1771", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M75.9805 100.433L76.1974 100.598L76.2671 100.549L76.3214 100.508L80.8227 97.111", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M75.9805 100.285L75.9805 100.434L76.1989 100.268", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M75.772 100.127L75.9812 100.284L76.1981 100.119", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M75.772 99.9621L75.772 100.127L76.1981 99.8051", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M76.3295 97.9953L80.1258 95.1276L80.149 95.1111L81.04 94.4335L81.1408 94.3508L81.1485 94.3426L82.1789 95.1194L81.8535 95.3673L80.1878 96.6234L76.3218 99.5407", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M74.749 99.1853L75.0356 99.4002L75.0977 99.4498L75.1596 99.4994L75.609 99.8382L75.7329 99.9291L75.7716 99.9622L76.1978 99.6399", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M81.1714 97.3672L85.3396 100.516L86.9976 99.2597L86.9976 99.2018L86.9976 98.7308L86.7496 98.5407", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M85.3403 100.517L85.3403 100.441", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M85.5409 100.293L85.3394 100.441L81.2178 97.3342", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M85.5411 100.144L85.5411 100.194L85.5411 100.293L81.4194 97.1854", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M85.7671 99.9787L85.5812 100.119L85.5425 100.152L85.4805 100.103L85.4572 100.086L81.5215 97.1193", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M85.7672 99.8299L85.7672 99.9797L85.5801 99.8382", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M85.9679 99.6729L85.7587 99.8299L85.5728 99.6894", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M85.9675 99.5159L85.9675 99.6812L85.5801 99.3919", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M86.997 98.7391L86.749 98.9291L86.6871 98.9705L86.6251 99.02L86.1758 99.3589L86.0518 99.4498L85.9743 99.5076L85.5869 99.2184", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M85.4564 97.5738L81.1488 94.326L81.1411 94.3343", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M81.1177 93.2682L81.141 93.2847L83.2483 94.8714L83.4962 95.0533L85.1155 96.2763L85.3634 96.4581L85.4641 96.5325L85.5183 96.5738L85.588 96.5243L85.9367 96.2598L85.9522 96.2433L86.0529 96.1689", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M85.5103 95.45L85.9209 95.1359L85.9364 95.1194L86.8816 94.4087L87.0133 94.3095", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M85.5099 96.5821L85.5099 96.2681L85.5099 96.1772L85.5099 95.45L85.3472 95.326L85.0993 95.1442L81.8608 92.698L81.1325 92.1526L81.0318 92.07L79.9395 91.2435", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M86.0532 96.1772L86.1772 96.0863L86.6266 95.7475L86.7505 95.6566L87.0295 95.45L87.0295 94.5161", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M83.248 95.888L83.248 94.8715", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M85.1075 96.2764L85.1075 96.921L85.1075 97.2929L83.248 95.888L83.496 95.7062", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M83.4878 95.0533L83.4878 95.6979L85.107 96.921", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M87.3613 90.7312L89.2207 92.136L89.2207 94.0864L89.2207 94.4582L87.3613 93.0534", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M89.2212 94.0782L87.6019 92.8551L87.354 93.0369L87.354 90.7229L87.6019 92.8551", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M87.3613 85.7562L89.2207 87.1611L89.2207 89.1114L89.2207 89.4833L87.3613 88.0784", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M85.9443 88.4751L89.7251 91.3262", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M89.2212 89.1114L87.6019 87.8884L87.354 88.0702L87.354 85.7562L87.6019 87.8884", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M87.3613 83.0952L87.3613 80.7812L87.6093 80.9631L89.2285 82.1861L89.2285 84.1365L89.2285 84.5083", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M89.2207 84.5001L87.3613 83.0952L87.6093 82.9134", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M87.6021 80.9631L87.6021 82.9134L89.2213 84.1365", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M87.3613 78.1285L87.3613 75.8146L87.6093 75.9964L89.2285 77.2195L89.2285 79.1698L89.2285 79.5417", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M89.2207 79.5251L87.3613 78.1202L87.6093 77.9384", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M85.9443 78.5252L89.7251 81.3763", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M87.6021 75.9881L87.6021 77.9384L89.2213 79.1615", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M87.3613 73.1866L87.3613 70.8727L87.6093 71.0545L89.2285 72.2775L89.2285 74.2279L89.2285 74.5997", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M89.2207 74.5915L87.3613 73.1866L87.6093 73.0048", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M85.9443 73.575L89.7251 76.4344", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M87.6021 71.0545L87.6021 73.0048L89.2213 74.2279", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M87.3613 68.2447L87.3613 67.6497L87.3613 65.9225L87.6093 66.1043L89.2285 67.3274L89.2285 69.0545L89.2285 69.2777L89.2285 69.6496", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M89.2207 69.6495L87.3613 68.2447L87.6093 68.0628", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M85.9443 68.6331L89.7251 71.4924", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M87.6021 66.1126L87.6021 67.8397L87.6021 68.0629L89.2213 69.286", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M87.3613 63.3028L87.3613 62.683L87.3613 60.9888L87.6093 61.1706L89.2285 62.3937L89.2285 64.0878L89.2285 64.3358L89.2285 64.7077", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M89.2207 64.7077L87.3613 63.3028L87.6093 63.121", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M85.9443 63.6912L89.7251 66.5506", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M87.6021 61.1707L87.6021 62.8648L87.6021 63.1127L89.2213 64.3358", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M87.3613 58.3691L87.3613 57.7245L87.3613 57.708L87.3613 56.0469L87.6093 56.2287L89.2285 57.4518L89.2285 59.1129L89.2285 59.1212L89.2285 59.4021L89.2285 59.774", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M89.2207 59.774L87.3613 58.3691L87.6093 58.1873", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M85.9443 58.7493L89.7251 61.6087", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M87.6021 56.237L87.6021 57.8981L87.6021 57.9146L87.6021 58.1956L89.2213 59.4187", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M87.3613 53.4024L87.3613 52.7413L87.3613 52.733L87.3613 51.0885L87.6093 51.2703L89.2285 52.4934L89.2285 54.1379L89.2285 54.1462L89.2285 54.4437L89.2285 54.8156", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M89.2207 54.8073L87.3613 53.4024L87.6093 53.2206", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M87.6021 51.2703L87.6021 52.9148L87.6021 52.9231L87.6021 53.2206L89.2213 54.4437", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M87.3613 48.444L87.3613 47.7994L87.3613 47.7746L87.3613 46.1218L87.6093 46.3036L89.2285 47.5267L89.2285 49.1712L89.2285 49.196L89.2285 49.477L89.2285 49.8489", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M89.2207 49.8489L87.3613 48.444L87.6093 48.2622", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M85.9443 48.8406L89.7251 51.6917", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M87.6021 46.3119L87.6021 47.9564L87.6021 47.9812L87.6021 48.2622L89.2213 49.4853", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M87.3613 43.4773L87.3613 42.8575L87.3613 42.8327L87.3613 41.1633L87.6093 41.3451L89.2285 42.5682L89.2285 44.2376L89.2285 44.2624L89.2285 44.5185L89.2285 44.8904", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M89.2207 44.8822L87.3613 43.4773L87.6093 43.2955", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M81.1802 40.2791L81.2731 40.3452L83.303 41.874L83.7601 42.2211L83.7678 42.2294L84.7207 42.9484L85.2786 43.3698L85.542 43.5682L85.9604 43.8822L89.7412 46.7333", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M87.6021 41.3452L87.6021 43.0145L87.6021 43.0393L87.6021 43.2955L89.2213 44.5186", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M87.3613 38.5106L87.3613 37.9156L87.3613 37.8908L87.3613 36.1966L87.6093 36.3784L89.2285 37.6015L89.2285 39.2957L89.2285 39.3204L89.2285 39.5518L89.2285 39.9237", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M89.2207 39.9155L87.3613 38.5106L87.6093 38.3288", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M85.9443 38.9155L89.7251 41.7666", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M87.6021 36.3784L87.6021 38.0726L87.6021 38.0974L87.6021 38.3288L89.2213 39.5519", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M87.3613 33.5522L87.3613 32.9737L87.3613 32.9489L87.3613 31.23L87.6093 31.4118L89.2285 32.6348L89.2285 34.3538L89.2285 34.3786L89.2285 34.5852L89.2285 34.9571", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M89.2207 34.957L87.3613 33.5521L87.6093 33.3703", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M85.9443 33.9488L89.7251 36.7999", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M87.6021 31.42L87.6021 33.1389L87.6021 33.1637L87.6021 33.3703L89.2213 34.5934", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M87.3613 95.6979L89.2207 97.1028L89.2207 99.0531L89.2207 99.425L87.3613 98.0201", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M90.9336 102.177L90.9336 99.2928", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M89.2212 99.0531L87.6019 97.83L87.354 98.0118L87.354 95.6979L87.6019 97.83", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M86.9976 99.2101L90.9256 102.177L91.0883 102.053", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M81.3188 80.2044L81.3188 80.0214L81.3188 80.0131L81.3188 79.9548", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M81.3188 89.9543L89.7249 96.2929", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M75.1606 84.8471L81.1263 80.3432L81.1727 80.3102L81.3122 80.2027L89.7183 86.5413", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M75.1606 84.591L81.1263 80.0871L81.1727 80.054L81.2657 79.9796L81.2734 79.9714L81.3122 79.9383L89.7183 86.2769", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M82.2788 24.2303L85.4244 26.6021L85.4321 26.6103L89.7243 29.8498", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M89.7243 29.4367L85.5251 26.2715L85.2616 26.0732L84.7039 25.6517L83.2938 24.5857L82.55 24.0237L82.2788 24.2303L82.2788 24.7261", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M81.7217 2.18178L96.4653 13.3052", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M96.7359 13.1069L85.5252 4.65272L85.2617 4.45438L84.704 4.03292L83.2939 2.96685L81.9845 1.98343L81.7134 2.19003L81.7134 2.68587", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M90.9721 17.4455L88.3224 15.4456L86.0911 17.1232L85.5178 17.5529L85.2544 17.7513L84.6965 18.1727L83.2865 19.2388L81.5278 20.561L81.5278 20.8338L82.1243 21.28L83.0076 21.9494L83.2865 22.156L83.6894 22.4618L84.6965 23.2221L85.2544 23.6435L85.5178 23.8419L88.2759 25.9244L89.7169 24.8418", stroke: "#1C6BCF", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M88.2832 25.66L88.2832 25.9345", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M89.7249 24.5691L89.5545 24.7013L88.2838 25.6599L83.8832 22.3378L83.2015 21.8254L82.14 21.0238L81.5435 20.5775", stroke: "#1C6BCF", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M98.875 11.4871L85.526 1.42147L85.2625 1.34709L85.0534 1.35536L84.7048 1.46279L83.2947 2.52885L81.2648 1L78.8398 2.82636", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M73.7038 6.28902L72.5726 5.43782L72.2239 5.33039L72.0147 5.32212L71.7746 5.37171L57.3254 16.2637L57.2324 16.4621L57.2324 16.7926", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M57.3952 16.8835L57.3022 16.7182L57.2867 16.6934L57.2479 16.6273L57.2324 16.4703", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M57.2397 16.7926L57.2397 16.8422L57.2475 16.9496L57.3327 17.0984L57.3947 17.2141L58.3011 17.9", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M57.3945 17.2141L57.3945 16.8835L58.5256 17.7347", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M52.4749 22.7262L51.9326 23.1312L51.9326 23.4617", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M68.9997 36.0066L66.7916 34.3372L63.5066 31.858L60.2139 29.3788L58.8116 28.321L58.7806 28.2962L57.2466 27.1392L55.4957 25.817L54.9146 25.379L54.5195 25.0815L52.203 23.3295L52.1643 23.2964L51.9473 23.1311", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M51.9326 23.4617L51.9714 23.4948L53.4356 24.5939L53.8308 24.8914L54.2956 25.2468L54.6907 25.5443L55.2718 25.9823L57.2474 27.4698L57.3404 27.5442L57.4024 27.5938L58.5568 28.4697L58.8124 28.6598L59.9978 29.5523L63.2905 32.0316L66.5755 34.5108L69.0005 36.3454L69.2251 36.4198L69.5196 36.4198L69.7442 36.3454L71.7741 34.8165L72.5644 34.2215L73.8504 33.2546L73.9744 33.1637L75.0591 32.3456L75.152 32.172L75.152 32.0068L75.152 31.9489", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M69 36.3371L69 36.0066L69.2246 36.0809", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M69.2241 36.4115L69.2241 36.0809L69.5186 36.0809", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M69.5186 36.4115L69.5186 36.0809L69.7432 36.0066", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M69.7441 36.3372L69.7441 36.0066L73.8503 32.9076L75.059 31.9985", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M75.0659 32.3208L75.0659 31.9902L75.1124 31.9076L75.1279 31.8745L75.1589 31.8167", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M75.1606 32.1555L75.1606 31.9903L75.1606 31.9324L75.1606 31.825L75.1606 31.6018", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M75.1595 31.9324L75.1595 31.6018L75.0665 31.4283L74.7101 31.1638L74.1136 30.7176L74.0748 30.6845L73.9818 30.6101L73.8579 30.5192", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M81.1794 24.9988L77.8556 27.5029L75.7173 29.1144L73.8579 30.5192", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M81.1802 25.3294L81.1802 24.9988L84.0545 27.1723L89.7257 31.4448", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M74.0742 30.6845L75.9336 29.2796L75.9879 29.2383L77.793 27.8747L77.8473 27.8334L81.1245 25.3624L81.1322 25.3542L81.171 25.3294L81.2639 25.3955L83.2938 26.9244L83.8361 27.3293L84.7116 27.9904L85.2694 28.4119L85.5328 28.6102L89.732 31.7754", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M115.881 11.7598L116.989 10.9251L117.337 10.8177L117.547 10.8094L117.81 10.8756L132.081 21.6354L132.151 21.8172L132.135 21.9742L132.104 22.0238L132.104 22.032L131.988 22.2386", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M107.111 5.61137L106.894 5.44609L98.8833 11.4871L98.6663 11.6524L98.6276 11.6855L96.7449 13.1069L96.4738 13.3135L96.4118 13.3548L96.1406 13.5614L95.3349 14.1729L92.0422 16.6522L90.9808 17.4538L90.8025 17.586L90.5004 17.8091L89.8264 18.3132L89.7334 18.4785L89.7334 18.7016L89.7334 19.0074L89.7334 19.0322", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M89.8177 18.8763L89.7553 18.7681L89.7553 18.7598L89.7241 18.7099", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M89.7241 19.0404L89.8171 19.2057L89.8248 19.2057L92.7302 21.3957L93.2105 21.7593L93.3267 21.8502L93.5049 21.9825L94.3882 22.6518L95.9996 23.8667L96.0152 23.8832L96.7512 24.4369L96.9758 24.503L97.2702 24.503L97.4949 24.4286", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M89.8179 19.2057L89.8179 19.1892L89.8179 19.0818L89.8179 18.8752L92.9478 21.2387L93.4282 21.6023L93.7226 21.8254L94.4664 22.3874L96.2096 23.7014L96.225 23.7179L96.7441 24.1063", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M96.7593 24.4369L96.7593 24.4204L96.7593 24.1063L96.984 24.1725", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M96.9766 24.5113L96.9766 24.4947L96.9766 24.1807L97.271 24.1807", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M97.2705 24.5113L97.2705 24.4947L97.2705 24.1807L97.4952 24.1063", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M97.4961 24.4369L97.4961 24.4204L97.4961 24.1063L97.7595 24.222L97.7673 24.2303L98.7047 24.6518L100.231 25.3377L100.463 25.4451L100.487 25.4534L100.502 25.4616L100.549 25.4864L102.416 26.3294L102.462 26.3459L103.508 26.817", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M102.206 28.4532L102.206 28.1227L102.206 27.8995L102.299 27.7343L102.516 27.569L102.764 27.3872L103.291 26.9905L103.298 26.9822L103.508 26.8252L101.145 25.0402L101.106 25.0071L101.09 24.9989L101.075 24.9823L100.889 24.8418L98.7041 23.1973", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M102.3 28.2891L102.238 28.1809L102.238 28.1726L102.207 28.1227", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M102.207 28.4532L102.3 28.6185L102.307 28.6185L102.555 28.8086L102.571 28.8251L102.64 28.8747L102.95 29.1143L103.198 29.2961L103.516 29.5358L105.608 31.1142L105.832 31.2878L105.848 31.3043L105.933 31.3704L106.886 32.0894L106.894 32.0977L107.018 32.1968L107.111 32.2629L107.18 32.3125L107.971 32.9075L108.195 32.9737L108.49 32.9737L108.714 32.8993L109.389 32.3952L109.404 32.3786L109.923 31.9902L113.472 34.6678", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M102.299 28.6185L102.299 28.602L102.299 28.2879L102.771 28.6433L102.787 28.6598L102.857 28.7094L102.95 28.7838L103.198 28.9656L103.515 29.2053L105.607 30.7837L106.056 31.1225L106.072 31.139L106.157 31.2052L106.885 31.7588L107.18 31.982L107.97 32.577", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M107.963 32.891L107.963 32.8745L107.963 32.5604L108.188 32.6266", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M108.187 32.9654L108.187 32.9489L108.187 32.6348L108.481 32.6348", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M108.482 32.9654L108.482 32.9488L108.482 32.6348L108.707 32.5604", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M108.706 32.891L108.706 32.8745L108.706 32.5605L109.163 32.2216L109.178 32.2051L109.744 31.7836L109.922 31.6514", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M109.915 31.982L109.915 31.9655L109.915 31.9159L109.915 31.6514L111.681 32.9819L113.68 34.4943L113.471 34.6513L113.463 34.6595L112.944 35.0479L112.929 35.0645L112.603 35.3124L112.472 35.4116L112.379 35.5769L112.379 35.8L112.379 36.1305", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M112.465 35.9581L112.402 35.8499L112.402 35.8416L112.371 35.7917", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M112.379 36.1223L112.472 36.2875L112.48 36.2875L112.612 36.3867L113.696 37.2049L115.587 38.6345L116.997 39.7006L117.547 40.1138L117.81 40.3121L120.235 42.1385L120.46 42.2046L120.755 42.2046L120.886 42.1633", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M112.464 36.2875L112.464 36.271L112.464 35.957L112.596 36.0561L113.68 36.8743L120.219 41.8079", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M120.219 42.1385L120.219 42.122L120.219 41.808L120.444 41.8741", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M120.443 42.2046L120.443 42.1881L120.443 41.8741L120.738 41.8741", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M120.739 42.2046L120.739 42.1881L120.739 41.8741L120.963 41.7997", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M138.03 28.9325L137.821 29.0895L137.814 29.0978L134.536 31.5688L132.809 32.8745L132.413 33.172L132.142 33.3786L131.267 34.0397L131.251 34.0562L130.577 34.5686L129.849 35.114L129.834 35.1306L126.58 37.585L126.564 37.6015L123.31 40.056L123.295 40.0725L120.986 41.8162L120.986 41.8327", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M138.031 28.9408L138.031 28.9325L137.512 28.5441", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M131.972 22.5527L131.972 22.2386L130.864 23.0733", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M107.963 72.5007L107.963 70.914L107.963 70.9057L107.963 70.7239L107.963 67.534", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M107.963 67.534L107.173 66.9389L107.103 66.8894L107.018 66.8233L106.894 66.7241L106.886 66.7158L105.956 66.0134L105.941 65.9968L105.863 65.939L105.848 65.9225L105.615 65.7489L103.524 64.1705L103.206 63.9308L102.958 63.749L102.679 63.5424L102.664 63.5259L102.586 63.468L102.571 63.4515L102.307 63.2532", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M110.512 70.5669L110.512 68.2529L110.76 68.4347L112.356 69.6413L112.356 71.5916L112.356 71.9635", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M109.915 66.6167L109.915 67.41L109.915 67.4348L109.915 68.7984L109.915 69.7983L109.915 71.4925L109.915 71.5668L109.915 71.5751", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M112.356 71.9552L110.52 70.5669L110.768 70.3851", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M110.759 68.4347L110.759 70.3851L112.355 71.5916", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M101.114 63.4763L101.114 63.1127L101.114 63.1044L101.114 61.1624L101.362 61.3442L102.206 61.9805", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M98.7041 58.1625L98.7041 61.2946L98.7041 61.3607L98.7041 61.4268L98.7041 61.4516L98.7041 61.5756L98.7041 61.6004L98.7041 63.1292L98.7041 63.1375", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M98.7041 63.1292L100.85 64.749", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M101.354 63.2945L102.067 63.8316L102.082 63.8482L102.16 63.906L102.175 63.9226L102.199 63.9391", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M101.354 61.3442L101.354 63.2863L101.114 63.4681L101.827 64.0053L101.842 64.0218L101.919 64.0796L101.935 64.0962L102.198 64.2945", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M120.219 76.7814L117.794 74.9551L117.531 74.7567L116.98 74.3353", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M96.7593 64.0465L96.7593 63.0797L96.7593 63.0549L96.7593 62.9309L96.7593 62.8978L96.7593 62.278L96.7593 59.8236L96.7593 59.0881", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M89.8179 53.8487L89.8179 54.5842L89.8179 54.5925L89.8179 56.7163L89.8179 57.0386L89.8179 58.2534L89.8179 58.2617L89.8179 58.8071", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M89.8179 58.8154L90.9335 59.6583L92.7232 61.0053L92.7386 61.0219L92.8161 61.0797L92.8316 61.0963L95.9926 63.4763L96.0081 63.4928L96.0856 63.5507L96.1011 63.5672L96.7441 64.0548", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M102.299 63.2614L102.299 63.6581L102.299 63.6829L102.299 63.8069L102.299 63.8317L102.299 63.9969L102.299 64.0052L102.299 65.8316L102.299 65.8398L102.299 66.4514L102.299 66.6497L102.299 67.0216L102.299 67.6744L102.299 67.6827L102.299 68.2281L102.299 68.2364", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M102.207 68.0546L102.3 68.2199L102.307 68.2199L102.547 68.4017L102.563 68.4182L102.64 68.4761L102.656 68.4926L102.95 68.7157L103.198 68.8975L103.516 69.1372L105.608 70.7156", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M112.464 70.9388L112.464 71.8808L112.464 73.5089L112.464 73.5171L112.464 74.1369L112.464 74.3187L112.464 74.327L112.464 75.3518L112.464 75.36L112.464 75.9055L112.464 75.9137", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M112.464 75.8972L112.596 75.9964L113.68 76.8145L115.571 78.2442L116.981 79.3102L117.531 79.7317L117.794 79.93L120.219 81.7564", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M108.706 67.534L108.706 70.7239L108.706 71.4677L108.706 71.4759L108.706 72.4924L108.706 72.5007", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M107.963 72.5007L108.188 72.5668L108.482 72.5668L108.707 72.4924L109.381 71.98L109.388 71.98L109.915 71.5834", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M97.4961 59.0798L97.4961 60.3856L97.4961 62.278L97.4961 62.3441L97.4961 62.3689L97.4961 62.4929L97.4961 62.5177L97.4961 64.0465", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M102.207 63.0962L102.207 63.7325L102.207 63.7573L102.207 63.8812L102.207 63.906L102.207 63.9391L102.207 64.3027L102.207 65.7654L102.207 65.7737L102.207 66.2861L102.207 66.5836L102.207 66.9555L102.207 68.0711", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M108.187 67.6083L108.187 70.7983L108.187 71.0792L108.187 71.0875L108.187 72.5668L108.187 72.575", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M108.482 72.5668L108.482 71.3024L108.482 71.2941L108.482 70.79L108.482 67.6083L108.482 67.6001", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M120.869 76.8062L120.738 76.8475L120.443 76.8475", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M120.739 81.8142L120.739 80.0457L120.739 77.7649L120.739 77.7566L120.739 76.8558L120.739 76.8475", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M112.379 70.7652L112.379 71.6081L112.379 71.947L112.379 73.4428L112.379 73.451L112.379 73.9717L112.379 74.2526L112.379 74.2609L112.379 74.5997L112.379 75.7402", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M120.443 76.8558L120.443 77.5335L120.443 77.5417L120.443 80.0458L120.443 81.8143", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M120.443 81.8143L120.738 81.8143", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M89.7241 53.6834L89.7241 54.518L89.7241 54.5263L89.7241 56.6502L89.7241 56.8733L89.7241 58.6418", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M96.9766 59.1542L96.9766 59.9972L96.9766 62.3524L96.9766 62.7408L96.9766 62.7656L96.9766 62.8896L96.9766 62.9144L96.9766 64.1209", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M97.2705 64.1127L97.2705 62.683L97.2705 62.6582L97.2705 62.5342L97.2705 62.5094L97.2705 62.3442L97.2705 60.212L97.2705 59.1542L97.2705 59.146", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M97.271 59.146L96.9766 59.146L96.752 59.0798", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M96.7593 64.0465L96.9855 64.1131", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M120.739 81.8146L120.872 81.7729", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M107.963 77.4591L107.963 77.4343L107.963 75.8972L107.963 75.8807L107.963 75.6823L107.963 75.4757L107.963 72.4924L107.963 72.4841", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M110.512 75.5336L110.512 73.2196L110.76 73.4014L112.356 74.608L112.356 76.5583L112.356 76.9302", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M109.915 71.5834L109.915 72.385L109.915 72.3932L109.915 73.7816L109.915 74.7733L109.915 76.484L109.915 76.5253L109.915 76.5501", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M112.356 76.9219L110.52 75.5336L110.768 75.3518", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M110.759 73.4015L110.759 75.3518L112.355 76.5584", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M101.114 68.443L101.114 68.0959L101.114 68.0877L101.114 66.1208L101.362 66.3026L102.206 66.939", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M98.7041 63.1292L98.7041 66.2696L98.7041 66.3192L98.7041 66.3687L98.7041 66.3935L98.7041 66.5175L98.7041 66.5423L98.7041 68.0711L98.7041 68.0959", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M98.7041 68.0959L100.835 69.6992L100.85 69.7157L100.928 69.7735L100.943 69.7901L102.198 70.7322", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M101.354 68.2529L102.051 68.7818L102.067 68.7984L102.144 68.8562L102.16 68.8727L102.199 68.8975", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M101.354 66.3109L101.354 68.2612L101.347 68.2694L101.339 68.2777L101.106 68.4512L101.804 68.9802L101.819 68.9967L101.897 69.0545L101.912 69.0711L102.191 69.2859", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M120.219 81.7399L117.794 79.9136L117.531 79.7152L116.981 79.2938L115.571 78.2277L113.68 76.798L112.596 75.9799L112.464 75.8807L112.456 75.8807", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M112.464 75.8889L112.464 76.8311L112.464 78.4425L112.464 78.4673L112.464 78.8805L112.464 79.0871L112.464 79.2607L112.464 79.2855L112.464 79.302L112.464 80.2937L112.464 80.3185L112.464 80.8391L112.464 80.8639", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M96.7593 68.9802L96.7593 68.0133L96.7593 67.9885L96.7593 67.8645L96.7593 67.8397L96.7593 67.253L96.7593 67.2364L96.7593 64.7985L96.7593 64.0465L96.7593 64.0382", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M89.8179 58.8071L89.8179 59.5592L89.8179 59.5674L89.8179 61.6582L89.8179 61.6748L89.8179 61.9971L89.8179 62.0136L89.8179 63.1954L89.8179 63.2201L89.8179 63.7408", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M102.299 68.2281L102.299 68.6L102.299 68.6248L102.299 68.7488L102.299 68.7735L102.299 68.9719L102.299 68.9801L102.299 70.7735L102.299 70.7982L102.299 71.4098L102.299 71.4263L102.299 71.5833L102.299 71.9552L102.299 72.6081L102.299 72.6329L102.299 73.1535", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M112.379 80.6903L112.472 80.8556L112.48 80.8556L112.612 80.9548L113.696 81.7729L115.587 83.2026L116.997 84.2687L117.547 84.6901L117.81 84.8885L120.235 86.7148L120.46 86.7809L120.755 86.7809L120.886 86.7396", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M108.706 72.5007L108.706 75.6906L108.706 76.046L108.706 76.4427L108.706 76.4592L108.706 77.4343", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M109.915 71.5834L109.381 71.9883L109.373 71.9883L108.699 72.4924", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M97.4961 64.0382L97.4961 65.3522L97.4961 67.2282L97.4961 67.2778L97.4961 67.3026L97.4961 67.4265L97.4961 67.4513L97.4961 67.8067L97.4961 68.9719L97.4961 68.9967", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M97.271 69.0794L97.4957 69.005L98.1232 68.5339L98.2937 68.41L98.7121 68.0959", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M98.7047 63.1292L97.4961 64.0383", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M102.207 68.0546L102.207 68.6661L102.207 68.6909L102.207 68.8149L102.207 68.8397L102.207 68.8975L102.207 68.9058L102.207 68.9141L102.207 69.2611L102.207 70.6991L102.207 70.7239L102.207 71.2363L102.207 71.352L102.207 71.509L102.207 71.6081L102.207 71.8809L102.207 73.013", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M108.187 72.5668L108.187 75.6493L108.187 75.7567L108.187 76.0542L108.187 76.0708L108.187 77.5087L108.187 77.5335", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M107.963 77.4591L108.188 77.5253L108.482 77.5253", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M108.482 77.5335L108.482 77.5087L108.482 76.2856L108.482 76.2691L108.482 75.8724L108.482 75.7567L108.482 72.5668L108.482 72.5585", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M120.738 81.806L120.443 81.806", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M120.443 81.806L120.443 82.5002L120.443 82.5167L120.443 84.905L120.443 85.0124L120.443 86.7561L120.443 86.7809", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M120.739 86.7727L120.739 86.7479L120.739 85.1199L120.739 85.0042L120.739 82.7316L120.739 82.7233L120.739 81.8143", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M112.379 75.7237L112.379 76.5666L112.379 76.9054L112.379 78.3765L112.379 78.4012L112.379 78.8144L112.379 78.9219L112.379 79.0706L112.379 79.1946L112.379 79.2194L112.379 79.2359L112.379 79.5417L112.379 80.6821L112.379 80.7069", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M89.7241 58.6418L89.7241 59.4848L89.7241 59.5013L89.7241 61.5921L89.7241 61.6086L89.7241 61.8318L89.7241 61.9475L89.7241 62.1954L89.7241 63.5755", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M96.9766 64.1127L96.9766 64.9639L96.9766 64.9721L96.9766 67.3109L96.9766 67.4266L96.9766 67.6745L96.9766 67.6993L96.9766 67.8232L96.9766 67.848L96.9766 69.0546", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M96.9766 69.0793L97.271 69.0793", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M97.271 69.0793L97.271 69.0545L97.271 67.6496L97.271 67.6331L97.271 67.6083L97.271 67.4844L97.271 67.4596L97.271 67.3191L97.271 65.2035L97.271 65.1952L97.271 64.1209", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M97.271 64.1127L96.9766 64.1127", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M108.189 72.5673L107.963 72.5007", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M112.465 75.8901L112.371 75.7237", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M96.9781 64.1131L96.752 64.0465", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M97.4972 64.0382L97.271 64.1131", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M107.963 82.401L107.963 82.3762L107.963 80.8639L107.963 80.6325L107.963 77.4673", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M107.963 77.4343L107.172 76.8393L107.103 76.7897L107.017 76.7236L106.893 76.6245L106.886 76.6162L105.987 75.9386L105.971 75.922L105.964 75.9138L105.871 75.8476L105.863 75.8394L105.847 75.8311L105.817 75.8063L105.677 75.6989L105.6 75.641L103.508 74.0626L103.19 73.8229L102.942 73.6411L102.655 73.4263L102.648 73.4263L102.555 73.3602L102.547 73.3602L102.284 73.1618L102.276 73.1618", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M102.299 73.1618L102.299 73.1866L102.299 73.5668L102.299 73.575L102.299 73.7155L102.299 73.7238L102.299 73.9552L102.299 75.7154L102.299 75.7402L102.299 76.3518L102.299 76.5253L102.299 76.8972L102.299 77.55L102.299 77.5748L102.299 78.0955L102.299 78.1203", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M110.512 80.4755L110.512 78.1616L110.76 78.3434L112.356 79.5499L112.356 81.5002L112.356 81.8721", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M109.915 76.517L109.915 76.5418L109.915 76.955L109.915 77.3517L109.915 77.3682L109.915 78.7566L109.915 79.7069L109.915 81.4506L109.915 81.4754", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M112.356 81.8556L110.52 80.4672L110.768 80.2854", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M110.759 78.3351L110.759 80.2854L112.355 81.492", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M101.114 73.3766L101.114 73.0543L101.114 71.0627L101.362 71.2445L102.206 71.8808", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M98.7041 68.0959L98.7041 68.724L98.7041 71.2445L98.7041 71.2611L98.7041 71.3107L98.7041 71.3354L98.7041 71.4594L98.7041 71.4842L98.7041 73.013", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M101.354 73.1949L102.067 73.732L102.075 73.732L102.167 73.7982L102.175 73.7982L102.206 73.8229", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M101.354 71.2445L101.354 73.1948L101.323 73.2196L101.114 73.3767L101.827 73.9138L101.834 73.9138L101.927 73.9799L101.935 73.9799L102.214 74.1865", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M96.7593 73.9469L96.7593 73.9221L96.7593 72.9552L96.7593 72.9304L96.7593 72.8065L96.7593 72.7817L96.7593 72.1784L96.7593 69.7736L96.7593 69.0133L96.7593 68.9885", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M89.8179 63.749L89.8179 63.7738L89.8179 64.5341L89.8179 66.5919L89.8179 66.6084L89.8179 66.9307L89.8179 68.1207L89.8179 68.1455L89.8179 68.6661L89.8179 68.6909", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M89.8179 68.7157L90.9335 69.5586L92.7077 70.8974L92.7232 70.9139L92.8007 70.9718L92.8161 70.9883L95.9772 73.3684L95.9926 73.3849L96.0701 73.4427L96.0856 73.4593L96.7441 73.9551", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M112.464 80.8556L112.464 81.7729L112.464 83.3844L112.464 83.4092L112.464 84.029L112.464 84.2025L112.464 84.2604L112.464 85.219L112.464 85.2438L112.464 85.7644L112.464 85.7892", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M112.379 85.6323L112.472 85.7976L112.48 85.7976L112.612 85.8967L113.696 86.7149L115.587 88.1446L116.997 89.2106L117.547 89.6238L117.81 89.8222L120.235 91.6485", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M108.706 77.4343L108.706 77.4591L108.706 80.6242L108.706 81.4176L108.706 82.368L108.706 82.3927", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M102.299 78.1285L102.392 78.1946L102.531 78.302L102.562 78.3268L102.578 78.3351L102.586 78.3434L102.678 78.4095L102.686 78.4177L102.702 78.4343L102.965 78.6326L103.213 78.8144L103.531 79.0541L105.623 80.6325L105.886 80.8308L105.979 80.9052L106.893 81.5911L106.901 81.5994L107.025 81.6986L107.11 81.7647L107.18 81.8143L107.97 82.4093L108.195 82.4754L108.489 82.4754L108.714 82.401L109.357 81.9134L109.922 81.492", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M109.915 76.517L109.621 76.7401L109.45 76.8641L109.357 76.9385L109.35 76.9467L108.699 77.4343", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M97.4961 69.005L97.4961 70.3272L97.4961 72.1701L97.4961 72.2197L97.4961 72.2445L97.4961 72.3684L97.4961 72.3932L97.4961 73.9221L97.4961 73.9469", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M102.207 72.9965L102.207 73.0221", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M102.207 73.0213L102.207 73.6329L102.207 73.6411L102.207 73.7816L102.207 73.7899L102.207 73.8395L102.207 73.889L102.207 74.2113L102.207 75.6493L102.207 75.6741L102.207 76.1865L102.207 76.4592L102.207 76.831L102.207 77.9384L102.207 77.9632", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M108.187 77.5335L108.187 80.6986L108.187 81.0292L108.187 82.4423L108.187 82.4671", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M108.482 82.4671L108.482 82.4423L108.482 81.2523L108.482 80.6986L108.482 77.5335", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M120.738 86.7479L120.443 86.7479", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M120.739 91.7146L120.739 91.6898L120.739 89.9461L120.739 87.7065L120.739 86.781", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M112.379 80.6656L112.379 81.5085L112.379 81.8473L112.379 83.3183L112.379 83.3431L112.379 83.8637L112.379 84.1365L112.379 84.1943L112.379 84.467L112.379 85.6075", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M120.443 86.7727L120.443 87.4751L120.443 89.9378L120.443 91.6815L120.443 91.7063", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M120.219 91.6485L120.444 91.7146L120.738 91.7146", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M89.7241 63.5837L89.7241 64.468L89.7241 66.5257L89.7241 66.5423L89.7241 66.7654L89.7241 68.5091L89.7241 68.5339", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M96.9766 69.0546L96.9766 69.0794L96.9766 69.9388L96.9766 72.2445L96.9766 72.6081L96.9766 72.6329L96.9766 72.7569L96.9766 72.7817L96.9766 73.9882L96.9766 74.013", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M97.271 69.0463L96.9766 69.0463", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M97.271 73.9882L97.271 72.5585L97.271 72.5337L97.271 72.4097L97.271 72.3849L97.271 72.2444L97.271 70.1619L97.271 69.0793", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M102.207 77.955L102.3 78.1214", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M89.7241 68.5422L89.8177 68.7086", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M89.8177 63.7501L89.7241 63.5837", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M108.708 77.4343L108.482 77.5092", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M107.963 87.3429L107.963 87.3181L107.963 85.8884L107.963 85.8389L107.963 85.5744L107.963 85.5L107.963 82.401", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M110.512 85.4091L110.512 83.0952L110.76 83.277L112.356 84.4836L112.356 86.4339L112.356 86.8058", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M109.915 81.4589L109.915 81.4837L109.915 82.3349L109.915 83.7233L109.915 84.6489L109.915 86.3926L109.915 86.4174", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M112.356 86.7975L110.52 85.4092L110.768 85.2273", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M110.759 83.277L110.759 85.2273L112.355 86.4339", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M101.114 78.3186L101.114 78.0294L101.114 76.0047L101.362 76.1865L102.206 76.8228", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M98.7041 73.0048L98.7041 73.0296L98.7041 76.1947L98.7041 76.203L98.7041 76.2608L98.7041 76.2691L98.7041 76.4096L98.7041 76.4178L98.7041 77.9384L98.7041 77.9632", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M101.354 78.1367L101.904 78.5582L102.09 78.6987L102.098 78.707L102.191 78.7731L102.199 78.7813L102.206 78.7896", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M101.354 76.1864L101.354 78.1367L101.3 78.1781L101.106 78.3268L101.657 78.7483L101.842 78.8888L101.85 78.897L101.943 78.9632L101.951 78.9714L101.966 78.9879L102.199 79.1615", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M96.7593 78.8888L96.7593 78.864L96.7593 77.8971L96.7593 77.8889L96.7593 77.7484L96.7593 77.7401L96.7593 77.5748L96.7593 77.2525L96.7593 77.112L96.7593 74.732L96.7593 73.9386", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M89.8179 68.7157L89.8179 69.509L89.8179 71.542L89.8179 71.5585L89.8179 71.8808L89.8179 72.0213L89.8179 72.3436L89.8179 73.0709L89.8179 73.0957L89.8179 73.6163L89.8179 73.6411", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M89.8179 73.6577L90.9335 74.5006L92.3125 75.5419L92.3978 75.608L92.7077 75.8394L92.7232 75.8559L92.8007 75.9137L92.8161 75.9303L94.1719 76.955L94.2572 77.0211L95.9926 78.3351L96.0004 78.3351L96.0934 78.4012L96.1011 78.4012L96.7597 78.8971L96.9844 78.9632L97.2788 78.9632", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M102.299 78.1285L102.299 78.2607L102.299 78.5334L102.299 78.5417L102.299 78.6739L102.299 78.6822L102.299 78.707L102.299 78.9053L102.299 80.6408L102.299 80.6656L102.299 81.2771L102.299 81.4258L102.299 81.4506L102.299 81.7316L102.299 81.8225L102.299 82.4754L102.299 82.5002L102.299 82.9464L102.299 83.0208L102.299 83.0456", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M102.207 82.8968L102.261 82.996L102.3 83.0704L102.307 83.0704L102.315 83.0786L102.602 83.2935L102.695 83.3679L102.95 83.5662L103.198 83.748L103.516 83.9877L104.097 84.4257L104.182 84.4918L105.755 85.6736L105.894 85.781L105.902 85.781L105.925 85.7975L105.933 85.8058L105.995 85.8554L106.057 85.905L106.886 86.533L106.894 86.5413L107.971 87.3512L108.195 87.4173L108.49 87.4173L108.714 87.3429L109.311 86.8966L109.342 86.8718L109.396 86.8305L109.567 86.7066L109.923 86.4339", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M112.464 85.7976L112.464 86.7149L112.464 88.3264L112.464 88.3512L112.464 88.8883L112.464 88.9627L112.464 89.1362L112.464 89.2271L112.464 89.2767L112.464 90.161L112.464 90.1858L112.464 90.7064L112.464 90.7312", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M112.379 90.5659L112.472 90.7312L112.48 90.7312L112.612 90.8304L113.696 91.6485L117.175 94.2765L117.361 94.417L119.019 95.6648L119.205 95.8053L120.235 96.5821", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M108.706 82.401L108.706 85.5662L108.706 86.0537L108.706 86.3926L108.706 86.4421L108.706 87.3099L108.706 87.3347", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M109.914 81.4589L109.333 81.8969L108.706 82.368", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M97.4961 73.9469L97.4961 75.3022L97.4961 77.1203L97.4961 77.1947L97.4961 77.2029L97.4961 77.3434L97.4961 77.3517L97.4961 77.831L97.4961 78.1533L97.4961 78.8723L97.4961 78.8971", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M102.206 75.641L100.974 74.7154L100.966 74.7154L100.873 74.6493L100.866 74.6493L98.6964 73.013L97.4878 73.9221", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M102.207 77.9302L102.207 78.3268L102.207 78.5334L102.207 78.5748L102.207 78.5995L102.207 78.6078L102.207 78.74L102.207 78.7483L102.207 78.7566L102.207 78.7731L102.207 78.8309L102.207 79.1202L102.207 80.5581L102.207 80.5829L102.207 81.0953L102.207 81.3432L102.207 81.368L102.207 81.5911L102.207 81.649L102.207 81.7399L102.207 82.8473", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M108.187 82.4671L108.187 85.6322L108.187 85.657L108.187 85.9959L108.187 86.0455L108.187 87.376L108.187 87.4008", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M108.482 87.409L108.482 87.3843L108.482 86.2769L108.482 86.2273L108.482 85.8885L108.482 85.6405L108.482 82.4754L108.482 82.4506", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M120.738 91.6898L120.443 91.6898", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M120.739 96.6565L120.739 96.6317L120.739 95.5244L120.739 95.136L120.739 94.888L120.739 92.6733L120.739 91.7146", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M112.379 85.5993L112.379 86.4422L112.379 86.781L112.379 88.252L112.379 88.2768L112.379 88.7975L112.379 88.8222L112.379 89.0702L112.379 89.0784L112.379 89.1611L112.379 89.2107L112.379 89.409L112.379 90.5494L112.379 90.5742", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M120.443 91.7146L120.443 92.4501L120.443 94.888L120.443 94.9128L120.443 95.3012L120.443 96.6317L120.443 96.6565", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M120.443 96.6565L120.738 96.6565", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M89.7241 68.5174L89.7241 69.4347L89.7241 71.4676L89.7241 71.4842L89.7241 71.7073L89.7241 71.947L89.7241 72.1949L89.7241 72.261L89.7241 73.4676", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M96.9766 74.013L96.9766 74.9055L96.9766 77.1864L96.9766 77.4261L96.9766 77.5748L96.9766 77.5831L96.9766 77.7236L96.9766 77.7319L96.9766 77.7484L96.9766 78.9301L96.9766 78.9549", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M97.271 78.955L97.271 78.9302L97.271 77.9715L97.271 77.6492L97.271 77.5087L97.271 77.5005L97.271 77.36L97.271 77.3517L97.271 77.1782L97.271 75.1287L97.271 74.013L97.271 73.9882", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M102.3 78.1048L102.207 77.9384", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M112.465 85.7739L112.371 85.6075", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M89.7241 73.4841L89.8177 73.6505", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M108.708 82.3763L108.482 82.4512", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M97.4972 73.9221L97.271 73.997", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M107.963 92.2849L107.963 92.2601L107.963 90.8552L107.963 90.5163L107.963 87.3512", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M107.962 87.3181L106.885 86.5082L106.878 86.5L106.064 85.8884L106.002 85.8388L105.94 85.7893L105.932 85.781L105.909 85.7645L105.901 85.7645L105.762 85.657L104.174 84.4587L104.112 84.4092L103.515 83.9546L103.198 83.715L102.95 83.5332L102.709 83.3514L102.616 83.277L102.314 83.0539L102.307 83.0456L102.299 83.0456", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M110.512 90.3511L110.512 88.0371L110.76 88.219L112.356 89.4255L112.356 91.3758L112.356 91.7477", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M109.915 86.4008L109.915 86.4256L109.915 86.9628L109.915 87.3016L109.915 87.3512L109.915 88.7395L109.915 89.5825L109.915 91.3262L109.915 91.351", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M112.356 91.7394L110.52 90.351L110.768 90.1692", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M109.915 91.3675L111.503 92.5658L111.558 92.6071L112.379 93.2269", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M110.759 88.2189L110.759 90.1692L112.355 91.3758", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M101.114 83.2605L101.114 80.9465L101.362 81.1283L102.206 81.7647", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M98.7041 77.9715L98.7041 78.7318L98.7041 79.0541L98.7041 80.9713L98.7041 81.1449L98.7041 81.2523L98.7041 81.2606L98.7041 81.3928L98.7041 81.4011L98.7041 81.4259L98.7041 82.5498L98.7041 82.8804", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M101.354 83.0787L101.92 83.5002L102.121 83.6489L102.206 83.715", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M101.354 81.1284L101.354 83.0787L101.106 83.2605L101.866 83.839L101.912 83.872L101.966 83.9134L102.199 84.0869", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M96.7593 83.8307L96.7593 83.8059L96.7593 82.9051L96.7593 82.8803L96.7593 82.8721L96.7593 82.7399L96.7593 82.7316L96.7593 82.558L96.7593 82.4506L96.7593 82.0622L96.7593 78.8971", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M89.8179 73.6577L89.8179 76.484L89.8179 76.5005L89.8179 76.8228L89.8179 77.3104L89.8179 78.0128L89.8179 78.0376L89.8179 78.5582L89.8179 78.583", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M89.7241 78.426L89.8171 78.5913L89.8248 78.5913L90.9327 79.426L92.7224 80.7813L92.7302 80.7813L92.8231 80.8474L92.8309 80.8474L95.8447 83.12L95.9841 83.2274L96.0152 83.2522L96.0306 83.2605L96.0384 83.2687L96.1314 83.3349L96.1391 83.3431L96.1546 83.3597L96.7666 83.8224L96.9913 83.8886", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M102.299 83.0621L102.299 83.5167L102.299 83.6571L102.299 85.5827L102.299 85.6075L102.299 85.8389L102.299 86.219L102.299 86.3926L102.299 86.6983L102.299 86.7562L102.299 87.409L102.299 87.4338L102.299 87.9545L102.299 87.9793", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M102.207 87.8388L102.3 88.004L102.307 88.004L102.478 88.1363L102.617 88.2437L102.625 88.2437L102.648 88.2602L102.656 88.2685L102.718 88.3181L102.78 88.3677L102.958 88.4999L103.206 88.6817L103.524 88.9214L105.949 90.756L106.011 90.8056L107.971 92.2848L108.195 92.3509", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M112.464 90.7395L112.464 91.6568L112.464 93.2683L112.464 93.2931L112.464 93.9129L112.464 94.0864L112.464 94.2517L112.464 95.1112L112.464 95.1359L112.464 95.6566L112.464 95.6814", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M112.379 95.5078L112.472 95.6731L112.48 95.6731L112.612 95.7723L113.696 96.5904L120.235 101.524L120.46 101.59", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M108.706 87.3347L108.706 90.4998L108.706 91.4006L108.706 92.2435L108.706 92.2683", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M108.706 92.2766L109.287 91.8386L109.868 91.4006L109.922 91.3593", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M97.4961 78.8805L97.4961 79.3929L97.4961 81.8804L97.4961 82.0539L97.4961 82.1613L97.4961 82.1696L97.4961 82.2275L97.4961 82.3018L97.4961 82.3101L97.4961 82.3349L97.4961 83.0952L97.4961 83.7894L97.4961 83.8141", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M102.207 82.8721L102.207 83.0374L102.207 83.4671L102.207 83.5911L102.207 83.715L102.207 83.7315L102.207 84.0786L102.207 85.343L102.207 85.5166L102.207 85.5414L102.207 85.7728L102.207 86.0537L102.207 86.3265L102.207 86.6322L102.207 86.6901L102.207 87.8223", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M108.187 87.409L108.187 90.5742L108.187 91.0122L108.187 92.3179L108.187 92.3427", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M108.481 87.3842L108.187 87.3842", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M108.482 92.3262L108.482 91.2436L108.482 90.5825L108.482 87.4173", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M120.739 101.59L120.739 101.565L120.739 100.483L120.739 99.8217L120.739 96.6565", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M112.379 90.5412L112.379 91.3841L112.379 91.7229L112.379 93.1939L112.379 93.2187L112.379 93.7393L112.379 94.0121L112.379 94.1773L112.379 94.3509L112.379 95.4913L112.379 95.5161", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M120.443 96.6565L120.443 99.8217L120.443 100.26L120.443 101.565L120.443 101.59", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M120.443 101.59L120.738 101.59L120.869 101.549", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M89.7241 73.4593L89.7241 76.4096L89.7241 76.4261L89.7241 76.6492L89.7241 77.236L89.7241 78.4177", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M96.9766 78.9549L96.9766 82.12L96.9766 82.2688L96.9766 82.5415L96.9766 82.5497L96.9766 82.682L96.9766 82.6902L96.9766 82.6985L96.9766 82.715L96.9766 83.8555L96.9766 83.8803", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M97.271 83.872L97.271 82.9382L97.271 82.5167L97.271 82.4919L97.271 82.4837L97.271 82.3514L97.271 82.3432L97.271 82.1366L97.271 82.0705L97.271 82.0622L97.271 79.5747L97.271 78.9632", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M97.4972 78.8557L97.271 78.9306", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M107.963 97.2185L107.963 95.4417L107.963 92.2766", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M110.512 95.2929L110.512 92.979L110.76 93.1608L112.356 94.3674L112.356 96.3177L112.356 96.6896", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M109.915 91.3428L109.915 91.3676L109.915 91.4502L109.915 92.3262L109.915 94.541L109.915 96.3095", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M112.356 96.6813L110.512 95.2929L110.76 95.1111", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M102.207 92.7807L102.3 92.946L102.307 92.946L102.671 93.2187L102.733 93.2683L102.958 93.4335L103.206 93.6154L103.524 93.855L107.978 97.2185L108.203 97.2846L108.498 97.2846L108.722 97.2102L109.931 96.3012L112.387 98.1523", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M110.759 93.1608L110.759 95.1112L112.355 96.3177", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M101.114 88.2024L101.114 85.8885L101.362 86.0703L102.206 86.7066", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M98.7041 82.8886L98.7041 82.9134L98.7041 83.1448L98.7041 84.0208L98.7041 86.0868L98.7041 86.2273L98.7041 86.3678L98.7041 87.847", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M89.7241 83.3679L89.8171 83.5332L89.8248 83.5332L90.9327 84.3679L92.5675 85.5992L92.7069 85.7067L92.7379 85.7315L92.7534 85.7397L92.7612 85.748L92.8541 85.8141L92.8619 85.8224L92.8774 85.8389L96.0539 88.2355L96.1468 88.3098L96.7589 88.7726L96.9836 88.8388L97.278 88.8388L97.5026 88.7644L98.7113 87.8553L100.788 89.4172L100.927 89.5247L100.935 89.5247L100.958 89.5412L100.966 89.5495L101.028 89.599L101.09 89.6486L102.213 90.4916", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M101.354 88.0123L101.989 88.4916L102.129 88.5991L102.16 88.6239L102.191 88.6486", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M101.354 86.062L101.354 88.0123L101.106 88.1941L101.742 88.6734L101.881 88.7808L101.912 88.8056L101.974 88.8552L102.036 88.9048L102.183 89.0205", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M112.464 95.6483L112.464 95.6731L112.464 96.5904L112.464 98.2267L112.464 98.2349L112.464 98.8465L112.464 99.0531L112.464 100.07L112.464 100.078L112.464 100.623", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M96.7593 88.7643L96.7593 87.8388L96.7593 87.6983L96.7593 86.9958L96.7593 83.8307", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M89.8179 78.5665L89.8179 78.5913L89.8179 81.4424L89.8179 81.4506L89.8179 81.7647L89.8179 82.9878L89.8179 82.996L89.8179 83.5415", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M102.299 88.0041L102.299 88.2685L102.299 88.4834L102.299 88.533L102.299 88.6321L102.299 88.7313L102.299 90.5576L102.299 90.5659L102.299 91.1692L102.299 91.3758L102.299 91.7477L102.299 92.3923L102.299 92.4005L102.299 92.946", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M112.379 100.45L112.472 100.615L112.48 100.615L112.612 100.714L113.696 101.532L120.235 106.466L120.46 106.532L120.755 106.532L120.886 106.491", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M108.706 92.2766L108.706 95.4417L108.706 97.2102", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M109.914 91.3428L109.844 91.3924L109.263 91.8303L108.706 92.2518", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M97.4961 83.8225L97.4961 86.9876L97.4961 87.1281L97.4961 87.2686L97.4961 88.7479", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M102.206 85.5248L102.089 85.4422L101.919 85.31L101.02 84.6323L100.927 84.5579L99.192 83.2522L99.0215 83.12L98.7116 82.8886L98.5411 83.0208L97.9601 83.4588L97.5029 83.8059", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M102.207 87.814L102.207 88.3429L102.207 88.5495L102.207 88.5577L102.207 88.5908L102.207 88.6073L102.207 88.6569L102.207 88.7065L102.207 88.8057L102.207 89.0288L102.207 90.4915L102.207 90.4998L102.207 91.0039L102.207 91.3097L102.207 91.6816L102.207 92.7807", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M108.187 92.3509L108.187 95.5161L108.187 97.2846", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M108.482 97.2846L108.482 95.5161L108.482 92.351L108.482 92.3262", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M120.738 101.565L120.443 101.565", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M120.738 106.532L120.738 104.764L120.738 101.598L120.738 101.574", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M112.379 95.483L112.379 96.3259L112.379 96.6648L112.379 98.1605L112.379 98.1688L112.379 98.6812L112.379 98.987L112.379 99.3258L112.379 100.458", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M120.443 101.59L120.443 104.755L120.443 106.524", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M89.7241 78.4012L89.7241 81.3763L89.7241 81.3846L89.7241 81.5994L89.7241 83.3679", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M96.9766 83.8968L96.9766 87.062L96.9766 87.5248L96.9766 87.6652L96.9766 88.8222", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M97.271 88.8305L97.271 87.4504L97.271 87.3099L97.271 87.0702L97.271 83.9051L97.271 83.8803", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M97.271 83.872L96.9766 83.872", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M102.3 87.9804L102.207 87.814", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M120.445 101.566L120.219 101.499", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M89.8177 78.5676L89.7241 78.4012", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M108.708 92.2518L108.482 92.3267", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M97.4972 83.7976L97.271 83.8725", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M107.963 102.193L107.963 100.425L107.963 100.218L107.963 97.235", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M112.379 98.1689L109.923 96.3177L108.714 97.2268L108.49 97.3011L108.195 97.3011L107.971 97.235L103.516 93.8715L103.198 93.6319L102.95 93.4501L102.726 93.2765L102.664 93.2269L102.307 92.9542L102.3 92.9542L102.207 92.7889L102.207 92.7807", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M102.299 92.9543L102.299 93.4997L102.299 93.5989L102.299 95.5326L102.299 95.5409L102.299 95.9376L102.299 96.1442L102.299 96.3591L102.299 96.7309L102.299 97.3755L102.299 97.3838L102.299 97.921", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M110.512 100.268L110.512 97.954L110.76 98.1358L112.356 99.3423L112.356 101.293L112.356 101.665", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M109.915 96.3094L109.915 99.4993L109.915 101.268", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M112.356 101.648L110.52 100.26L110.768 100.078", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M110.759 98.1275L110.759 100.078L112.355 101.284", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M101.114 93.1691L101.114 90.8551L101.362 91.0369L102.206 91.6733", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M98.7041 87.8553L98.7041 90.9708L98.7041 91.0452L98.7041 91.1857L98.7041 91.2353L98.7041 91.3345L98.7041 91.4336L98.7041 92.822", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M101.354 92.9873L102.167 93.5988L102.206 93.6236", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M101.354 91.037L101.354 92.9873L101.106 93.1691L101.92 93.7806L101.982 93.8302L102.199 93.9955", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M120.871 106.499L120.739 106.54L120.444 106.54L120.22 106.474L113.681 101.541L112.596 100.722L112.464 100.623L112.457 100.623L112.364 100.458L112.364 100.45", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M112.464 100.623L112.464 101.565L112.464 103.202L112.464 103.21L112.464 103.607L112.464 103.821L112.464 104.028L112.464 105.036L112.464 105.045L112.464 105.582", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M96.7593 93.7393L96.7593 92.9046L96.7593 92.8054L96.7593 92.7063L96.7593 92.6567L96.7593 92.4418L96.7593 91.9625L96.7593 91.7476L96.7593 88.7643", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M102.205 90.4998L101.082 89.6486L101.02 89.599L100.958 89.5495L100.95 89.5412L100.927 89.5247L100.919 89.5247L100.78 89.4172L98.7113 87.8553L97.5026 88.7644L97.278 88.8388L96.9836 88.8388L96.7589 88.7726L96.1391 88.3098L96.0461 88.2355L92.8696 85.8389L92.8541 85.8224L92.8464 85.8141L92.7534 85.748L92.7457 85.7397L92.7302 85.7315L92.6991 85.7067L92.5597 85.5992L90.9327 84.3762L89.8248 83.5415L89.8171 83.5415L89.7241 83.3762L89.7241 83.3679", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M89.8179 83.5415L89.8179 86.4173L89.8179 86.4256L89.8179 86.6074L89.8179 86.7314L89.8179 87.9545L89.8179 87.9627L89.8179 88.4999", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M89.7241 88.3346L89.8171 88.4999L89.8248 88.4999L90.9327 89.3345L91.0334 89.4089", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M102.207 97.7474L102.3 97.9127L102.307 97.9127L102.958 98.4003L103.206 98.5821L103.524 98.8217", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M112.379 105.425L112.472 105.59L112.48 105.59L112.612 105.689L113.696 106.507", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M108.706 97.2268L108.706 100.417L108.706 100.772L108.706 102.193", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M103.508 98.8382L107.963 102.193L108.187 102.26L108.482 102.26L108.706 102.185L109.652 101.474L109.822 101.351", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M97.4961 88.7726L97.4961 91.8882L97.4961 91.9626L97.4961 92.1031L97.4961 92.1526L97.4961 92.2518L97.4961 92.3097L97.4961 92.3427L97.4961 93.7311", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M91.0342 89.4255L92.7542 90.723L92.8471 90.7973L95.8997 93.103L96.0391 93.2105L96.0469 93.2105L96.0701 93.227L96.0779 93.2352L96.1399 93.2848L96.2018 93.3344L96.7519 93.7476L96.9766 93.8137L97.271 93.8137L97.4957 93.7393L98.4409 93.0286L98.6114 92.9047", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M102.207 92.789L102.207 93.5741L102.207 93.6319L102.207 93.6732L102.207 93.9955L102.207 95.4583L102.207 95.4665L102.207 95.607L102.207 95.855L102.207 95.9624L102.207 96.2764L102.207 96.6483L102.207 97.7392", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M108.187 97.3011L108.187 100.384L108.187 100.491L108.187 102.26", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M108.482 102.26L108.482 100.599L108.482 100.483L108.482 97.2929", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M120.443 106.54L120.443 109.623L120.443 109.73L120.443 111.499", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M120.738 111.507L120.738 109.846L120.738 109.739L120.738 106.549", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M112.379 100.458L112.379 101.301L112.379 101.64L112.379 103.136L112.379 103.144L112.379 103.284L112.379 103.532L112.379 103.648L112.379 103.954L112.379 104.293L112.379 105.416", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M113.681 106.507L120.22 111.441L120.444 111.507L120.739 111.507L120.87 111.466", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M89.7241 83.3762L89.7241 86.2934L89.7241 86.3512L89.7241 86.3595L89.7241 86.5413L89.7241 86.5661L89.7241 88.3346", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M96.9766 88.847L96.9766 91.9295L96.9766 92.0452L96.9766 92.2848L96.9766 92.4997L96.9766 92.5493L96.9766 92.6485L96.9766 92.7476L96.9766 93.8137", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M97.2705 93.8054L97.2705 92.5162L97.2705 92.417L97.2705 92.3179L97.2705 92.2683L97.2705 92.1443L97.2705 92.0534L97.2705 92.0286L97.2705 88.8304", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M110.512 102.921L110.76 103.102L112.356 104.309L112.356 106.259L112.356 106.631", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M110.512 105.243L110.512 102.929", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M112.356 106.631L110.52 105.243L110.768 105.061", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M109.915 106.259L112.371 108.111", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M110.759 103.111L110.759 105.061L112.355 106.268", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M101.114 95.8301L101.362 96.0119L102.206 96.6483", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M101.114 98.1523L101.114 95.8384", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M98.7041 97.8052L102.198 100.441", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M101.354 97.9622L102.199 98.5986", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M101.354 96.0202L101.354 97.9705L101.106 98.1523L102.199 98.9787", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M102.299 97.9292L102.299 100.508L102.299 101.119L102.299 101.326L102.299 101.698L102.299 102.35L102.299 102.896", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M107.963 107.168L107.963 105.392L107.963 102.202", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M109.651 101.483L108.698 102.202L108.473 102.276L108.179 102.276L107.954 102.21L103.5 98.8548", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M120.87 111.474L120.739 111.515L120.444 111.515L120.22 111.449L113.681 106.516", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M112.464 105.598L112.464 106.54L112.464 108.177L112.464 108.788L112.464 108.987L112.464 110.003L112.464 110.548", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M98.4486 93.0286L97.4957 93.7476L97.271 93.822L96.9766 93.822L96.7519 93.7559L96.1941 93.3344L96.1321 93.2848L96.0701 93.2352L96.0624 93.227L96.0391 93.2104L96.0314 93.2104L95.8919 93.103L92.8394 90.7973L92.7464 90.723L91.0342 89.4338", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M89.8179 88.5165L89.8179 91.3924L89.8179 91.7064L89.8179 92.9295L89.8179 93.4749", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M96.7593 98.7143L96.7593 97.7722L96.7593 97.673L96.7593 96.9375L96.7593 93.7393", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M89.7241 93.3179L89.8171 93.4831L89.8248 93.4831L90.9327 94.3178L91.0334 94.3922", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M102.207 102.731L102.3 102.896L102.307 102.896L102.958 103.384L103.206 103.565L103.524 103.805L107.978 107.168L108.203 107.235L108.498 107.235L108.722 107.16L109.931 106.251L109.931 104.474L109.931 101.673", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M112.379 110.4L112.472 110.565L112.48 110.565L112.612 110.664L113.696 111.482L120.235 116.416L120.46 116.482L120.755 116.482L120.886 116.441", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M108.706 102.202L108.706 105.392L108.706 107.16", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M98.7041 97.8052L98.7041 96.3094L98.7041 96.2103L98.7041 96.0284L98.7041 93.2269", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M97.4961 93.7476L97.4961 96.9458L97.4961 97.1276L97.4961 97.2267L97.4961 98.7225", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M91.0342 94.4004L92.607 95.5822L92.7464 95.6896L92.7542 95.6896L92.7774 95.7061L92.7852 95.7144L92.8471 95.764L92.9091 95.8136L96.0701 98.2019L96.1321 98.2515L96.7519 98.7225L96.9766 98.7886L97.271 98.7886L97.4957 98.7143L98.7043 97.8052L98.7043 96.3094L98.7043 96.2103L98.7043 93.2269", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M103.508 98.8465L103.19 98.6068L102.942 98.425L102.292 97.9375L102.284 97.9375L102.191 97.7722L102.191 97.7639", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M102.207 97.7639L102.207 98.6068L102.207 98.9787L102.207 100.441L102.207 100.954L102.207 101.26L102.207 101.631L102.207 102.731", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M108.482 107.243L108.482 105.474L108.482 102.284", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M108.187 102.276L108.187 105.466L108.187 107.234", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M120.738 116.482L120.738 114.713L120.738 111.524", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M120.443 111.515L120.443 114.713L120.443 116.482", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M113.681 106.516L112.596 105.697L112.464 105.598L112.457 105.598L112.364 105.433L112.364 105.425", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M112.379 105.433L112.379 106.276L112.379 106.615L112.379 108.111L112.379 108.623L112.379 108.92L112.379 109.259L112.379 110.391", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M89.7241 88.3512L89.7241 91.3262L89.7241 91.5411L89.7241 93.3096", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M97.2705 98.7887L97.2705 97.392L97.2705 97.2929L97.2705 97.0119L97.2705 93.8137", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M96.9766 93.822L96.9766 97.0202L96.9766 97.516L96.9766 97.6152L96.9766 98.7887", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M91.0334 89.4338L90.9327 89.3594L89.8248 88.5247L89.8171 88.5247L89.7241 88.3594L89.7241 88.3512", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M110.512 107.896L110.76 108.077L112.356 109.284L112.356 111.234L112.356 111.606", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M110.512 110.21L110.512 107.896", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M109.915 106.259L109.915 111.185", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M112.356 111.598L110.52 110.21L110.768 110.028", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M110.759 108.077L110.759 110.028L112.355 111.234", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M101.114 100.805L101.362 100.987L102.206 101.623", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M101.114 103.119L101.114 100.805", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M98.7041 97.8052L98.7041 102.772L98.7041 100.995L98.7041 97.8052Z", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M101.354 102.937L102.199 103.574", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M101.354 100.987L101.354 102.937L101.106 103.119L102.198 103.945", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M102.299 102.896L102.299 105.474L102.299 105.524L102.299 105.937L102.299 106.086L102.299 106.334L102.299 106.706L102.299 107.309L102.299 107.681L102.299 107.854", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M107.963 112.143L107.963 110.375L107.963 110.226L107.963 109.813L107.963 109.722L107.963 107.177", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M112.378 108.111L109.923 106.259L108.714 107.168L108.489 107.243L108.195 107.243L107.97 107.177L103.515 103.822L103.198 103.582L102.95 103.4L102.299 102.912L102.291 102.912L102.198 102.747", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M120.871 116.441L120.739 116.482L120.444 116.482L120.22 116.416L113.681 111.482L112.596 110.664L112.464 110.565L112.457 110.565L112.364 110.4", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M112.464 110.573L112.464 111.515L112.464 113.152L112.464 113.201L112.464 113.614L112.464 113.763L112.464 114.011L112.464 114.986L112.464 115.54", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M102.207 100.442L98.7126 97.8053L97.5039 98.7143L97.2793 98.7887L96.9849 98.7887L96.7602 98.7226L96.1326 98.2515L96.0706 98.2019L92.9096 95.8136L92.8476 95.764L92.7857 95.7145L92.7779 95.7062L92.7547 95.6897L92.7469 95.6897L92.6075 95.5822L91.0425 94.4005", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M89.8179 93.4831L89.8179 96.359L89.8179 96.6069L89.8179 96.673L89.8179 97.8961L89.8179 98.4498", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M96.7593 103.689L96.7593 102.169L96.7593 101.921L96.7593 101.772L96.7593 101.359L96.7593 98.7308", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M89.7241 98.2845L89.8171 98.4498L90.9327 99.2928L91.0334 99.3671L92.7766 100.681L92.8387 100.731L94.8607 102.26L95.1164 102.45L96.7046 103.648L96.7589 103.689L96.9603 103.755L96.9836 103.764L97.278 103.764L97.5026 103.689L98.4014 103.012L98.5718 102.888", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M102.207 107.697L102.276 107.83L102.3 107.863L102.935 108.342L102.958 108.358L103.113 108.474L103.206 108.54L103.237 108.565L103.686 108.904L103.81 108.995L105.701 110.424L105.949 110.606L107.545 111.813L107.793 111.995L107.978 112.135L108.203 112.201L108.265 112.201L108.498 112.201L108.722 112.127L109.21 111.763L109.629 111.449L109.799 111.325", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M112.379 115.366L112.472 115.532L112.604 115.631L116.075 118.251L116.323 118.432L117.919 119.639L118.167 119.821L120.228 121.374L120.452 121.44L120.747 121.44L120.878 121.399", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M108.706 107.168L108.706 110.276L108.706 110.367L108.706 110.78L108.706 112.135", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M97.4961 98.7143L97.4961 101.904L97.4961 102.317L97.4961 103.673", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M102.207 102.731L102.207 103.574L102.207 103.945L102.207 105.408L102.207 105.458L102.207 105.623L102.207 105.871L102.207 105.921L102.207 106.268L102.207 106.64L102.207 107.697", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M108.482 112.21L108.482 110.615L108.482 110.441L108.482 110.201L108.482 110.11L108.482 107.243", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M108.187 107.243L108.187 109.887L108.187 109.978L108.187 110.391L108.187 110.441L108.187 112.21", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M120.738 121.449L120.738 119.854L120.738 119.68L120.738 119.441L120.738 116.49", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M120.443 116.49L120.443 119.217L120.443 119.631L120.443 119.68L120.443 121.449", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M112.379 110.4L112.379 111.243L112.379 111.581L112.379 113.077L112.379 113.127L112.379 113.292L112.379 113.54L112.379 113.59L112.379 113.937L112.379 114.275L112.379 115.358", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M89.7241 93.3179L89.7241 96.2929L89.7241 96.5078L89.7241 96.5408L89.7241 98.2763", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M97.2705 103.755L97.2705 102.152L97.2705 101.979L97.2705 101.739L97.2705 98.7886", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M96.9766 98.7886L96.9766 101.516L96.9766 101.929L96.9766 101.979L96.9766 103.747", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M91.0334 94.4005L90.9327 94.3261L89.8248 93.4914L89.8171 93.4914L89.7241 93.3261", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M110.062 116.35L113.68 119.077L122.171 125.482L122.179 125.473", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M110.512 115.226L110.512 112.912L110.76 113.094L112.356 114.3L112.356 116.251L112.356 116.623", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M112.356 116.614L110.52 115.226L110.768 115.044", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M110.759 113.094L110.759 115.044L112.355 116.251", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M101.114 108.135L101.114 105.821L101.362 106.003L102.206 106.64", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M91.0962 102.045L98.7042 107.788L102.508 110.656", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M102.951 109.35L102.951 109.524L102.633 109.284", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M101.354 107.954L102.276 108.648", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M101.354 106.003L101.354 107.954L101.106 108.135L102.508 109.193", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M95.1167 103.243L96.7049 104.441", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M95.118 102.45L95.118 103.243L94.8623 103.417", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M94.8623 102.26L94.8623 103.425L96.6985 104.813L96.6985 104.441L96.6985 103.648", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M116.314 119.234L117.91 120.441", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M116.315 118.441L116.315 119.234L116.067 119.416", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M116.075 118.259L116.075 119.424L117.911 120.812L117.911 120.441L117.911 119.647", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M105.693 112.515L105.693 111.416", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M107.537 112.804L107.537 113.54L107.537 113.912L105.701 112.524L105.949 112.342", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M105.941 111.598L105.941 112.333L107.537 113.54", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M91.6079 17.2719L91.6234 17.2802L91.6311 17.2885L94.9083 19.7594L98.1778 22.2304L98.1933 22.2469L101.447 24.7013L101.463 24.7179L101.478 24.7261L101.517 24.7592L104.725 27.1805L104.74 27.1971L104.81 27.2467L105.592 27.8334L106.824 28.759L106.878 28.8003L107.173 29.0234L109.66 30.8994L110.055 31.1969L116.687 36.1966L116.702 36.2132L121.723 39.9981", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M121.993 39.7832L117.794 36.6181L117.531 36.4198L116.981 36.0066L116.973 35.9983L116.958 35.9818L115.571 34.9405L111.891 32.1638L111.496 31.8663L110.047 30.7754L109.652 30.4779L107.165 28.602L107.095 28.5524L107.056 28.5193L107.01 28.478L106.886 28.3788L106.878 28.3706L105.6 27.4037L105.088 27.0153L105.019 26.9657L105.003 26.9491L101.796 24.5278L101.757 24.4947L101.741 24.4865L101.726 24.4699L101.54 24.3294L98.4718 22.0155L98.4564 21.999L95.1869 19.528L91.9097 17.0571L91.9019 17.0488L91.8864 17.0405L91.6152 17.2471L91.6152 17.2637L91.6152 17.2802L91.6152 17.743", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M91.6079 17.7678L94.583 20.0073L97.8524 22.4783", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M125.86 19.6933L130.811 23.4287L130.818 23.4369L132.135 24.4286L137.241 28.2797", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M137.241 28.7755L137.241 28.6681L137.241 28.6516L137.241 28.3706L137.241 28.3375L137.241 28.2797L137.512 28.0731", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M137.512 28.5689L137.512 28.5359L137.512 28.0731L132.135 24.0154L132.066 23.9659L131.973 23.8915L131.089 23.2221L131.082 23.2138L130.873 23.0568L126.131 19.4785L125.86 19.6851L125.86 20.1809", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M105.204 23.8336L105.6 24.1311L105.801 24.2799L105.987 24.4203L106.684 24.9492L106.878 25.098L106.886 25.1063L107.01 25.2054L107.103 25.2715L107.172 25.3211L111.906 28.8912L114.873 26.6516L114.889 26.6351L115.563 26.1227L116.973 25.0567L117.167 24.9079L117.523 24.6352L117.787 24.4369L118.058 24.2385L118.654 23.7923L118.654 23.5196L117.794 22.8667L117.531 22.6684L116.981 22.2469L116.252 21.7015L116.237 21.6849L115.571 21.1808L111.953 18.4537L111.286 18.9578L111.271 18.9743L110.504 19.5528L110.109 19.8503L110.054 19.8916L109.659 20.1891L108.009 21.437L107.994 21.4535L107.172 22.0733L107.103 22.1229L107.01 22.189L106.886 22.2882L106.878 22.2965L106.491 22.5857L105.592 23.2634L105.197 23.5609L105.197 23.8336", stroke: "#1C6BCF", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M111.914 28.8931L111.914 28.6185", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M118.662 23.5361L118.066 23.9824L116.996 24.784L114.719 26.5029L114.703 26.5194L111.914 28.6185L107.18 25.0484L106.886 24.8253L106.87 24.817L106.173 24.2881L105.809 24.0154L105.608 23.8667L105.212 23.5692", stroke: "#1C6BCF", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M107.11 5.55352L115.609 11.9664L115.819 12.1234L115.826 12.1317L119.096 14.5944", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M119.096 15.0902L119.096 14.6853L119.096 14.5944L119.367 14.3878", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M119.367 14.8836L119.367 14.3878L117.802 13.206L117.538 13.0077L116.988 12.5945L116.105 11.9251L116.097 11.9169L115.888 11.7598L107.389 5.34692L107.118 5.55352L107.118 5.61137L107.118 5.9254L107.118 5.94193L107.118 6.04937", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M102.276 107.83L102.276 108.648L102.276 108.838L102.508 109.02L102.632 109.11L102.95 109.35L103.066 109.441L103.105 109.466L103.229 109.557L103.678 109.896L103.802 109.986L105.693 111.416L105.94 111.598L107.536 112.805L107.784 112.986L108.458 113.49L108.582 113.581L108.637 113.623L109.047 113.309L109.171 113.218L109.621 112.879L109.744 112.788L110.147 112.482", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M108.637 112.499L109.814 111.615", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M108.637 113.631L108.637 112.499L108.25 112.209", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M102.516 112.135L102.508 112.143L102.508 112.292L102.283 112.457L102.283 112.606L102.082 112.755L102.082 112.829L108.412 117.606L110.07 116.358L110.07 115.837L109.744 115.598", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M108.404 117.607L108.404 117.532", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M108.605 117.383L108.404 117.532L102.074 112.755", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M108.606 117.234L108.606 117.383L102.276 112.606", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M108.83 117.069L108.605 117.234L108.574 117.209L108.504 117.16L108.45 117.118L102.64 112.73L102.57 112.681L102.516 112.639L102.283 112.466", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M108.833 116.92L108.833 117.07L108.575 116.879", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M109.04 116.763L108.831 116.92L108.575 116.73", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M103.105 111.524L102.703 111.821L102.703 111.986L102.633 112.036", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M109.04 116.598L109.04 116.763L108.583 116.416", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M110.062 115.829L109.737 116.069L109.706 116.085L109.605 116.16L109.156 116.499L109.032 116.589L109.024 116.598L108.567 116.251", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M107.963 37.8412L107.963 36.2627L107.963 36.2545L107.963 36.0727L107.963 32.891", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M110.512 35.9157L110.512 33.6017L110.76 33.7835L112.356 34.9901L112.356 36.9404L112.356 37.3123", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M109.915 31.982L109.915 32.7671L109.915 32.7918L109.915 34.1554L109.915 35.1554L109.915 36.8495L109.915 36.9239", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M112.356 37.304L110.52 35.9157L110.768 35.7339", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M110.759 33.7835L110.759 35.7339L112.355 36.9404", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M101.114 28.8251L101.114 28.4615L101.114 26.5112L101.362 26.693L102.524 27.569", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M98.7041 24.6517L98.7041 26.6434L98.7041 26.7095L98.7041 26.7756L98.7041 26.8004L98.7041 26.8169L98.7041 26.8748L98.7041 28.4697L98.7041 28.478", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M101.354 28.6433L102.067 29.1805L102.082 29.197L102.152 29.2466L102.199 29.2879", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M101.354 26.693L101.354 28.6433L101.114 28.8251L101.827 29.3623L101.842 29.3788L101.912 29.4284L102.206 29.6515", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M96.7593 29.3871L96.7593 28.3458L96.7593 28.2879L96.7593 28.2714L96.7593 28.2466L96.7593 27.6268L96.7593 25.1724L96.7593 24.4452", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M132.066 22.3874L131.973 22.5538", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M132.137 22.1312L132.137 22.1395L132.121 22.2893", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M89.8179 19.2057L89.8179 19.933L89.8179 22.3874L89.8179 23.6022L89.8179 23.6105L89.8179 24.1559L89.8179 24.1642", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M102.299 28.6185L102.299 29.0069L102.299 29.0317L102.299 29.1309L102.299 29.3458L102.299 31.1721L102.299 31.1804L102.299 31.7919L102.299 31.9903L102.299 32.3621L102.299 33.015L102.299 33.0233L102.299 33.5687L102.299 33.577", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M112.464 36.2875L112.464 37.2131L112.464 38.8494L112.464 38.8577L112.464 39.4775L112.464 39.6593L112.464 39.6675L112.464 40.6923L112.464 40.7005L112.464 41.246L112.464 41.2542", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M112.379 41.0724L112.472 41.2377L112.48 41.2377L112.612 41.3369L113.696 42.155L115.587 43.5847L116.997 44.6508L117.547 45.064L117.81 45.2623", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M108.706 32.891L108.706 36.0727L108.706 36.8164L108.706 36.8247L108.706 37.8412L108.706 37.8494", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M108.482 37.9156L108.707 37.8412L109.381 37.3288L109.388 37.3288", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M97.4961 24.4203L97.4961 24.4369L97.4961 25.726L97.4961 27.6185L97.4961 27.6846L97.4961 27.7094L97.4961 27.726L97.4961 27.7838L97.4961 29.3788L97.4961 29.387", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M97.2705 29.4614L97.4952 29.387L98.7038 28.478", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M102.207 28.4532L102.207 29.073L102.207 29.0978L102.207 29.197L102.207 29.2713L102.207 29.635L102.207 31.0977L102.207 31.106L102.207 31.6183L102.207 31.9158L102.207 32.2877L102.207 33.3951", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M108.187 32.9654L108.187 36.1471L108.187 36.428L108.187 36.4363L108.187 37.9156", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M108.187 37.9156L108.481 37.9156", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M108.482 37.9073L108.482 36.6512L108.482 36.6429L108.482 36.1388L108.482 32.9571", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M120.739 47.1548L120.739 45.3863L120.739 43.1054L120.739 43.0971L120.739 42.2046", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M112.379 36.1223L112.379 36.9487L112.379 37.2875L112.379 38.7833L112.379 38.7916L112.379 39.3122L112.379 39.5932L112.379 39.6014L112.379 39.9403L112.379 41.0807L112.379 41.089", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M120.443 42.2046L120.443 42.874L120.443 42.8823L120.443 45.3863L120.443 47.1548", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M120.443 47.163L120.738 47.163", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M89.7241 19.0239L89.7241 19.8669L89.7241 22.2221L89.7241 23.9906", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M96.9766 24.5113L96.9766 25.3377L96.9766 27.6929L96.9766 28.0813L96.9766 28.1061L96.9766 28.1227L96.9766 28.1805L96.9766 29.4532", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M97.2705 29.4532L97.2705 27.9574L97.2705 27.8995L97.2705 27.883L97.2705 27.8582L97.2705 27.6929L97.2705 25.5608L97.2705 24.5113", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M107.963 37.8494L108.189 37.916", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M120.219 47.0887L120.445 47.1552", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M107.963 42.8079L107.963 42.7831L107.963 41.2295L107.963 41.2212L107.963 41.0311L107.963 37.8412L107.963 37.8329", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M110.512 40.8741L110.512 38.5602L110.76 38.742L112.356 39.9485L112.356 41.8988L112.356 42.2707", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M109.915 36.9239L109.915 37.7255L109.915 37.7337L109.915 39.1221L109.915 40.1138L109.915 41.8244L109.915 41.8658L109.915 41.8906", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M112.356 42.2625L110.52 40.8741L110.768 40.6923", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M110.759 38.742L110.759 40.6923L112.355 41.8988", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M101.114 33.7835L101.114 33.4199L101.114 31.4696L101.362 31.6514L102.206 32.2877", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M98.7041 28.4697L98.7041 31.6018L98.7041 31.6597L98.7041 31.7093L98.7041 31.7341L98.7041 31.8332L98.7041 33.4034", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M101.354 33.6017L102.051 34.1306L102.067 34.1472L102.152 34.2133L102.199 34.2463", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M101.354 31.6514L101.354 33.6017L101.114 33.7835L101.811 34.3124L101.827 34.329L101.912 34.3951L102.206 34.6182", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M120.445 47.1548L120.22 47.0887L117.795 45.2623", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M96.7593 34.329L96.7593 33.3125L96.7593 33.2133L96.7593 33.1885L96.7593 32.5852L96.7593 30.1391L96.7593 29.3953L96.7593 29.3871", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M89.8179 24.1559L89.8179 24.3212L89.8179 24.7674L89.8179 24.8914L89.8179 26.0979L89.8179 27.3376L89.8179 28.5276L89.8179 28.5524L89.8179 29.073L89.8179 29.0978", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M89.8179 29.1226L92.5217 31.1556L92.7077 31.2961L92.7232 31.3126L92.7386 31.3209L92.7774 31.3539L95.9849 33.7753L96.0004 33.7918L96.0701 33.8414L96.7597 34.362", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M96.7593 34.3545L96.7593 34.329", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M102.299 33.5687L102.299 33.9406L102.299 33.9654L102.299 34.0893L102.299 34.3042L102.299 36.1223L102.299 36.1471L102.299 36.7586L102.299 36.9321L102.299 37.304L102.299 37.9569L102.299 37.9817L102.299 38.5023L102.299 38.5271", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M102.299 38.5354L102.547 38.7254L102.554 38.7254L102.647 38.7998L102.95 39.0312L103.198 39.213L103.515 39.4527L105.607 41.0311L105.847 41.2129L105.94 41.2873L106.885 41.998L106.893 42.0063L107.017 42.1054L107.11 42.1715L107.18 42.2211L107.97 42.8161L108.195 42.8823L108.489 42.8823", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M112.464 41.246L112.464 42.1798L112.464 43.7913L112.464 43.8161L112.464 44.4359L112.464 44.6094L112.464 44.626L112.464 44.6342L112.464 45.6259L112.464 45.6507L112.464 46.1714", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M108.706 37.8412L108.706 41.0311L108.706 41.7832L108.706 41.7914L108.706 42.7831L108.706 42.8079", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M108.482 42.874L108.707 42.7996L109.381 42.2955L109.915 41.8906", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M97.4961 29.3871L97.4961 30.6928L97.4961 32.577L97.4961 32.6266L97.4961 32.6514L97.4961 32.7505L97.4961 34.3207L97.4961 34.3455", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M97.4961 34.3538L98.7047 33.4447", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M102.207 33.4034L102.207 34.015L102.207 34.0397L102.207 34.1637L102.207 34.2381L102.207 34.6017L102.207 36.0396L102.207 36.0644L102.207 36.5768L102.207 36.8495L102.207 37.2214L102.207 38.3288", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M108.187 37.9156L108.187 41.1055L108.187 41.3947L108.187 41.403L108.187 42.8575L108.187 42.8823", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M108.482 42.874L108.482 42.8492L108.482 41.6179L108.482 41.6096L108.482 41.0972L108.482 37.9073L108.482 37.899", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M108.481 37.9073L108.187 37.9073", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M120.738 47.1548L120.443 47.1548", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M120.443 47.1548L120.443 47.8407L120.443 47.849L120.443 50.353L120.443 52.0967", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M120.739 52.0967L120.739 50.353L120.739 48.0721L120.739 48.0638L120.739 47.1548L120.739 47.1465", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M112.379 41.0724L112.379 41.9154L112.379 42.2542L112.379 43.7252L112.379 43.75L112.379 44.2706L112.379 44.5434L112.379 44.5599L112.379 44.5681L112.379 44.8822L112.379 46.0226L112.379 46.0474", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M120.219 52.0554L120.444 52.1215L120.738 52.1215", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M89.7241 23.9906L89.7241 24.3956L89.7241 24.5691L89.7241 24.8253L89.7241 24.8336L89.7241 26.1724L89.7241 27.1723L89.7241 28.916", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M96.9766 29.4532L96.9766 30.2961L96.9766 32.6514L96.9766 33.015L96.9766 33.0398L96.9766 33.1389L96.9766 34.3868", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M97.2705 34.3951L97.2705 32.9241L97.2705 32.8249L97.2705 32.8001L97.2705 32.6514L97.2705 30.5275L97.2705 29.4614L97.2705 29.4532", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M102.207 38.3618L102.3 38.5283", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M112.465 41.2389L112.371 41.0724", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M89.8177 24.1571L89.7241 23.9906", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M97.2705 34.4204L97.4968 34.3455", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M107.963 47.7498L107.963 47.725L107.963 46.1961L107.963 46.1879L107.963 45.973L107.963 42.8079", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M107.962 42.7831L107.172 42.1881L107.102 42.1385L107.009 42.0724L106.885 41.9732L106.878 41.965L105.956 41.2708L105.863 41.1964L105.607 41.0063L103.515 39.4279L103.198 39.1882L102.95 39.0064L102.663 38.7916L102.57 38.7172L102.562 38.7172L102.299 38.5188", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M102.299 38.5106L102.299 38.5354L102.299 38.9155L102.299 38.9238L102.299 39.0643L102.299 39.2709L102.299 41.0477L102.299 41.0725L102.299 41.684L102.299 41.8575L102.299 42.2294L102.299 42.8823L102.299 42.9071L102.299 43.4277L102.299 43.4525", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M110.512 45.816L110.512 43.5021L110.76 43.6839L112.356 44.8905L112.356 46.8408L112.356 47.2127", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M109.915 41.8906L109.915 42.6922L109.915 42.7005L109.915 44.0888L109.915 45.0557L109.915 46.7829L109.915 46.7994L109.915 46.8242", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M112.356 47.2044L110.52 45.816L110.768 45.6342", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M110.759 43.6839L110.759 45.6342L112.355 46.8408", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M101.114 38.7254L101.114 38.3866L101.114 38.3784L101.114 36.4032L101.362 36.585L102.206 37.2214", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M98.7041 33.4116L98.7041 33.4364L98.7041 36.5685L98.7041 36.6016L98.7041 36.6512L98.7041 36.6759L98.7041 36.7999L98.7041 38.3536L98.7041 38.3783", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M98.7041 38.3784L100.85 39.9981L100.858 39.9981L100.951 40.0725L102.198 41.0146", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M101.354 38.5437L102.067 39.0808L102.075 39.0808L102.167 39.1552L102.199 39.18", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M101.354 36.5933L101.354 38.5436L101.338 38.5602L101.114 38.7337L101.827 39.2709L101.834 39.2709L101.927 39.3453L102.206 39.5519", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M112.464 46.1796L112.464 46.2044L112.464 47.1217L112.464 48.7332L112.464 48.758L112.464 49.3778L112.464 49.5514L112.464 49.5927L112.464 49.6009L112.464 50.5844L112.464 50.6092L112.464 51.1298", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M96.7593 39.2957L96.7593 39.2709L96.7593 38.2792L96.7593 38.1552L96.7593 38.1304L96.7593 37.5272L96.7593 35.1058L96.7593 34.362", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M89.8179 29.0978L89.8179 29.1226L89.8179 29.5027L89.8179 29.8581L89.8179 29.8664L89.8179 29.9986L89.8179 30.4035L89.8179 31.8415L89.8179 31.8993L89.8179 32.2877L89.8179 33.4778L89.8179 33.5025L89.8179 34.0232L89.8179 34.048", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M89.8179 34.0563L90.9335 34.8992L92.7077 36.238L92.7232 36.2545L92.7929 36.3041L95.9772 38.7089L95.9926 38.7255L96.0779 38.7916L96.7519 39.2957L96.9766 39.3618L97.271 39.3618", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M102.207 43.3037L102.3 43.469L102.307 43.469L102.571 43.6674L102.664 43.7417L102.95 43.9566L103.198 44.1384L103.516 44.3781L105.608 45.9565L105.863 46.1466L105.956 46.221L106.878 46.9151L106.886 46.9234L107.01 47.0226L107.103 47.0887L107.173 47.1383L107.963 47.7333", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M120.219 56.9898L120.219 56.9642", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M108.706 42.7748L108.706 42.7996L108.706 45.9648L108.706 46.7416L108.706 46.7499L108.706 47.7167L108.706 47.7415", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M108.706 47.7416L109.364 47.2457L109.914 46.8325", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M97.4961 34.3538L97.4961 35.6595L97.4961 37.5189L97.4961 37.5685L97.4961 37.5933L97.4961 37.7172L97.4961 39.2626", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M102.207 38.337L102.207 38.9816L102.207 38.9899L102.207 39.1304L102.207 39.18L102.207 39.2048L102.207 39.5436L102.207 40.9815L102.207 41.0063L102.207 41.5187L102.207 41.7914L102.207 42.1633L102.207 43.2707L102.207 43.2955", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M108.187 42.874L108.187 46.0391L108.187 46.3532L108.187 46.3614L108.187 47.7911L108.187 47.8159", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M108.187 47.8159L108.481 47.8159L108.706 47.7416", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M108.482 47.8159L108.482 47.7911L108.482 46.5846L108.482 46.5763L108.482 46.0391L108.482 42.874", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M120.443 52.0967L120.443 52.1215L120.443 52.8074L120.443 52.8157L120.443 55.2949L120.443 57.0304L120.443 57.0552", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M120.739 57.0551L120.739 57.0303L120.739 55.2866L120.739 53.0305L120.739 53.0222L120.739 52.1132L120.739 52.0884", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M112.379 46.0061L112.379 46.849L112.379 47.1879L112.379 48.6589L112.379 48.6837L112.379 49.2043L112.379 49.477L112.379 49.5183L112.379 49.5266L112.379 49.8158L112.379 50.9563", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M89.7241 28.9243L89.7241 29.4366L89.7241 29.792L89.7241 29.8003L89.7241 29.8416L89.7241 29.9325L89.7241 30.3374L89.7241 31.4448L89.7241 31.7754L89.7241 31.8332L89.7241 32.1225L89.7241 33.891", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M96.9766 34.3951L96.9766 34.4199L96.9766 35.2628L96.9766 37.585L96.9766 37.9486L96.9766 37.9734L96.9766 38.0974L96.9766 39.3205L96.9766 39.3453", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M97.2705 39.3618L97.2705 39.337L97.2705 37.8908L97.2705 37.7668L97.2705 37.742L97.2705 37.6016L97.2705 35.5025L97.2705 34.4364L97.2705 34.4116", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M107.963 47.7498L108.189 47.8164", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M120.738 52.0967L120.443 52.0967", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M112.465 46.1807L112.371 46.0143", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M120.219 56.989L120.445 57.0556", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M89.8177 29.0989L89.7241 28.9325", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M107.963 52.6917L107.963 52.6669L107.963 51.1546L107.963 51.1298L107.963 50.9149L107.963 47.7498", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M107.962 47.725L107.172 47.13L107.102 47.0804L107.009 47.0143L106.885 46.9151L106.878 46.9069L105.971 46.221L105.878 46.1466L105.607 45.94L103.515 44.3615L103.198 44.1219L102.95 43.9401L102.678 43.7335L102.586 43.6591L102.299 43.4442", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M110.512 50.7579L110.512 48.444L110.76 48.6258L112.356 49.8323L112.356 51.7827L112.356 52.1545", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M109.915 46.8325L109.915 47.6589L109.915 47.6672L109.915 49.0555L109.915 50.0059L109.915 51.7414L109.915 51.7662", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M112.356 52.1463L110.52 50.7579L110.768 50.5761", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M110.759 48.6258L110.759 50.5761L112.355 51.7827", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M101.114 43.6674L101.114 43.3451L101.114 43.3203L101.114 41.3452L101.362 41.527L102.206 42.1633", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M98.7041 38.3784L98.7041 41.5187L98.7041 41.5435L98.7041 41.6179L98.7041 41.6261L98.7041 41.7666L98.7041 43.2872L98.7041 43.312", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M101.354 43.4773L102.09 44.031L102.183 44.1053L102.199 44.1136", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M101.354 41.5353L101.354 43.4773L101.338 43.4938L101.323 43.5021L101.114 43.6591L101.85 44.2128L101.943 44.2872L102.206 44.4855", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M112.464 51.1133L112.464 51.1381L112.464 52.0554L112.464 53.6669L112.464 53.6916L112.464 54.3115L112.464 54.485L112.464 54.5263L112.464 54.5511L112.464 55.5097L112.464 55.5345L112.464 56.0552L112.464 56.08", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M96.7593 44.2376L96.7593 44.2128L96.7593 43.2459L96.7593 43.1054L96.7593 43.0971L96.7593 42.4691L96.7593 40.056L96.7593 40.0477L96.7593 39.2957", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M89.8179 34.0315L89.8179 34.0562L89.8179 34.8L89.8179 34.8248L89.8179 36.866L89.8179 37.2296L89.8179 38.4197L89.8179 38.4445L89.8179 38.9651L89.8179 38.9899", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M89.8179 38.9982L90.9335 39.8411L92.7077 41.1799L92.7232 41.1964L92.8084 41.2625L96.0004 43.6673L96.0081 43.6673L96.1011 43.7417L96.7597 44.2376", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M102.299 43.469L102.299 43.874L102.299 43.8822L102.299 44.0227L102.299 44.2128L102.299 44.2293L102.299 45.9896L102.299 46.0144L102.299 46.6259L102.299 46.7994L102.299 47.1713L102.299 47.8242L102.299 47.849L102.299 48.3696L102.299 48.3944", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M102.299 48.4109L102.586 48.6258L102.678 48.7002L102.95 48.9068L103.198 49.0886L103.515 49.3282L105.607 50.9067", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M112.379 55.9147L112.472 56.08L112.48 56.08L112.612 56.1791L113.696 56.9973L115.587 58.427L116.997 59.493L117.547 59.9062L117.81 60.1046L120.235 61.9309L120.46 61.997", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M108.706 47.7167L108.706 47.7415L108.706 50.9149L108.706 51.6918L108.706 51.7166L108.706 52.6669L108.706 52.6917", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M108.187 52.7578L108.481 52.7578L108.706 52.6834L109.349 52.1959L109.365 52.1793L109.915 51.7661", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M97.4961 39.2626L97.4961 39.2874L97.4961 40.6014L97.4961 40.6097L97.4961 42.4608L97.4961 42.5352L97.4961 42.5435L97.4961 42.6839L97.4961 44.2045", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M102.207 43.279L102.207 43.9483L102.207 43.9566L102.207 44.0971L102.207 44.1219L102.207 44.1467L102.207 44.1632L102.207 44.4855L102.207 45.9235L102.207 45.9482L102.207 46.4606L102.207 46.7333L102.207 47.1052L102.207 48.2126", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M108.187 47.7911L108.187 47.8159L108.187 50.981L108.187 51.2951L108.187 51.3199L108.187 52.733L108.187 52.7578", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M108.482 52.7578L108.482 52.7331L108.482 51.543L108.482 51.5182L108.482 50.9811L108.482 47.8159", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M108.481 47.7911L108.187 47.7911", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M120.739 61.997L120.739 61.9723L120.739 60.2285L120.739 57.989L120.739 57.9642L120.739 57.0551L120.739 57.0303", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M112.379 50.948L112.379 51.7909L112.379 52.1298L112.379 53.6008L112.379 53.6256L112.379 54.1462L112.379 54.4189L112.379 54.4602L112.379 54.485L112.379 54.7577L112.379 55.8982", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M120.443 57.0634L120.443 57.7493L120.443 57.7741L120.443 60.2368L120.443 61.9805L120.443 62.0053", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M89.7241 33.8662L89.7241 34.7339L89.7241 34.7587L89.7241 36.7999L89.7241 37.0644L89.7241 38.8329", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M96.9766 39.3618L96.9766 40.213L96.9766 40.2212L96.9766 42.5352L96.9766 42.9236L96.9766 42.9318L96.9766 43.0723L96.9766 44.2706", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M97.2705 44.3037L97.2705 44.2789L97.2705 42.8575L97.2705 42.717L97.2705 42.7087L97.2705 42.5352L97.2705 40.4444L97.2705 40.4361L97.2705 39.3618", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M97.271 39.337L96.9766 39.337", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M102.3 43.4454L102.207 43.279", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M120.445 57.0308L120.219 56.9642", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M96.9781 39.3375L96.752 39.2709", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M89.8177 34.0326L89.7241 33.8662", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M107.963 57.6254L107.963 57.6006L107.963 56.0883L107.963 56.0635L107.963 55.8486L107.963 52.6835L107.963 52.6587", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M102.299 48.3861L102.299 48.4109L102.299 48.8407L102.299 48.8489L102.299 48.9894L102.299 48.9977L102.299 49.163L102.299 49.1795L102.299 50.9397L102.299 50.9645L102.299 51.5761L102.299 51.7496L102.299 52.1215L102.299 52.7744L102.299 52.7991L102.299 53.3198L102.299 53.3446", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M110.512 55.6998L110.512 53.3859L110.76 53.5677L112.356 54.7742L112.356 56.7246L112.356 57.0964", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M109.915 51.7744L109.915 52.6008L109.915 52.6256L109.915 53.9892L109.915 54.9395L109.915 56.6832L109.915 56.708", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M112.356 57.0882L110.52 55.6999L110.768 55.5181", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M110.759 53.5677L110.759 55.518L112.355 56.7246", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M101.114 48.601L101.114 48.2787L101.114 48.2539L101.114 46.2871L101.362 46.4689L102.206 47.1052", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M98.7041 43.3203L98.7041 46.4606L98.7041 46.4854L98.7041 46.5846L98.7041 46.5929L98.7041 46.7333L98.7041 48.2291L98.7041 48.2539", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M101.354 48.4192L102.106 48.9812L102.199 49.0555", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M101.354 46.4689L101.354 48.4192L101.338 48.4357L101.323 48.444L101.114 48.601L101.865 49.1629L101.958 49.2373L102.198 49.4191", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M120.22 61.9062L117.795 60.0798L117.531 59.8815L116.981 59.4683L115.571 58.4022L113.681 56.9725L112.596 56.1544", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M96.7593 49.1712L96.7593 49.1464L96.7593 48.2043L96.7593 48.0639L96.7593 48.0556L96.7593 47.4027L96.7593 44.9896L96.7593 44.9814L96.7593 44.2293", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M96.7597 44.2045L96.1244 43.7252L96.0314 43.6508L96.0237 43.6508L92.8317 41.246L92.7465 41.1799L92.731 41.1634L90.9414 39.808L89.8334 38.9734L89.8257 38.9734", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M89.8179 38.9982L89.8179 39.7419L89.8179 39.7667L89.8179 41.8327L89.8179 42.1716L89.8179 43.3616L89.8179 43.3864L89.8179 43.907", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M102.207 53.1875L102.3 53.3528L102.307 53.3528L102.586 53.5677L102.602 53.5842L102.679 53.6421L102.695 53.6586L102.95 53.8487L103.198 54.0305L103.516 54.2701L105.608 55.8486L105.863 56.0386L105.879 56.0552L105.956 56.113L105.972 56.1295L106.886 56.8155L106.894 56.8237L107.018 56.9229L107.111 56.989L107.18 57.0386L107.971 57.6336L108.195 57.6997L108.49 57.6997L108.714 57.6253", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M112.464 56.08L112.464 56.9973L112.464 58.6088L112.464 58.6336L112.464 59.2534L112.464 59.4269L112.464 59.4682L112.464 59.493L112.464 60.4517L112.464 60.4765L112.464 60.9971L112.464 61.0219", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M108.706 52.6834L108.706 55.8486L108.706 56.6254L108.706 56.6502L108.706 57.6006L108.706 57.6253", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M108.706 57.6254L109.349 57.1378L109.364 57.1213L109.914 56.7081", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M97.4961 44.2045L97.4961 44.2293L97.4961 45.5433L97.4961 45.5516L97.4961 47.4027L97.4961 47.5019L97.4961 47.5102L97.4961 47.6507L97.4961 49.1465", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M98.7047 43.2872L97.4961 44.1963", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M102.207 48.2208L102.207 48.915L102.207 48.9233L102.207 49.0638L102.207 49.0886L102.207 49.1051L102.207 49.4274L102.207 50.8653L102.207 50.8901L102.207 51.4025L102.207 51.6752L102.207 52.0471L102.207 53.1545", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M108.187 52.7578L108.187 55.923L108.187 56.237L108.187 56.2618L108.187 57.6749", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M108.482 57.6914L108.482 57.6667L108.482 56.4766L108.482 56.4518L108.482 55.9147L108.482 52.7495L108.482 52.733", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M120.738 61.9722L120.443 61.9722", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M120.739 66.939L120.739 66.9142L120.739 65.1705L120.739 62.9309L120.739 62.9061L120.739 61.9971", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M112.379 55.8899L112.379 56.7328L112.379 57.0717L112.379 58.5427L112.379 58.5675L112.379 59.0881L112.379 59.3608L112.379 59.4021L112.379 59.4269L112.379 59.6996L112.379 60.8318", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M120.443 61.9971L120.443 62.683L120.443 62.7078L120.443 65.1705L120.443 66.9142L120.443 66.939", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M117.795 65.0465L120.22 66.8728L120.445 66.9389L120.739 66.9389", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M89.7241 38.8081L89.7241 39.6758L89.7241 39.7006L89.7241 41.7666L89.7241 42.0063L89.7241 43.7748", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M96.9766 44.2789L96.9766 44.3037L96.9766 45.1549L96.9766 45.1632L96.9766 47.4771L96.9766 47.8986L96.9766 47.9068L96.9766 48.0473L96.9766 49.2208", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M97.2705 49.2373L97.2705 49.2125L97.2705 47.8159L97.2705 47.6754L97.2705 47.6672L97.2705 47.4688L97.2705 45.378L97.2705 45.3698L97.2705 44.2954", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M97.271 44.2706L96.9766 44.2706", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M102.3 48.3873L102.207 48.2208", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M108.189 52.7335L107.963 52.6669", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M112.379 60.8566L112.473 61.023", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M96.9781 44.2793L96.752 44.2128", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M89.8177 38.9745L89.7241 38.8081", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M107.963 62.5673L107.963 61.0302L107.963 61.0054L107.963 60.7905L107.963 57.6254", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M107.962 57.6006L107.172 57.0056L107.102 56.956L107.009 56.8899L106.885 56.7907L106.878 56.7824L105.987 56.1048L105.971 56.0882L105.894 56.0304L105.878 56.0139L105.607 55.8073L103.515 54.2288L103.198 53.9892L102.95 53.8074L102.709 53.6256L102.694 53.609L102.616 53.5512L102.601 53.5347L102.307 53.3115L102.299 53.3115", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M110.512 60.6335L110.512 58.3195L110.76 58.5014L112.356 59.7079L112.356 61.6582L112.356 62.0301", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M109.915 56.6832L109.915 56.708L109.915 57.5344L109.915 57.5592L109.915 58.9311L109.915 59.8814L109.915 61.6334L109.915 61.6582", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M112.356 62.0218L110.52 60.6335L110.768 60.4516", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M102.207 58.1212L102.3 58.2865L102.307 58.2865L102.586 58.5014L102.602 58.5179L102.679 58.5758L102.695 58.5923L102.95 58.7906L103.198 58.9724L103.516 59.2121L105.608 60.7905L105.863 60.9806L105.879 60.9971L105.956 61.055L105.972 61.0715L106.886 61.7574L106.894 61.7657L107.018 61.8649L107.111 61.931L107.18 61.9806L107.971 62.5756L108.195 62.6417L108.49 62.6417L108.714 62.5673L109.358 62.0797L109.373 62.0632L109.923 61.65L112.379 63.5011", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M110.759 58.5013L110.759 60.4517L112.355 61.6582", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M101.114 53.5429L101.114 53.2289L101.114 53.2041L101.114 51.229L101.362 51.4108L102.206 52.0471", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M98.7041 48.2291L98.7041 48.2539L98.7041 51.3942L98.7041 51.419L98.7041 51.543L98.7041 51.5513L98.7041 51.6917L98.7041 51.7L98.7041 53.1958", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M89.7241 48.7085L89.8171 48.8737L89.8248 48.8737L90.9327 49.7084L92.7457 51.072L92.8387 51.1464L96.0306 53.5512L96.1236 53.6256L96.7512 54.0966L96.9758 54.1627L97.2702 54.1627L97.4949 54.0884L98.7035 53.1793L100.888 54.8239L100.904 54.8404L100.981 54.8983L100.997 54.9148L102.198 55.8238", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M101.354 53.3611L102.106 53.9231L102.121 53.9396L102.199 53.9974", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M101.354 51.4108L101.354 53.3611L101.338 53.3776L101.323 53.3859L101.114 53.5429L101.865 54.1049L101.881 54.1214L101.958 54.1793L101.974 54.1958L102.206 54.3693", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M112.464 60.9971L112.464 61.0219L112.464 61.9392L112.464 63.5755L112.464 63.5837L112.464 64.1953L112.464 64.4019L112.464 64.4101L112.464 64.4349L112.464 65.4183L112.464 65.4266L112.464 65.972", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M96.7593 54.1131L96.7593 53.171L96.7593 53.1628L96.7593 53.0223L96.7593 53.014L96.7593 52.3363L96.7593 49.9232V49.9232L96.7593 49.1712", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M89.8179 43.9153L89.8179 43.9401L89.8179 44.6839L89.8179 44.7087L89.8179 46.7995L89.8179 47.1135L89.8179 48.3366L89.8179 48.3449L89.8179 48.8903", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M102.299 53.3528L102.299 53.7826L102.299 53.8074L102.299 53.9313L102.299 53.9561L102.299 54.0966L102.299 54.1131L102.299 55.8982L102.299 55.9064L102.299 56.5097L102.299 56.7163L102.299 57.0882L102.299 57.7328L102.299 57.741L102.299 58.2865", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M112.379 65.7902L112.472 65.9555L112.48 65.9555L112.612 66.0547L113.696 66.8728L115.587 68.3025L116.997 69.3686L117.547 69.7818L117.81 69.9801L120.235 71.8065L120.46 71.8726L120.755 71.8726L120.886 71.8313", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M108.706 57.6006L108.706 57.6254L108.706 60.7905L108.706 61.5673L108.706 61.5921L108.706 62.5673", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M97.4961 49.1464L97.4961 49.1712L97.4961 50.4852L97.4961 50.4935L97.4961 52.3446L97.4961 52.4686L97.4961 52.4769L97.4961 52.6173L97.4961 52.6256L97.4961 54.1214", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M102.207 53.1875L102.207 53.8569L102.207 53.8817L102.207 54.0057L102.207 54.0305L102.207 54.0387L102.207 54.0553L102.207 54.3776L102.207 55.8403L102.207 55.8486L102.207 56.3527L102.207 56.6584L102.207 57.0303L102.207 58.1294", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M108.187 57.6667L108.187 57.6915L108.187 60.8566L108.187 61.1707L108.187 61.1955L108.187 62.6334", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M108.482 62.6334L108.482 61.4186L108.482 61.3938L108.482 60.8566L108.482 57.6915", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M120.739 71.8809L120.739 70.1124L120.739 67.8728L120.739 67.848L120.739 66.9389", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M112.379 60.8318L112.379 61.6748L112.379 62.0136L112.379 63.5094L112.379 63.5177L112.379 64.03L112.379 64.3358L112.379 64.3441L112.379 64.3689L112.379 64.6746L112.379 65.7903", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M120.443 66.9389L120.443 67.6249L120.443 67.6497L120.443 70.1124L120.443 71.8809", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M89.7241 43.7417L89.7241 44.6095L89.7241 44.6343L89.7241 46.7251L89.7241 46.9399L89.7241 48.7084", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M96.9766 49.2126L96.9766 49.2374L96.9766 50.0886L96.9766 50.0968L96.9766 52.4108L96.9766 52.8488L96.9766 52.857L96.9766 52.9975L96.9766 53.0058L96.9766 54.1875", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M97.2705 54.1792L97.2705 52.7826L97.2705 52.7744L97.2705 52.6339L97.2705 52.6256L97.2705 52.4025L97.2705 50.3117L97.2705 50.3034L97.2705 49.2291", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M97.271 49.2126L96.9766 49.2126", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M112.465 60.9982L112.371 60.8318", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M96.9781 49.213L96.752 49.1464", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M89.8177 43.9164L89.7241 43.75", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M97.4968 49.1464L97.2705 49.2213", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M107.963 67.5423L107.963 65.9721L107.963 65.9473L107.963 65.7738L107.963 62.5838", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M112.379 63.5094L109.923 61.6583L109.38 62.0715L109.365 62.088L108.714 62.5756L108.489 62.6499L108.195 62.6499L107.97 62.5838L107.18 61.9888L107.11 61.9392L107.017 61.8731L106.893 61.774L106.886 61.7657L105.971 61.0715L105.956 61.055L105.878 60.9971L105.863 60.9806L105.615 60.7905L103.523 59.2121L103.206 58.9724L102.958 58.7906L102.694 58.5923L102.679 58.5758L102.601 58.5179L102.586 58.5014L102.315 58.2948L102.307 58.2948L102.214 58.1295L102.214 58.1212", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M102.299 58.303L102.299 58.7245L102.299 58.7493L102.299 58.8732L102.299 58.898L102.299 59.0385L102.299 59.0551L102.299 60.8731L102.299 60.8814L102.299 61.493L102.299 61.6913L102.299 62.0632L102.299 62.716L102.299 62.7243L102.299 63.2697L102.299 63.278", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M110.512 65.6084L110.512 63.2945L110.76 63.4763L112.356 64.6828L112.356 66.6332L112.356 67.005", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M109.915 61.6582L109.915 62.4764L109.915 62.5012L109.915 63.8647L109.915 64.8482L109.915 66.5671L109.915 66.6167L109.915 66.6249", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M112.356 66.9968L110.52 65.6085L110.768 65.4267", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M110.759 63.4763L110.759 65.4266L112.355 66.6332", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M101.114 58.5179L101.114 58.1625L101.114 58.1377L101.114 56.2039L101.362 56.3858L102.206 57.0221", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M98.7041 53.2041L98.7041 56.3362L98.7041 56.394L98.7041 56.4849L98.7041 56.5097L98.7041 56.6337L98.7041 56.6585L98.7041 58.1625", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M101.354 58.3361L102.082 58.8815L102.098 58.898L102.175 58.9559L102.191 58.9724L102.199 58.9806", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M101.354 56.3858L101.354 58.3278L101.354 58.3361L101.346 58.3444L101.114 58.5179L101.842 59.0633L101.858 59.0799L101.935 59.1377L101.95 59.1542L102.198 59.3443", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M120.871 71.8478L120.739 71.8892L120.444 71.8892L120.22 71.823L117.795 69.9967L117.531 69.7983L116.981 69.3851L115.571 68.3191L113.681 66.8894L112.596 66.0713L112.464 65.9721L112.457 65.9721L112.364 65.8068L112.364 65.7985", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M112.464 65.9721L112.464 66.9142L112.464 68.5422L112.464 68.5505L112.464 69.1703L112.464 69.3438L112.464 69.3604L112.464 69.3686L112.464 70.3851L112.464 70.3934L112.464 70.9388L112.464 70.9471", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M96.7593 59.0881L96.7593 58.1378L96.7593 58.1047L96.7593 57.9807L96.7593 57.9559L96.7593 57.3113L96.7593 54.8652L96.7593 54.8569L96.7593 54.1132", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M102.206 55.8403L100.998 54.9313L100.982 54.9147L100.905 54.8569L100.889 54.8404L98.7124 53.1958L97.5037 54.1048L97.2791 54.1792L96.9847 54.1792L96.76 54.1131L96.1325 53.6421L96.0395 53.5677L92.8475 51.1628L92.7545 51.0885L90.9493 49.7249L89.8414 48.8902L89.8336 48.8902L89.7407 48.7249L89.7407 48.7167", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M89.8179 48.8902L89.8179 49.6257L89.8179 49.6505L89.8179 51.7661L89.8179 52.0884L89.8179 53.3032L89.8179 53.3115L89.8179 53.8569L89.8179 53.8652", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M89.7241 53.6834L89.8171 53.8487L89.8248 53.8487L90.9327 54.6833L92.7379 56.0469L92.8309 56.1213L96.0074 58.5179L96.0229 58.5344L96.1003 58.5922L96.1159 58.6088L96.7512 59.0881", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M102.207 63.0962L102.3 63.2614L102.307 63.2614L102.563 63.4515L102.578 63.468L102.656 63.5259L102.671 63.5424L102.95 63.7573L103.198 63.9391L103.516 64.1787L105.608 65.7572L105.84 65.9307L105.856 65.9473L105.933 66.0051L105.949 66.0216L106.886 66.7241L106.894 66.7323L107.018 66.8315L107.103 66.8976L107.173 66.9472L107.963 67.5422", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M112.464 70.9388L112.596 71.0379L113.68 71.8561L115.571 73.2857L116.981 74.3518", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M108.706 62.5673L108.706 65.7572L108.706 66.4927L108.706 66.5175L108.706 67.5174L108.706 67.5257", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M108.482 67.6083L108.707 67.534L109.373 67.0299L109.388 67.0133L109.915 66.6167", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M97.4961 54.1132L97.4961 55.4189L97.4961 55.4271L97.4961 57.3113L97.4961 57.4022L97.4961 57.427L97.4961 57.551L97.4961 57.5758L97.4961 59.0799L97.4961 59.0881", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M102.207 58.1294L102.207 58.7906L102.207 58.8153L102.207 58.9393L102.207 58.9641L102.207 58.9724L102.207 58.9806L102.207 58.9972L102.207 59.3525L102.207 60.8153L102.207 60.8235L102.207 61.3359L102.207 61.6334L102.207 62.0053L102.207 63.1127L102.207 63.1209", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M108.187 62.6416L108.187 65.8316L108.187 66.1043L108.187 66.1291L108.187 67.5918", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M108.482 67.6001L108.482 66.3605L108.482 66.3357L108.482 65.8398L108.482 62.6499", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M120.443 71.8891L120.443 72.5667L120.443 72.5915L120.443 75.0873L120.443 76.8558L120.443 76.8641", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M120.739 76.8476L120.739 75.0791L120.739 72.8065L120.739 72.7817L120.739 71.8809", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M112.379 65.7985L112.379 66.6415L112.379 66.9803L112.379 68.4761L112.379 68.4844L112.379 69.005L112.379 69.2777L112.379 69.2942L112.379 69.3025L112.379 69.6331L112.379 70.7735", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M89.7241 48.7167L89.7241 49.5514L89.7241 49.5761L89.7241 51.6917L89.7241 51.9149L89.7241 53.6834L89.7241 53.6916", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M96.9766 54.1875L96.9766 55.0305L96.9766 55.0387L96.9766 57.3857L96.9766 57.7907L96.9766 57.8155L96.9766 57.9394L96.9766 57.9642L96.9766 59.1542", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M97.2705 59.146L97.2705 57.7411L97.2705 57.7163L97.2705 57.5923L97.2705 57.5675L97.2705 57.3774L97.2705 55.2536L97.2705 55.2453L97.2705 54.1793", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M112.379 70.7652L112.473 70.9316", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M97.2705 59.1547L97.4968 59.0798", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M186.205 79.9797L191.195 83.7398L191.233 83.7729L192.535 84.7563L195.246 86.7975", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M195.239 87.2851L195.239 87.1942L195.239 87.1364L195.239 86.8802L195.239 86.8058L195.239 86.7893L195.51 86.5827", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M195.51 87.0124L195.51 86.5909L192.527 84.3431L192.458 84.2935L192.365 84.2274L191.497 83.5663L191.458 83.5332L191.241 83.3679L186.469 79.7731L186.198 79.9797L186.198 80.4755", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M198.229 158.959L198.229 154.348", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M198.245 139.01L197.795 139.357", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M198.253 134.043L198.238 134.06L197.804 134.39", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M198.253 139.01L198.253 134.043", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M198.253 129.101L198.238 129.118L197.804 129.448", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M198.253 134.068L198.253 129.101", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M198.253 129.126L198.253 124.159", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M151.426 115.16L151.426 115.185L151.426 115.821L151.426 118.168", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M151.333 115.011L151.333 115.747L151.333 118.184L151.333 118.209L151.333 118.234", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M198.253 124.192L198.253 119.226", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M151.426 110.243L151.426 110.846L151.426 113.408L151.426 114.449L151.426 114.474L151.426 114.59L151.426 114.614L151.426 115.151L151.426 115.176", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M151.426 115.185L153.402 116.672", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M151.333 110.077L151.333 110.78L151.333 113.242L151.333 114.523L151.333 114.548L151.333 115.011", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M198.253 119.251L198.253 119.226", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M151.426 105.276L151.426 105.871L151.426 105.887L151.426 108.276L151.426 108.482L151.426 109.524L151.426 109.548L151.426 109.664L151.426 109.689L151.426 110.226L151.426 110.251", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M151.333 105.111L151.333 105.805L151.333 105.821L151.333 108.21L151.333 108.317L151.333 108.466L151.333 109.598L151.333 109.623L151.333 110.061", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M151.426 105.277L151.333 105.102", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M151.426 100.317L151.426 100.896L151.426 100.904L151.426 103.516L151.426 104.573L151.426 104.582L151.426 104.722L151.426 104.73L151.426 105.284L151.426 105.292", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M151.333 100.152L151.333 100.83L151.333 100.838L151.333 103.35L151.333 104.648L151.333 104.656L151.333 105.119", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M151.426 100.319L151.333 100.152", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M151.426 95.3508L151.426 95.9293L151.426 95.9541L151.426 98.549L151.426 99.6151L151.426 99.6233L151.426 99.7638L151.426 100.326", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M151.333 95.1855L151.333 95.8632L151.333 95.888L151.333 98.3837L151.333 99.6895L151.333 99.6977L151.333 100.161", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M151.426 95.352L151.333 95.1773", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M198.253 99.392L197.804 99.7308", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M151.426 90.3924L151.426 90.9957L151.426 91.0205L151.426 93.5906L151.426 94.6484L151.426 94.6566L151.426 94.7971L151.426 95.3591", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M159.12 93.8054L157.912 94.7145", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M151.333 90.2188L151.333 90.9213L151.333 90.9461L151.333 93.417L151.333 94.7145L151.333 94.7227L151.333 95.1855", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M157.393 94.7889L157.393 95.1112L157.393 95.1194L157.393 95.2599L157.393 95.4913L157.393 95.5161L157.393 95.8384", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M198.253 94.4335L197.804 94.7723", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M198.253 99.4002L198.253 94.4335", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M159.119 88.8387L159.119 88.9874L159.119 91.8551L159.119 91.8799L159.119 92.0369L159.119 93.8054", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M159.119 93.8054L159.212 93.8798L159.592 94.1691", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M161.352 91.6981L161.599 91.8799L161.638 91.9129L161.731 91.9791L162.111 92.2683", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M157.168 94.7227L157.168 92.9542L157.168 90.4667L157.168 90.4089L157.168 90.3841L157.168 90.3263L157.168 90.318L157.168 89.7643", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M151.426 85.4257L151.426 86.0537L151.426 86.0785L151.426 88.6239L151.426 89.6817L151.426 89.7064L151.426 89.8304L151.426 90.3924", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M151.426 90.3924L154.246 92.5162L154.254 92.5162L154.347 92.5824L157.167 94.7145", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M157.912 89.756L157.912 89.9048L157.912 90.946L157.912 90.9708L157.912 92.9542L157.912 94.7227", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M159.12 88.8387L157.912 89.7477", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M151.333 85.2604L151.333 85.9876L151.333 86.0124L151.333 88.4586L151.333 89.756L151.333 89.7808L151.333 90.2271", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M157.393 89.8221L157.393 90.1362L157.393 90.1444L157.393 90.2849L157.393 90.5411L157.393 90.5659L157.393 93.0121L157.393 94.7806", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M157.686 94.7888L157.686 93.0203L157.686 90.7973L157.686 90.7725L157.686 90.0701L157.686 89.9296L157.686 89.9213L157.686 89.8304", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M198.215 89.4338L198.253 89.4668L196.487 90.7973", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M198.253 94.4335L198.253 89.4668", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M161.352 89.0536L161.352 88.6156L161.352 88.5908L161.352 87.3016L161.352 87.1611L161.352 87.1528L161.352 86.7314L161.599 86.9132L161.638 86.938L161.646 86.938L161.739 87.0041L162.545 87.6073L162.645 87.6817L162.707 87.7313L163.219 88.1197L163.219 89.1527L163.219 89.6072L163.219 90.07L163.219 90.4419", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M159.119 83.8802L159.119 83.905L159.119 84.029L159.119 86.9214L159.119 86.9462L159.119 87.0784L159.119 88.8469", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M163.211 90.4584L162.909 90.2353L162.692 90.0783L162.622 90.0204L162.614 90.0122L161.352 89.0618L161.599 88.88", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M161.591 86.9215L161.591 86.9711L161.591 86.9793L161.591 87.1198L161.591 88.7726L161.591 88.7974L161.591 88.8635L162.66 89.6734L162.676 89.6817L162.691 89.6982L162.908 89.8552L163.211 90.0783", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M157.168 89.756L157.168 87.9875L157.168 85.5L157.168 85.467L157.168 85.4422L157.168 85.3761L157.168 85.3513L157.168 84.7976", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M166.186 89.2023L165.806 88.9131L165.713 88.847L164.729 88.1032L164.714 88.0949L162.94 86.7562L162.924 86.7479L162.707 86.5909L162.645 86.5413L162.545 86.4669L162.529 86.4504L162.436 86.3843L162.428 86.3843L161.731 85.8554L161.135 85.4091L159.236 83.9794L159.151 83.9216L159.136 83.9133L157.927 84.8224L157.919 84.8224L157.702 84.8885L157.408 84.8885L157.183 84.8224L154.363 82.6985L154.293 82.6489L154.278 82.6324L151.442 80.492", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M151.426 80.459L151.426 81.1118L151.426 81.1366L151.426 83.6571L151.426 84.7397L151.426 84.7645L151.426 84.8637L151.426 85.4257", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M192.527 82.4754L192.527 82.4837L192.512 82.6407L192.458 82.7399L192.365 82.9051L191.497 83.558", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M151.426 85.4257L154.246 87.5495L154.262 87.5661L154.347 87.6239L157.167 89.756", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M157.912 84.7893L157.912 84.8141L157.912 84.938L157.912 86.0041L157.912 86.0289L157.912 87.9875L157.912 89.756", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M151.333 80.2937L151.333 81.0457L151.333 81.0705L151.333 83.4919L151.333 84.8141L151.333 84.8389L151.333 85.2604", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M157.393 84.8637L157.393 85.1777L157.393 85.2025L157.393 85.3265L157.393 85.6074L157.393 85.6322L157.393 88.0536L157.393 89.8221", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M157.393 89.8221L157.687 89.8221", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M157.686 89.8221L157.686 88.0536L157.686 85.8554L157.686 85.8306L157.686 85.1033L157.686 84.9794L157.686 84.9546L157.686 84.8637", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M151.426 80.4604L151.333 80.294L151.333 80.2358", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M162.134 81.6242L162.219 81.6903L162.529 81.9217L162.63 81.9961L162.692 82.0457L162.723 82.0705L163.606 82.7398L165.404 84.0952L165.411 84.0952L165.504 84.1695L168.394 86.3512L168.487 86.4256L168.905 86.7397L170.013 85.905L170.408 85.6075L170.726 85.3678L171.121 85.0703L171.904 84.4836L174.182 82.7646L175.065 82.0953L175.189 81.9961L175.654 81.6407L175.654 81.368L171.943 78.5665L171.873 78.5169L170.083 77.1616L170.013 77.112L168.867 76.2443L168.487 76.5335L168.394 76.6079L168.224 76.7319L168.208 76.7484L164.931 79.2194L164.923 79.2194L164.141 79.8144L163.746 80.1119L163.288 80.459L162.893 80.7565L162.676 80.9135L162.614 80.9631L162.514 81.0374L162.111 81.335L162.111 81.5911L162.111 81.6242", stroke: "#1C6BCF", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M168.921 86.7415L168.921 86.4669", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M175.661 81.3845L175.064 81.8308L175.01 81.8721L174.003 82.6324L171.725 84.3513L170.416 85.3348L170.021 85.6323L168.913 86.4669L168.394 86.0785L165.682 84.0373L165.589 83.9629L165.581 83.9629L163.784 82.6076L162.715 81.806L162.684 81.7812L162.389 81.5581L162.304 81.5002L162.289 81.4837L162.118 81.3597", stroke: "#1C6BCF", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M197.795 154.679L198.229 154.348L198.57 154.092L198.57 153.844L198.229 153.588", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M174.025 172.355L172.941 173.174L172.848 173.248L172.801 173.215", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M153.217 78.5004L153.248 78.5251L156.455 80.9465L156.471 80.963L156.533 81.0126L159.725 83.4175L159.74 83.434L159.825 83.4918L161.112 84.467L162.312 85.376L162.684 85.657L162.901 85.814L163.01 85.8967L163.017 85.8967L163.11 85.9628L163.289 86.095L166.302 88.3676L166.395 88.4338L166.938 88.8387", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M166.952 89.285L166.952 88.9544L166.952 88.8635L167.223 88.6569", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M167.224 89.0784L167.224 88.6569L166.682 88.252L166.589 88.1858L165.101 87.0619L164.706 86.7644L163.397 85.7727L163.311 85.7066L163.304 85.7066L163.296 85.7066L162.916 85.4174L162.699 85.2604L162.637 85.2108L162.575 85.1612L162.537 85.1364L161.127 84.0703L160.112 83.3018L160.026 83.2439L160.011 83.2274L156.819 80.8226L156.757 80.773L156.742 80.7564L153.534 78.3351L153.503 78.3103L153.232 78.5169L153.232 78.5582L153.232 79.0127", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M197.795 144.671L198.229 144.34L198.57 144.084L198.57 143.828L198.245 143.58", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M173.979 162.381L173.925 162.422L172.941 163.166L172.848 163.24L172.801 163.207", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M168.719 66.7902L175.801 72.1288L176.017 72.2941L176.056 72.3271L179.357 74.8146", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M179.357 75.3105L179.357 74.9055L179.357 74.8146L179.628 74.608", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M179.628 75.1039L179.628 74.608L178.016 73.3932L177.753 73.1949L177.195 72.7734L176.327 72.1205L176.289 72.0875L176.072 71.9222L168.99 66.5836L168.719 66.7902L168.719 66.8067L168.719 67.1373L168.719 67.1952L168.719 67.2861", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M197.795 156.943L197.795 155.224L197.795 154.679L197.795 154.422L197.795 154.307L197.795 154.265L197.795 153.662L197.795 153.612L197.795 153.505L197.795 153.257L197.795 151.984", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M197.703 152.174L197.703 153.183L197.703 153.546L197.703 153.596L197.703 154.34L197.703 154.381L197.703 154.745L197.703 155.414L197.703 156.629L197.703 157.133", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M174.026 172.355L174.189 172.479L174.964 173.066L175.328 173.347L175.359 173.355L175.677 173.454L175.886 173.463L176.126 173.413L176.831 172.884L177.226 172.587L179.736 170.694L180.131 170.397L181.603 169.289L181.999 168.992L183.075 168.174L183.432 167.901L184.888 166.802L185.276 166.513L186.748 165.405L187.135 165.116L190.684 162.438L191.048 162.166L192.063 161.405L192.458 161.108L193.93 160.001L194.325 159.703L196.246 158.257L196.781 157.852L197.718 157.141L197.811 156.943", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M197.796 151.976L197.703 152.174L197.641 152.224L197.037 152.679L196.866 152.803L196.797 152.86L196.766 152.885L196.231 153.29L193.473 155.364L191.04 157.199L190.676 157.472L183.424 162.943", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M197.795 151.976L197.795 150.257L197.795 149.299L197.795 148.646L197.795 148.637L197.795 147.009", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M197.703 147.208L197.703 148.571L197.703 148.58L197.703 149.373L197.703 150.464L197.703 151.679L197.703 152.175", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M183.424 162.943L190.676 157.472L191.04 157.199L193.465 155.364L196.223 153.282L196.758 152.877L196.797 152.852L196.866 152.794L197.037 152.67L197.641 152.216L197.703 152.166L197.796 151.968", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M197.796 146.993L197.796 147.001L197.703 147.2L197.641 147.249L196.804 147.877L196.797 147.877L196.231 148.307L193.752 150.183L193.581 150.307L193.512 150.365L193.481 150.389L192.698 150.984L192.574 151.075L192.319 151.265L192.195 151.356L191.048 152.224L190.684 152.497L190.18 152.877L183.424 157.968", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M176.125 168.446L183.067 163.207L183.424 162.934L183.067 163.207L176.125 168.446Z", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M197.795 146.993L197.795 145.274L197.795 144.671L197.795 144.423L197.795 144.332L197.795 143.679L197.795 143.646L197.795 143.497L197.795 143.249L197.795 142.035", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M197.703 142.225L197.703 143.167L197.703 143.563L197.703 143.596L197.703 144.39L197.703 144.398L197.703 144.745L197.703 145.481L197.703 146.695L197.703 146.712L197.703 147.2", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M183.424 157.968L190.172 152.877L190.684 152.497L191.048 152.224L192.195 151.356L192.311 151.274L192.574 151.075L192.69 150.993L193.473 150.398L193.504 150.373L193.574 150.315L193.744 150.191L196.231 148.315L196.789 147.894L196.797 147.894L197.641 147.257L197.703 147.208L197.796 147.009", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M197.796 142.026L197.703 142.233L197.641 142.282L197.083 142.704L196.913 142.828L196.82 142.902L196.797 142.919L196.231 143.348L193.504 145.406L193.496 145.406L192.714 146.001L192.566 146.117L192.535 146.142L192.466 146.191L192.373 146.257L192.334 146.282L192.187 146.398L192.071 146.489L191.04 147.266L190.963 147.324L190.947 147.34L190.684 147.538L190.444 147.72L190.273 147.844L190.165 147.927L189.359 148.538L188.972 148.836L187.864 149.671L187.469 149.968L186.887 150.406L183.424 153.017", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M197.795 142.018L197.795 140.299L197.795 139.357L197.795 139.349L197.795 138.671L197.795 138.663L197.795 137.051", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M197.703 137.25L197.703 137.274L197.703 138.588L197.703 138.597L197.703 139.415L197.703 139.423L197.703 140.497L197.703 141.712L197.703 141.721L197.703 142.216", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M183.424 152.993L186.887 150.381L187.469 149.943L187.864 149.646L188.972 148.811L189.359 148.514L190.165 147.91L190.265 147.828L190.436 147.704L190.676 147.522L190.939 147.324L190.955 147.307L191.032 147.249L192.055 146.472L192.179 146.381L192.326 146.274L192.365 146.241L192.458 146.175L192.528 146.125L192.559 146.1L192.706 145.993L193.488 145.398L193.496 145.398L196.223 143.34L196.789 142.919L196.812 142.902L196.905 142.828L197.076 142.704L197.641 142.274L197.703 142.225L197.796 142.026", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M197.703 137.25L197.641 137.299L196.82 137.919L196.812 137.919L196.231 138.357L193.783 140.2L193.612 140.324L193.519 140.398L193.496 140.415L192.714 141.002L192.566 141.117L192.535 141.142L192.466 141.192L192.373 141.258L192.334 141.283L192.187 141.398L192.071 141.489L191.048 142.266L190.97 142.324L190.955 142.34L190.692 142.539L188.786 143.977L187.159 145.208L186.988 145.332L186.895 145.406L184.602 147.142L184.579 147.158L184.207 147.439L184.184 147.456L183.603 147.894L183.424 148.026", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M197.797 137.06L197.703 137.259", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M197.795 137.084L197.795 135.365L197.795 134.407L197.795 134.39L197.795 133.729L197.795 133.704L197.795 132.118", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M197.703 132.341L197.703 133.63L197.703 133.655L197.703 134.456L197.703 134.473L197.703 135.555L197.703 136.745L197.703 136.77L197.703 137.241L197.703 137.266", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M197.703 137.284L197.797 137.084", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M197.703 132.316L197.641 132.366L196.835 132.977L196.82 132.994L196.231 133.44L193.543 135.465L193.535 135.465L192.752 136.06L192.582 136.192L192.535 136.225L192.466 136.274L192.373 136.341L192.357 136.349L192.187 136.481L192.094 136.555L192.086 136.564L191.04 137.349L190.963 137.407L190.676 137.621L190.498 137.754L190.327 137.878L188.786 139.043L185.501 141.53L183.874 142.762L183.703 142.886L183.61 142.952L183.417 143.101", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M183.424 148.034L183.603 147.902L184.184 147.464L184.199 147.447L184.571 147.167L184.586 147.15L186.887 145.423L186.98 145.357L187.151 145.233L188.786 144.001L190.676 142.58L190.939 142.382L190.955 142.365L191.032 142.307L192.078 141.522L192.179 141.448L192.342 141.324L192.365 141.307L192.458 141.241L192.528 141.192L192.559 141.167L192.721 141.043L193.504 140.448L193.527 140.431L193.62 140.357L193.791 140.233L196.216 138.398L196.812 137.944L196.82 137.944L197.626 137.332L197.688 137.283", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M197.797 132.118L197.703 132.317", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M197.795 132.142L197.795 130.423L197.795 129.465L197.795 129.448L197.795 128.787L197.795 128.762L197.795 127.201", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M197.703 127.374L197.703 127.399L197.703 128.688L197.703 128.713L197.703 129.514L197.703 129.531L197.703 130.614L197.703 131.804L197.703 131.828L197.703 132.299L197.703 132.324", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M197.703 127.374L197.641 127.424L196.835 128.035L196.82 128.052L196.231 128.498L193.558 130.514L193.543 130.531L192.776 131.109L192.582 131.258L192.535 131.291L192.466 131.341L192.38 131.407L192.373 131.415L192.187 131.556L192.117 131.605L192.109 131.605L191.04 132.415L190.963 132.473L190.676 132.688L188.817 134.093L188.809 134.101L187.228 135.291L187.058 135.415L185.516 136.58L183.417 138.167", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M176.125 148.604L180.34 145.439L182.347 143.927L182.455 143.844L182.734 143.629L182.843 143.547L183.06 143.382L183.416 143.101L183.61 142.952L183.703 142.886L183.873 142.762L185.508 141.53L188.8 139.051L190.35 137.886L190.52 137.762L190.675 137.646L190.962 137.431L191.04 137.374L192.101 136.572L192.109 136.564L192.186 136.506L192.372 136.365L192.457 136.299L192.527 136.25L192.574 136.217L192.759 136.076L193.542 135.481L193.55 135.481L196.223 133.465L196.827 133.01L196.842 132.994L197.633 132.399L197.695 132.349", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M197.797 127.176L197.703 127.375", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M197.795 127.201L197.795 125.482L197.795 124.523L197.795 124.506L197.795 123.845L197.795 123.821L197.795 122.234", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M197.703 122.432L197.703 122.457L197.703 123.746L197.703 123.771L197.703 124.573L197.703 124.589L197.703 125.672L197.703 126.862L197.703 126.886L197.703 127.358L197.703 127.382", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M197.703 127.4L197.797 127.201", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M196.812 123.11L196.224 123.556L193.551 125.572L193.535 125.589L192.768 126.167L192.575 126.316L192.528 126.349L192.458 126.399L192.373 126.465L192.365 126.473L192.179 126.614L192.125 126.655L192.11 126.672L191.033 127.481L190.955 127.539L190.669 127.754L188.832 129.143L188.825 129.143L185.54 131.63L185.532 131.638L183.952 132.828L183.781 132.952L183.409 133.233", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M176.125 143.663L177.063 142.96L177.644 142.522L178.039 142.225L179.062 141.456L179.457 141.159L180.363 140.481L180.456 140.415L180.627 140.291L182.261 139.059L183.083 138.44L183.439 138.159L185.546 136.572L187.096 135.407L187.266 135.283L188.847 134.093L188.855 134.084L190.699 132.696L190.985 132.481L191.063 132.423L192.147 131.605L192.155 131.605L192.209 131.564L192.395 131.423L192.419 131.407L192.488 131.357L192.558 131.308L192.604 131.275L192.814 131.118L193.581 130.539L193.596 130.523L196.246 128.523L196.85 128.068L196.866 128.052L197.656 127.457L197.718 127.407", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M197.703 122.432L197.641 122.482", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M197.795 122.268L197.795 122.242", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M197.703 117.499L197.703 118.812L197.703 118.837L197.703 119.639L197.703 119.655L197.703 120.738L197.703 121.928L197.703 121.953L197.703 122.424L197.703 122.449", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M197.703 122.458L197.797 122.259", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M193.558 120.622L193.543 120.639L192.776 121.217L192.582 121.366L192.535 121.399L192.466 121.449L192.38 121.515L192.373 121.523L192.187 121.664L192.133 121.705L192.117 121.721L191.04 122.531L190.963 122.589L190.676 122.804L188.855 124.176L188.84 124.192L185.563 126.663L185.555 126.663L183.417 128.275", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M197.795 122.234L197.795 120.54L197.795 119.589L197.795 119.573L197.795 118.912L197.795 118.887L197.795 117.308", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M176.125 138.721L177.078 138.002L177.171 137.936L177.342 137.812L178.977 136.58L182.269 134.101L183.075 133.498L183.431 133.217L183.803 132.936L183.974 132.812L185.554 131.622L185.562 131.614L188.855 129.134L188.862 129.134L190.683 127.762", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M197.703 112.532L197.703 113.871L197.703 113.879L197.703 114.697L197.703 115.78L197.703 116.994L197.703 117.003L197.703 117.498L197.703 117.507", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M197.703 117.5L197.797 117.3", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M197.702 112.532L197.64 112.581L196.819 113.201L196.23 113.647L193.549 115.672L193.534 115.689L192.767 116.267L192.589 116.399L192.542 116.432L192.473 116.482L192.38 116.548L192.372 116.556L192.194 116.689L192.124 116.738L192.108 116.755L191.047 117.556L190.97 117.614L190.683 117.829L188.847 119.209L188.831 119.226L185.577 121.68L185.562 121.697L183.431 123.3", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M176.125 133.77L177.202 132.961L177.76 132.539L178.024 132.341L178.977 131.622L180.518 130.457L180.689 130.333L182.269 129.143L182.277 129.134L183.067 128.539L183.424 128.267L185.562 126.655L185.57 126.655L188.847 124.184L188.862 124.168L190.683 122.796L190.97 122.581L191.047 122.523", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M197.795 117.3L197.795 115.589L197.795 114.631L197.795 113.953L197.795 113.945L197.795 112.342", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M197.797 112.333L197.703 112.533", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M197.795 112.342L197.795 110.623L197.795 109.672L197.795 108.987L197.795 107.383", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M197.703 107.573L197.703 108.912L197.703 109.739L197.703 110.821L197.703 112.036L197.703 112.532", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M190.683 112.871L188.831 114.267L188.816 114.284L185.562 116.738L185.546 116.755L183.431 118.35", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M176.125 128.812L177.202 128.002L177.226 127.986L177.396 127.862L177.76 127.589L178.024 127.391L178.977 126.672L178.984 126.663L182.277 124.184L182.285 124.184L183.075 123.589L183.431 123.316L185.562 121.713L185.578 121.697L188.831 119.242L188.847 119.226L190.683 117.846L190.97 117.631L191.047 117.573L192.109 116.771L192.124 116.755L192.194 116.705L192.372 116.573L192.38 116.565L192.473 116.499L192.543 116.449L192.589 116.416L192.767 116.284L193.534 115.705L193.55 115.689L196.23 113.664L196.819 113.218L197.64 112.598L197.702 112.548", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M197.797 107.375L197.703 107.575", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M197.702 107.573L197.64 107.623L196.819 108.243L196.23 108.689", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M197.795 107.375L197.795 105.656L197.795 104.706L197.795 104.02L197.795 102.417", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M197.703 102.607L197.703 103.945L197.703 104.772L197.703 105.854L197.703 107.069L197.703 107.565", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M176.125 123.845L177.202 123.035L177.76 122.614L178.024 122.416L178.992 121.688L179 121.688L182.277 119.217L182.293 119.201L183.075 118.606L183.431 118.333L185.546 116.738L185.562 116.722L188.816 114.267L188.831 114.251L190.683 112.854L190.97 112.639L191.047 112.581L192.093 111.788L192.109 111.771L192.194 111.705L192.357 111.581L192.38 111.565L192.473 111.499L192.543 111.449L192.589 111.416L192.752 111.292L193.534 110.705L196.23 108.672", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M197.797 102.408L197.703 102.608", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M196.812 103.276L196.223 103.722L193.519 105.764L192.737 106.35L192.574 106.474L192.527 106.507L192.458 106.557L192.365 106.623L192.341 106.64L192.179 106.763L192.078 106.838L191.032 107.623L190.955 107.681", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M197.703 97.64L197.703 98.9787L197.703 99.8051L197.703 100.888L197.703 102.103L197.703 102.598", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M197.703 102.608L197.797 102.408", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M190.683 102.937L188.8 104.359L185.531 106.83L185.515 106.846L183.431 108.416", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M176.125 118.887L177.202 118.077L177.76 117.656L178.024 117.457L178.977 116.738L178.992 116.722L182.246 114.267L182.261 114.251L183.06 113.647L183.416 113.375L185.515 111.796L185.531 111.78L188.785 109.325L188.8 109.309L190.668 107.904L190.954 107.689", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M197.795 102.408L197.795 100.689L197.795 99.739L197.795 99.0531L197.795 97.4416", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M197.797 97.4416L197.703 97.6413", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M197.795 97.4499L197.795 95.731L197.795 94.7806L197.795 94.0947L197.795 92.4832", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M197.703 92.6815L197.703 94.0203L197.703 94.8467L197.703 95.9293L197.703 97.1441L197.703 97.64", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M197.796 92.4336L197.804 92.4831L197.711 92.6815L197.649 92.7311L196.827 93.3509L196.239 93.7971L193.535 95.8384L192.752 96.4251L192.589 96.5491L192.543 96.5821L192.473 96.6317L192.38 96.6978L192.357 96.7143L192.194 96.8383L192.094 96.9127L191.048 97.6978L190.97 97.7556L190.683 97.9705L188.801 99.3919L185.516 101.871L183.44 103.441L183.083 103.714L182.246 104.342L182.231 104.359L178.977 106.813L178.961 106.83L178.039 107.524L177.776 107.722L177.218 108.144L176.141 108.953L175.901 109.003L175.808 108.995L175.7 108.986L175.351 108.879L173.941 107.813L172.663 108.78L172.012 108.284L171.911 108.21L170.152 106.879L170.052 106.805L168.525 105.656L168.432 105.582L166.527 104.144L166.472 104.102L165.93 103.697L165.915 103.681L165.837 103.623L165.822 103.607L165.109 103.069L164.861 102.888L164.83 102.863L164.729 102.788L164.326 102.483L164.078 102.301L163.296 101.714L163.033 101.516L162.932 101.441L162.715 101.284L162.653 101.235L162.645 101.235L162.63 101.218L162.552 101.16L162.537 101.152L161.824 100.615L161.808 100.598L161.142 100.094L160.003 99.2349L159.36 98.7473L159.275 98.6895L159.267 98.6812L159.151 98.5903L159.035 98.5076L158.671 98.2349L158.423 98.0531L157.935 97.6895L157.71 97.516L157.416 97.2928L157.191 97.1193L156.71 96.7557L156.749 96.7226", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M176.125 113.92L177.202 113.11L177.76 112.689L178.024 112.49L178.961 111.78L178.977 111.763L182.231 109.309L182.246 109.292L183.06 108.672L183.416 108.4L185.5 106.83L185.515 106.813L188.785 104.342L190.668 102.921L190.954 102.706L191.032 102.648L192.078 101.863L192.178 101.789L192.341 101.665L192.364 101.648L192.457 101.582L192.527 101.532L192.574 101.499L192.736 101.375L193.519 100.789L196.223 98.7556L196.811 98.3093", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M173.917 167.314L173.917 170.57L173.926 172.281", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M175.328 173.347L175.328 171.868L175.328 171.628L175.328 171.62L175.328 171.231L175.328 168.38", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M173.917 167.314L175.327 168.38L175.676 168.488L175.885 168.496L176.126 168.446L175.885 168.504L175.676 168.496L175.327 168.389L173.917 167.314Z", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M176.125 173.413L176.125 171.86L176.125 171.694L176.125 171.264L176.125 171.017L176.125 170.636L176.125 168.438L176.125 166.719L176.125 163.471L176.125 161.744L176.125 161.009L176.125 158.488L176.125 156.778L176.125 153.546L176.125 151.844L176.125 148.613L176.125 146.91L176.125 143.679L176.125 142.274L176.125 141.977L176.125 138.745L176.125 137.316L176.125 137.043L176.125 136.927L176.125 136.762L176.125 133.803L176.125 132.085L176.125 131.795L176.125 128.837L176.125 127.118L176.125 126.92L176.125 126.829L176.125 126.812L176.125 123.87L176.125 122.151L176.125 121.845L176.125 121.837L176.125 118.903L176.125 117.184L176.125 116.895L176.125 116.87L176.125 113.937L176.125 112.218L176.125 111.953L176.125 111.929L176.125 108.97", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M175.328 168.38L175.328 166.661L175.328 163.414", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M176.126 163.471L175.886 163.529L175.677 163.521L175.328 163.414L174.143 162.513", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M173.917 162.678L173.917 165.604L173.917 167.314", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M173.917 107.821L173.917 110.755L173.917 110.78L173.917 111.044L173.917 112.788L173.917 115.697L173.917 115.722L173.917 116.011L173.917 117.755L173.917 120.664L173.917 120.672L173.917 120.978L173.917 122.721L173.917 125.242L173.917 125.639L173.917 125.647L173.917 125.944L173.917 127.688L173.917 130.614L173.917 130.622L173.917 130.911L173.917 132.655L173.917 135.258L173.917 135.597L173.917 135.646L173.917 135.878L173.917 137.605L173.917 140.613L173.917 140.82L173.917 142.547L173.917 145.753L173.917 147.48L173.917 150.687L173.917 152.414L173.917 155.621L173.917 157.364L173.917 160.587L173.917 162.339", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M175.328 163.405L175.328 161.686L175.328 161.62L175.328 158.439", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M176.126 158.497L175.885 158.554L175.676 158.546L175.327 158.439L173.917 157.364", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M174.143 162.513L175.328 163.405L175.677 163.513L175.886 163.521L176.126 163.471", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M175.328 158.43L175.328 156.711L175.328 153.488L175.328 153.464", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M176.126 153.546L175.885 153.588L175.676 153.579L175.327 153.472L173.917 152.414", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M173.917 157.364L175.327 158.43L175.676 158.538L175.885 158.546L176.126 158.497", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M175.328 153.489L175.328 153.464L175.328 151.77L175.328 148.547L175.328 148.522", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M173.917 152.406L175.327 153.488", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M175.886 153.613L176.128 153.546", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M175.328 148.547L175.328 148.522L175.328 146.828L175.328 143.605", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M175.886 143.704L175.677 143.696L175.328 143.588", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M173.917 147.464L175.327 148.547", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M175.328 148.547L175.677 148.654L175.886 148.662L176.126 148.596L180.325 145.423L182.34 143.894L182.433 143.82L182.727 143.596L182.82 143.522L183.052 143.34", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M175.328 143.613L175.328 143.588L175.328 141.894L175.328 141.663L175.328 138.671", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M175.886 138.762L175.677 138.754L175.328 138.646", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M172.794 143.39L173.918 142.53L175.328 143.613", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M175.886 143.729L176.126 143.662L177.056 142.96L177.637 142.522L178.024 142.225L179.055 141.448L179.45 141.15L180.341 140.473L180.434 140.406L180.604 140.282L182.231 139.051L183.068 138.415", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M175.328 138.671L175.328 138.646L175.328 136.952L175.328 136.688L175.328 136.638L175.328 136.299L175.328 133.704", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M183.068 128.531L182.27 129.134L182.262 129.143L180.682 130.333L180.511 130.457L178.969 131.622L178.016 132.341L177.753 132.539L177.195 132.961L176.118 133.77L175.878 133.82L175.785 133.812", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M173.917 137.588L175.327 138.671", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M175.328 138.671L175.677 138.778L175.886 138.787L176.126 138.721L177.071 138.002L177.164 137.936L177.335 137.812L178.962 136.58L182.247 134.093L183.068 133.473", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M175.328 133.713L175.328 131.994L175.328 131.671L175.328 131.663L175.328 128.746", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M175.328 128.746L173.918 127.68L172.794 128.523", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M183.067 123.573L182.285 124.168L182.277 124.168L178.984 126.647L178.976 126.655L178.023 127.374L177.76 127.572L177.396 127.845L177.225 127.969L177.202 127.986L176.125 128.795L175.885 128.845L175.792 128.837L175.684 128.829L175.335 128.721", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M172.794 133.489L173.918 132.638L175.328 133.713", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M175.328 133.713L175.677 133.82L175.785 133.828", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M175.328 128.746L175.328 127.027L175.328 126.696L175.328 126.688L175.328 126.291L175.328 123.779", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M175.328 123.779L173.918 122.713L172.64 123.68", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M183.068 118.614L182.285 119.209L182.27 119.226L178.993 121.697L178.985 121.697L178.017 122.424L177.753 122.622L177.195 123.044L176.118 123.854L175.878 123.903L175.785 123.895L175.677 123.887L175.328 123.779", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M175.328 128.746L175.677 128.853L175.785 128.862L175.878 128.87", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M175.328 123.779L175.328 122.06L175.328 121.721L175.328 121.713L175.328 118.812", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M175.327 118.812L173.917 117.746", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M175.885 118.936L175.792 118.928L175.684 118.92L175.335 118.812", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M175.328 123.779L175.677 123.887L175.785 123.895L175.878 123.903", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M175.328 118.821L175.328 117.102L175.328 116.78L175.328 116.755L175.328 113.854", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M183.068 108.681L182.255 109.292L182.239 109.309L178.985 111.763L178.97 111.78L178.032 112.49L177.769 112.689L177.211 113.11L176.134 113.92L175.894 113.97L175.801 113.961L175.692 113.953L175.344 113.846L173.934 112.78L172.655 113.747", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M173.917 117.746L175.327 118.812", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M175.328 118.821L175.677 118.928L175.785 118.936L175.878 118.945L176.118 118.895L177.195 118.085L177.753 117.664L178.017 117.465L178.969 116.746L178.985 116.73L182.239 114.276L182.254 114.259L183.052 113.656", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M175.328 113.854L175.328 112.135L175.328 111.838L175.328 111.813L175.328 108.887", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M175.328 113.854L175.677 113.961L175.785 113.97L175.878 113.978", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M183.067 158.249L176.125 163.48L183.067 158.24L183.424 157.976L183.067 158.249Z", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M183.067 153.265L176.125 158.497L183.067 153.265ZM183.067 153.265L183.424 152.993L183.067 153.265Z", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M183.067 148.29L176.125 153.538L183.067 148.315L183.424 148.034L183.067 148.29Z", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M156.688 111.648L156.687 112.234L156.687 112.482L156.687 114.176L156.687 114.201L156.687 114.804L156.687 114.829L156.687 115.408L156.687 115.432L156.687 115.548L156.687 115.573L156.687 116.184", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M156.688 106.681L156.687 109.243L156.687 109.251L156.687 109.838L156.687 109.854L156.687 109.879L156.687 110.482L156.687 110.507L156.687 110.623L156.687 110.648L156.687 111.639", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M156.688 101.722L156.687 104.292L156.687 104.871L156.687 104.879L156.687 104.921L156.687 105.549L156.687 105.573L156.687 105.689L156.687 105.714L156.687 106.681", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M156.688 96.7557L156.687 99.3258L156.687 99.9043L156.687 99.9291L156.687 99.9539L156.687 100.607L156.687 100.615L156.687 100.755L156.687 100.764L156.687 101.731", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M172.64 128.234L172.64 126.878L172.64 124.68L172.64 124.672L172.64 124.275L172.64 123.688", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M172.64 123.68L171.958 123.168L171.88 123.11L170.091 121.763L170.013 121.705L168.487 120.556L168.394 120.482L166.488 119.044L166.434 119.003L165.853 118.565L165.845 118.565L165.752 118.498L165.744 118.498L165.062 117.986L164.815 117.804L164.76 117.763L164.683 117.705L164.28 117.399L164.032 117.217L163.25 116.631L162.963 116.416L162.885 116.358L162.669 116.201L162.607 116.151L162.552 116.11L162.537 116.094L162.506 116.069L162.459 116.036L162.444 116.019L161.762 115.499L161.754 115.49L161.096 114.994L159.957 114.135L159.283 113.623L159.267 113.606L159.236 113.581L159.19 113.548L159.174 113.532L159.105 113.482L158.988 113.399L158.624 113.127L158.376 112.945L157.888 112.581L157.664 112.408L157.369 112.185L157.145 112.011L156.672 111.656", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M156.688 111.648L157.168 112.011L157.392 112.185L157.687 112.408L157.912 112.581L158.4 112.945L158.648 113.127L159.012 113.399L159.128 113.482L159.198 113.532L159.213 113.548L159.26 113.581L159.291 113.606L159.306 113.623L159.98 114.135L161.119 114.994L161.77 115.49L161.778 115.499L162.459 116.019L162.475 116.036L162.521 116.069L162.552 116.094L162.568 116.11L162.622 116.151L162.684 116.201L162.901 116.358L162.971 116.416L163.257 116.631L164.04 117.218L164.288 117.399L164.699 117.705L164.768 117.763L164.83 117.804L165.078 117.986L165.752 118.498L165.76 118.498L165.853 118.565L165.861 118.565L166.442 119.003L166.496 119.044L168.402 120.482L168.495 120.556L170.021 121.705L170.091 121.763L171.88 123.11L171.95 123.168L172.632 123.68", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M172.64 123.68L172.64 121.911L172.64 119.705L172.64 119.697L172.64 118.722", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M172.639 118.713L171.95 118.193L171.88 118.143L170.082 116.788L170.013 116.738L168.486 115.589L168.393 115.515L166.488 114.077L166.433 114.036L165.86 113.606L165.845 113.59L165.767 113.532L165.752 113.515L165.078 113.003L164.83 112.821L164.768 112.771L164.698 112.722L164.295 112.416L164.047 112.234L163.265 111.648L162.97 111.424L162.9 111.375L162.684 111.218L162.622 111.168L162.583 111.143L162.567 111.127L162.521 111.094L162.49 111.069L162.474 111.052L161.762 110.515L161.754 110.515L161.103 110.028L159.964 109.168L159.306 108.672L159.29 108.656L159.244 108.615L159.213 108.59L159.197 108.573L159.112 108.507L158.996 108.425L158.632 108.152L158.384 107.97L157.896 107.606L157.671 107.433L157.376 107.21L157.152 107.036L156.679 106.681", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M172.64 118.713L172.64 116.945L172.64 114.755L172.64 114.73L172.64 113.755", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M156.688 101.722L157.168 102.086L157.392 102.26L157.687 102.483L157.912 102.656L158.4 103.02L158.648 103.202L159.012 103.474L159.128 103.557L159.229 103.631L159.244 103.648L159.26 103.656L159.322 103.706L159.337 103.722L159.98 104.21L161.119 105.069L161.762 105.557L161.778 105.573L162.49 106.111L162.506 106.127L162.521 106.135L162.583 106.185L162.599 106.201L162.622 106.218L162.684 106.268L162.901 106.425L162.986 106.491L163.265 106.697L164.048 107.284L164.296 107.466L164.699 107.772L164.784 107.838L164.83 107.871L165.078 108.053L165.768 108.573L165.783 108.59L165.861 108.648L165.876 108.664L166.434 109.086L166.488 109.127L168.394 110.565L168.487 110.639L170.013 111.788L170.098 111.854L171.88 113.193L171.966 113.259L172.64 113.763", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M172.64 113.755L172.64 111.986L172.64 109.821L172.64 109.796L172.64 108.796", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M172.794 168.157L173.918 167.314L172.794 168.157Z", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M172.794 158.207L173.918 157.364L172.794 158.207Z", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M172.794 153.265L173.918 152.406L172.794 153.241", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M175.328 148.522L173.918 147.464L172.794 148.299", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M172.794 138.448L173.918 137.588L172.794 138.423", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M172.64 118.713L173.918 117.746L172.64 118.713Z", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M194.309 160.463L192.449 161.868L192.449 161.273L192.449 161.1", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M172.794 178.099L173.918 177.248L178.675 173.719L183.633 169.984L188.933 165.992L196.223 160.488L196.223 160.48L196.223 158.265", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M193.914 160.167L193.914 159.992", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M194.309 159.703L194.309 160.463L193.913 160.166L192.441 161.273", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M176.831 173.059L176.831 172.884", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M175.358 173.355L175.358 174.165L175.358 174.76L177.217 173.355", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M177.218 172.587L177.218 173.347L176.823 173.05L175.351 174.157", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M181.596 169.464L181.596 169.289", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M180.124 170.397L180.124 170.57L180.124 171.165L181.983 169.76", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M181.984 168.992L181.984 169.752L181.589 169.455L180.117 170.562", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M186.748 165.572L186.748 165.397", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M185.276 166.513L185.276 166.686L185.276 167.281L187.135 165.876", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M187.135 165.108L187.135 165.868L186.748 165.571L185.276 166.678", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M157.702 96.2846L157.975 96.4926", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M157.973 96.9871L157.973 96.5822L157.973 96.4913L158.33 96.2185L158.345 96.202L160.328 94.7062L161.119 94.1112L161.599 93.7476L161.614 93.7311L162.691 92.9212L162.831 92.8138L162.994 92.6898", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M162.885 92.3757L162.807 92.4336L162.769 92.4584L162.753 92.4749L162.699 92.5162L162.637 92.5658L162.567 92.6154L162.536 92.6402L161.599 93.3509L161.351 93.5327L161.335 93.5493L161.126 93.7063L160.065 94.5079L159.135 95.2103L158.089 96.0037L158.074 96.0202L157.926 96.1276L157.717 96.2847L157.717 96.7805", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M196.348 89.6568L196.348 89.161L196.076 88.9544L193.535 90.8717L192.753 91.4584L192.582 91.5906L192.536 91.6237L192.466 91.6733L192.373 91.7394L192.358 91.7476L192.187 91.8799L192.094 91.946L190.963 92.7972L188.809 94.4252L185.516 96.9044L182.231 99.3836L178.962 101.855L178.946 101.871L178.032 102.565L177.769 102.764L177.211 103.185L175.801 104.251L173.833 105.73L173.818 105.747L172.284 106.904L172.036 107.094L172.036 107.59", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M172.028 107.094L172.301 107.302", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M172.299 107.796L172.299 107.392L172.299 107.301L174.073 105.962L174.088 105.945L179.202 102.094L179.217 102.078L182.487 99.6068L185.772 97.1276L189.065 94.6484L190.947 93.227L192.171 92.3014L192.349 92.1691L192.512 92.0452L192.559 92.0121L193.783 91.0866L196.324 89.1693", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M162.852 92.6597L162.961 92.7424L163.023 92.7837L163.286 92.982L163.294 92.9903L163.34 93.0234L163.425 93.0895L163.456 93.1143L163.526 93.1721L164.34 93.7837L164.804 94.1308L165.045 94.3126L165.138 94.3787L165.781 94.8663L166.4 95.3373L166.455 95.3786L168.314 96.7835L168.33 96.8001L168.361 96.8248L168.407 96.8579L168.423 96.8744L168.454 96.8992L169.631 97.7917L169.662 97.7669L169.678 97.7504L170.243 97.3289L170.638 97.0314L171.785 96.172L172.18 95.8745L172.963 95.2877L174.907 93.825L175.759 93.1887L175.798 93.1639L176.395 92.7176L176.395 92.4449L176.077 92.2052L175.759 91.9656L169.786 87.4617L169.608 87.3212L169.29 87.5608L168.887 87.8583L168.709 87.9988L168.469 88.1806L168.376 88.255L167.198 89.1475L167.152 89.1888L166.927 89.3541L166.881 89.3954L166.47 89.7095L166.416 89.7508L166.005 90.0648L165.076 90.7673L164.68 91.0648L163.689 91.8168L163.309 92.0978L163.294 92.1061L162.868 92.4284L162.868 92.4531L162.868 92.5771L162.868 92.635L162.868 92.6597V92.6597", stroke: "#1C6BCF", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M169.672 97.7409L169.672 97.6993L169.672 97.6744L169.672 97.4747", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M176.421 92.384L175.824 92.8302L174.763 93.6319L172.818 95.0946L170.502 96.8383L170.107 97.1358L169.68 97.4581L168.402 96.4995L166.496 95.0615L166.442 95.0202L166 94.6896L165.357 94.2021L165.264 94.136L165.086 94.0037L164.838 93.8219L164.552 93.6071L163.506 92.8137L163.49 92.7972L163.234 92.6071L162.909 92.3592L162.894 92.3509", stroke: "#1C6BCF", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M172.64 108.392L172.244 108.094L170.021 106.416L168.402 105.193L166.496 103.755L166.442 103.714L166.163 103.499L166.147 103.483L166.07 103.425L166.054 103.408L165.086 102.681L165.07 102.665L164.845 102.491L163.544 101.508L162.924 101.036L162.901 101.02L162.885 101.003L162.808 100.946L162.792 100.929L162.715 100.871L162.08 100.392L162.064 100.375L161.142 99.6812L160.267 99.0201L159.624 98.5325L159.538 98.4746L159.531 98.4664L159.298 98.2928L156.982 96.5408L156.943 96.5078L156.726 96.3425", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M166.441 89.004L166.224 89.1693L166.185 89.2023L165.589 89.6486L164.806 90.2353L164.411 90.5328L163.296 91.3758L162.9 91.6733L162.885 91.6815L162.691 91.8303L162.629 91.8799L162.529 91.9542L162.35 92.0865L162.312 92.1113L162.296 92.1278L162.11 92.2683L161.591 92.6567L161.343 92.8385L161.111 93.0121L160.886 93.1773L160.871 93.1939L159.592 94.1525L159.112 94.5161L157.903 95.4252L157.679 95.5987L157.609 95.6483L157.593 95.6648L157.384 95.8218L157.159 95.9954L156.679 96.359L156.679 96.6896", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M156.687 96.6978L156.726 96.7309L157.168 97.0614L157.392 97.235L157.687 97.4581L157.912 97.6316L158.4 97.9952L158.648 98.1771L159.051 98.4828L159.128 98.5407L159.283 98.6564L159.291 98.6646L159.376 98.7225L160.019 99.2101L161.119 100.036L161.824 100.565L161.84 100.582L162.529 101.103L162.552 101.119L162.568 101.136L162.63 101.185L162.645 101.193L162.661 101.21L162.692 101.235L162.909 101.392L163.048 101.499L163.312 101.698L164.094 102.284L164.342 102.466L164.706 102.739L164.838 102.838L164.846 102.846L165.086 103.028L165.837 103.59L165.853 103.607L165.93 103.664L165.946 103.681L166.449 104.061L166.504 104.102L168.41 105.54L168.503 105.615L170.029 106.763L170.168 106.871L171.888 108.168L172.028 108.276L172.64 108.739L173.918 107.772L175.328 108.838L175.677 108.945L175.785 108.953L175.878 108.962L176.118 108.912L177.195 108.102L177.753 107.681L178.017 107.482L178.9 106.813L178.915 106.796L182.169 104.342L182.185 104.326L185.454 101.855L188.739 99.3754L190.947 97.7143L192.032 96.8961L192.171 96.7887L192.295 96.6978L192.357 96.6482L192.45 96.5821L192.52 96.5325L192.566 96.4995L192.69 96.4086L193.473 95.8218L196.216 93.7558L196.766 93.3426L197.626 92.6897L197.688 92.6401L197.781 92.4501L197.788 92.4418", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M172.64 108.73L172.64 108.4L173.918 107.433", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M173.917 107.763L173.917 107.433L175.327 108.499", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M175.328 108.829L175.328 108.499L175.677 108.606L175.886 108.615L176.126 108.565", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M176.125 108.896L176.125 108.565L178.682 106.631L178.698 106.615L181.952 104.16L181.967 104.144L185.237 101.673L188.522 99.1936L190.947 97.3673L191.807 96.7144L192.512 96.1855L193.24 95.6318L193.821 95.1938L194.216 94.8963L196.207 93.3922L196.54 93.1443L197.687 92.2766", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M197.703 92.6236L197.703 92.2931L197.734 92.2352L197.75 92.2022L197.796 92.0947", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M197.795 92.4253L197.795 92.0947L197.78 91.9377L197.633 91.6732L196.478 90.8055L196.44 90.7725L196.223 90.6072", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M198.252 89.0784L198.035 89.2437L197.996 89.2767L196.23 90.6072", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M198.252 89.4089L198.252 89.0784L195.518 87.0123", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M192.372 82.5167L191.241 83.3679", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M192.373 82.8472L192.373 82.5167L192.473 82.3349L192.489 82.3101L192.52 82.2522L192.535 82.0952L192.466 81.9134L178.016 71.0214L177.753 70.947L177.544 70.9553L177.195 71.0627L176.064 71.9139", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M191.466 83.5332L192.373 82.8473L192.466 82.682L192.52 82.5828L192.528 82.4754L192.528 82.4258", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M192.535 82.4258L192.535 82.0952", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M168.718 66.8068L168.493 66.6332L168.4 66.7076L168.207 66.8481L168.191 66.8646L164.937 69.319L164.922 69.3356L164.155 69.914L163.76 70.2115L163.302 70.5586L162.907 70.8561L162.69 71.0132L162.628 71.0628L162.528 71.1371L161.66 71.79L161.644 71.8065L161.118 72.2032L160.219 72.8808L160.211 72.8808L156.918 75.3601L153.633 77.8393L151.425 79.5086L151.333 79.6822L151.333 79.8722L151.333 79.897L151.333 79.9053L151.333 80.2359", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M151.426 80.0718L151.379 79.9886L151.364 79.9553L151.333 79.897", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M151.333 80.2358L151.426 80.4105", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M151.426 80.4011L151.426 80.0705L154.518 82.401L154.533 82.4175L154.595 82.4671L157.159 84.4009", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M151.426 80.4011L154.301 82.5663L154.316 82.5828L154.378 82.6324L157.159 84.7314L157.384 84.7976L157.679 84.7976L157.903 84.7314L159.112 83.8224L159.151 83.8472L159.166 83.8637L159.251 83.9216L161.111 85.3265L161.746 85.8058L162.443 86.3347L162.451 86.3347L162.529 86.3925L162.544 86.409L162.629 86.4752L162.691 86.5247L162.908 86.6818L162.962 86.7231L164.698 88.0371L164.752 88.0784L165.736 88.8221L165.829 88.8883L166.209 89.1775", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M157.168 84.7315L157.168 84.4009L157.393 84.4671", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M157.393 84.7976L157.393 84.467L157.687 84.467", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M157.686 84.7976L157.686 84.4671L157.911 84.4009", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M157.912 84.7315L157.912 84.4009L159.12 83.4919", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M159.119 83.8225L159.119 83.4919L159.375 83.682L159.39 83.6985L159.475 83.7564L161.118 84.996L161.97 85.6406L162.668 86.1695L162.675 86.1695L162.698 86.186L162.768 86.2438L162.908 86.3513L164.976 87.9132L165.96 88.6569L166.053 88.7231L166.433 89.0123", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M198.229 148.968L197.795 149.29", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M198.229 148.968L198.229 144.34", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M42.4106 124.101L42.4106 123.994L42.4106 121.473", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M1.28613 131.2L17.1454 143.158L23.63 138.266L26.6826 135.96L26.915 135.787", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M17.1455 143.158L17.1455 138.489", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M33.7715 129.152L33.7715 128.977", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M35.6389 127.746L34.5078 128.597", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M34.4697 126.308L35.3917 125.614L35.6396 125.432L35.6396 127.746L35.3917 127.564", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M34.7954 128.01L35.392 127.556L35.392 125.606", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M24.2583 136.332L24.2583 135.96L24.2583 135.167", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M26.1177 134.927L24.2583 136.332", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M24.9395 133.498L25.8769 132.787L26.1248 132.605L26.1248 134.919L25.8769 134.737", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M24.2583 135.96L25.8775 134.737L25.8775 132.787", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M21.3677 138.142L21.3677 137.349", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M19.7407 138.572L19.7407 139.365L19.7407 139.737L21.6001 138.332", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M21.6084 137.167L21.6084 138.332L21.376 138.142L19.749 139.365", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M40.3652 123.812L40.3652 123.019", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M38.7534 124.234L38.7534 125.027L38.7534 125.399L40.6128 123.994", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M40.6132 122.829L40.6132 123.994L40.3653 123.812L38.7461 125.035", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M34.5078 130.068L36.3362 128.688L42.418 124.102", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M28.8911 133.762L28.8911 133.39L28.8911 132.655", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M30.7579 132.357L28.8984 133.762", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M30.5098 132.167L30.5098 131.432", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M30.7582 131.25L30.7582 132.349L30.5104 132.167L28.8911 133.39", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M17.1453 133.175L7.90248 126.209L4.60977 123.73L4.57879 123.705L4.52454 123.664L4.35408 123.54L3.99772 123.267L3.60259 122.969L3.59483 122.961L3.1997 122.664L1.27832 121.217", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M1.28613 121.217L1.28613 125.845L1.28613 126.093", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M23.6302 130.671L19.0979 134.084L18.8732 134.151L18.5788 134.151L18.3541 134.084L17.1455 133.175L17.1455 136.374L17.1455 138.142L17.1455 133.175", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M34.4697 121.292L35.3917 120.598L35.6396 120.416L35.6396 122.73", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M36.3291 118.705L35.8643 119.052L35.7945 119.102L34.4697 120.102", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M35.3908 122.548L35.6387 122.73L34.4766 123.606", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M34.4697 123.242L35.3917 122.548L35.3917 120.598", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M24.9395 128.481L25.8769 127.771L26.1248 127.589L26.1248 129.903", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M26.683 125.986L24.9321 127.308", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M25.8769 129.729L26.1248 129.911L24.9395 130.804", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M24.9395 130.432L25.8769 129.721L25.8769 127.771", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M28.6431 126.895L28.6431 129.44L28.6431 129.531L28.6431 129.944L28.6431 130.093L28.6431 131.87", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M34.376 127.531L34.376 126.969L34.376 126.754L34.376 126.374L34.376 126.002L34.376 125.754L34.376 125.606L34.376 125.192L34.376 125.143L34.376 122.564", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M34.469 122.391L34.376 122.564L33.7718 123.019L33.5238 123.201L33.1597 123.473", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M43.7202 115.424L43.6969 115.466L43.6272 115.598L42.4883 116.457", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M38.2891 119.622L38.2891 120.887L38.2891 120.994L38.2891 122.25L38.2891 122.663L38.2891 122.812L38.2891 124.581", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M43.6274 120.556L43.6274 119.994L43.6274 119.887L43.6274 118.788L43.6274 118.639L43.6274 118.226L43.6274 115.598", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M19.106 134.093L19.106 136.721L19.106 137.134L19.106 137.283L19.106 139.051", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M24.8467 134.729L24.8467 134.167L24.8467 133.572L24.8467 133.2L24.8467 132.952L24.8467 132.804L24.8467 132.39L24.8467 132.341L24.8467 129.762", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M17.2935 138.25L17.4639 138.374L18.3626 139.051L18.5873 139.126L18.8817 139.126L19.1064 139.051L19.5093 138.745L19.7417 138.572L21.3687 137.349L21.6011 137.175L24.0106 135.357L24.2585 135.175L24.8473 134.729L24.9403 134.556", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M26.8457 131.076L26.9929 131.184L27.4113 131.498L27.8994 131.861L28.1241 131.936L28.3643 131.936L28.4185 131.936L28.6432 131.87L28.6509 131.861L28.8988 131.68L30.5181 130.457L30.766 130.275L33.2297 128.415L33.3537 128.324", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M36.4766 123.779L36.6469 123.903L37.5457 124.581L37.7703 124.655L38.0648 124.655L38.2894 124.581L38.5064 124.416L38.7543 124.234L40.3736 123.011L40.6215 122.829L40.6757 122.788L40.7454 122.73L42.4189 121.465L42.4886 121.416L43.6275 120.556L43.7205 120.383", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M33.1683 123.482L28.636 126.895L28.4113 126.961L28.1169 126.961L27.8922 126.895L26.6836 125.986L26.6836 129.176L26.6836 130.952", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M27.8911 131.861L27.8911 130.506L27.8911 130.093L27.8911 130.002L27.8911 126.895", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M42.4101 116.507L40.845 117.689L40.7753 117.746L40.7443 117.771L40.7133 117.796L40.7056 117.804L40.6824 117.821L40.6746 117.829L40.5506 117.92L38.2883 119.622L38.0637 119.688L37.7692 119.688L37.5446 119.622L36.3359 118.713L36.3359 119.416L36.3359 119.523L36.3359 121.912L36.3359 123.68", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M37.5459 124.589L37.5459 123.225L37.5459 122.812L37.5459 120.432L37.5459 120.325L37.5459 119.622", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M18.3545 139.051L18.3545 137.696L18.3545 137.283L18.3545 134.093", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M28.1162 126.969L28.1162 129.837L28.1162 129.928L28.1162 130.167L28.1162 130.341L28.1162 131.936", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M28.4185 131.936L28.4185 130.159L28.4185 130.109L28.4185 129.696L28.4185 129.605L28.4185 126.961", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M34.4697 127.366L34.4697 127.316L34.4697 126.829L34.4697 126.308L34.4697 125.936L34.4697 125.589L34.4697 125.539L34.4697 125.292L34.4697 125.126L34.4697 125.077L34.4697 123.614L34.4697 123.242L34.4697 122.399", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M43.7197 120.391L43.7197 119.953L43.7197 118.622L43.7197 118.573L43.7197 118.325L43.7197 118.16L43.7197 115.432", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M37.77 119.688L37.77 120.49L37.77 120.598L37.77 122.639L37.77 122.878L37.77 123.052L37.77 124.647", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M38.064 124.655L38.064 122.887L38.064 122.837L38.064 122.424L38.064 120.829L38.064 120.721L38.064 119.697", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M18.5791 134.159L18.5791 137.109L18.5791 137.349L18.5791 137.522L18.5791 139.117", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M18.8813 139.126L18.8813 137.357L18.8813 137.307L18.8813 136.894L18.8813 134.167", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M24.9395 134.556L24.9395 134.332L24.9395 133.498L24.9395 133.126L24.9395 132.779L24.9395 132.729L24.9395 132.481L24.9395 132.316L24.9395 132.266L24.9395 130.804L24.9395 130.432L24.9395 129.589", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M24.9395 133.134L24.9395 132.737L24.9395 132.564L24.9395 132.324", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M33.7871 127.977L33.911 127.886L34.1357 127.713L34.3759 127.531L34.4689 127.358", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M24.9403 129.589L24.8467 129.764", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M1.28613 121.217L3.20751 122.664L3.60264 122.961L3.6104 122.969L4.0055 123.267L4.36189 123.54L4.53235 123.664L4.58656 123.705L4.61758 123.73L7.91029 126.209L17.1454 133.175", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M17.1455 133.175L17.1455 128.481", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M34.4697 116.325L35.3917 115.631L35.6396 115.449L35.6396 117.763", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M35.3908 117.581L35.6387 117.763L34.895 118.325L34.8252 118.374L34.4766 118.639", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M34.4697 118.275L34.5782 118.193L34.6479 118.135L35.3917 117.573L35.3917 115.623", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M24.9395 123.515L25.8769 122.804L26.1248 122.622L26.1248 124.936", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M26.6836 125.977L26.6836 121.407", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M25.8769 124.754L26.1248 124.936L24.9395 125.829", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M24.9395 125.465L25.8769 124.754L25.8769 122.812", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M28.6431 121.928L28.6431 125.118L28.6431 126.895", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M34.376 122.564L34.376 122.002L34.376 121.366L34.376 120.994L34.376 120.796L34.376 120.184L34.376 118.052L34.376 117.945L34.376 117.606", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M34.469 117.416L34.469 117.424L34.376 117.598L34.1514 117.763L34.0817 117.821L33.7718 118.052L33.5238 118.234L33.1597 118.507", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M43.7202 110.441L43.7202 110.449L43.6969 110.491L43.6272 110.623L42.4883 111.482", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M38.2891 114.647L38.2891 115.755L38.2891 115.862L38.2891 115.912L38.2891 115.97L38.2891 116.019L38.2891 116.209L38.2891 117.846L38.2891 119.614", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M43.6274 115.589L43.6274 115.028L43.6274 114.92L43.6274 113.821L43.6274 110.623", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M19.106 129.118L19.106 132.316L19.106 134.084", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M24.8467 129.754L24.8467 129.192L24.8467 128.556L24.8467 128.184L24.8467 127.986L24.8467 127.374L24.8467 124.796", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M17.1455 128.481L17.1455 131.407L17.1455 133.175L18.3541 134.084L18.5788 134.151L18.8732 134.151L19.0979 134.084L23.6302 130.671", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M24.9395 127.3L26.6904 125.977L27.899 126.886L28.1237 126.953L28.4181 126.953L28.6428 126.886L33.1751 123.473", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M36.3286 118.705L37.5372 119.614L37.7619 119.688L38.0563 119.688L38.281 119.614L40.5355 117.912L40.6595 117.821L40.6672 117.813L40.6905 117.796L40.6983 117.788L40.7292 117.763L40.7602 117.738L40.8299 117.68L42.3949 116.499", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M27.8911 126.895L27.8911 125.118L27.8911 121.928", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M33.1675 118.515L28.6352 121.928L28.4105 121.994L28.1161 121.994L27.8914 121.928L26.9385 121.209", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M37.5459 119.614L37.5459 117.846L37.5459 115.647L37.5459 115.457L37.5459 115.408L37.5459 115.35L37.5459 115.3L37.5459 115.193L37.5459 114.647", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M42.4102 111.54L40.7755 112.78L40.7057 112.829L38.2885 114.647L38.0638 114.714L37.7694 114.714L37.5447 114.647L36.5918 113.928", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M36.3291 114.135L36.3291 114.284L36.3291 114.391L36.3291 114.441L36.3291 114.482L36.3291 114.499L36.3291 114.532L36.3291 114.548L36.3291 114.738L36.3291 116.937L36.3291 118.705L35.8643 119.06L35.7945 119.11L34.4697 120.11", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M18.3545 134.084L18.3545 132.316L18.3545 129.118", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M24.8477 124.787L24.2589 125.234L24.011 125.415L23.6313 125.705L19.0991 129.118L18.8744 129.184L18.5799 129.184L18.3553 129.118L17.4023 128.399", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M28.1162 121.994L28.1162 125.184L28.1162 126.961", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M28.4185 126.961L28.4185 125.184L28.4185 121.994", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M34.4697 122.391L34.4697 121.292L34.4697 120.92L34.4697 120.622L34.4697 120.11L34.4697 118.647L34.4697 118.275L34.4697 118.118L34.4697 118.011L34.4697 117.432", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M43.7197 115.424L43.7197 114.986L43.7197 113.656L43.7197 110.466", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M37.77 114.722L37.77 115.366L37.77 115.474L37.77 115.523L37.77 115.581L37.77 115.631L37.77 115.821L37.77 117.92L37.77 119.688", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M38.064 119.688L38.064 117.92L38.064 116.044L38.064 115.854L38.064 115.804L38.064 115.747L38.064 115.697L38.064 115.59L38.064 114.722", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M18.5791 129.192L18.5791 132.39L18.5791 134.159", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M18.8813 134.159L18.8813 132.39L18.8813 129.192", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M24.9395 129.589L24.9395 128.49L24.9395 128.118L24.9395 127.82L24.9395 127.597L24.9395 127.308L24.9395 125.845L24.9395 125.473L24.9395 124.63", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M33.168 123.473L33.5321 123.201L33.78 123.019L34.3844 122.564L34.4773 122.391", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M42.4883 116.449L43.6272 115.589L43.6969 115.457L43.7202 115.416", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M24.8467 129.755L24.9403 129.581", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M24.9403 124.614L24.9403 124.622L24.8467 124.797", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M34.376 117.589L34.376 117.036L34.376 117.027L34.376 116.399L34.376 116.027L34.376 115.821L34.376 115.614L34.376 115.218L34.376 115.209L34.376 113.276L34.376 113.085L34.376 113.036L34.376 112.978L34.376 112.928L34.376 112.821L34.376 112.631", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M34.4689 112.441L34.376 112.614L34.252 112.705L34.1823 112.763L34.1513 112.788L34.1203 112.813L34.1126 112.821L34.0893 112.838L34.0816 112.846L33.9576 112.937L33.7794 113.069L33.5315 113.251L33.1674 113.523L30.8586 115.267L30.7889 115.317L28.6428 116.937L28.4181 117.003L28.1237 117.003L27.899 116.937L26.6904 116.027L24.9395 117.35", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M28.6431 116.953L28.6431 119.936L28.6431 120.143L28.6431 121.92", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M24.8464 119.812L24.2576 120.259L24.0096 120.441L23.63 120.73L19.0977 124.143L18.873 124.209L18.5786 124.209L18.3539 124.143L17.1453 123.234L14.4957 121.234L11.2029 118.755L11.11 118.689L10.9395 118.565L9.31251 117.333L6.97277 115.565L6.0198 114.846L5.5627 114.499L5.50074 114.449L5.40775 114.375L4.5865 113.755L4.57879 113.747L4.4858 113.672L4.31534 113.548L3.99772 113.309L3.60259 113.011L3.59483 113.003L3.1997 112.705L1.27832 111.259L1.28608 111.259", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M1.28613 111.267L1.28613 115.837L1.28613 116.085", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M35.6392 112.788L34.9962 113.276L34.9265 113.333L34.8955 113.358L34.8567 113.383L34.8257 113.408L34.7018 113.499L34.4849 113.664", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M43.7195 105.474L43.6962 105.524L43.6265 105.656L40.8916 107.722L40.7754 107.805L40.7676 107.813L40.7521 107.821L40.7211 107.846L40.7056 107.863L40.6979 107.871L40.5894 107.954L38.2884 109.689L38.0637 109.755L37.7693 109.755L37.5446 109.689L36.336 108.78L35.8944 109.11L35.8247 109.16L34.4766 110.177", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M34.4697 111.342L35.3917 110.648L35.6396 110.466L35.6396 112.78L35.3917 112.598", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M36.3286 113.73L36.3286 111.962L36.3286 109.54L36.3286 109.433L36.3286 108.772", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M34.4697 113.292L34.5704 113.218L34.6015 113.193L34.6402 113.168L34.6711 113.143L34.7409 113.085L35.3839 112.598L35.3839 110.648", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M24.9395 118.54L25.8769 117.829L26.1248 117.647L26.1248 119.961", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M26.6836 121.002L26.6836 119.226L26.6836 116.036", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M25.8769 119.779L26.1248 119.961L24.9395 120.854", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M24.9395 120.49L25.8769 119.779L25.8769 117.829", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M43.6274 110.614L43.6274 110.061L43.6274 110.053L43.6274 109.953L43.6274 109.945L43.6274 108.846L43.6274 108.631L43.6274 105.648", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M38.2891 109.672L38.2891 110.895L38.2891 111.003L38.2891 112.656L38.2891 112.871L38.2891 114.639", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M24.8467 124.779L24.8467 124.225L24.8467 124.217L24.8467 123.589L24.8467 123.217L24.8467 123.011L24.8467 122.796L24.8467 122.399L24.8467 122.391L24.8467 119.812", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M19.106 124.143L19.106 127.126L19.106 127.341L19.106 129.11", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M17.2466 128.275L17.417 128.399L18.3622 129.109L18.5869 129.184L18.8813 129.184L19.106 129.109L23.6383 125.696L24.0179 125.407L24.2658 125.225L24.8547 124.779", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M26.7837 121.077L26.9542 121.201L27.8994 121.911L28.124 121.986L28.4185 121.986L28.6431 121.92L33.1754 118.507", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M36.4297 113.804L36.6001 113.928L37.5454 114.639L37.77 114.705L38.0645 114.705L38.2891 114.639L40.6986 112.821L40.7683 112.771L42.4108 111.532", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M27.8911 121.92L27.8911 120.498L27.8911 120.143L27.8911 116.953", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M37.5459 114.639L37.5459 113.218L37.5459 112.871L37.5459 110.449L37.5459 110.342L37.5459 109.681", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M18.3545 129.11L18.3545 127.688L18.3545 127.341L18.3545 124.143", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M28.4185 121.986L28.4185 120.209L28.4185 120.102L28.4185 117.019", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M28.1162 117.019L28.1162 120.209L28.1162 120.325L28.1162 121.986", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M34.4697 117.416L34.4697 116.325L34.4697 115.953L34.4697 115.647L34.4697 115.54L34.4697 115.284L34.4697 115.143L34.4697 115.135L34.4697 113.672L34.4697 113.342L34.4697 113.3L34.4697 113.152L34.4697 113.135L34.4697 113.102L34.4697 113.086L34.4697 113.044L34.4697 112.995L34.4697 112.887L34.4697 112.457", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M43.7197 110.441L43.7197 110.011L43.7197 110.003L43.7197 108.672L43.7197 108.565L43.7197 108.317L43.7197 105.483", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M38.064 114.713L38.064 112.945L38.064 112.829L38.064 110.838L38.064 110.73L38.064 109.747", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M37.77 109.747L37.77 110.507L37.77 110.615L37.77 112.937L37.77 113.044L37.77 114.705", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M18.8813 129.176L18.8813 127.407L18.8813 127.291L18.8813 124.217", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M18.5791 124.217L18.5791 127.415L18.5791 127.523L18.5791 129.184", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M24.9395 124.614L24.9395 124.399L24.9395 124.391L24.9395 123.523L24.9395 123.151L24.9395 122.845L24.9395 122.73L24.9395 122.482L24.9395 122.341L24.9395 122.333L24.9395 120.87L24.9395 120.498L24.9395 119.655", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M33.168 118.498L33.5321 118.226L33.78 118.044L34.0822 117.813L34.1519 117.763L34.3844 117.589L34.4773 117.416", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M42.4883 111.474L43.6272 110.614L43.6969 110.482L43.7202 110.441", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M24.8467 124.78L24.9403 124.606", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M34.376 112.614L34.376 112.061L34.376 112.052L34.376 111.416L34.376 111.044L34.376 110.838L34.376 110.226L34.376 110.218L34.376 108.053L34.376 107.945L34.376 107.672", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M1.28613 111.259L3.20751 112.705L3.60265 113.003L3.61812 113.011L4.01325 113.309L4.33091 113.548L4.50137 113.672L4.59432 113.747L4.60207 113.755L5.42332 114.375L5.51627 114.449L5.57827 114.499L6.04313 114.846L6.98831 115.556L9.33584 117.325L10.9628 118.556L11.1332 118.68L11.2262 118.746L14.5189 121.226L17.1609 123.217L18.3695 124.126L18.5942 124.192L18.8886 124.192L19.1132 124.126L23.6456 120.713L24.0252 120.424L24.2732 120.242L24.8619 119.796", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M18.3548 119.168L17.797 118.746L17.1462 118.259L16.1778 117.532L15.7826 117.234L15.6742 117.151L15.2791 116.854L14.4966 116.259L14.4036 116.193L14.2331 116.069L12.6061 114.837L9.31343 112.358L7.77168 111.193L7.60125 111.069L6.96594 110.59L6.02072 109.871L6.013 109.863L5.55587 109.524L5.4939 109.474L5.40092 109.4L4.57195 108.78L4.5642 108.78L3.98313 108.342L3.588 108.044L3.58024 108.036L3.18515 107.739L1.28699 106.301L1.27148 106.284", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M1.28613 106.292L1.28613 111.259", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M35.6387 107.813L34.9182 108.358L34.8485 108.408L34.4766 108.689", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M34.4697 106.375L35.3917 105.681L35.6396 105.499L35.6396 107.813L35.3917 107.631", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M36.3286 108.755L36.3286 106.987L36.3286 104.772L36.3286 104.73L36.3286 104.565L36.3286 104.557L36.3286 104.458L36.3286 104.45L36.3286 104.276L36.3286 103.896L36.3286 103.813L36.3286 103.788", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M34.4697 108.317L34.5937 108.218L34.6634 108.168L35.3839 107.623L35.3839 105.673", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M24.9395 113.565L25.8769 112.854L26.1248 112.672L26.1248 114.986", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M26.6836 116.028L26.6836 114.251L26.6836 112.234L26.6836 112.127L26.6836 112.036L26.6836 111.077", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M25.8769 114.804L26.1248 114.986L24.9395 115.879", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M24.9395 115.515L25.8769 114.804L25.8769 112.854", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M43.6274 105.64L43.6274 105.086L43.6274 105.078L43.6274 104.978L43.6274 104.97L43.6274 103.871L43.6274 100.706", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M43.6271 100.673L40.776 102.822L40.7682 102.822L40.6985 102.871L40.6907 102.871L38.2812 104.689", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M24.8467 119.804L24.8467 119.251L24.8467 119.242L24.8467 118.606L24.8467 118.234L24.8467 118.027L24.8467 117.416L24.8467 117.408L24.8467 114.854", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M19.106 119.168L19.106 119.193L19.106 122.366L19.106 124.135", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M28.6431 112.003L28.6431 113.606L28.6431 113.714L28.6431 115.168L28.6431 116.945", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M24.9395 117.35L26.6904 116.028L27.899 116.937L28.1237 117.003L28.4181 117.003L28.6428 116.937L30.7811 115.325L30.8508 115.275L33.1674 113.532L33.5315 113.259L33.7794 113.077L33.9498 112.945L34.0739 112.854L34.0816 112.846L34.1048 112.829L34.1126 112.821L34.1435 112.796L34.1746 112.771L34.2442 112.714L34.376 112.614L34.4689 112.449", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M38.2891 104.731L38.2891 105.755L38.2891 105.929L38.2891 105.937L38.2891 106.036L38.2891 106.045L38.2891 106.21L38.2891 107.904L38.2891 109.672", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M34.4697 110.16L35.81 109.144L35.8798 109.094L36.3214 108.763L37.53 109.672L37.7547 109.739L38.0491 109.739L38.2737 109.672L40.5671 107.945L40.6755 107.863L40.6833 107.854L40.6988 107.838L40.7297 107.813L40.7452 107.805L40.753 107.796L40.8692 107.714L43.6118 105.648L43.6816 105.516L43.7048 105.474", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M27.8911 116.945L27.8911 115.168L27.8911 113.152L27.8911 113.044L27.8911 112.003", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M27.8922 111.978L27.3344 111.557L26.6836 111.069", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M37.5459 109.664L37.5459 107.896L37.5459 105.64L37.5459 105.474L37.5459 105.466L37.5459 105.367L37.5459 105.359L37.5459 105.185L37.5459 104.722L37.5459 104.697", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M37.5446 104.697L36.9868 104.276L36.3747 103.813L36.3359 103.788", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M18.3545 124.135L18.3545 122.366L18.3545 119.193L18.3545 119.168", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M28.4185 117.011L28.4185 115.234L28.4185 113.54L28.4185 113.433L28.4185 112.069L28.4185 112.044", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M28.4195 112.044L28.125 112.044", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M28.1162 112.044L28.1162 112.069L28.1162 113.209L28.1162 113.317L28.1162 115.234L28.1162 117.011", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M34.4697 112.441L34.4697 111.342L34.4697 110.97L34.4697 110.664L34.4697 110.152L34.4697 110.143L34.4697 108.681L34.4697 108.309L34.4697 108.119L34.4697 108.011L34.4697 107.474", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M43.7197 105.474L43.7197 105.045L43.7197 105.036L43.7197 103.706L43.7197 100.516", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M38.064 109.739L38.064 107.97L38.064 106.036L38.064 105.871L38.064 105.863L38.064 105.764L38.064 105.755L38.064 105.582L38.064 104.797", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M38.0645 104.772L37.77 104.772", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M37.77 104.797L37.77 105.359L37.77 105.532L37.77 105.54L37.77 105.64L37.77 105.648L37.77 105.813L37.77 107.97L37.77 109.739", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M18.8813 124.209L18.8813 122.44L18.8813 119.267", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M18.5791 119.267L18.5791 122.44L18.5791 124.209", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M24.9395 119.639L24.9395 118.54L24.9395 118.168L24.9395 117.862L24.9395 117.35L24.9395 117.341L24.9395 115.879L24.9395 115.507L24.9395 114.689", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M28.6446 111.978L28.4185 112.053", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M34.4696 107.482L34.376 107.657", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M43.7211 100.508L43.6976 100.549L43.6274 100.682", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M24.8467 119.805L24.9403 119.631", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M19.1076 119.168L18.8813 119.243", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M28.1174 112.045L27.8911 111.978", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M37.7721 104.772L37.5459 104.706", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M18.5807 119.243L18.3545 119.176", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M34.376 107.673L34.376 107.648L34.376 107.111L34.376 107.086L34.376 106.441L34.376 106.243L34.376 106.078L34.376 105.904L34.376 105.293L34.376 105.268L34.376 105.185L34.376 104.788L34.376 103.268L34.376 103.103L34.376 103.094L34.376 102.995L34.376 102.987L34.376 102.813L34.376 102.747", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M28.6431 107.036L28.6431 107.061L28.6431 108.474L28.6431 108.582L28.6431 108.631L28.6431 108.689L28.6431 108.739L28.6431 108.929L28.6431 109.094L28.6431 109.234L28.6431 110.218L28.6431 110.557L28.6431 111.962L28.6431 111.986", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M1.28613 106.326L3.20751 107.772L3.58713 108.061L3.59489 108.069L3.97451 108.358L4.55558 108.796L4.56333 108.796L5.40781 109.433L5.5008 109.507L5.56276 109.557L5.99663 109.887L6.00439 109.896L6.97283 110.623L7.58488 111.086L7.75534 111.21L9.2971 112.375L12.5898 114.854L14.2168 116.085L14.3872 116.209L14.4802 116.275L15.2627 116.87L15.6579 117.168L15.7818 117.267L16.1769 117.565L17.1454 118.292", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M18.3539 114.234L17.7729 113.796L17.6799 113.73L17.5095 113.606L17.1375 113.325L15.8825 112.383L12.5898 109.904L11.048 108.739L10.8775 108.615L9.29704 107.425L9.28929 107.416L6.97277 105.664L5.99658 104.929L5.98882 104.929L5.55495 104.607L5.49298 104.557L5.4 104.483L4.57103 103.855L4.55552 103.838L3.98997 103.417L3.59483 103.119L3.58708 103.111L3.19194 102.813L1.29379 101.375L1.27832 101.359", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M1.28613 101.359L1.28613 101.384", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M35.6387 102.871L35.0576 103.309L34.9414 103.392L34.9337 103.4L34.8717 103.45L34.8639 103.458L34.7555 103.541L34.4766 103.755", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M36.3281 98.8465L35.9175 99.1605L35.9097 99.1605L35.84 99.2101L35.8322 99.2101L34.4609 100.243", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M34.4697 101.433L35.3917 100.739L35.6396 100.557L35.6396 102.871L35.3917 102.689", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M36.3286 103.813L36.3286 103.788L36.3286 102.045L36.3286 101.524L36.3286 99.8051L36.3286 99.5903L36.3286 99.582L36.3286 99.4828L36.3286 99.4746L36.3286 99.4167L36.3286 98.8796", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M34.4697 103.383L34.5085 103.359L34.617 103.276L34.6247 103.268L34.6866 103.218L34.6944 103.21L34.8106 103.127L35.3917 102.689L35.3917 100.739", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M24.9395 108.623L25.8769 107.912L26.1248 107.73L26.1248 110.044", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M26.6836 111.094L26.6836 111.069L26.6836 109.317L26.6836 107.466L26.6836 107.276L26.6836 107.226L26.6836 107.168L26.6836 107.119L26.6836 107.086L26.6836 107.036L26.6836 107.011L26.6836 106.697L26.6836 106.16", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M25.8769 109.862L26.0318 109.978L26.1248 110.044L26.0318 110.11L25.6367 110.408L24.9395 110.937", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M24.9395 110.573L25.6367 110.044L25.8769 109.862L25.8769 109.234L25.8769 107.92", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M43.6274 100.698L43.6274 100.673L43.6274 100.136L43.6274 100.111L43.6274 100.028L43.6274 100.003L43.6274 99.268L43.6274 98.9291L43.6274 95.764", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M43.6273 95.7392L41.2952 97.4994L41.1325 97.6234L40.7994 97.8796L40.7839 97.8961L40.7297 97.9374L40.7141 97.9539L39.4436 98.9126L39.2808 99.0365L38.3047 99.772", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M24.8467 114.871L24.8467 114.846L24.8467 114.309L24.8467 114.284L24.8467 113.639L24.8467 113.441L24.8467 113.276L24.8467 113.102L24.8467 112.565L24.8467 112.482L24.8467 112.457L24.8467 111.97L24.8467 109.929", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M24.8463 109.904L24.2575 110.35L24.0096 110.532L23.9398 110.59L23.7772 110.714L23.6377 110.821L20.7246 113.019L20.5542 113.143L19.0977 114.242", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M19.106 114.259L19.106 116.3L19.106 116.895L19.106 117.432L19.106 117.771L19.106 119.176", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M38.2891 99.7886L38.2891 100.946L38.2891 100.954L38.2891 101.053L38.2891 101.061L38.2891 102.954L38.2891 103.293L38.2891 104.697L38.2891 104.722", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M27.8911 112.003L27.8911 111.978L27.8911 111.135L27.8911 110.234L27.8911 108.383L27.8911 108.193L27.8911 108.144L27.8911 108.086L27.8911 108.036L27.8911 107.929L27.8911 107.078", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M27.8922 107.036L27.3111 106.598L27.2802 106.573L27.2259 106.532L27.0555 106.408L26.6836 106.127", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M37.5459 104.731L37.5459 104.706L37.5459 103.863L37.5459 102.962L37.5459 100.499L37.5459 100.491L37.5459 100.392L37.5459 100.384L37.5459 99.7886L37.5459 99.7638", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M36.3286 103.813L36.3674 103.838L36.9639 104.293L37.545 104.731", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M18.3545 119.168L18.3545 118.325L18.3545 117.424L18.3545 114.251L18.3545 114.226", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M28.4185 112.077L28.4185 112.052L28.4185 110.747L28.4185 110.309L28.4185 108.763L28.4185 108.573L28.4185 108.524L28.4185 108.466L28.4185 108.416L28.4185 108.309L28.4185 107.135", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M28.4195 107.111L28.125 107.111", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M28.1162 107.135L28.1162 108.086L28.1162 108.193L28.1162 108.243L28.1162 108.301L28.1162 108.35L28.1162 108.54L28.1162 110.292L28.1162 110.953L28.1162 112.036", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M34.4697 107.507L34.4697 106.375L34.4697 106.177L34.4697 106.011L34.4697 105.739L34.4697 105.251L34.4697 105.226L34.4697 105.202L34.4697 104.714L34.4697 103.755L34.4697 103.383L34.4697 103.326L34.4697 103.16L34.4697 103.152L34.4697 103.127L34.4697 103.078L34.4697 103.053L34.4697 103.045L34.4697 102.929L34.4697 102.871L34.4697 102.565", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M43.7197 100.532L43.7197 100.094L43.7197 100.07L43.7197 99.2019L43.7197 98.7639L43.7197 95.5987", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M38.064 104.797L38.064 104.772L38.064 103.466L38.064 103.028L38.064 100.896L38.064 100.888L38.064 100.789L38.064 100.78L38.064 99.863", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M38.0645 99.8299L37.77 99.8299", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M37.77 99.8547L37.77 100.549L37.77 100.557L37.77 100.656L37.77 100.665L37.77 103.02L37.77 103.681L37.77 104.764L37.77 104.788", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M18.5791 119.267L18.8735 119.267", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M18.5791 114.3L18.5791 114.325L18.5791 117.498L18.5791 118.16L18.5791 119.242L18.5791 119.267", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M24.9395 114.697L24.9395 114.672L24.9395 114.474L24.9395 114.449L24.9395 113.565L24.9395 113.366L24.9395 113.201L24.9395 112.928L24.9395 112.49L24.9395 112.408L24.9395 112.383L24.9395 111.895L24.9395 110.937L24.9395 110.565L24.9395 110.16L24.9395 109.722", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M18.8813 119.242L18.8813 117.936L18.8813 117.498L18.8813 116.746L18.8813 116.465L18.8813 114.325", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M18.8803 114.3L18.7099 114.3L18.6944 114.3L18.5859 114.3", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M28.6446 107.036L28.551 107.069L28.4185 107.111", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M34.376 107.674L34.4696 107.499", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M43.7211 95.5656L43.6976 95.6072L43.6274 95.7404", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M38.2901 99.7638L38.064 99.8304", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M38.064 104.797L38.2901 104.722", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M43.6274 100.699L43.6976 100.566L43.7211 100.524", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M24.9403 109.73L24.8467 109.905", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M28.1174 107.111L27.8911 107.044", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M37.7721 99.8304L37.5459 99.7638", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M37.5459 104.731L37.7721 104.805", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M18.5807 114.301L18.3545 114.234", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M34.376 102.739L34.376 102.714L34.376 102.177L34.376 102.152L34.376 101.508L34.376 101.284L34.376 101.144L34.376 100.97L34.376 100.896L34.376 100.359L34.376 100.334L34.376 98.4333L34.376 98.1192L34.376 98.111L34.376 98.0118L34.376 98.0036L34.376 97.797", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M34.377 97.7722L34.2221 97.8879L34.2144 97.8879L34.1446 97.9374L34.1369 97.9374L33.765 98.2184L33.5171 98.4002L33.1529 98.6729L32.3007 99.3093L31.0223 100.268L30.9061 100.351L30.8984 100.359L30.8829 100.367L30.8519 100.392L30.8364 100.408L30.8287 100.417L30.8209 100.425L30.728 100.499L30.7202 100.508L30.6039 100.59L30.387 100.755L28.7445 101.995L28.6206 102.086", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M18.3546 109.292L17.1459 108.383L15.8754 107.425L14.3336 106.259L14.1631 106.135L12.5826 104.945L12.5749 104.937L9.28218 102.458L9.27442 102.458L6.98117 100.731L6.00497 99.9952L5.98946 99.9787L5.5711 99.6647L5.50914 99.6151L5.41615 99.5407L4.58715 98.9126L4.57167 98.8961L4.00608 98.4746L3.61098 98.1771L3.60323 98.1689L3.2081 97.8714L1.30994 96.4334L1.29443 96.4169", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M1.28613 96.4169L1.28613 96.4425", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M35.6385 97.9292L34.9645 98.4333L34.9567 98.4333L34.8871 98.4829L34.8793 98.4829L34.4609 98.7969", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M34.4697 96.4912L35.3917 95.7971L35.6396 95.6152L35.6396 97.4829L35.6396 97.9374L35.3917 97.7556", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M36.3286 98.8713L36.3286 98.8465L36.3286 97.1028L36.3286 96.954L36.3286 94.6401L36.3286 94.6153L36.3286 94.5326L36.3286 94.5079L36.3286 93.9376L36.3286 93.9128", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M34.4697 98.4416L34.6402 98.3094L34.6479 98.3094L34.7177 98.2598L34.7254 98.2598L35.3994 97.7557L35.3994 97.673L35.3994 95.8053", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M24.9395 103.681L25.8769 102.97L26.1248 102.788L26.1248 105.102", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M26.6836 106.152L26.6836 106.127L26.6836 104.375L26.6836 102.26L26.6836 102.152L26.6836 102.07L26.6836 101.218", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M25.8769 104.929L26.0318 105.045L26.1248 105.111L26.0318 105.177L25.6367 105.474L24.9395 106.003", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M24.9395 105.631L25.6367 105.102L25.8769 104.921L25.8769 104.21L25.8769 102.97", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M43.6274 95.764L43.6274 95.7392L43.6274 95.202L43.6274 95.1772L43.6274 95.0946L43.6274 95.0698L43.6274 94.3095L43.6274 93.9955L43.6274 93.9211L43.6274 91.4667L43.6274 90.8304", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M24.8467 109.929L24.8467 109.904L24.8467 109.367L24.8467 109.342L24.8467 108.697L24.8467 108.474L24.8467 108.425L24.8467 108.334L24.8467 108.16L24.8467 108.086L24.8467 107.549L24.8467 107.524L24.8467 106.962L24.8467 104.995", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M19.106 109.292L19.106 109.317L19.106 109.953L19.106 112.408L19.106 112.482L19.106 112.796L19.106 114.226L19.106 114.251", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M28.6431 102.127L28.6431 103.623L28.6431 103.731L28.6431 104.086L28.6431 104.226L28.6431 105.218L28.6431 105.292L28.6431 105.557L28.6431 105.607L28.6431 107.036L28.6431 107.061", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M28.6431 107.061L28.7361 106.995L30.4173 105.731L30.6032 105.59L30.8589 105.4L30.9286 105.35L33.1754 103.656L33.5395 103.384L33.7875 103.202L34.0431 103.012L34.1283 102.946L34.1516 102.929L34.1593 102.921L34.1749 102.904L34.2058 102.879L34.2213 102.871L34.2291 102.863L34.3066 102.805L34.3453 102.78L34.3918 102.747", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M38.2891 94.8467L38.2891 95.4831L38.2891 95.9789L38.2891 96.0037L38.2891 96.0863L38.2891 96.1111L38.2891 97.9375L38.2891 98.0119L38.2891 98.3259L38.2891 99.7556L38.2891 99.7804", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M27.8911 107.061L27.8911 107.036L27.8911 106.168L27.8911 106.119L27.8911 105.78L27.8911 105.292L27.8911 103.177L27.8911 103.069L27.8911 102.136", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M37.5459 99.7886L37.5459 99.7638L37.5459 98.8961L37.5459 98.5077L37.5459 98.0201L37.5459 96.045L37.5459 95.5491L37.5459 95.5243L37.5459 95.4417L37.5459 95.4169L37.5459 94.8467L37.5459 94.8219", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M37.5446 94.8219L36.3359 93.9128", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M1.28613 101.384L3.20751 102.83L3.58713 103.119L3.59489 103.127L3.97451 103.417L4.54011 103.838L4.55558 103.855L5.40006 104.491L5.49304 104.565L5.55501 104.615L5.97341 104.929L5.98112 104.929L6.97283 105.681L9.27383 107.416L9.28159 107.425L10.8621 108.615L11.0325 108.739L12.5743 109.904L15.867 112.383L17.1376 113.342L17.494 113.614L17.6645 113.738L17.7574 113.805L18.354 114.251", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M18.3545 114.234L18.3545 113.366L18.3545 112.978L18.3545 112.49L18.3545 110.515L18.3545 109.317L18.3545 109.292", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M28.4185 107.135L28.4185 107.111L28.4185 105.78L28.4185 105.73L28.4185 105.392L28.4185 105.367L28.4185 103.565L28.4185 103.458L28.4185 102.202L28.4185 102.177", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M28.4195 102.169L28.125 102.169", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M28.1162 102.169L28.1162 102.193L28.1162 103.226L28.1162 103.334L28.1162 105.35L28.1162 105.598L28.1162 105.937L28.1162 105.987L28.1162 107.094L28.1162 107.119", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M28.1162 107.135L28.4106 107.135", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M34.4697 102.566L34.4697 102.541", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M34.4697 102.541L34.4697 102.392L34.4697 101.433L34.4697 101.202L34.4697 101.07L34.4697 101.061L34.4697 100.813L34.4697 100.789L34.4697 100.276L34.4697 100.251L34.4697 98.8135L34.4697 98.4416L34.4697 98.3589L34.4697 98.1854L34.4697 98.1771L34.4697 98.078L34.4697 98.0697L34.4697 97.5986", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M43.7197 95.5905L43.7197 95.1525L43.7197 95.1277L43.7197 94.2352L43.7197 94.1029L43.7197 93.855L43.7197 93.8302L43.7197 91.3923L43.7197 90.632", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M38.064 99.8547L38.064 99.8299L38.064 98.4994L38.064 98.111L38.064 98.0862L38.064 95.9458L38.064 95.921L38.064 95.8384L38.064 95.8136L38.064 95.6566L38.064 94.9211", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M37.77 99.8547L38.0645 99.8547", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M37.77 94.9211L37.77 95.5905L37.77 95.6152L37.77 95.6979L37.77 95.7227L37.77 95.8797L37.77 98.0945L37.77 98.3424L37.77 98.7308L37.77 99.8382L37.77 99.863", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M18.5791 114.325L18.6876 114.325L18.7418 114.325L18.8735 114.325", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M18.5791 109.383L18.5791 110.342L18.5791 112.557L18.5791 112.804L18.5791 113.193L18.5791 114.3", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M24.9395 109.755L24.9395 109.573L24.9395 108.615L24.9395 108.391L24.9395 108.342L24.9395 108.259L24.9395 108.251L24.9395 108.003L24.9395 107.978L24.9395 107.466L24.9395 107.441L24.9395 106.879L24.9395 106.003L24.9395 105.631L24.9395 105.152L24.9395 104.813", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M18.8813 114.3L18.8813 112.97L18.8813 112.581L18.8813 112.557L18.8813 110.119L18.8813 109.383", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M28.4185 107.136L28.551 107.094L28.6446 107.061", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M43.7211 90.6238L43.6976 90.6654L43.6274 90.7985", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M38.2901 94.8219L38.064 94.8884", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M38.064 99.8552L38.2901 99.7886", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M43.6274 95.7652L43.6976 95.6321L43.7211 95.5905", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M24.9403 104.788L24.8467 104.963", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M19.1076 109.292L18.8813 109.359", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M28.1174 102.169L27.8911 102.103", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M37.7721 94.8884L37.5459 94.8219", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M37.5459 99.7886L37.7721 99.8552", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M18.5807 109.359L18.3545 109.292", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M34.376 97.797L34.376 97.7722L34.376 97.235L34.376 97.2102L34.376 96.5656L34.376 96.1937L34.376 96.0202L34.376 95.4086L34.376 95.3838L34.376 93.4666L34.376 93.1691L34.376 93.1443L34.376 93.0616L34.376 93.0368L34.376 92.8633L34.376 92.8385", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M18.354 104.35L17.6025 103.78L17.432 103.656L17.1454 103.433L15.8515 102.458L15.8438 102.45L12.5511 99.9704L12.5433 99.9704L9.26612 97.4995L9.25061 97.483L6.97283 95.764L5.99663 95.0285L5.98112 95.012L5.56276 94.698L5.5008 94.6484L5.40781 94.574L4.57884 93.9459L4.56333 93.9294L3.99778 93.5079L3.60265 93.2104L3.59489 93.2022L3.19976 92.9047L1.30161 91.4667L1.28613 91.4502", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M1.28613 91.475L1.28613 91.5005", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M35.6387 92.9956L34.9802 93.4914L34.9647 93.5079L34.9105 93.5493L34.895 93.5658L34.4766 93.8798", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M36.3291 88.9709L35.934 89.2685L35.9185 89.285L35.8643 89.3263L35.8488 89.3428L34.4697 90.3841", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M34.4697 91.5493L35.3917 90.8552L35.6396 90.6733L35.6396 92.508L35.6396 92.9873L35.3917 92.8055", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M36.3286 93.9046L36.3286 92.1608L36.3286 91.9873L36.3286 89.6982L36.3286 89.6734L36.3286 89.5907L36.3286 89.5659L36.3286 89.4089L36.3286 88.9957", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M34.4697 93.4996L34.6479 93.3674L34.6634 93.3509L34.7177 93.3096L34.7332 93.293L35.3917 92.7972L35.3917 92.6898L35.3917 90.8551", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M24.9395 98.7474L25.8769 98.0366L26.1248 97.8548L26.1248 100.169", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M26.6836 101.21L26.6836 101.185L26.6836 99.4333L26.6836 97.4499L26.6836 97.2846L26.6836 97.2681L26.6836 97.1772L26.6836 97.1607L26.6836 97.0863L26.6836 97.0698L26.6836 96.9871L26.6836 96.6731L26.6836 96.2599", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M25.8769 99.9869L26.0318 100.103L26.1248 100.169L26.0318 100.235L25.6367 100.532L24.9395 101.061", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M24.9395 100.698L25.6367 100.169L25.8769 99.9869L25.8769 99.2514L25.8769 98.0449", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M43.6274 90.8221L43.6274 90.7973L43.6274 90.2601L43.6274 90.2354L43.6274 90.1527L43.6274 90.1279L43.6274 89.0536L43.6274 86.4917L43.6274 85.8885", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M43.6267 85.8554L40.7988 87.9875L40.7833 88.0041L40.7291 88.0454L40.7136 88.0619L38.2964 89.8883", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M24.8467 104.987L24.8467 104.962L24.8467 104.425L24.8467 104.4L24.8467 103.755L24.8467 103.45L24.8467 103.392L24.8467 103.218L24.8467 102.598L24.8467 102.574L24.8467 101.979L24.8467 100.045", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M19.106 104.375L19.106 104.978L19.106 107.54L19.106 109.284", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M28.6431 97.1854L28.6431 98.4746L28.6431 98.6482L28.6431 98.6647L28.6431 98.7556L28.6431 98.7639L28.6431 98.9291L28.6431 99.1192L28.6431 99.2597L28.6431 100.351L28.6431 100.582L28.6431 102.094L28.6431 102.119", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M38.2891 89.9048L38.2891 90.508L38.2891 91.0287L38.2891 91.0535L38.2891 91.1361L38.2891 91.1609L38.2891 93.0616L38.2891 94.8054L38.2891 94.8301", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M38.2891 94.8467L40.7218 93.0121L40.7373 92.9955L40.7915 92.9542L40.807 92.9377L43.6194 90.8138", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M27.8911 102.127L27.8911 102.103L27.8911 101.152L27.8911 100.359L27.8911 98.3755L27.8911 98.2102L27.8911 98.2019L27.8911 98.111L27.8911 98.0945L27.8911 97.9209L27.8911 97.1937", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M37.5459 94.8467L37.5459 94.8219L37.5459 93.0782L37.5459 91.0783L37.5459 90.6155L37.5459 90.5907L37.5459 90.5081L37.5459 90.4833L37.5459 89.9131L37.5459 89.8883", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M18.3545 109.292L18.3545 107.549L18.3545 105.549L18.3545 104.383", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M28.4185 102.193L28.4185 102.169L28.4185 100.756L28.4185 100.425L28.4185 98.7639L28.4185 98.5986L28.4185 98.5903L28.4185 98.4994L28.4185 98.4912L28.4185 98.3176L28.4185 97.2681L28.4185 97.2433", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M28.4195 97.2267L28.125 97.2267", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M28.1162 97.2516L28.1162 98.078L28.1162 98.2515L28.1162 98.2681L28.1162 98.359L28.1162 98.3755L28.1162 98.5408L28.1162 100.425L28.1162 100.979L28.1162 102.169", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M34.4697 97.6242L34.4697 97.5986", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M34.4697 97.5986L34.4697 96.4913L34.4697 96.1194L34.4697 95.8467L34.4697 95.3343L34.4697 95.3095L34.4697 93.8716L34.4697 93.4997L34.4697 93.3922L34.4697 93.2352L34.4697 93.2104L34.4697 93.1278L34.4697 93.103L34.4697 92.6898", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M43.7197 90.6485L43.7197 90.2105L43.7197 90.1857L43.7197 88.88L43.7197 86.4173L43.7197 85.7149", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M38.064 94.921L38.064 94.8962L38.064 93.1443L38.064 91.0039L38.064 90.9791L38.064 90.8964L38.064 90.8716L38.064 90.6898L38.064 89.9874", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M38.0645 89.9544L37.77 89.9544", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M37.77 89.9792L37.77 90.6486L37.77 90.6734L37.77 90.756L37.77 90.7808L37.77 90.9048L37.77 93.1443L37.77 94.888L37.77 94.9128", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M18.8813 109.383L18.8813 109.358L18.8813 107.615L18.8813 105.152L18.8813 104.45", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M18.5791 104.45L18.5791 105.375L18.5791 107.615L18.5791 109.358L18.5791 109.383", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M24.9395 104.821L24.9395 104.565L24.9395 103.689L24.9395 103.383L24.9395 103.326L24.9395 103.053L24.9395 102.532L24.9395 102.507L24.9395 101.912L24.9395 101.061L24.9395 100.689L24.9395 100.177L24.9395 99.8712", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M18.8803 104.425L18.5859 104.425", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M43.7211 85.6901L43.6976 85.7317L43.6274 85.8648", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M38.2901 89.88L38.064 89.9465", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M38.064 94.9215L38.2901 94.855", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M43.6274 90.8233L43.6976 90.6901L43.7211 90.6485", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M24.8467 104.988L24.9403 104.813", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M19.1076 104.35L18.8813 104.417", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M37.7721 89.9548L37.5459 89.8883", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M18.5807 104.425L18.3545 104.359", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M34.376 92.8551L34.376 92.8303L34.376 92.2931L34.376 92.2683L34.376 91.6237L34.376 91.2519L34.376 91.0783L34.376 90.8717L34.376 90.4585L34.376 90.4337L34.376 88.4834L34.376 88.4669L34.376 88.2107L34.376 88.1859L34.376 88.1033L34.376 88.0785L34.376 87.8801L34.376 87.8719", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M34.3762 87.8884L34.2445 87.9875L34.2291 88.0041L34.1748 88.0454L34.1593 88.0619L33.7796 88.3511L33.5318 88.5329L33.1676 88.8057L32.3154 89.442L30.9673 90.4585", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M18.3546 99.4085L17.1459 98.4994L15.8289 97.5077L15.8211 97.5077L12.5439 95.0368L12.5284 95.0202L9.27442 92.5658L9.25895 92.5493L6.98117 90.8304L6.00497 90.0949L5.98946 90.0783L5.5711 89.7643L5.50914 89.7147L5.41615 89.6403L4.58715 89.0123L4.57167 88.9957L4.00608 88.5743L3.61098 88.2768L3.60323 88.2685L3.2081 87.971L1.29443 86.5248", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M35.6387 88.0536L34.9802 88.5495L34.9647 88.566L34.9105 88.6073L34.895 88.6239L34.4766 88.9379", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M34.4697 86.6157L35.3917 85.9215L35.6396 85.7397L35.6396 87.5412L35.6396 87.5578L35.6396 88.0619L35.3917 87.8801", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M36.3286 88.9958L36.3286 88.971L36.3286 87.2272L36.3286 87.0206L36.3286 87.0041L36.3286 84.7563L36.3286 84.7315L36.3286 84.6488L36.3286 84.6241L36.3286 84.029L36.3286 84.0208", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M34.4697 88.566L34.6479 88.4338L34.6634 88.4173L34.7177 88.3759L34.7332 88.3594L35.3917 87.8636L35.3917 87.7231L35.3917 87.7065L35.3917 85.905", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M26.6827 91.3014L26.6284 91.3427L26.5587 91.3923L24.9395 92.6154", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M24.9395 93.8055L25.8769 93.0947L26.1248 92.9129L26.1248 95.2269", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M26.6836 96.2681L26.6836 96.2433L26.6836 94.4914L26.6836 92.3014L26.6836 92.2931L26.6836 92.1939L26.6836 92.1857L26.6836 92.103L26.6836 92.0948L26.6836 91.3014L26.6836 91.2932", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M25.8769 95.045L26.0318 95.1607L26.1248 95.2268L26.0318 95.293L25.6367 95.5905L24.9395 96.1194", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M24.9395 95.7558L25.6367 95.2268L25.8769 95.045L25.8769 94.2682L25.8769 93.0947", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M43.6274 85.8802L43.6274 85.8554L43.6274 85.3182L43.6274 85.2934L43.6274 85.2108L43.6274 85.186L43.6274 84.1117L43.6274 83.9051L43.6274 81.5168L43.6274 81.5002L43.6274 80.9135", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M38.2891 84.9381L38.2891 85.5331L38.2891 85.5497L38.2891 86.1034L38.2891 86.1282L38.2891 86.2108L38.2891 86.2356L38.2891 87.9297L38.2891 88.1363L38.2891 89.88L38.2891 89.9048", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M24.8467 100.045L24.8467 100.02L24.8467 99.4829L24.8467 99.4581L24.8467 98.8135L24.8467 98.4829L24.8467 98.4664L24.8467 98.4416L24.8467 98.2681L24.8467 98.0615L24.8467 97.6483L24.8467 97.6235L24.8467 97.5821L24.8467 96.9871L24.8467 95.0699L24.8467 95.0616", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M24.847 95.0781L24.2582 95.5243L24.0335 95.6896L24.0103 95.7061L23.7701 95.8879L23.6306 95.9954L22.1509 97.111", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M19.106 99.4167L19.106 100.003L19.106 100.02L19.106 102.408L19.106 102.615L19.106 104.359L19.106 104.383", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M19.106 104.375L19.9504 103.739L20.7407 103.144L22.1507 102.078L23.6305 100.962L23.77 100.855L24.0101 100.673L24.0257 100.665L24.2581 100.491L24.8469 100.045", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M28.6431 92.227L28.6431 93.6732L28.6431 93.6815L28.6431 93.7806L28.6431 93.7889L28.6431 94.1442L28.6431 94.2847L28.6431 95.2103L28.6431 95.4087L28.6431 95.607L28.6431 95.6235L28.6431 97.1606L28.6431 97.1854", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M38.2891 89.9048L40.7218 88.0702L40.7373 88.0536L40.7915 88.0123L40.807 87.9958L43.6194 85.8719", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M27.8911 97.1854L27.8911 97.1606L27.8911 96.1855L27.8911 96.1689L27.8911 95.7723L27.8911 95.4086L27.8911 93.2187L27.8911 93.2104L27.8911 93.1112L27.8911 93.103L27.8911 92.2187", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M26.6836 96.2681L26.9548 96.4747L27.1252 96.5987L27.2182 96.673L27.2259 96.6813L27.8922 97.1854", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M37.5459 89.9048L37.5459 89.88L37.5459 88.4917L37.5459 88.1363L37.5459 86.1116L37.5459 86.0951L37.5459 85.6736L37.5459 85.6488L37.5459 85.5662L37.5459 85.5414L37.5459 84.9464L37.5459 84.9381", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M37.5446 84.9381L36.3359 84.0291", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M18.3545 104.375L18.3545 104.35L18.3545 102.962L18.3545 102.607L18.3545 100.582L18.3545 100.565L18.3545 99.4167L18.3545 99.4084", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M1.28613 91.4998L3.20751 92.946L3.58714 93.2352L3.59489 93.2435L3.97451 93.5327L4.54011 93.9542L4.55558 93.9707L5.40006 94.607L5.49304 94.6814L5.55501 94.731L5.95014 95.0285L5.96565 95.045L6.96508 95.7971L9.22738 97.4995L9.24285 97.516L12.5201 99.987L12.5278 99.987L15.8205 102.466L15.8283 102.474L17.1376 103.458L17.4088 103.664L17.5792 103.788L18.3462 104.367", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M28.4185 97.2516L28.4185 97.2268L28.4185 95.7888L28.4185 95.7723L28.4185 95.4748L28.4185 95.3756L28.4185 93.6154L28.4185 93.6071L28.4185 93.5079L28.4185 93.4997L28.4185 92.2931L28.4185 92.2849", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M28.1162 92.2931L28.1162 93.2765L28.1162 93.2848L28.1162 93.384L28.1162 93.3922L28.1162 95.4831L28.1162 95.607L28.1162 96.0037L28.1162 96.0202L28.1162 97.235L28.1162 97.2598", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M34.4697 92.6906L34.4697 92.665", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M34.4697 92.6567L34.4697 91.5493L34.4697 91.1774L34.4697 91.0534L34.4697 90.9047L34.4697 90.7972L34.4697 90.384L34.4697 90.3593L34.4697 88.9296L34.4697 88.5577L34.4697 88.4172L34.4697 88.4007L34.4697 88.285L34.4697 88.2602L34.4697 88.1775L34.4697 88.1527L34.4697 87.7148", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M43.7197 85.7149L43.7197 85.2769L43.7197 85.2521L43.7197 84.0951L43.7197 83.9464L43.7197 83.8389L43.7197 81.4506L43.7197 81.4341L43.7197 80.7482", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M38.064 89.9792L38.064 89.9544L38.064 88.2107L38.064 88.1033L38.064 86.0703L38.064 86.0455L38.064 85.9629L38.064 85.9381L38.064 85.7232L38.064 85.7067L38.064 85.0208", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M37.77 85.0208L37.77 85.715L37.77 85.7397L37.77 85.8224L37.77 85.8472L37.77 85.9298L37.77 85.9463L37.77 88.2107L37.77 88.3264L37.77 89.9544L37.77 89.9792", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M18.5791 104.45L18.8735 104.45", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M18.8813 104.45L18.8813 104.425L18.8813 102.681L18.8813 102.574L18.8813 100.185L18.8813 100.169L18.8813 99.4829", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M18.5791 99.4829L18.5791 100.4L18.5791 100.417L18.5791 102.689L18.5791 102.805L18.5791 104.433L18.5791 104.458", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M24.9395 99.8795L24.9395 99.8547L24.9395 99.6564L24.9395 99.6316L24.9395 99.5986L24.9395 98.7474L24.9395 98.4168L24.9395 98.4003L24.9395 98.3755L24.9395 98.2515L24.9395 98.1028L24.9395 97.9953L24.9395 97.5821L24.9395 97.5573L24.9395 97.516L24.9395 96.921L24.9395 96.1111L24.9395 95.7392L24.9395 95.1938L24.9395 94.9046L24.9395 94.8963", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M18.8803 99.4829L18.5859 99.4829", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M28.6446 92.2187L28.551 92.252L28.4185 92.2936", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M28.4185 97.252L28.551 97.2104L28.6446 97.1771", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M34.376 92.8562L34.4696 92.6815", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M38.064 89.9796L38.2901 89.913", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M43.6274 85.8814L43.6976 85.7483L43.7211 85.7066", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M19.1076 99.4084L18.8813 99.475", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M28.1174 92.2853L27.8911 92.2187", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M37.7721 85.0129L37.5459 84.9463", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M37.5459 89.9048L37.7721 89.9713", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M34.376 87.8884L34.376 87.3347L34.376 87.3264L34.376 86.6818L34.376 86.3099L34.376 86.1198L34.376 85.5083L34.376 85.5L34.376 83.5167L34.376 83.5084L34.376 83.2853L34.376 83.2605L34.376 83.1778L34.376 83.153L34.376 82.9299", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M34.3763 82.9299L34.2291 83.0456L34.2136 83.0621L34.1593 83.1035L34.1438 83.12L33.7797 83.3927L33.5318 83.5745L33.1677 83.8472L32.3154 84.4836L30.9518 85.5083L30.9364 85.5248L30.9054 85.5496L30.8821 85.5662L30.8666 85.5827L30.8434 85.5992L30.7504 85.6736L30.6807 85.7232L30.4095 85.9298L28.8212 87.1281L28.6431 87.2603", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M17.8971 94.1029L17.1533 93.541L15.844 92.5575L15.8285 92.541L12.5745 90.0866L12.559 90.0701L9.30507 87.6156L9.28956 87.5991L6.99627 85.8719L6.02783 85.1447L6.01235 85.1281L5.58624 84.8058L5.52423 84.7563L5.43129 84.6819L4.60228 84.0538L4.02897 83.6158L3.63384 83.3183L3.62608 83.31L3.23095 83.0125L1.30957 81.5663", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M1.28613 81.5746L1.28613 86.5413", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M35.6387 83.0869L34.9647 83.591L34.9492 83.6076L34.895 83.6489L34.8795 83.6654L34.4766 83.9712", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M34.1748 81.8804L35.3989 80.9631L35.6468 80.7813L35.6468 82.5663L35.6468 82.5746L35.6468 83.0952L35.3989 82.9134", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M36.3286 84.029L36.3286 82.2605L36.3286 82.0374L36.3286 82.0291L36.3286 79.8144L36.3286 79.7896L36.3286 79.7069L36.3286 79.6822L36.3286 79.0623", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M34.4697 83.5993L34.6324 83.4753L34.6479 83.4588L34.7022 83.4175L34.7177 83.401L35.3917 82.8968L35.3917 82.7398L35.3917 82.7316L35.3917 80.9465", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M24.6367 89.0702L25.8763 88.1363L26.1243 87.9545L26.1243 90.2685", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M26.6836 91.3014L26.6836 89.5329L26.6836 87.3594L26.6836 87.3346L26.6836 87.252L26.6836 87.2272L26.6836 87.1694L26.6836 87.1446L26.6836 86.3512", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M25.8769 90.0866L26.0318 90.2023L26.1248 90.2684L26.0318 90.3345L25.6367 90.632L24.9395 91.1609", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M24.9395 90.7973L25.6367 90.2684L25.8769 90.0866L25.8769 89.2932L25.8769 88.1363", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M43.6274 80.9217L43.6274 80.3598L43.6274 80.3515L43.6274 80.2523L43.6274 80.2441L43.6274 79.145L43.6274 76.5418L43.6274 76.5335L43.6274 75.955", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M24.8467 95.0864L24.8467 94.5244L24.8467 94.5161L24.8467 93.8716L24.8467 93.4997L24.8467 93.4914L24.8467 93.3096L24.8467 92.6898L24.8467 92.6815L24.8467 92.6071L24.8467 92.0121L24.8467 90.1031", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M24.8469 90.1196L24.2581 90.5659L24.0412 90.7229L24.0101 90.7477L23.77 90.9295L23.6305 91.037L22.1507 92.1526L20.7407 93.2187L19.9504 93.8137L19.106 94.45", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M5.57129 75.889L5.57129 76.2195L5.57129 77.5583", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M5.57091 76.2195L5.50894 76.1038L5.42371 75.9551L5.4082 75.798", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M5.4082 75.798L5.4082 77.674", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M19.106 94.45L19.106 95.0285L19.106 95.0367L19.106 97.6482L19.106 99.4167L19.106 99.4249", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M19.106 99.4167L19.9504 98.7804L20.7407 98.1854L22.1507 97.1193", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M28.6431 87.2603L28.6431 88.7065L28.6431 88.7313L28.6431 88.8139L28.6431 88.8387L28.6431 89.1693L28.6431 89.3097L28.6431 90.4502L28.6431 90.632L28.6431 90.6402L28.6431 92.2187L28.6431 92.227", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M28.6431 92.227L28.8135 92.0948L30.4095 90.8882L30.6729 90.6899L30.7504 90.632L30.8434 90.5576L30.8821 90.5246L30.8977 90.5081L30.9054 90.4998L30.9518 90.4667L30.9673 90.4502", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M38.2891 79.9797L38.2891 80.5581L38.2891 80.5664L38.2891 81.1614L38.2891 81.1862L38.2891 81.2689L38.2891 81.2936L38.2891 83.1779L38.2891 84.9464L38.2891 84.9546", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M27.8911 92.227L27.8911 91.2022L27.8911 91.1939L27.8911 90.4502L27.8911 88.2767L27.8911 88.2519L27.8911 88.1693L27.8911 88.1445L27.8911 87.2603", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M27.8922 87.2603L27.4119 86.8967L27.2259 86.7562L27.2104 86.7397L26.6836 86.343", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M37.5459 84.9381L37.5459 83.1696L37.5459 81.1201L37.5459 81.1118L37.5459 80.7234L37.5459 80.6986L37.5459 80.616L37.5459 80.5912L37.5459 79.9714", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M37.545 79.9796L36.6772 79.3268", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M18.3545 99.4167L18.3545 97.6482L18.3545 95.5987L18.3545 95.5904L18.3545 94.45", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M1.28613 86.5413L3.20751 87.9875L3.60264 88.285L3.6104 88.285L4.0055 88.5826L4.57109 89.004L4.58656 89.0205L5.42332 89.6486L5.51627 89.723L5.57827 89.7726L5.98888 90.0866L6.00439 90.1031L6.9883 90.8469L9.26612 92.5658L9.28159 92.5823L12.5356 95.0368L12.5511 95.0533L15.8283 97.5243L15.836 97.5243L17.1531 98.5159L18.3617 99.425", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M28.4185 92.2931L28.4185 90.8056L28.4185 90.7973L28.4185 90.5163L28.4185 88.6652L28.4185 88.6404L28.4185 88.5578L28.4185 88.533L28.4185 87.3264", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M28.1162 87.3264L28.1162 88.3098L28.1162 88.3346L28.1162 88.4173L28.1162 88.4421L28.1162 90.5163L28.1162 91.0205L28.1162 91.0287L28.1162 92.2849L28.1162 92.2931", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M34.4697 87.7231L34.4697 86.6157L34.4697 86.2438L34.4697 85.9546L34.4697 85.4422L34.4697 85.4339L34.4697 83.9712L34.4697 83.5993L34.4697 83.4423L34.4697 83.434L34.4697 83.3514L34.4697 83.3266L34.4697 83.2439L34.4697 83.2191L34.4697 82.7564", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M43.7197 80.7482L43.7197 80.3102L43.7197 80.3019L43.7197 78.9714L43.7197 76.4674L43.7197 76.4591L43.7197 75.7815", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M38.064 85.0207L38.064 83.2522L38.064 81.1284L38.064 81.1036L38.064 81.0209L38.064 80.9961L38.064 80.74L38.064 80.7317L38.064 80.054", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M37.77 85.0208L38.0645 85.0208", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M37.77 80.054L37.77 80.773L37.77 80.7978L37.77 80.8804L37.77 80.9052L37.77 80.9548L37.77 80.9631L37.77 83.2522L37.77 85.0207L37.77 85.029", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M18.5791 99.4829L18.8735 99.4829", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M18.5791 94.5244L18.5791 95.4252L18.5791 95.4335L18.5791 97.7226L18.5791 99.4911", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M24.9395 94.9128L24.9395 94.6979L24.9395 94.6897L24.9395 94.6153L24.9395 93.8054L24.9395 93.4335L24.9395 93.4253L24.9395 93.1443L24.9395 92.6237L24.9395 92.6154L24.9395 92.541L24.9395 91.946L24.9395 91.1527L24.9395 90.7808L24.9395 90.2188L24.9395 89.9378", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M18.8813 99.4829L18.8813 97.7144L18.8813 95.2104L18.8813 95.2021L18.8813 94.5244", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M27.8911 92.227L28.1174 92.3019", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M26.8457 131.919L27.2021 132.184L27.3261 132.275L27.7754 132.613", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M27.7759 132.622L27.8999 132.713L28.3569 133.06L28.3647 133.051L28.4887 132.961L28.6436 132.845L28.8916 132.663L30.5108 131.44L30.7587 131.258L33.2225 129.399L33.3464 129.308", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M34.5085 128.424L34.7951 128.209L34.7951 128.019L34.7951 127.077L34.4697 126.837", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M1.28667 125.845L1 126.06L1 126.308L1.28667 126.523L3.20805 127.969L3.4095 128.126L3.59543 128.267L3.79688 128.424L4.37794 128.862L17.1381 138.489L17.2156 138.547L17.4481 138.374", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M17.2236 138.299L17.2859 138.25", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M1 126.06L1.28667 126.275L3.57992 128.002L3.97506 128.3L4.55612 128.738L17.2311 138.299L17.2311 138.555", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M17.6343 92.2683L21.0122 89.723L21.0277 89.7064L25.6298 86.2355L26.0249 85.938L26.6214 85.4835L28.6823 83.9299L28.6978 83.9133L28.752 83.872L28.7675 83.8555L30.4022 82.6241L30.7432 82.368L30.7973 82.3266L31.177 82.0374L31.1925 82.0209L31.9595 81.4424L31.975 81.4259L32.0292 81.3845L32.0447 81.368L32.3159 81.1697L35.2367 78.9714L35.2522 78.9549L35.3064 78.9136L35.3219 78.8971L38.5217 76.484L38.5914 76.4344L41.8067 74.0047L41.8531 73.9717", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M41.8678 74.4923L41.8678 74.0626L41.8678 73.9882L41.5966 73.7816L41.5502 73.8147L38.3349 76.2443L38.2652 76.2939L35.0654 78.707L35.0499 78.7235L34.9957 78.7648L34.9802 78.7814L32.3306 80.7813L31.796 81.1862L31.7805 81.2027L31.7262 81.244L31.7108 81.2606L30.9437 81.8391L30.9282 81.8556", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M17.3628 92.07L17.634 92.2766L17.634 92.3675L17.634 92.7724", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M20.7481 89.5164L19.9578 90.1114L17.3701 92.0617L17.3701 92.5576", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M1.28667 115.837L1 116.052L1 116.3L1.28667 116.515L3.20805 117.961L3.42497 118.127L3.59543 118.259L3.81235 118.424L4.39341 118.862L5.4006 119.622L5.49358 119.697L5.55555 119.746L5.82671 119.953L6.96562 120.812L7.4537 121.184L7.62416 121.308L7.71715 121.374L8.77078 122.168L9.15816 122.457L10.0414 123.118L10.4365 123.416L11.0176 123.854L17.1459 128.473", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M17.1455 128.482L17.2235 128.54L17.4029 128.399L17.4107 128.391", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M17.2236 128.292L17.2396 128.283L17.2476 128.275", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M1 116.052L1.28667 116.267L3.59543 118.003L3.99056 118.3L4.57163 118.738L5.41611 119.374L6.01268 119.821L6.98885 120.556L7.64739 121.052L7.90308 121.242L10.2196 122.994L10.6147 123.292L11.1958 123.73L17.1537 128.225", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M17.1455 128.234L17.223 128.291L17.223 128.548", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M25.6217 83.3431L26.5514 82.6407L26.6212 82.5828L26.7606 82.4754L26.7761 82.4589L26.8304 82.4176L26.8458 82.401L30.0301 79.9962L30.0456 79.9797L30.0998 79.9383L30.1153 79.9218L30.7351 79.4508L30.8281 79.3764L30.8901 79.3268L30.9133 79.3103L31.7965 78.6409L32.3001 78.2607L32.3931 78.1946L32.3931 77.9219L32.3001 77.8558L30.8901 76.7897L30.8281 76.7402L30.8049 76.7236L30.7894 76.7071L30.7351 76.6658L30.3943 76.4096L30.2547 76.3022L29.8597 76.0046L29.0926 75.4262L29.0772 75.4096L26.6134 73.5502L26.5437 73.5006L25.8232 72.9552L25.8077 72.9387L25.6605 72.823L22.1508 75.4675L22.0036 75.5832L21.9881 75.5997L20.7485 76.5335L19.9583 77.1286L18.8813 77.9384L18.8813 78.2112L19.4779 78.6574L19.9583 79.021L20.3611 79.3268L20.6323 79.5334L20.6943 79.5747L20.7563 79.616L22.1663 80.6821L23.7855 81.9052L24.1807 82.2027L24.4596 82.4093L24.8548 82.7068L25.4203 83.1283L25.4358 83.1448L25.6217 83.3431Z", stroke: "#1C6BCF", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M32.4081 77.955L32.3151 78.0211L31.8115 78.4012L30.7501 79.2029L29.9521 79.8061L29.9366 79.8227L29.8824 79.864L29.8669 79.8805L26.6826 82.2853L26.6671 82.3019L26.6362 82.3267L26.6129 82.3432L26.5974 82.3597L25.6367 83.087", stroke: "#1C6BCF", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M18.874 77.988L19.4706 78.4343L20.532 79.2359L22.2984 80.5664L22.3139 80.5829L24.6149 82.3184L25.0101 82.6159L25.5757 83.0373L25.5912 83.0539L25.6221 83.0787L25.6221 83.3514", stroke: "#1C6BCF", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M17.9819 68.6L21.8945 65.6498L22.1114 65.4845L26.3415 62.2946", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M26.3505 62.7904L26.3505 62.683L26.3505 62.3524L26.3505 62.2945L26.0794 62.0879L21.8492 65.2779L21.6322 65.4432L20.749 66.1125L19.9588 66.7076L17.7197 68.3934L17.7197 68.8893", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M17.7114 68.3934L17.9826 68.6L17.9826 68.691L17.9826 69.0959", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M2.1001 80.5829L5.40828 78.0872L6.72537 77.0955L11.1337 73.7651", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M11.134 74.2609L11.134 73.7651L10.8628 73.5585L6.67142 76.7153L6.45447 76.8806L5.57125 77.55L5.50929 77.5996L5.4163 77.674L1.83691 80.3763L1.83691 80.8391L1.83691 80.8722", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M1.82861 80.3763L2.09978 80.5829L2.09978 80.6408L2.09978 80.6738L2.09978 80.9713L2.09978 81.0788", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M27.2022 135.051L26.9155 135.266L26.9155 135.787L28.5735 137.035L34.9807 132.2L34.9807 132.126L34.7793 131.977L34.7793 131.828L34.5546 131.663L34.5546 131.514L34.5081 131.473", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M28.5732 136.969L28.5732 137.045", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M34.9812 132.142L28.574 136.977L28.3726 136.828", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M34.7798 131.985L28.3726 136.82L28.3726 136.721L28.3726 136.679", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M34.7785 131.845L34.5073 132.051L34.453 132.093L34.3834 132.142L28.4952 136.58L28.441 136.622L28.3712 136.671L28.1543 136.506", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M34.5548 131.671L34.5078 131.713", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M28.147 136.357L28.147 136.507L28.3654 136.341", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M34.5548 131.531L34.5078 131.573", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M27.9463 136.208L28.1555 136.365L28.3724 136.2", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M34.3532 131.374L33.9116 131.704L33.8729 131.737L28.4961 135.795", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M27.9463 136.043L27.9463 136.208L28.3724 135.886", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M34.3848 131.399L34.3537 131.374L34.3537 131.209L33.9121 130.878", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M34.3532 131.209L33.9116 131.539L33.7877 131.63L28.4961 135.622", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M26.9155 135.266L27.2022 135.481L27.2642 135.531L27.3261 135.58L27.7755 135.919L27.8995 136.01L27.9382 136.043L28.3643 135.721", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M21.8495 65.2779L20.7415 64.4432L20.3929 64.3358L20.1837 64.3275L19.9435 64.3771L5.49435 75.2691L5.40137 75.4675L5.40137 75.798", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M6.6788 76.7236L5.57091 75.889L5.46245 75.6906L5.42371 75.6245L5.4082 75.4675", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M5.4082 75.798L5.42371 75.9551L5.50894 76.1038L5.57091 76.2195L6.45412 76.8889", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M1.82846 80.8391L1.28613 81.2441L1.28613 81.5746", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M18.3551 94.1195L16.0541 92.384L16.0386 92.3675L12.7846 89.9131L12.7691 89.8965L9.51515 87.4421L9.49967 87.4256L6.98943 85.5331L6.2457 84.9711L6.23019 84.9546L5.42445 84.3431L4.8124 83.8803L4.23133 83.4423L3.8362 83.1448L1.51969 81.3928L1.30273 81.2275", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M1.28613 81.5746L3.20751 83.0208L3.60264 83.3183L3.6104 83.3266L4.0055 83.6241L4.57884 84.0621L5.40781 84.6902L5.5008 84.7646L5.56276 84.8141L5.98888 85.1364L6.00439 85.153L6.97283 85.8802L9.26612 87.6074L9.28159 87.6239L12.5356 90.0784L12.5511 90.0949L15.805 92.5493L15.8205 92.5658L17.8736 94.1112L18.3385 94.4583L18.5632 94.5244L18.8576 94.5244L19.0822 94.4583L19.9267 93.822L20.717 93.227L22.1271 92.1609L23.6068 91.0452L23.7463 90.9378L23.9865 90.756L24.0174 90.7312L24.2344 90.5742L24.8232 90.1279", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M18.3545 94.45L18.3545 94.1195L18.5792 94.1856", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M18.5859 94.5244L18.5859 94.1938L18.8803 94.1938", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M18.8813 94.5244L18.8813 94.1938L19.1061 94.1277", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M19.106 94.45L19.106 94.1194L23.6383 90.7064L24.0179 90.4171L24.2658 90.2353L24.8547 89.7891", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M24.8467 90.1196L24.8467 89.7891L24.9086 89.6734L24.9397 89.6155", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M24.8467 90.1208L24.9403 89.9461", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M24.9395 89.9544L24.9395 89.7313L24.9395 89.6238L24.9395 89.4007", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M24.9395 89.9559L24.9395 89.7313", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M24.9398 89.7312L24.9398 89.6486L24.9398 89.4007L24.8468 89.2271L24.6376 89.0701L24.3974 88.8883L24.3897 88.8801L24.3819 88.8718L23.8551 88.4751L23.6382 88.3098", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M26.683 86.0124L26.6287 86.0537L26.0321 86.5083L23.9868 88.0537L23.6382 88.3181", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M26.6836 86.343L26.6836 86.0124L27.4351 86.5744L27.4506 86.5909L27.8922 86.9297", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M23.855 88.4833L26.5589 86.4421L26.6286 86.3925L26.6828 86.3512L27.2097 86.7479L27.2252 86.7644L27.4111 86.9049", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M27.8911 87.2603L27.8911 86.9297L28.1158 86.9958", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M27.8911 87.2603L28.1158 87.3264L28.4102 87.3264L28.5419 87.2851L28.6349 87.2521L28.8131 87.1198L30.4014 85.9215L30.6725 85.7149L30.7423 85.6654L30.8352 85.591L30.8585 85.5745L30.8739 85.5579L30.8972 85.5414L30.9282 85.5166L30.9437 85.5001L32.3072 84.4753L33.1595 83.839L33.5236 83.5663L33.7715 83.3845L34.1357 83.1118L34.1512 83.0952L34.2054 83.0539L34.2209 83.0374L34.3681 82.9217L34.4611 82.7481", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M28.1162 87.3264L28.1162 86.9958L28.4106 86.9958", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M28.4185 87.3264L28.4185 86.9958L28.6431 86.9297", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M28.6431 87.2603L28.6431 86.9297L30.4095 85.5992L30.4637 85.5578L30.6497 85.4174L30.6652 85.4008L30.7194 85.3595L30.7349 85.343L30.7504 85.3347L32.3232 84.153L33.1754 83.5166L33.5395 83.2439L33.7875 83.0621L33.9346 82.9547L33.9501 82.9381L34.0044 82.8968L34.0199 82.8803L34.3918 82.5993", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M34.376 82.9299L34.376 82.5993L34.4379 82.4836L34.469 82.4258", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M34.469 82.7564L34.469 82.4258L34.469 82.2027L34.376 82.0291L34.1669 81.8721L33.919 81.6903L33.3767 81.2854L33.1597 81.1201", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M34.4697 82.5332L34.4697 82.2027", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M36.329 78.7401L35.7014 79.2111L35.6859 79.2276L35.6317 79.269L35.6162 79.2855L33.168 81.1284", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M36.3286 79.0706L36.3286 78.7401L37.5372 79.6491", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M33.3848 81.2854L35.833 79.4425L35.8485 79.426L35.9027 79.3847L35.9182 79.3681L36.3288 79.0624L36.6698 79.3185L37.5374 79.9714L37.7621 80.0458L38.0565 80.0458L38.2812 79.9714L40.6985 78.145L40.7682 78.0955L43.6115 75.9468L43.6813 75.8146L43.7045 75.7733L43.7045 75.5501", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M37.5459 79.9797L37.5459 79.6491L37.7705 79.7152", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M37.77 80.054L37.77 79.7235L38.0645 79.7235", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M38.064 80.054L38.064 79.7234L38.2886 79.6573", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M38.2891 79.9796L38.2891 79.6491L40.4894 77.988L40.5591 77.9384L43.6272 75.6245", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M43.6274 75.955L43.6274 75.6245L43.6894 75.5088L43.7204 75.4509", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M43.7197 75.7898L43.7197 75.5666L43.7197 75.4592L43.7197 75.3518L43.7197 75.2361", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M43.7194 75.5667L43.7194 75.3518L43.7194 75.2361L43.6961 75.1948L43.6264 75.0625L41.3253 73.3271L41.3098 73.3106L38.0559 70.8561L38.0404 70.8396L34.7864 68.3852L34.7709 68.3686L32.3305 66.5258L31.517 65.906L31.5015 65.8894L30.9281 65.4514L30.8661 65.4019L30.7732 65.3275L30.0914 64.8151L29.518 64.3771L29.1229 64.0796L28.968 63.9639L28.5729 63.6664L26.7987 62.3276L26.6514 62.2119L26.5818 62.1623L26.3726 62.3194", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M146.809 35.0893L147.916 34.2546L148.257 34.1389L148.459 34.1306L148.714 34.1967L162.629 44.6921L162.691 44.8657L162.676 45.0227L162.652 45.0723L162.652 45.0805L162.528 45.2871", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M138.24 29.0895L138.03 28.9325L138.023 28.9408L137.821 29.0978L137.814 29.1061L134.536 31.577L133.754 32.1638L133.359 32.4613L132.793 32.8827L132.398 33.1803L132.127 33.3869L132.057 33.4364L131.964 33.5108L131.251 34.048L131.236 34.0645L130.554 34.5769L129.834 35.1223L129.818 35.1388L126.564 37.5933L126.549 37.6098L123.295 40.0642L123.279 40.0807L120.97 41.8245L120.963 41.841L120.877 41.998L120.87 42.1716L120.87 42.1881L120.87 42.2211L120.87 42.5517", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M120.955 42.3628L120.901 42.2629L120.901 42.2546L120.87 42.1963", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M120.87 42.5269L120.877 42.5352L120.963 42.6922L120.97 42.7005L120.978 42.7087L123.876 44.8987L123.883 44.8987L127.145 47.3614L127.153 47.3696L127.161 47.3779L127.168 47.3862L127.718 47.8076L127.935 47.8738L128.222 47.8738L128.447 47.7994L128.726 47.5928", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M120.956 42.6922L120.956 42.6757L120.956 42.3616L124.086 44.7252L124.093 44.7252L127.355 47.1878L127.363 47.1961L127.371 47.2044L127.378 47.2126L127.711 47.4606", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M127.719 47.7994L127.719 47.7829L127.719 47.4688L127.936 47.535", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M127.944 47.8655L127.944 47.849L127.944 47.5267L128.231 47.5184", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M128.231 47.8573L128.231 47.8407L128.231 47.5267L128.456 47.4523", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M128.455 47.7829L128.455 47.7746L128.455 47.4606", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M133.034 51.7083L133.034 51.386L133.034 51.3777L133.042 51.1629L133.135 50.9976L133.352 50.8323L133.592 50.6505L133.6 50.6422L133.608 50.634L134.127 50.2456L134.134 50.2373L134.165 50.2125L134.243 50.1547L134.344 50.0803L134.243 50.0059L132.577 48.7498L132.399 48.6175L132.236 48.4936L132.229 48.4853L132.221 48.4771L132.213 48.4688L132.128 48.4027L132.058 48.3531L131.965 48.2787L131.307 47.7829L131.291 47.7663L130.555 47.2127L129.656 46.535L128.448 47.444L128.711 47.5597L128.719 47.568L129.656 47.9812L130.555 48.3779L130.656 48.4192L130.741 48.4605L131.663 48.8737L131.671 48.882L131.686 48.8903L131.694 48.8985L131.965 49.0225L132.058 49.0638L132.128 49.0969L133.274 49.6092L133.321 49.6258L133.491 49.7001L134.251 50.039L134.351 50.0803", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M133.128 51.5442L133.073 51.4443L133.073 51.436L133.042 51.3777", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M133.034 51.7083L133.041 51.7165L133.127 51.8736L133.142 51.8818L133.7 52.3033L133.708 52.3116L133.715 52.3198L133.723 52.3281L133.808 52.3942L134.056 52.576L134.358 52.7991L134.374 52.8074L134.653 53.0223L136.977 54.7743L136.985 54.7825L136.993 54.7908L137 54.799L138.039 55.5841L138.046 55.5924L138.658 56.0552L138.875 56.1213L139.162 56.1213L139.387 56.0469L140.061 55.5428L140.076 55.5263L140.595 55.1379L144.051 57.741", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M133.127 51.8736L133.127 51.8571L133.127 51.543L133.809 52.0554L133.918 52.138L133.925 52.1463L133.933 52.1546L133.941 52.1628L134.049 52.2455L134.352 52.4686L137.187 54.609L137.195 54.6173L137.203 54.6255L137.21 54.6338L138.032 55.2536L138.651 55.7246", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M138.651 56.0387L138.651 56.0221L138.651 55.7081L138.868 55.7742", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M138.867 56.1047L138.867 56.0882L138.867 55.7742L139.154 55.7742", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M139.162 56.1048L139.162 56.0882L139.162 55.7742L139.387 55.6998", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M139.379 56.0304L139.379 56.0139L139.379 55.6998L139.836 55.361L139.852 55.3445L140.588 54.7908", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M140.595 55.1131L140.595 55.0966L140.595 54.7825L140.734 54.89L142.702 56.3775L144.267 57.5593L144.058 57.7163L144.05 57.7245L143.531 58.1129L143.516 58.1295L143.221 58.3526L143.058 58.4766L142.973 58.6253L142.958 58.6501L142.95 58.865L142.95 59.179", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M143.044 59.0231L142.99 58.9233L142.99 58.915L142.974 58.89L142.958 58.8567", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M142.951 59.1873L142.958 59.1955L142.974 59.2203L143.044 59.3526L143.059 59.3608L143.222 59.4848L144.268 60.2781L146.507 61.964L147.917 63.0301L148.467 63.4433L148.723 63.6333L150.605 65.0548L150.822 65.1209L151.109 65.1209L151.334 65.0465", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M143.044 59.3526L143.044 59.336L143.044 59.022L143.222 59.1542L144.268 59.9476L150.606 64.7242", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M150.598 65.0548L150.598 65.0383L150.598 64.7242L150.815 64.7903", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M150.822 65.1208L150.822 65.1043L150.822 64.7903L151.108 64.7903", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M151.109 65.1126L151.109 65.0961L151.109 64.782L151.334 64.7077", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M151.333 65.0382L151.333 65.0217L151.333 64.7077L153.641 62.9639L153.657 62.9474L156.911 60.493L156.926 60.4765L160.18 58.022L160.196 58.0055L161.11 57.3196L161.598 56.9477L161.613 56.9312L162.683 56.1213L162.9 55.9643L163.295 55.6668L164.891 54.4602L168.168 51.9893L168.176 51.981L168.385 51.824", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M151.333 65.0382L153.858 63.1292L153.874 63.1127L157.128 60.6583L157.143 60.6418L160.397 58.1873L160.413 58.1708L161.11 57.6502L161.823 57.113L161.838 57.0965L162.52 56.5841L162.621 56.5097L162.683 56.4601L162.9 56.3031L163.295 56.0056L163.938 55.518L164.333 55.2205L165.115 54.6338", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M168.402 52.1546L168.402 51.8405L167.898 51.4604", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M162.529 45.6094L162.529 45.5929L162.529 45.2788L161.421 46.1135", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M138.651 95.6483L138.651 94.0616L138.651 94.0533L138.651 93.8715L138.651 90.6816L138.651 90.6733", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M133.127 86.5083L133.127 87.376L133.127 87.3843L133.127 87.4008L133.127 87.4091L133.127 88.409L133.127 89.004L133.127 89.0784L133.127 89.0867L133.127 89.6982L133.127 89.88L133.127 89.8883L133.127 90.2602L133.127 90.9378L133.127 90.9461L133.127 91.4667L133.127 91.475", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M141.177 93.698L141.177 91.3841L141.425 91.5659L142.959 92.7229", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M140.596 89.756L140.596 90.5494L140.596 90.5742L140.596 92.946L140.596 94.7145L140.596 94.7227", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M141.424 93.5162L142.958 94.6731", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M132.012 86.781L132.012 86.2603L132.012 86.2521L132.012 84.467L132.066 84.5084L132.136 84.5579L132.252 84.6488L133.034 85.2356", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M129.664 81.5167L129.664 84.4835L129.664 84.4918L129.664 84.7149L129.664 85.062L129.664 85.0703L129.664 85.0868L129.664 85.0951L129.664 86.4834", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M132.251 86.5991L132.406 86.7148L132.802 87.0123L133.042 87.1941", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M141.425 91.5659L141.425 93.5162L141.177 93.698L142.951 95.0368", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M132.252 84.6488L132.252 86.5992L132.136 86.6901L132.058 86.7479L132.05 86.7562L132.012 86.7892L132.027 86.8058L132.136 86.8884L132.407 87.095L132.802 87.3925L132.965 87.5165L132.972 87.5247L132.98 87.533L132.988 87.5413L133.034 87.5743", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M150.598 104.656L150.598 102.888L150.598 100.284L150.598 100.276L150.598 99.6977", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M143.044 93.9872L143.044 94.9954L143.044 96.5656L143.044 96.5739L143.044 97.1937L143.044 97.3755L143.044 97.3838L143.044 98.4333L143.044 98.4416L143.044 98.9622L143.044 98.9705", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M127.719 87.4007L127.719 86.5495L127.719 86.5413L127.719 86.5247L127.719 86.5165L127.719 85.6322L127.719 83.0208L127.719 83.0125L127.719 82.434L127.719 82.4258", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M128.231 82.5002L127.944 82.5002L127.727 82.4341L127.185 82.0209L127.177 82.0126L127.169 82.0044L127.162 81.9961L123.9 79.5334L123.892 79.5334L120.987 77.3434L120.979 77.3352L120.971 77.3269", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M120.956 77.3352L120.956 77.9137L120.956 77.9219L120.956 80.5334L120.956 81.7399L120.956 81.7482L120.956 81.773L120.956 81.7812L120.956 82.3019L120.956 82.3101", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M120.87 82.1365L120.877 82.1448L120.963 82.3018L120.97 82.3101L120.978 82.3183L123.868 84.5", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M133.127 91.475L133.143 91.4832L133.685 91.8964L133.693 91.9047L133.701 91.9129L133.709 91.9212L133.801 91.9956L134.049 92.1774L134.352 92.4005L134.375 92.4171L134.638 92.6154L136.978 94.3756L136.986 94.3756L136.993 94.3756L138.032 95.1607L138.039 95.169L138.651 95.6318", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M142.951 98.7886L142.958 98.7969L142.974 98.8217L143.044 98.9539L143.059 98.9622L143.222 99.0861L144.268 99.8795L146.507 101.565", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M139.379 90.6733L139.379 93.8633L139.379 94.607L139.379 94.6153L139.379 95.6318L139.379 95.64", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M139.379 95.6318L140.053 95.1194L140.061 95.1194L140.588 94.7227", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M140.596 89.756L140.069 90.1527", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M151.333 99.6812L151.333 100.822L151.333 100.83L151.333 102.871L151.333 104.64L151.333 104.648", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M128.455 82.4258L128.455 83.5662L128.455 83.5745L128.455 85.624L128.455 85.971L128.455 85.9793L128.455 85.9958L128.455 86.0041L128.455 87.3925L128.455 87.4007", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M129.664 81.5167L128.455 82.4258", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M133.034 86.3512L133.034 86.6322L133.034 87.1942L133.034 87.4503L133.034 87.4586L133.034 87.4751L133.034 87.4834L133.034 87.5578L133.034 88.3511L133.034 88.9461L133.034 89.0205L133.034 89.0288L133.034 89.5412L133.034 89.8221L133.034 89.8304L133.034 90.2023L133.034 91.0121L133.034 91.3179", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M138.867 90.7477L138.867 93.9377L138.867 94.2186L138.867 94.2269L138.867 95.7062L138.867 95.7144", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M139.163 95.7062L139.163 94.4418L139.163 94.4335L139.163 93.9294L139.163 90.7477L139.163 90.7395", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M151.333 99.6812L151.108 99.7555L150.822 99.7638", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M151.109 104.714L151.109 102.945L151.109 100.665L151.109 100.656L151.109 99.7555L151.109 99.7473", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M142.951 93.8219L142.951 94.6649L142.951 95.0368L142.951 96.4995L142.951 96.5078L142.951 97.0284L142.951 97.3094L142.951 97.3176L142.951 97.6895L142.951 98.7969", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M150.822 99.7638L150.822 100.441L150.822 100.45L150.822 102.954L150.822 104.722", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M150.822 104.722L151.108 104.714", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M120.87 77.1699L120.87 77.8475L120.87 77.8558L120.87 80.3681L120.87 81.773L120.87 81.7812L120.87 82.1366", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M127.944 82.5002L127.944 83.1778L127.944 83.1861L127.944 85.6901L127.944 86.343L127.944 86.3512L127.944 86.3678L127.944 86.376L127.944 87.4504", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M128.231 87.4586L128.231 86.1694L128.231 86.1612L128.231 86.1446L128.231 86.1364L128.231 85.6984L128.231 83.4092L128.231 83.401L128.231 82.5002", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M133.034 91.3097L133.041 91.318L133.127 91.4761", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M138.651 95.6483L138.869 95.7148", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M120.956 77.3363L120.87 77.1782L120.862 77.1699", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M139.163 95.7067L139.389 95.6318", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M138.651 100.607L138.651 100.582L138.651 99.0449L138.651 99.0283L138.651 98.83L138.651 98.6234L138.651 95.6401", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M141.177 98.6564L141.177 96.3425L141.425 96.5243L142.959 97.6813", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M140.596 94.7227L140.596 95.5161L140.596 95.5244L140.596 97.9044L140.596 99.6481L140.596 99.6729", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M140.596 99.6812L142.959 101.458", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M141.424 98.4746L142.958 99.6316", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M132.012 91.7394L132.012 91.2353L132.012 91.2188L132.012 89.4255L132.066 89.4668L132.136 89.5164L132.252 89.6073L133.034 90.1941", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M129.664 86.4752L129.664 89.4585L129.664 89.475L129.664 89.6733L129.664 89.9956L129.664 90.0039L129.664 90.0204L129.664 90.0287L129.664 91.4171L129.664 91.4419", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M129.664 91.4419L130.562 92.1195L131.097 92.5245L131.105 92.5327L131.972 93.1856L131.98 93.1856L131.988 93.1938L131.996 93.2021L132.003 93.2104L132.065 93.26L132.135 93.3095L133.034 93.9872", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M132.251 91.5576L132.406 91.6733L132.802 91.9708L133.042 92.1526", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M141.425 96.5242L141.425 98.4746L141.177 98.6564L142.951 99.9952", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M132.251 89.6073L132.251 91.5576L132.135 91.6485L132.073 91.6898L132.058 91.6981L132.003 91.7394L132.027 91.7559L132.034 91.7559L132.135 91.8303L132.406 92.0369L132.801 92.3344L132.949 92.4501L132.956 92.4584L132.964 92.4667L132.972 92.4749L133.034 92.5245", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M150.598 109.623L150.598 109.598L150.598 107.854L150.598 107.648L150.598 105.259L150.598 105.243L150.598 104.656L150.598 104.648", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M127.719 92.3674L127.719 92.3426L127.719 91.4914L127.719 91.4832L127.719 91.4666L127.719 91.4584L127.719 90.5989L127.719 90.3923L127.719 88.004L127.719 87.9875L127.719 87.4007L127.719 87.3925", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M127.719 87.4008L127.161 86.9793L127.153 86.971L127.145 86.9628L127.138 86.9545L123.891 84.5001L123.884 84.4918L123.876 84.4836L123.868 84.4753", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M120.956 82.2936L120.956 82.8886L120.956 82.9052L120.956 85.2935L120.956 85.5001L120.956 86.6901L120.956 86.7149L120.956 86.7397L120.956 87.2438L120.956 87.2686", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M120.87 87.095L120.877 87.1032L120.963 87.2603L120.97 87.2685L120.978 87.2768L123.852 89.4502L123.86 89.4585L123.868 89.4668L123.876 89.475L127.122 91.9295L127.13 91.9377L127.137 91.946L127.145 91.9542L127.718 92.3922", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M133.127 91.475L133.127 92.3179L133.127 92.3262L133.127 92.3427L133.127 92.3509L133.127 93.384L133.127 93.979L133.127 94.0203L133.127 94.0451L133.127 94.4583L133.127 94.6566L133.127 94.8302L133.127 94.855L133.127 94.8715L133.127 95.2021L133.127 95.8797L133.127 95.9045L133.127 96.4086L133.127 96.4334", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M133.127 96.4417L133.143 96.4499L133.693 96.8631L133.701 96.8631L133.709 96.8631L133.809 96.9375L134.057 97.1193L134.359 97.3424L134.398 97.3672L134.654 97.5573L136.823 99.1936L136.993 99.3175L137.001 99.3258L137.009 99.3341L137.017 99.3423L137.024 99.3423L137.195 99.4663L138.055 100.111L138.063 100.119L138.675 100.582", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M143.044 98.9539L143.044 99.9539L143.044 101.499L143.044 101.524L143.044 101.937L143.044 102.144L143.044 102.317L143.044 102.342L143.044 102.359L143.044 103.367L143.044 103.392L143.044 103.896L143.044 103.921", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M143.044 103.921L143.059 103.929L143.222 104.053L144.268 104.846L146.507 106.532L147.917 107.598L148.467 108.011L148.723 108.201L150.606 109.623", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M139.379 95.6318L139.379 98.8217L139.379 99.1771L139.379 99.5738L139.379 99.5903L139.379 100.565L139.379 100.59", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M139.163 100.673L139.387 100.598L140.054 100.094L140.061 100.086L140.154 100.012L140.325 99.8878L140.596 99.6812", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M140.595 94.7144L140.061 95.1194L140.053 95.1194L139.379 95.6235", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M151.333 104.648L151.333 105.797L151.333 105.813L151.333 107.838L151.333 108.193L151.333 109.582L151.333 109.606", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M128.455 87.3925L128.455 88.5412L128.455 88.5577L128.455 90.5824L128.455 90.9047L128.455 90.913L128.455 90.9295L128.455 90.9378L128.455 92.3261L128.455 92.3509", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M128.231 92.4253L128.456 92.3509L129.223 91.7724L129.393 91.6485L129.664 91.4419", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M132.136 88.3346L132.066 88.285L132.019 88.252L132.012 88.2437L132.004 88.2354L131.996 88.2272L131.973 88.2106L131.097 87.5495L131.09 87.5495L130.555 87.1446L129.656 86.4669L128.448 87.376", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M133.034 91.3097L133.034 91.6072L133.034 92.1526L133.034 92.3923L133.034 92.4005L133.034 92.4171L133.034 92.4253L133.034 92.5162L133.034 93.3261L133.034 93.9211L133.034 93.9624L133.034 93.9872L133.034 94.4004L133.034 94.4996L133.034 94.6484L133.034 94.7723L133.034 94.7971L133.034 94.8054L133.034 95.1359L133.034 95.9871L133.034 96.2433", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M138.867 95.7144L138.867 98.7969L138.867 98.9043L138.867 99.2019L138.867 99.2184L138.867 100.656L138.867 100.681", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M138.867 100.673L139.154 100.673", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M139.163 100.673L139.163 100.648L139.163 99.425L139.163 99.4085L139.163 99.0118L139.163 98.8961L139.163 95.7062L139.163 95.6979", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M150.822 104.722L150.822 105.416L150.822 105.425L150.822 107.813L150.822 107.92L150.822 109.664L150.822 109.689", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M151.109 109.681L151.109 109.656L151.109 108.028L151.109 107.912L151.109 105.648L151.109 105.631L151.109 104.722L151.109 104.714", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M142.951 98.7886L142.951 99.6316L142.951 100.003L142.951 101.441L142.951 101.466L142.951 101.879L142.951 101.987L142.951 102.136L142.951 102.26L142.951 102.284L142.951 102.301L142.951 102.631L142.951 103.739", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M120.87 82.1283L120.87 82.8225L120.87 82.839L120.87 85.2273L120.87 85.3348L120.87 85.4835L120.87 86.7232L120.87 86.7479L120.87 87.0868", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M127.944 87.4669L127.944 88.161L127.944 88.1776L127.944 90.5659L127.944 90.6733L127.944 91.3097L127.944 91.3179L127.944 91.3344L127.944 91.3427L127.944 92.417L127.944 92.4418", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M127.719 92.3675L127.936 92.4336L128.223 92.4253", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M128.231 92.4253L128.231 92.4005L128.231 91.1113L128.231 91.1031L128.231 91.0865L128.231 91.0783L128.231 90.7808L128.231 90.6651L128.231 88.4007L128.231 88.3842L128.231 87.4751L128.231 87.4669", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M133.034 96.2764L133.041 96.2847L133.127 96.4428", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M127.946 87.4673L127.728 87.4008", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M138.651 105.549L138.651 105.524L138.651 104.012L138.651 103.78L138.651 100.615", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M138.651 100.582L138.039 100.119L138.032 100.111L137.187 99.4746L137.017 99.3506L137.009 99.3506L137.001 99.3423L136.993 99.3341L136.986 99.3258L136.815 99.2019L134.623 97.549L134.382 97.3672L134.328 97.3259L134.026 97.1028L133.778 96.921L133.693 96.8549L133.685 96.8549L133.677 96.8549L133.112 96.4251", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M141.177 103.598L141.177 101.284L141.425 101.466L142.959 102.623", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M140.596 99.6564L140.596 99.6812L140.596 100.094L140.596 100.491L140.596 100.508L140.596 102.855L140.596 104.598L140.596 104.623", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M141.424 103.417L142.958 104.574", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M132.012 96.6813L132.012 96.202L132.012 94.3673L132.066 94.4087L132.136 94.4582L132.252 94.5491L133.034 95.1359", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M129.664 91.4419L129.664 91.8551L129.664 94.4335L129.664 94.607L129.664 94.9293L129.664 94.9376L129.664 94.9541L129.664 94.9624L129.664 96.3507L129.664 96.3755", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M129.664 96.3838L130.562 97.0615L131.128 97.4829L131.972 98.1193L131.996 98.1358L132.003 98.1358L132.011 98.1358L132.073 98.1771L132.143 98.2267L133.041 98.9043", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M132.251 96.4995L132.406 96.6152L132.802 96.9127L133.042 97.0945", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M141.425 101.466L141.425 103.417L141.177 103.598L142.951 104.937", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M132.252 94.5492L132.252 96.4995L132.136 96.5904L132.105 96.6152L132.012 96.6813L132.05 96.7061L132.136 96.7722L132.407 96.9788L132.802 97.2763L132.972 97.4003L132.98 97.4003L132.988 97.4003L133.042 97.4416", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M150.598 114.556L150.598 114.532L150.598 112.788L150.598 110.226L150.598 109.623", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M127.719 97.3011L127.719 97.2763L127.719 96.4334L127.719 96.4251L127.719 96.4086L127.719 96.4004L127.719 95.5409L127.719 92.979L127.719 92.3757", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M127.719 92.3344L127.161 91.913L127.154 91.9047L127.146 91.8965L127.138 91.8882L123.892 89.4338L123.884 89.4255L123.876 89.4172L123.869 89.409L120.971 87.2273L120.963 87.219L120.956 87.2107", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M120.956 87.2355L120.956 87.2603L120.956 87.8636L120.956 90.4254L120.956 91.6154L120.956 91.6402L120.956 91.665L120.956 92.1691L120.956 92.1939", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M120.956 92.2022L120.971 92.2105L123.845 94.3839L123.853 94.3922L123.861 94.4004L123.869 94.4087L127.115 96.8631L127.123 96.8714L127.13 96.8797L127.138 96.8879L127.711 97.3259", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M133.127 96.4417L133.127 97.2928L133.127 97.3011L133.127 97.3094L133.127 98.3754L133.127 98.9705L133.127 98.9952L133.127 99.6068L133.127 99.7803L133.127 99.8382L133.127 100.144L133.127 100.822L133.127 100.846L133.127 101.351L133.127 101.375", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M133.034 101.21L133.041 101.218L133.127 101.375L133.142 101.384L133.537 101.681L133.708 101.805L133.715 101.813L133.723 101.822L133.731 101.83L133.739 101.83L133.808 101.888L133.901 101.962L134.049 102.078L134.351 102.301L134.405 102.342L134.637 102.516L137.008 104.301L137.016 104.309L138.023 105.069L138.031 105.078L138.643 105.54", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M143.044 103.921L143.044 104.904L143.044 106.449L143.044 106.474L143.044 107.094L143.044 107.268L143.044 107.325L143.044 108.309L143.044 108.334L143.044 108.838L143.044 108.863", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M139.379 100.574L139.379 100.598L139.379 103.764L139.379 104.557L139.379 105.507L139.379 105.532", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M151.333 109.606L151.333 110.772L151.333 112.771L151.333 114.515", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M128.455 92.3509L128.455 93.5162L128.455 95.5161L128.455 95.8384L128.455 95.8466L128.455 95.8631L128.455 95.8714L128.455 97.2598L128.455 97.2846", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M128.455 97.2929L129.664 96.3838", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M129.664 91.4171L129.377 91.6402L129.207 91.7642L128.455 92.3344", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M133.034 96.2433L133.034 96.5739L133.034 97.0862L133.034 97.3507L133.034 97.359L133.034 97.3672L133.034 97.3755L133.034 97.4581L133.034 98.3093L133.034 98.9043L133.034 98.9291L133.034 99.4415L133.034 99.7142L133.034 99.7721L133.034 100.078L133.034 100.954L133.034 101.185", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M138.867 100.673L138.867 103.838L138.867 104.169L138.867 105.582L138.867 105.607", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M139.163 105.607L139.163 105.582", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M139.163 105.582L139.163 104.392L139.163 103.838L139.163 100.673L139.163 100.648", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M151.109 114.623L151.109 114.598L151.109 112.854L151.109 110.615L151.109 109.689", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M142.951 103.722L142.951 103.748", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M142.951 103.755L142.951 104.573L142.951 104.945L142.951 106.383L142.951 106.408L142.951 106.929L142.951 107.201L142.951 107.259L142.951 107.565L142.951 108.697", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M150.822 109.689L150.822 110.391L150.822 112.854L150.822 114.598L150.822 114.623", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M150.822 114.623L151.108 114.623", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M120.87 87.095L120.87 87.7974L120.87 90.2601L120.87 91.6402L120.87 91.665L120.87 92.0038", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M127.944 92.4253L127.944 93.1278L127.944 95.5904L127.944 96.2268L127.944 96.235L127.944 96.2516L127.944 96.2598L127.944 97.3342L127.944 97.3589", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M127.719 97.3011L127.936 97.3672L128.223 97.3589", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M128.231 97.3672L128.231 97.3424L128.231 96.0532L128.231 96.045L128.231 96.0284L128.231 96.0202L128.231 95.5987L128.231 93.3591L128.231 92.4336", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M138.651 105.549L138.869 105.615", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M120.956 87.2366L120.87 87.0785L120.862 87.0702", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M128.231 97.3678L128.457 97.2929", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M138.651 110.491L138.651 110.466L138.651 109.036L138.651 108.987L138.651 108.722L138.651 108.648L138.651 105.557", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M141.177 108.54L141.177 106.226L141.425 106.408L142.959 107.565", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M140.596 104.598L140.596 104.623L140.596 105.474L140.596 107.788L140.596 109.532L140.596 109.557", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M141.424 108.35L142.958 109.507", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M132.011 101.623L132.011 101.169L132.011 99.301L132.065 99.3423L132.135 99.3919L132.251 99.4828L133.034 100.07", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M129.664 96.3838L129.664 99.4085L129.664 99.5572L129.664 99.9043L129.664 99.9126L129.664 99.9208L129.664 99.9291L129.664 101.309L129.664 101.334", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M129.664 101.317L130.562 101.995L131.143 102.433L131.848 102.962L132.019 103.086L132.027 103.094L132.034 103.102L132.042 103.111L132.05 103.111L132.22 103.235L132.422 103.383L133.049 103.855", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M132.251 101.441L132.406 101.557L132.802 101.855L133.042 102.036", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M141.425 106.408L141.425 108.358L141.177 108.54L142.951 109.879", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M132.251 99.4911L132.251 101.441L132.12 101.541L132.011 101.623L132.058 101.656L132.406 101.921L132.801 102.218L132.817 102.235L132.987 102.367L132.995 102.375L133.003 102.383L133.034 102.408", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M150.598 118.779L150.598 118.036L150.598 117.722L150.598 117.647L150.598 115.193L150.598 114.557", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M127.719 102.243L127.719 102.218L127.719 101.384L127.719 101.375L127.719 101.367L127.719 101.359L127.719 100.78L127.719 100.466L127.719 100.392L127.719 97.9374L127.719 97.3011", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M127.719 97.2763L127.161 96.8549L127.154 96.8466L127.146 96.8383L127.138 96.8301L123.892 94.3756L123.884 94.3674L123.876 94.3591L123.869 94.3508L120.971 92.1691L120.963 92.1609L120.956 92.1526", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M120.956 92.2022L120.956 92.8385L120.956 95.293L120.956 95.3673L120.956 95.6814L120.956 96.5574L120.956 96.5822L120.956 96.607L120.956 97.1111L120.956 97.1359", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M120.956 97.1358L120.971 97.1441L122.249 98.111L122.435 98.2515L123.845 99.3175L123.853 99.3258L123.861 99.334L123.869 99.3423L124.086 99.5076L124.272 99.6481L126.96 101.673L127.138 101.805L127.146 101.805L127.154 101.805L127.727 102.235L127.944 102.301", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M133.127 101.375L133.127 101.995L133.127 102.26L133.127 102.268L133.127 102.276L133.127 102.532L133.127 103.326L133.127 103.888L133.127 103.912L133.127 104.45L133.127 104.524L133.127 104.697L133.127 104.788L133.127 104.838L133.127 105.069L133.127 105.747L133.127 105.772L133.127 106.276L133.127 106.301", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M143.044 108.854L143.044 109.838L143.044 111.383L143.044 111.408L143.044 111.945L143.044 112.019L143.044 112.193L143.044 112.284L143.044 112.333L143.044 113.242L143.044 113.267L143.044 113.771L143.044 113.796", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M143.044 113.796L143.059 113.804L143.222 113.928L144.268 114.722L148.049 117.573L148.235 117.713L149.846 118.928L150.032 119.069L150.133 119.143", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M139.379 105.507L139.379 105.532L139.379 108.697L139.379 109.185L139.379 109.524L139.379 109.573L139.379 110.441L139.379 110.466", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M139.379 110.474L139.975 110.028L140.007 110.003L140.061 109.962L140.231 109.838L140.588 109.565", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M151.333 114.523L151.333 114.548L151.333 115.747L151.333 117.722L151.333 118.209L151.333 118.234", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M128.455 97.2929L128.455 98.4912L128.455 100.466L128.455 100.813L128.455 100.822L128.455 100.83L128.455 100.946L128.455 101.334L128.455 102.202L128.455 102.227", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M128.455 102.235L129.052 101.788L129.145 101.722L129.315 101.598L129.671 101.326", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M129.664 96.3507L128.455 97.2598", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M133.034 101.185L133.034 101.549L133.034 102.028L133.034 102.069L133.034 102.317L133.034 102.326L133.034 102.334L133.034 102.342L133.034 102.35L133.034 102.392L133.034 102.607L133.034 103.268L133.034 103.83L133.034 103.854L133.034 104.367L133.034 104.392L133.034 104.64L133.034 104.648L133.034 104.73L133.034 104.78L133.034 105.003L133.034 105.962L133.034 106.111", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M138.867 105.615L138.867 108.78L138.867 108.805L138.867 109.144L138.867 109.193L138.867 110.524L138.867 110.548", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M139.163 110.548L139.163 110.524L139.163 109.416L139.163 109.367L139.163 109.028L139.163 108.78L139.163 105.615L139.163 105.59", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M151.109 118.399L151.109 118.036L151.109 117.788L151.109 115.573L151.109 114.614", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M142.951 108.664L142.951 109.507L142.951 109.879L142.951 111.317L142.951 111.342L142.951 111.862L142.951 111.887L142.951 112.135L142.951 112.143L142.951 112.226L142.951 112.276L142.951 112.507L142.951 113.614", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M150.822 114.623L150.822 115.358L150.822 117.796L150.822 117.821L150.822 118.209L150.822 118.622", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M120.87 92.0369L120.87 92.7724L120.87 95.2103L120.87 95.2351L120.87 95.483L120.87 95.6153L120.87 96.5904L120.87 96.6152L120.87 96.954L120.87 96.9788", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M127.944 97.3672L127.944 98.1028L127.944 100.541L127.944 100.565L127.944 100.954L127.944 101.202L127.944 101.21L127.944 101.218L127.944 101.227L127.944 102.293L127.944 102.317", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M128.231 102.301L128.231 102.276L128.231 101.169L128.231 100.995L128.231 100.987L128.231 100.979L128.231 100.97L128.231 100.772L128.231 100.524L128.231 98.3094L128.231 97.3507", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M128.231 97.3424L127.944 97.3424", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M120.87 92.0121L120.87 92.0377", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M133.127 101.352L133.041 101.194L133.034 101.185", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M133.034 106.152L133.041 106.16L133.127 106.318", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M138.869 105.59L138.651 105.524", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M143.044 108.831L142.974 108.697L142.958 108.673L142.951 108.664", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M142.951 113.631L142.958 113.639L142.974 113.664L143.044 113.797", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M120.87 96.9706L120.877 96.9789L120.963 97.137", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M120.956 92.1703L120.87 92.0122L120.862 92.0039", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M139.163 110.549L139.389 110.474", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M139.381 105.507L139.155 105.582", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M128.231 102.301L128.457 102.226", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M138.651 115.424L138.651 115.399L138.651 113.995L138.651 113.656L138.651 110.491", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M141.177 113.474L141.177 111.16L141.425 111.342L142.959 112.499", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M140.596 109.54L140.596 109.565L140.596 110.102L140.596 110.441L140.596 110.491L140.596 112.73L140.596 114.474L140.596 114.499", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M140.596 114.507L140.736 114.615L140.791 114.657", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M141.424 113.292L142.958 114.449", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M132.011 106.565L132.011 104.251L132.259 104.433L133.042 105.02", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M129.664 101.317L129.664 101.855L129.664 102.243L129.664 104.483L129.664 104.607L129.664 104.871L129.664 104.879L129.664 104.888L129.664 105.144L129.664 106.226L129.664 106.251", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M132.251 106.375L132.406 106.491L132.802 106.788L133.042 106.97", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M141.425 111.342L141.425 113.292L141.177 113.474L142.951 114.813", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M132.251 104.433L132.251 106.383L132.003 106.565L132.399 106.863L132.794 107.16L133.011 107.325L133.018 107.334L133.034 107.342", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M127.719 107.185L127.719 107.16L127.719 106.623L127.719 106.367L127.719 106.359L127.719 106.35L127.719 106.086L127.719 105.764L127.719 105.425L127.719 104.888L127.719 104.293L127.719 102.251", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M127.719 102.218L127.161 101.797L127.153 101.797L127.145 101.797L127.13 101.788L126.967 101.665L124.263 99.6233L124.093 99.4994L123.876 99.3341L123.868 99.3258L123.86 99.3175L123.853 99.3093L122.427 98.2349L122.257 98.111L120.955 97.1276L120.947 97.1193L120.939 97.111", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M120.956 97.1358L120.956 100.309L120.956 100.648L120.956 101.499L120.956 101.524L120.956 101.549L120.956 102.053L120.956 102.078", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M120.87 101.912L120.877 101.921L120.963 102.078L120.97 102.086L120.978 102.094L123.876 104.276L123.883 104.276L123.891 104.276L127.006 106.623L127.176 106.747L127.184 106.755L127.192 106.763L127.199 106.772L127.207 106.772L127.378 106.896L127.749 107.177L127.966 107.243", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M133.127 106.317L133.127 107.234L133.127 107.243L133.127 108.35L133.127 108.838L133.127 108.862L133.127 108.945L133.127 109.482L133.127 109.656L133.127 109.821L133.127 110.019L133.127 110.697L133.127 110.722L133.127 111.226L133.127 111.251", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M143.044 113.796L143.044 114.78L143.044 116.325L143.044 116.35L143.044 116.97L143.044 117.135L143.044 117.3L143.044 118.176L143.044 118.201L143.044 118.705L143.044 118.73", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M143.044 118.738L143.059 118.746L143.222 118.87L144.268 119.664L148.157 122.597", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M139.379 110.449L139.379 110.474L139.379 113.639L139.379 114.54L139.379 115.383L139.379 115.408", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M140.595 109.54L140.223 109.821L140.053 109.945L139.999 109.986L139.968 110.011L139.387 110.449", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M128.455 102.235L128.455 104.838L128.455 105.408L128.455 105.433L128.455 105.532L128.455 105.797L128.455 105.805L128.455 105.813L128.455 106.069L128.455 106.301L128.455 107.144L128.455 107.168", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M128.455 107.168L129.036 106.73L129.671 106.251", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M133.034 106.127L133.034 106.565L133.034 106.97L133.034 107.309L133.034 107.317L133.034 107.334L133.034 108.292L133.034 108.78L133.034 108.805L133.034 108.887L133.034 109.325L133.034 109.598L133.034 109.763L133.034 109.962L133.034 111.069", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M138.867 110.548L138.867 113.714L138.867 114.152L138.867 115.457L138.867 115.482", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M138.867 115.49L139.154 115.49", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M139.163 115.49L139.163 115.466L139.163 114.383L139.163 113.722L139.163 110.557", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M142.951 113.606L142.951 114.449L142.951 114.821L142.951 116.259L142.951 116.284L142.951 116.804L142.951 117.077L142.951 117.242L142.951 117.441L142.951 118.573", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M120.87 96.9458L120.87 100.144L120.87 100.582L120.87 101.524L120.87 101.549L120.87 101.888L120.87 101.912", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M127.944 102.309L127.944 104.45L127.944 105.045L127.944 105.483L127.944 105.912L127.944 105.921L127.944 106.177L127.944 106.185L127.944 106.193L127.944 106.449L127.944 107.218L127.944 107.243", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M128.231 107.243L128.231 107.218L128.231 106.235L128.231 106.135L128.231 105.978L128.231 105.97L128.231 105.962L128.231 105.697L128.231 105.483L128.231 105.268L128.231 104.673L128.231 102.309", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M133.127 111.259L133.143 111.267L133.623 111.631L133.755 111.73L133.763 111.738L133.786 111.755L133.794 111.763L133.801 111.772L133.817 111.78L133.987 111.904L134.049 111.953L134.352 112.176L137.086 114.234L137.094 114.242L138.659 115.424L138.876 115.49", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M142.951 118.573L142.958 118.581L142.974 118.606L143.044 118.739", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M127.944 107.251L128.231 107.251L128.455 107.177", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M138.651 120.366L138.651 118.598L138.651 115.432", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M138.651 115.399L137.102 114.234L137.094 114.226L134.344 112.152L134.042 111.928L133.995 111.895L133.825 111.771L133.801 111.755L133.794 111.747L133.77 111.73L133.763 111.722L133.631 111.623L133.127 111.243", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M141.177 118.416L141.177 116.102L141.425 116.284L142.959 117.441", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M140.596 114.474L140.596 114.499L140.596 115.457L140.596 117.672L140.596 119.441", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M133.034 116.027L133.041 116.036L133.127 116.193L133.142 116.201L133.808 116.705L133.816 116.713L134.049 116.887L134.351 117.11L138.651 120.358L138.868 120.424L139.154 120.416L139.379 120.341L140.588 119.432L142.951 121.209", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M141.424 118.234L142.958 119.391", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M132.011 111.499L132.011 109.185L132.259 109.367L133.042 109.953", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M129.664 106.259L129.664 107.218L129.664 109.433L129.664 109.854L129.664 109.863L129.664 111.201", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M120.87 106.854L120.877 106.863L120.963 107.02L120.97 107.028L120.978 107.036L123.721 109.102L123.891 109.226L123.899 109.234L123.907 109.243L123.914 109.251L123.922 109.259L124.093 109.383L127.207 111.73L127.215 111.738L127.742 112.135L127.959 112.201L128.245 112.193L128.47 112.119L129.679 111.21L131.949 112.92L132.08 113.019L132.088 113.028L132.111 113.044L132.119 113.052L132.142 113.069L132.313 113.193L133.057 113.755", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M132.251 111.317L133.034 111.904", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M141.425 116.284L141.425 118.234L141.177 118.416L142.951 119.755", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M132.251 109.367L132.251 111.317L132.003 111.499L132.894 112.168L133.026 112.267", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M127.719 112.119L127.719 111.325L127.719 111.317L127.719 110.358L127.719 107.193", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M120.956 102.078L120.956 105.251L120.956 106.466L120.956 106.474L120.956 106.491L120.956 106.499L120.956 107.02", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M133.127 111.259L133.127 112.011L133.127 112.21L133.127 112.218L133.127 112.259L133.127 112.267L133.127 112.548L133.127 113.804L133.127 113.813L133.127 114.416L133.127 114.623L133.127 114.995L133.127 115.664L133.127 115.672L133.127 116.193", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M143.044 118.738L143.044 119.722L143.044 121.292L143.044 121.3L143.044 121.911L143.044 122.118L143.044 123.159L143.044 123.168L143.044 123.688", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M142.951 123.515L142.958 123.523L142.974 123.548L143.044 123.68L143.059 123.688L143.222 123.812L143.586 124.085", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M139.379 115.391L139.379 115.416L139.379 118.581L139.379 120.35", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M140.595 114.474L139.945 114.961L139.387 115.383", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M128.455 107.168L128.455 110.334L128.455 110.755L128.455 110.763L128.455 112.102", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M129.664 106.235L129.013 106.722L128.455 107.144", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M133.034 111.069L133.034 111.095", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M133.034 111.094L133.034 111.912L133.034 112.077L133.034 112.276L133.034 112.284L133.034 112.325L133.034 112.333L133.034 112.367L133.034 112.614L133.034 113.738L133.034 113.747L133.034 114.251L133.034 114.556L133.034 114.928L133.034 116.027", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M138.867 115.49L138.867 118.655L138.867 120.424", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M139.163 120.424L139.163 118.655L139.163 115.49L139.163 115.466", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M139.162 115.466L138.875 115.474", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M142.951 118.548L142.951 119.391L142.951 119.763L142.951 121.226L142.951 121.234L142.951 121.746L142.951 122.052L142.951 122.424L142.951 123.523", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M120.87 101.888L120.87 105.086L120.87 106.491L120.87 106.499L120.87 106.854", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M127.944 107.251L127.944 110.416L127.944 111.143L127.944 111.152L127.944 112.176", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M128.231 112.185L128.231 110.945L128.231 110.937L128.231 110.424L128.231 107.259", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M128.231 107.218L127.944 107.226", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M133.127 111.235L133.041 111.077L133.034 111.069", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M138.869 115.466L138.651 115.399", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M143.044 118.714L142.974 118.581L142.958 118.556L142.951 118.548", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M127.945 107.218L127.727 107.152", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M120.956 102.054L120.87 101.896L120.862 101.888", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M128.457 107.144L128.231 107.218", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M138.651 125.341L138.651 123.573L138.651 123.366L138.651 120.383", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M142.951 121.234L140.588 119.457L139.379 120.366L139.154 120.441L138.868 120.449L138.651 120.383L134.351 117.135L134.049 116.912L133.808 116.73L133.801 116.73L133.134 116.234L133.119 116.226L133.034 116.069L133.026 116.061L133.026 116.052", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M133.127 116.201L133.127 117.217L133.127 117.226L133.127 118.771L133.127 118.779L133.127 119.176L133.127 119.383L133.127 119.598L133.127 119.969L133.127 120.639L133.127 120.647L133.127 121.159", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M141.177 123.391L141.177 121.077L141.425 121.259L142.959 122.416", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M140.596 119.449L140.596 122.639L140.596 124.407", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M141.424 123.209L142.958 124.366", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M132.011 116.474L132.011 114.16L132.259 114.342L133.042 114.928", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M129.664 111.21L129.664 114.408L129.664 114.623L129.664 114.821L129.664 114.829L129.664 114.871L129.664 114.879L129.664 115.16L129.664 116.168", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M132.251 116.292L133.034 116.879", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M141.425 121.259L141.425 123.209L141.177 123.391L142.835 124.639", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M132.251 114.342L132.251 116.292L132.003 116.474L133.034 117.251", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M143.044 123.68L143.044 124.482", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M127.719 117.094L127.719 116.622L127.719 116.342L127.719 116.333L127.719 116.292L127.719 116.284L127.719 116.085L127.719 115.325L127.719 115.11L127.719 112.127", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M133.033 113.747L132.282 113.176L132.111 113.052L132.088 113.036L132.08 113.028L132.057 113.011L132.049 113.003L131.917 112.904L129.655 111.201L128.446 112.11L128.222 112.185L127.935 112.185L127.718 112.119L127.184 111.714L127.176 111.705L124.061 109.358L123.891 109.234L123.883 109.234L123.875 109.226L123.868 109.218L123.86 109.21L123.689 109.086L120.947 107.02L120.939 107.011L120.931 107.003L120.846 106.846L120.838 106.838L120.838 106.83", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M120.956 107.028L120.956 110.011L120.956 110.226L120.956 111.441L120.956 111.449L120.956 111.466L120.956 111.474L120.956 111.986", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M120.87 111.829L120.877 111.838L120.963 111.995L120.97 112.003L120.978 112.011L122.179 112.92", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M133.034 121.002L133.041 121.011L133.127 121.168L133.142 121.176L133.808 121.68L134.056 121.862L134.358 122.085", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M139.379 120.366L139.379 123.556L139.379 123.911L139.379 125.333", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M134.351 122.093L138.65 125.341L138.867 125.407L139.154 125.399L139.379 125.325L140.324 124.614L140.494 124.49", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M128.455 112.119L128.455 115.317L128.455 115.532L128.455 115.664L128.455 115.73L128.455 115.738L128.455 115.78L128.455 115.788L128.455 116.069L128.455 117.077", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M122.18 112.912L123.892 114.201L123.9 114.209L127.053 116.589L127.185 116.689L127.192 116.697L127.216 116.713L127.223 116.722L127.247 116.738L127.417 116.862L127.727 117.094L127.944 117.16L128.231 117.151L128.455 117.077L129.4 116.366L129.571 116.242", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M133.034 116.036L133.034 116.879L133.034 117.251L133.034 117.292L133.034 117.3L133.034 118.713L133.034 118.722L133.034 118.862L133.034 119.11L133.034 119.217L133.034 119.531L133.034 119.903L133.034 120.994", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M138.867 120.44L138.867 123.523L138.867 123.63L138.867 125.399", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M139.163 125.399L139.163 123.738L139.163 123.622L139.163 120.432", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M142.951 123.515L142.951 124.358L142.951 124.548", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M143.571 124.085L143.215 123.812L143.052 123.688L143.036 123.68L142.967 123.548L142.951 123.523L142.943 123.515L142.943 123.506", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M120.87 106.863L120.87 109.697L120.87 109.945L120.87 110.061L120.87 111.466L120.87 111.474L120.87 111.829", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M127.944 112.193L127.944 115.275L127.944 115.391L127.944 115.92L127.944 116.118L127.944 116.127L127.944 116.168L127.944 116.176L127.944 116.457L127.944 117.16", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M128.231 117.16L128.231 116.242L128.231 115.961L128.231 115.953L128.231 115.912L128.231 115.904L128.231 115.705L128.231 115.507L128.231 115.399L128.231 112.201", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M132.011 119.135L132.259 119.317L133.042 119.903", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M132.011 121.457L132.011 119.143", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M129.664 121.151L133.034 123.697", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M132.251 121.267L133.034 121.854", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M132.251 119.317L132.251 121.267L132.003 121.449L133.034 122.226", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M133.127 121.184L133.127 123.763L133.127 124.374L133.127 124.581L133.127 124.953L133.127 125.63L133.127 126.151", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M138.651 129.754L138.651 128.539L138.651 125.349", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M140.332 124.622L139.379 125.341L139.154 125.415L138.867 125.424L138.65 125.358L134.351 122.11", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M129.4 116.383L128.447 117.102L128.223 117.176L127.936 117.184L127.719 117.118L127.401 116.879L127.231 116.755L127.208 116.738L127.2 116.73L127.177 116.713L127.169 116.705L127.037 116.606L123.884 114.226L123.876 114.218L122.172 112.937", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M120.956 112.003L120.956 115.201L120.956 116.416L120.956 116.441L120.956 116.961", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M127.719 122.069L127.719 121.308L127.719 121.3L127.719 120.3L127.719 117.11", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M120.87 116.804L120.877 116.813L120.963 116.97L120.97 116.978L120.978 116.986L122.179 117.895L122.187 117.903L123.759 119.085L123.891 119.184L123.899 119.193L123.922 119.209L123.93 119.217L123.953 119.234L124.124 119.358L127.223 121.697L127.23 121.705L127.734 122.085L127.951 122.151L128.238 122.143L128.462 122.069L129.671 121.159L129.671 119.854L129.671 119.845L129.671 119.391L129.671 116.589", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M133.034 125.986L133.041 125.994L133.127 126.151L133.142 126.159L133.808 126.663L134.056 126.845L134.358 127.068", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M139.379 125.341L139.379 128.531L139.379 129.2", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M128.455 117.094L128.455 120.292L128.455 120.746L128.455 120.754L128.455 122.06", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M134.351 122.102L134.049 121.878L133.801 121.697L133.134 121.193L133.119 121.184L133.034 121.027L133.026 121.019L133.026 121.011", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M133.034 121.019L133.034 121.862L133.034 122.234L133.034 123.696L133.034 124.209L133.034 124.515L133.034 124.887L133.034 125.986", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M138.867 125.415L138.867 128.605L138.867 129.589", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M139.163 129.374L139.163 128.605L139.163 125.415", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M120.87 111.838L120.87 115.036L120.87 116.441L120.87 116.804", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M128.231 122.135L128.231 120.928L128.231 120.92L128.231 120.366L128.231 117.168", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M127.944 117.176L127.944 120.374L127.944 121.143L127.944 121.151L127.944 122.143", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M122.172 112.92L120.971 112.011L120.963 112.003L120.955 111.995L120.87 111.838L120.862 111.829L120.862 111.821", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M132.011 124.101L132.259 124.283L133.042 124.87", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M132.011 126.424L132.011 124.11", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M129.664 121.151L129.664 126.118", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M132.251 126.242L133.034 126.829", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M132.251 124.292L132.251 126.242L132.003 126.424L133.034 127.2", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M133.127 126.151L133.127 128.729L133.127 128.779L133.127 129.192L133.127 129.341L133.127 129.589L133.127 129.961L133.127 130.589L133.127 130.944L133.127 131.109", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M133.034 123.697L129.664 121.151L128.455 122.06L128.23 122.135L127.944 122.143L127.727 122.077L127.223 121.697L127.215 121.688L124.116 119.35L123.946 119.226L123.923 119.209L123.915 119.201L123.892 119.184L123.884 119.176L123.752 119.077L122.179 117.895L122.172 117.887L120.971 116.978L120.963 116.97L120.955 116.961L120.87 116.804L120.862 116.796", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M120.956 116.97L120.956 119.598L120.956 120.011L120.956 120.159L120.956 121.374L120.956 121.399L120.956 121.928", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M127.719 127.043L127.719 125.523L127.719 125.275L127.719 125.126L127.719 124.713L127.719 122.085", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M120.87 121.771L120.955 121.936L122.171 122.854L122.179 122.862L123.914 124.168L123.922 124.176L125.913 125.68L126.169 125.87L127.711 127.035L127.726 127.043L127.943 127.11L127.966 127.11L128.238 127.11L128.462 127.035L129.361 126.358L129.531 126.234", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M133.034 130.952L133.103 131.085L133.119 131.118L133.684 131.539", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M128.455 122.069L128.455 125.258L128.455 125.672L128.455 127.027", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M134.351 127.077L134.049 126.853L133.801 126.672L133.134 126.168L133.119 126.159L133.034 126.002L133.026 125.994", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M133.034 125.986L133.034 126.829L133.034 127.2L133.034 128.663L133.034 128.713L133.034 128.878L133.034 129.126L133.034 129.176L133.034 129.523L133.034 129.895L133.034 130.952", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M120.87 116.804L120.87 119.531L120.87 119.697L120.87 119.945L120.87 119.994L120.87 121.399L120.87 121.763", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M128.231 127.101L128.231 125.506L128.231 125.333L128.231 125.093L128.231 122.143", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M127.944 122.143L127.944 124.87L127.944 125.283L127.944 125.333L127.944 125.68L127.944 127.101", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M132.011 131.44L132.011 129.126L132.259 129.308L133.042 129.895", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M122.18 125.49L129.664 131.134L131.942 132.853", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M132.251 131.258L133.104 131.903", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M132.251 129.308L132.251 131.258L132.003 131.44L132.91 132.126", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M126.169 126.663L127.711 127.829", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M126.17 125.87L126.17 126.663L125.914 126.845", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M125.914 125.68L125.914 126.845L127.712 128.2L127.712 127.829L127.712 127.035", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M122.737 40.7501L122.753 40.7667L122.761 40.7749L122.768 40.7832L126.038 43.2541L126.046 43.2541L129.307 45.7168L129.315 45.7251L129.323 45.7334L129.331 45.7416L130.547 46.6589L131.663 47.5019L131.678 47.5184L132.12 47.849L132.391 48.0556L132.577 48.1961L132.584 48.2043L132.592 48.2126L132.6 48.2209L132.778 48.3531L135.846 50.667L135.854 50.6753L135.862 50.6835L135.869 50.6918L138 52.3033L140.704 54.3445L141.099 54.642L147.591 59.5426L147.607 59.5591L152.077 62.9309", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M152.108 63.4019L152.108 62.997L152.108 62.8978L152.379 62.6912", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M152.38 63.1953L152.38 62.6995L148.723 59.9393L148.467 59.7492L147.917 59.336L147.909 59.3278L147.894 59.3112L146.507 58.27L142.92 55.5676L142.525 55.2701L141.122 54.2123L140.727 53.9148L138.031 51.8818L138.023 51.8736L136.156 50.4687L136.148 50.4604L136.141 50.4522L136.133 50.4439L134.63 49.3117L134.235 49.0142L132.879 47.9895L132.871 47.9812L132.863 47.9729L132.856 47.9647L132.786 47.9151L132.391 47.6176L132.12 47.411L132.05 47.3614L131.957 47.287L131.949 47.2787L131.934 47.2622L130.547 46.2209L129.602 45.5102L129.594 45.502L129.586 45.4937L129.578 45.4854L126.317 43.0228L126.309 43.0228L123.039 40.5518L123.032 40.5435L123.024 40.5353L123.008 40.5187L122.737 40.7253L122.737 40.7501L122.737 40.7584L122.737 40.7667L122.737 41.2129", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M156.525 42.8244L161.367 46.4771L161.375 46.4854L162.7 47.4854L167.627 51.2042", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M167.626 51.6917L167.626 51.5843L167.626 51.5678L167.626 51.2868L167.626 51.2537L167.626 51.1959L167.898 50.9893", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M167.898 51.4934L167.898 51.4604L167.898 50.9976L162.699 47.0804L162.637 47.0308L162.536 46.9565L161.653 46.2871L161.645 46.2788L161.436 46.1218L156.811 42.6344L156.54 42.841L156.54 43.3368", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M136.04 47.0969L136.628 47.5349L137.512 48.2043L138.031 48.5927L138.038 48.601L142.579 52.0306L142.586 52.0223L145.546 49.791L145.561 49.7745L146.499 49.0638L147.839 48.0473L147.909 47.9977L148.459 47.5845L148.715 47.3945L148.738 47.3779L149.327 46.9399L149.327 46.6672L148.722 46.2127L148.467 46.0226L147.917 45.6094L147.188 45.064L147.173 45.0475L146.506 44.5433L142.795 41.7418L142.129 42.2459L142.114 42.2625L141.347 42.8409L141.13 43.0062L140.952 43.1385L140.735 43.3037L138.852 44.7252L138.836 44.7417L138.046 45.3367L138.038 45.345L136.047 46.8408L136.047 47.0969", stroke: "#1C6BCF", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M142.579 52.0242L142.579 51.7496", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M149.327 46.6672L148.738 47.1052L147.661 47.9151L145.383 49.634L145.368 49.6505L142.579 51.7496L138.031 48.32L137.698 48.0638L136.628 47.2622L136.04 46.8242", stroke: "#1C6BCF", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M138.24 29.04L146.537 35.2959L146.747 35.4529L146.754 35.4612L149.923 37.8495", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M149.931 38.3453L149.931 37.9404L149.931 37.8495L150.202 37.6429", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M150.203 38.1469L150.203 37.6511L148.723 36.5354L148.467 36.3454L147.917 35.9322L147.034 35.2628L147.026 35.2545L146.817 35.0975L138.519 28.8416L138.248 29.0482L138.248 29.1061L138.248 29.4201L138.248 29.4366L138.248 29.5441", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M138.651 60.9888L138.651 59.4104L138.651 59.4021L138.651 59.2203L138.651 56.0387", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M168.402 52.1546L168.394 52.1628L165.117 54.6338", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M151.333 69.9967L152.541 69.0876L153.858 68.0959L153.866 68.0959L157.143 65.625L157.159 65.6085L160.413 63.154L160.428 63.1375L161.11 62.6169L161.83 62.0714L161.846 62.0549L162.52 61.5425L162.621 61.4682L162.683 61.4186L162.9 61.2616L163.295 60.964L163.946 60.4682L164.341 60.1707L165.108 59.5922L165.123 59.5757L168.393 57.1047", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M168.401 57.1213L168.401 52.1546", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M141.177 59.0468L141.177 56.7328L141.425 56.9146L142.974 58.0799L142.974 58.617", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M140.595 55.1131L140.595 55.8982L140.595 55.9229L140.595 58.2947L140.595 60.0632L140.595 60.0715", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M140.595 60.0715L142.958 61.8483", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M141.424 58.8567L142.958 60.0137", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M132.012 52.1298L132.012 51.6091L132.012 51.6009L132.012 49.8158L132.066 49.8571L132.136 49.9067L132.252 49.9976L133.352 50.824", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M129.664 47.9895L129.664 49.8241L129.664 49.8324L129.664 50.0555L129.664 50.4026L129.664 50.4108L129.664 50.4274L129.664 50.4356L129.664 51.824", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M129.664 51.824L130.562 52.5016L131.089 52.8983L131.097 52.8983L131.972 53.5594L131.988 53.5759L131.996 53.5842L132.003 53.5925L132.011 53.6007L132.065 53.6421L132.135 53.6916L133.034 54.3693", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M132.251 51.9397L132.406 52.0554L132.802 52.3529L133.042 52.5347", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M141.425 56.9064L141.425 58.8567L141.177 59.0385L142.951 60.3773", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M132.252 49.9976L132.252 51.9479L132.136 52.0388L132.058 52.0967L132.05 52.105L132.012 52.138L132.027 52.1545L132.136 52.2372L132.407 52.4438L132.802 52.7413L132.965 52.8652L132.972 52.8735L132.98 52.8818L132.988 52.89L133.034 52.9231", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M127.719 52.7496L127.719 51.8984L127.719 51.8901L127.719 51.8736L127.719 51.8653L127.719 50.981L127.719 48.3696L127.719 48.3613L127.719 47.7911", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M162.7 45.1879L162.7 45.1962L162.684 45.3367L162.638 45.4193L162.537 45.6011", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M120.956 42.6922L120.956 43.2624L120.956 43.2707L120.956 45.8739L120.956 47.0804L120.956 47.0887L120.956 47.1135L120.956 47.1217L120.956 47.6424L120.956 47.6506", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M133.127 51.8736L133.127 52.733L133.127 52.7413L133.127 52.7578L133.127 52.7661L133.127 53.7661L133.127 54.3611L133.127 54.4354L133.127 54.4437L133.127 55.0552L133.127 55.2371L133.127 55.2453L133.127 55.6172L133.127 56.2949L133.127 56.3031L133.127 56.8238", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M143.044 59.3526L143.044 60.3442L143.044 61.9144L143.044 61.9227L143.044 62.5425L143.044 62.7243L143.044 62.7326L143.044 63.7821L143.044 63.7904L143.044 64.311", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M139.379 56.0304L139.379 59.212L139.379 59.9558L139.379 59.9641L139.379 60.9806", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M139.379 60.9806L140.053 60.4682L140.061 60.4682L140.588 60.0715", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M128.455 47.7829L128.455 48.9151L128.455 48.9233L128.455 50.9728L128.455 51.3199L128.455 51.3282L128.455 51.3447L128.455 51.353L128.455 52.7331L128.455 52.7413", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M128.455 52.7413L129.664 51.8323", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M133.034 51.7083L133.034 51.9727L133.034 52.5347L133.034 52.7909L133.034 52.7991L133.034 52.8157L133.034 52.8239L133.034 52.8983L133.034 53.6917L133.034 54.2867L133.034 54.361L133.034 54.3693L133.034 54.8817L133.034 55.1627L133.034 55.1709L133.034 55.5428L133.034 56.3527L133.034 56.6502", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M138.867 56.1048L138.867 59.2864L138.867 59.5674L138.867 59.5757L138.867 61.0549", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M139.163 61.0467L139.163 59.7906L139.163 59.7823L139.163 59.2782L139.163 56.0965", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M151.109 70.0628L151.109 68.2943L151.109 66.0134L151.109 66.0051L151.109 65.1126", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M142.951 59.1873L142.951 60.0137L142.951 60.3856L142.951 61.8483L142.951 61.8566L142.951 62.3772L142.951 62.6582L142.951 62.6665L142.951 63.0383L142.951 64.1375", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M150.822 65.1209L150.822 65.7902L150.822 65.7985L150.822 68.3025L150.822 70.071", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M150.822 70.071L151.108 70.0628", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M120.87 42.5269L120.87 43.1963L120.87 43.2046L120.87 45.7086L120.87 47.1135L120.87 47.1217L120.87 47.4771", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M127.944 47.8655L127.944 48.5349L127.944 48.5432L127.944 51.0472L127.944 51.7L127.944 51.7083L127.944 51.7248L127.944 51.7331L127.944 52.8074", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M127.944 52.8157L128.231 52.8157", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M128.231 52.8074L128.231 51.5182L128.231 51.5099L128.231 51.4934L128.231 51.4851L128.231 51.0471L128.231 48.758L128.231 48.7497L128.231 47.8572", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M133.034 56.6585L133.041 56.6668L133.127 56.8249", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M150.598 70.0049L150.816 70.0715", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M139.163 61.0554L139.389 60.9806", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M138.651 65.9307L138.651 64.3771L138.651 64.3688L138.651 64.1788L138.651 60.9888L138.651 60.9806", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M133.127 56.8155L133.127 57.6667L133.127 57.6749L133.127 57.6915L133.127 57.6997L133.127 58.7327L133.127 59.3277L133.127 59.3691L133.127 59.3939L133.127 60.0054L133.127 60.1789L133.127 60.1955L133.127 60.2037L133.127 60.5508L133.127 61.2285L133.127 61.2533L133.127 61.7574", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M168.401 57.113L165.124 59.584L165.109 59.6005L164.342 60.179L163.946 60.4765L163.296 60.9641L162.901 61.2616L162.684 61.4186L162.622 61.4682L162.521 61.5425L161.839 62.0549L161.824 62.0714L161.111 62.6086L160.421 63.1292L160.406 63.1458L157.152 65.6002L157.136 65.6167L153.859 68.0877L153.851 68.0877L152.534 69.0794L151.326 69.9884", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M151.109 75.0295L151.334 74.9551L152.543 74.0461L153.86 73.0544L157.152 70.5752L157.16 70.5752L160.437 68.1042L160.453 68.0877L161.127 67.5836L161.863 67.0299L161.878 67.0133L162.537 66.5175L162.638 66.4431L162.7 66.3935L162.917 66.2365L163.312 65.939L163.978 65.4349L164.373 65.1374L165.14 64.5589L165.156 64.5424L168.41 62.088", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M168.401 62.0797L168.401 57.113", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M141.177 64.0052L141.177 61.6913L141.425 61.8731L142.959 63.03", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M140.595 60.0633L140.595 60.8649L140.595 60.8732L140.595 63.2532L140.595 64.9969L140.595 65.0217", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M140.595 65.03L142.958 66.8067", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M141.424 63.8234L142.958 64.9804", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M132.012 57.0882L132.012 56.5676L132.012 56.5593L132.012 54.766L132.066 54.8073L132.136 54.8569L132.252 54.9478L133.034 55.5346", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M129.664 51.824L129.664 54.799L129.664 54.8073L129.664 55.0222L129.664 55.3445L129.664 55.3527L129.664 55.3693L129.664 55.3775L129.664 56.7659", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M129.664 56.7824L130.562 57.4601L131.097 57.865L131.972 58.5262L131.98 58.5262L131.988 58.5344L131.996 58.5427L132.003 58.551L132.065 58.6005L132.135 58.6501L133.034 59.3278", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M132.251 56.9064L132.406 57.0221L132.802 57.3196L133.042 57.5014", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M141.425 61.8731L141.425 63.8234L141.177 64.0052L142.951 65.344", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M132.252 54.9561L132.252 56.9064L132.136 56.9973L132.066 57.0469L132.058 57.0469L132.012 57.0882L132.035 57.1047L132.136 57.1791L132.407 57.3857L132.802 57.6832L132.949 57.7989L132.957 57.8072L132.965 57.8154L132.972 57.8237L133.034 57.8733", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M150.598 69.9967L148.716 68.5752L148.46 68.3852L147.91 67.972L146.5 66.9059L144.261 65.22L143.215 64.4267L143.052 64.3027L143.037 64.2945", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M143.044 64.2945L143.044 65.3027L143.044 66.8481L143.044 66.8728L143.044 67.4927L143.044 67.6662L143.044 67.6827L143.044 67.691L143.044 68.7157L143.044 68.7405L143.044 69.2446L143.044 69.2694", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M127.719 57.6832L127.719 56.8403L127.719 56.832L127.719 56.8155L127.719 56.8072L127.719 55.9478L127.719 53.3446L127.719 53.3363L127.719 52.7496L127.719 52.7413", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M127.719 52.7413L127.161 52.3198L127.154 52.3116L127.146 52.3033L127.138 52.295", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M120.956 47.6423L120.956 48.2291L120.956 48.2374L120.956 50.8323L120.956 52.0223L120.956 52.0471L120.956 52.0719L120.956 52.576L120.956 52.6008", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M120.956 52.6091L120.972 52.6181", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M133.127 61.7822L133.143 61.7905L133.693 62.2037L133.701 62.2037L133.709 62.2037L133.809 62.278L134.057 62.4599L134.359 62.683L134.382 62.6995L134.646 62.8979L136.986 64.6664L136.993 64.6664L138.032 65.4514L138.039 65.4597L138.651 65.9225", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M143.044 69.2612L143.059 69.2694L143.222 69.3934L144.268 70.1867", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M139.379 60.9806L139.379 64.1705L139.379 64.9225L139.379 64.9308L139.379 65.9225L139.379 65.9473", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M140.595 60.0633L140.061 60.4682L140.053 60.4682L139.379 60.9723", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M128.455 52.733L128.455 53.8817L128.455 53.89L128.455 55.9312L128.455 56.2535L128.455 56.2618L128.455 56.2783L128.455 56.2866L128.455 57.6749", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M133.034 56.6502L133.034 56.9477L133.034 57.4932L133.034 57.7328L133.034 57.7411L133.034 57.7576L133.034 57.7659L133.034 57.8568L133.034 58.6667L133.034 59.2617L133.034 59.303L133.034 59.3278L133.034 59.8401L133.034 60.1129L133.034 60.1294L133.034 60.1377L133.034 60.4847L133.034 61.3194L133.034 61.6169", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M138.867 61.055L138.867 64.2449L138.867 64.5341L138.867 64.5424L138.867 65.9969", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M139.163 66.0134L139.163 65.9886L139.163 64.7572L139.163 64.749L139.163 64.2366L139.163 61.0467L139.163 61.0384", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M139.162 61.0467L138.875 61.0467", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M150.822 70.0628L150.822 70.7487L150.822 70.757L150.822 73.261L150.822 75.0047", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M151.109 75.0047L151.109 73.261L151.109 70.9801L151.109 70.9718L151.109 70.0628L151.109 70.0545", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M142.951 64.1374L142.951 64.9721L142.951 65.344L142.951 66.7819L142.951 66.8067L142.951 67.3274L142.951 67.6001L142.951 67.6166L142.951 67.6249L142.951 67.972L142.951 69.1041", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M120.87 47.4771L120.87 48.163L120.87 48.1712L120.87 50.667L120.87 52.0471L120.87 52.0719L120.87 52.4107", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M127.944 52.8074L127.944 53.4933L127.944 53.5016L127.944 56.0056L127.944 56.6419L127.944 56.6502L127.944 56.6667L127.944 56.675L127.944 57.7493", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M128.231 57.7741L128.231 57.7493L128.231 56.4601L128.231 56.4519L128.231 56.4354L128.231 56.4271L128.231 56.0056L128.231 53.7247L128.231 53.7165L128.231 52.8074L128.231 52.7992", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M133.127 56.8166L133.041 56.6585L133.034 56.6502", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M133.034 61.6169L133.041 61.6252L133.127 61.7833", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M138.869 61.0554L138.651 60.9888", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M151.109 70.0627L150.822 70.0627L150.605 69.9966", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M143.044 64.2956L142.974 64.1624L142.958 64.1375L142.951 64.1292", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M151.336 69.9884L151.109 70.0633", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M128.231 57.7746L128.457 57.6997", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M128.457 52.733L128.231 52.8079", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M138.651 70.8892L138.651 70.8644L138.651 69.3356L138.651 69.3273L138.651 69.1124L138.651 65.9556L138.651 65.9308", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M133.127 61.7574L133.127 61.7822L133.127 62.6334L133.127 62.6417L133.127 62.6499L133.127 62.6582L133.127 63.7077L133.127 64.3027L133.127 64.3193L133.127 64.3441L133.127 64.9556L133.127 65.1291L133.127 65.1705L133.127 65.1787L133.127 65.501L133.127 66.1787L133.127 66.2035L133.127 66.7076L133.127 66.7324", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M168.401 62.0549L168.386 62.0714L165.132 64.5258L165.116 64.5424L164.349 65.1208L163.954 65.4183L163.303 65.9059L162.908 66.2034L162.691 66.3605L162.629 66.41L162.529 66.4844L161.847 66.9968L161.831 67.0133L161.118 67.5505L160.429 68.0711L160.413 68.0876L157.136 70.5586L157.128 70.5586L153.836 73.0378L152.534 74.0212", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M141.177 68.9471L141.177 66.6332L141.425 66.815L142.959 67.972", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M140.595 65.03L140.595 65.8316L140.595 65.8398L140.595 68.1951L140.595 69.9388L140.595 69.9636", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M140.595 69.9719L142.958 71.7487", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M141.424 68.7571L142.958 69.914", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M132.012 62.0301L132.012 61.5342L132.012 61.526L132.012 59.7079L132.066 59.7492L132.136 59.7988L132.252 59.8897L133.034 60.4764", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M129.664 56.7577L129.664 56.7825L129.664 59.7575L129.664 59.7658L129.664 59.9559L129.664 60.2781L129.664 60.2864L129.664 60.3029L129.664 60.3112L129.664 61.6996L129.664 61.7244", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M129.664 61.7243L130.562 62.402L131.112 62.8152L131.972 63.468L131.996 63.4846L132.003 63.4846L132.011 63.4846L132.073 63.5259L132.143 63.5755L133.041 64.2531", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M132.251 61.8483L132.406 61.964L132.802 62.2615L133.042 62.4433", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M141.425 66.8067L141.425 68.757L141.177 68.9388L142.951 70.2776", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M132.252 59.898L132.252 61.8483L132.136 61.9392L132.089 61.9723L132.081 61.9723L132.012 62.0219L132.043 62.0466L132.136 62.121L132.407 62.3276L132.802 62.6251L132.972 62.7491L132.98 62.7491L132.988 62.7491L133.042 62.7904", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M150.598 79.8805L150.598 78.1368L150.598 75.5584L150.598 75.5501L150.598 74.9634L150.598 74.9386", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M150.597 74.9386L148.715 73.5171L148.459 73.3271L147.909 72.9139L146.499 71.8478L144.26 70.1619", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M127.719 62.6499L127.719 62.6251L127.719 61.7821L127.719 61.7739L127.719 61.7573L127.719 61.7408L127.719 60.8814L127.719 58.303L127.719 58.2947L127.719 57.708L127.719 57.6832", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M120.956 52.6091L120.956 53.1958L120.956 53.2041L120.956 55.7825L120.956 56.9725L120.956 56.9973L120.956 57.0221L120.956 57.5262L120.956 57.551", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M120.956 57.5427L120.971 57.551L123.845 59.7244L123.853 59.7327L123.861 59.741L123.869 59.7492L127.115 62.2037L127.123 62.2119L127.13 62.2202L127.138 62.2285L127.711 62.6665", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M143.044 69.2612L143.044 70.2446L143.044 71.79L143.044 71.8148L143.044 72.4346L143.044 72.6081L143.044 72.6494L143.044 72.6577L143.044 73.6576L143.044 73.6824L143.044 74.1865L143.044 74.2113", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M142.951 74.0378L142.958 74.046L142.974 74.0708L143.044 74.203L143.059 74.2113L143.222 74.3353L144.268 75.1286", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M139.379 65.9142L139.379 65.939L139.379 69.1041L139.379 69.881L139.379 69.8892L139.379 70.8561L139.379 70.8809", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M151.333 74.9551L151.333 76.1038L151.333 76.1121L151.333 78.1285L151.333 79.8722L151.333 79.897", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M128.455 57.6749L128.455 57.6997L128.455 58.8484L128.455 58.8567L128.455 60.8731L128.455 61.1954L128.455 61.2037L128.455 61.2202L128.455 61.2285L128.455 62.6168L128.455 62.6416", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M129.664 56.7577L128.455 57.6667", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M133.034 61.5921L133.034 61.9061L133.034 62.435L133.034 62.6995L133.034 62.7078L133.034 62.716L133.034 62.7987L133.034 63.6333L133.034 64.2283L133.034 64.2449L133.034 64.2697L133.034 64.782L133.034 65.0547L133.034 65.0961L133.034 65.1043L133.034 65.4266L133.034 66.2778L133.034 66.534", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M138.867 65.9886L138.867 66.0134L138.867 69.1785L138.867 69.4925L138.867 69.5008L138.867 70.9305L138.867 70.9553", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M139.163 70.9553L139.163 70.9305L139.163 69.724L139.163 69.7157L139.163 69.1785L139.163 66.0134", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M150.822 75.0047L150.822 75.0295L150.822 75.7154L150.822 75.7236L150.822 78.2029L150.822 79.9466", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M151.109 79.9714L151.109 79.9466L151.109 78.2029L151.109 75.9468L151.109 75.9385L151.109 75.0295L151.109 75.0047", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M142.951 69.0959L142.951 69.914L142.951 70.2859L142.951 71.7238L142.951 71.7486L142.951 72.2693L142.951 72.542L142.951 72.5833L142.951 72.5916L142.951 72.9139L142.951 74.0212L142.951 74.046", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M120.87 52.4438L120.87 53.1297L120.87 53.138L120.87 55.6172L120.87 56.9973L120.87 57.0221L120.87 57.3609L120.87 57.3857", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M127.944 57.7493L127.944 57.7741L127.944 58.46L127.944 58.4683L127.944 60.9475L127.944 61.5839L127.944 61.5921L127.944 61.6086L127.944 61.6169L127.944 62.6912L127.944 62.716", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M128.231 62.7078L128.231 62.683L128.231 61.3938L128.231 61.3855L128.231 61.369L128.231 61.3607L128.231 60.9393L128.231 58.6832L128.231 58.6749L128.231 57.7659", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M120.87 52.4107L120.87 52.4363", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M151.109 75.0047L150.822 75.0047L150.605 74.9386", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M120.87 57.3774L120.877 57.3858L120.963 57.5439", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M127.946 57.7497L127.728 57.6832", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M139.163 70.9558L139.389 70.8809", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M128.457 57.6749L128.231 57.7498", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M138.651 75.8311L138.651 75.8063L138.651 74.294L138.651 74.2692L138.651 74.0543L138.651 70.8892", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M138.651 70.8644L138.039 70.4016L138.032 70.3933L137.024 69.633L137.017 69.633L134.646 67.8397L134.414 67.6662L134.359 67.6249L134.057 67.4017L133.809 67.2199L133.739 67.1703L133.732 67.1703L133.143 66.7323L133.127 66.7241", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M133.127 66.6993L133.127 66.7241L133.127 67.6001L133.127 67.6083L133.127 67.6166L133.127 67.6249L133.127 68.6661L133.127 69.2529L133.127 69.2777L133.127 69.8892L133.127 70.0628L133.127 70.1041L133.127 70.1289L133.127 70.4346L133.127 71.1123L133.127 71.1371L133.127 71.6412L133.127 71.666", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M141.177 73.8807L141.177 71.5668L141.425 71.7486L142.959 72.9056", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M140.595 69.9719L140.595 70.7983L140.595 70.8066L140.595 73.1453L140.595 74.889L140.595 74.9138", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M140.595 74.9055L142.958 76.6823", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M141.424 73.699L142.958 74.8559", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M132.012 66.972L132.012 66.4927L132.012 66.4679L132.012 64.6498L132.066 64.6912L132.136 64.7407L132.252 64.8316L133.034 65.4184", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M129.664 61.6995L129.664 61.7243L129.664 64.6911L129.664 64.7159L129.664 64.8895L129.664 65.2366L129.664 65.2448L129.664 65.2531L129.664 65.2614L129.664 66.6415L129.664 66.6662", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M132.251 66.7819L132.406 66.8976L132.802 67.1951L133.042 67.377", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M141.425 71.7487L141.425 73.699L141.177 73.8808L142.951 75.2196", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M132.252 64.8316L132.252 66.782L132.136 66.8729L132.105 66.8977L132.081 66.9142L132.012 66.9638L132.043 66.9886L132.05 66.9968L132.136 67.0629L132.407 67.2695L132.802 67.567L132.988 67.7075L132.996 67.7075L133.034 67.7406", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M150.598 84.8472L150.598 84.8224L150.598 83.0787L150.598 80.5168L150.598 80.492L150.598 79.9053L150.598 79.8805", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M127.719 67.5588L127.719 66.7241L127.719 66.7159L127.719 66.7076L127.719 65.8151L127.719 63.2532L127.719 63.2284L127.719 62.6417L127.719 62.6169", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M127.719 62.6251L127.161 62.2036L127.154 62.1953L127.146 62.1871L127.138 62.1788L123.892 59.7244L123.884 59.7161L123.876 59.7079L123.869 59.6996L120.971 57.5261L120.963 57.5179L120.956 57.5096", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M120.956 57.5179L120.956 57.5427L120.956 58.1294L120.956 58.1542L120.956 60.7161L120.956 61.9061L120.956 61.9309L120.956 61.9557L120.956 62.4598L120.956 62.4846", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M120.87 62.3193L120.877 62.3276L120.963 62.4846L120.97 62.4929L120.978 62.5011L123.852 64.6746L123.86 64.6828L123.868 64.6911L123.876 64.6994L127.145 67.1621L127.153 67.1621L127.161 67.1621L127.734 67.5918L127.951 67.6579", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M143.044 74.2031L143.044 75.1865L143.044 76.7319L143.044 76.7566L143.044 77.3764L143.044 77.55L143.044 77.5913L143.044 77.6161L143.044 78.5995L143.044 78.6243L143.044 79.1284L143.044 79.1532", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M139.379 70.8561L139.379 70.8809L139.379 74.046L139.379 74.8229L139.379 74.8477L139.379 75.798L139.379 75.8228", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M139.379 75.8228L140.022 75.3352L140.037 75.3187L140.588 74.9055", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M140.595 69.9471L140.03 70.3768L139.387 70.8644", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M151.333 79.8722L151.333 79.897L151.333 81.0457L151.333 81.0705L151.333 83.0704L151.333 84.8141L151.333 84.8389", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M128.455 62.6416L128.455 63.7903L128.455 63.8151L128.455 65.815L128.455 66.1621L128.455 66.1704L128.455 66.1786L128.455 66.1869L128.455 67.567L128.455 67.5918", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M133.034 66.534L133.034 66.5596", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M133.034 66.5588L133.034 66.8728L133.034 67.3769L133.034 67.6744L133.034 67.6827L133.034 67.691L133.034 67.6992L133.034 67.7571L133.034 68.6083L133.034 69.195L133.034 69.2198L133.034 69.7322L133.034 70.0049L133.034 70.0462L133.034 70.071L133.034 70.3768L133.034 71.228L133.034 71.4842", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M138.867 70.9305L138.867 70.9553L138.867 74.1204L138.867 74.4345L138.867 74.4592L138.867 75.8724L138.867 75.8972", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M139.163 75.8972L139.163 75.8724L139.163 74.6824L139.163 74.6576L139.163 74.1204L139.163 70.9553", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M139.162 70.9305L138.875 70.9305", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M151.108 79.9383L150.822 79.9466", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M150.822 79.9466L150.822 79.9713L150.822 80.6573L150.822 80.6821L150.822 83.1448L150.822 84.8885L150.822 84.9133", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M151.109 84.905L151.109 84.8802L151.109 83.1365L151.109 80.897L151.109 80.8722L151.109 79.9631", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M142.951 74.013L142.951 74.0386", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M142.951 74.0378L142.951 74.8559L142.951 75.2278L142.951 76.6657L142.951 76.6905L142.951 77.2111L142.951 77.4839L142.951 77.5252L142.951 77.55L142.951 77.8558L142.951 78.9879", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M150.598 84.8472L150.815 84.9133L151.101 84.9133L151.326 84.8389", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M120.87 57.3526L120.87 58.0633L120.87 58.0881L120.87 60.5508L120.87 61.9309L120.87 61.9557L120.87 62.2945", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M127.944 62.716L127.944 63.4019L127.944 63.4267L127.944 65.8894L127.944 66.5505L127.944 66.5588L127.944 66.5671L127.944 66.5753L127.944 67.6414L127.944 67.6662", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M127.944 67.6579L128.231 67.6497L128.455 67.5753", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M128.231 67.6497L128.231 67.6249L128.231 66.344L128.231 66.3357L128.231 66.3275L128.231 65.8812L128.231 63.6416L128.231 63.6168L128.231 62.7078", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M133.127 71.666L133.143 71.6742L133.724 72.1122L133.732 72.1122L133.801 72.1701L134.049 72.3519L134.352 72.575L134.39 72.6081L134.638 72.7982L136.993 74.5749L137.001 74.5832L137.009 74.5915L137.017 74.5997L138.024 75.36L138.032 75.3683L138.644 75.8311L138.861 75.8972", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M143.044 74.1794L142.974 74.0463L142.958 74.0213L142.951 74.013", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M127.946 62.6917L127.728 62.6251", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M139.163 75.8977L139.389 75.8228", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M128.457 62.6086L128.231 62.6835", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M138.651 80.773L138.651 80.7482L138.651 79.2359L138.651 79.2111L138.651 78.9962L138.651 75.8311", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M138.651 75.8063L138.039 75.3435L138.031 75.3353L137.04 74.5832L137.032 74.575L137.024 74.5667L137.016 74.5584L134.646 72.7651L134.413 72.5916L134.359 72.5503L134.057 72.3271L133.809 72.1453L133.755 72.104L133.747 72.104L133.15 71.6495", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M141.177 78.8227L141.177 76.5088L141.425 76.6906L142.959 77.8475", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M140.595 74.9055L140.595 75.7319L140.595 75.7567L140.595 78.0706L140.595 79.8144L140.595 79.8392", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M140.595 79.8474L142.958 81.6242", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M141.424 78.6409L142.958 79.7979", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M132.012 71.9056L132.012 71.4263L132.012 71.4015L132.012 69.5834L132.066 69.6248L132.136 69.6743L132.252 69.7652L133.034 70.352", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M129.664 66.6662L129.664 69.633L129.664 69.6578L129.664 69.8314L129.664 70.2115L129.664 70.2198L129.664 70.228L129.664 70.2363L129.664 71.5834L129.664 71.6081", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M132.251 71.7238L132.406 71.8395L132.802 72.137L133.042 72.3189", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M141.425 76.6905L141.425 78.6409L141.177 78.8227L142.951 80.1614", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M132.252 69.7735L132.252 71.7239L132.136 71.8148L132.105 71.8396L132.081 71.8561L132.012 71.9057L132.043 71.9305L132.05 71.9387L132.136 72.0048L132.407 72.2114L132.802 72.509L133.003 72.6577L133.011 72.6577L133.034 72.6742", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M150.598 89.756L150.598 88.0123L150.598 85.4505L150.598 85.4257L150.598 84.8389", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M127.719 72.5254L127.719 72.5006L127.719 71.6908L127.719 71.6825L127.719 71.6742L127.719 71.666L127.719 70.7487L127.719 68.1868L127.719 68.162L127.719 67.5753L127.719 67.5505", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M120.956 62.4599L120.956 62.4846L120.956 63.0714L120.956 63.0962L120.956 65.658L120.956 66.8481L120.956 66.8729L120.956 66.8977L120.956 67.4018L120.956 67.4266", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M120.87 67.2612L120.877 67.2695L120.963 67.4276L120.971 67.4359L120.979 67.4443", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M133.127 71.666L133.127 72.5668L133.127 72.575L133.127 72.5833L133.127 72.5916L133.127 73.6163L133.127 74.2031L133.127 74.2278L133.127 74.8394L133.127 75.0129L133.127 75.0543L133.127 75.079L133.127 75.3848L133.127 76.0625L133.127 76.0873L133.127 76.5914L133.127 76.6162", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M133.127 76.5996L133.143 76.6079L133.724 77.0459L133.732 77.0541L133.739 77.0624L133.747 77.0707L133.801 77.112L134.049 77.2938L134.352 77.5169L134.39 77.55L134.638 77.7401L136.993 79.5168L137.001 79.5251L137.009 79.5334L137.017 79.5416L138.024 80.3019L138.032 80.3102L138.644 80.773", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M143.044 79.145L143.044 80.1284L143.044 81.6738L143.044 81.6986L143.044 82.3184L143.044 82.4919L143.044 82.5333L143.044 82.5581L143.044 83.5415L143.044 83.5663L143.044 84.0704L143.044 84.0952", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M143.044 84.0786L143.059 84.0869L143.222 84.2108L144.268 85.0042", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M139.379 75.8228L139.379 78.9879L139.379 79.7648L139.379 79.7896L139.379 80.7399L139.379 80.7647", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M139.379 80.7647L140.022 80.2772L140.037 80.2606L140.588 79.8474", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M151.333 84.8389L151.333 85.9876L151.333 86.0124L151.333 88.0123L151.333 89.756L151.333 89.7808", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M128.455 67.5753L128.455 68.724L128.455 68.7488L128.455 70.7487L128.455 71.1288L128.455 71.1371L128.455 71.1454L128.455 71.1536L128.455 72.5007L128.455 72.5255", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M129.664 66.6414L128.455 67.5505", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M133.034 71.4677L133.034 71.4932", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M133.034 71.5007L133.034 71.8148L133.034 72.3189L133.034 72.6329L133.034 72.6412L133.034 72.6494L133.034 72.6577L133.034 72.699L133.034 73.5502L133.034 74.137L133.034 74.1618L133.034 74.6741L133.034 74.9468L133.034 74.9882L133.034 75.013L133.034 75.3187L133.034 76.1699L133.034 76.4509", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M138.867 75.8972L138.867 79.0623L138.867 79.3763L138.867 79.4011L138.867 80.8143L138.867 80.8391", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M138.651 80.773L138.868 80.8391L139.154 80.8308", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M139.163 80.8309L139.163 80.8061L139.163 79.616L139.163 79.5912L139.163 79.0541L139.163 75.8889L139.163 75.8642", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M139.162 75.8642L138.875 75.8724", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M151.109 89.8469L151.109 89.8221L151.109 88.0784L151.109 85.8388L151.109 85.814L151.109 84.905", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M142.951 78.9797L142.951 79.7978L142.951 80.1697L142.951 81.6077L142.951 81.6325L142.951 82.1531L142.951 82.4258L142.951 82.4671L142.951 82.4919L142.951 82.7977L142.951 83.9299", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M150.822 84.9133L150.822 85.5992L150.822 85.624L150.822 88.0867L150.822 89.8304", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M120.87 62.2946L120.87 63.0053L120.87 63.0301L120.87 65.4928L120.87 66.8729L120.87 66.8976L120.87 67.2613", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M127.944 67.6579L127.944 68.3439L127.944 68.3687L127.944 70.8313L127.944 71.5173L127.944 71.5255L127.944 71.5338L127.944 71.5421L127.944 72.5833L127.944 72.6081", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M128.231 72.5916L128.231 72.5668L128.231 71.3107L128.231 71.3024L128.231 71.2941L128.231 71.2859L128.231 70.8148L128.231 68.5752L128.231 68.5505L128.231 67.6414", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M150.823 84.8889L150.605 84.8224", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M143.044 79.1213L142.974 78.9881L142.958 78.9632L142.951 78.9549", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M150.598 89.7808L150.816 89.8474", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M139.163 80.8313L139.389 80.7565", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M139.381 75.798L139.155 75.8729", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M127.944 72.5916L128.231 72.5916L128.455 72.5172", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M128.457 67.5505L128.231 67.6253", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M138.651 85.7149L138.651 84.1778L138.651 84.153L138.651 83.9381L138.651 80.773", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M138.651 80.7482L138.039 80.2854L138.031 80.2771L137.04 79.5251L137.032 79.5168L137.024 79.5086L137.016 79.5003L134.646 77.707L134.413 77.5335L134.359 77.4922L134.057 77.269L133.809 77.0872L133.77 77.0542L133.762 77.0459L133.755 77.0376L133.747 77.0294L133.15 76.5748", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M141.177 83.7646L141.177 81.4506L141.425 81.6324L142.959 82.7894", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M140.595 79.8226L140.595 79.8474L140.595 80.6738L140.595 80.6986L140.595 83.0126L140.595 84.7811", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M133.034 81.3763L133.041 81.3845L133.127 81.5416L133.142 81.5498L133.723 81.9878L133.731 81.9961L133.739 82.0043L133.746 82.0126L133.801 82.0539L134.049 82.2357L134.351 82.4589L134.39 82.4919L134.637 82.682L136.993 84.4588L137 84.467L137.008 84.4753L137.016 84.4836L138.023 85.2439L138.031 85.2521L138.643 85.7149L138.86 85.781L139.146 85.781L139.371 85.7067L140.014 85.2191L140.03 85.2025L140.58 84.7893L142.943 86.5661", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M141.424 83.5745L142.958 84.7315", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M132.012 76.8476L132.012 76.3683L132.012 76.3435L132.012 74.5254L132.066 74.5667L132.136 74.6163L132.252 74.7072L133.034 75.2939", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M129.664 71.6081L129.664 74.5749L129.664 74.5997L129.664 74.7733L129.664 75.1699L129.664 75.1782L129.664 75.1865L129.664 75.1947L129.664 76.55", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M120.87 72.2032L120.877 72.2114L120.963 72.3685L120.97 72.3767L120.978 72.385L123.891 74.5832L123.899 74.5832L127.176 77.0542L127.184 77.0542L127.726 77.4591L127.943 77.5252L128.23 77.517L128.454 77.4426L129.663 76.5336L130.562 77.2112L131.112 77.6244L131.127 77.6409L131.972 78.2773L132.026 78.3186L132.034 78.3269L132.042 78.3351L132.049 78.3434L132.065 78.3517L132.135 78.4012L133.033 79.0789", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M132.251 76.6658L132.406 76.7815L132.802 77.079L133.042 77.2608", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M141.425 81.6325L141.425 83.5828L141.177 83.7646L142.951 85.1034", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M132.252 74.7154L132.252 76.6658L132.136 76.7567L132.105 76.7815L132.081 76.798L132.012 76.8476L132.043 76.8724L132.05 76.8806L132.136 76.9467L132.407 77.1533L132.802 77.4508L133.003 77.5996L133.011 77.6079L133.019 77.6161L133.027 77.6244L133.034 77.6327", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M150.598 94.7227L150.598 92.9542L150.598 90.3924L150.598 90.3676L150.598 89.7808L150.598 89.756", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M150.597 89.756L148.715 88.3346L148.459 88.1446L147.909 87.7314L146.499 86.6653L144.26 84.9794", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M127.719 77.4674L127.719 76.6492L127.719 76.641L127.719 76.6327L127.719 76.6244L127.719 75.6823L127.719 73.1205L127.719 73.0957L127.719 72.5089L127.719 72.4841", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M127.719 72.5007L127.185 72.0957L127.177 72.0957L123.9 69.6248L123.892 69.6248L123.884 69.6248L120.971 67.4265L120.963 67.4183L120.956 67.41", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M120.956 67.4017L120.956 67.4265L120.956 68.0133L120.956 68.0381L120.956 70.5999L120.956 71.8148L120.956 71.823L120.956 71.8395L120.956 71.8478L120.956 72.3684", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M133.127 76.5996L133.127 77.5004L133.127 77.5087L133.127 77.5252L133.127 77.5335L133.127 78.5334L133.127 79.1284L133.127 79.1532L133.127 79.1615L133.127 79.7648L133.127 79.9714L133.127 79.9796L133.127 80.0044L133.127 80.3432L133.127 81.0126L133.127 81.0209L133.127 81.5415", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M143.044 84.0786L143.044 85.062L143.044 86.6322L143.044 86.6405L143.044 87.252L143.044 87.4586L143.044 87.4669L143.044 87.4916L143.044 88.4999L143.044 88.5081L143.044 89.0288", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M142.951 88.8552L142.958 88.8635L142.974 88.8883L143.044 89.0205L143.059 89.0288L143.222 89.1527L144.268 89.9461L146.507 91.6319L147.917 92.698L148.467 93.1112L148.723 93.3013L150.605 94.7227L150.822 94.7888L151.109 94.7806L151.334 94.7062", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M139.379 80.7317L139.379 80.7564L139.379 83.9216L139.379 84.6984L139.379 84.7232L139.379 85.6984", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M151.333 89.7726L151.333 90.9213L151.333 90.9461L151.333 92.946L151.333 94.7145", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M128.455 72.5172L128.455 73.6659L128.455 73.6907L128.455 75.6906L128.455 76.0873L128.455 76.0955L128.455 76.1038L128.455 76.1121L128.455 77.4674", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M133.034 76.4096L133.034 76.4351", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M133.034 76.4344L133.034 76.7484L133.034 77.2525L133.034 77.5665L133.034 77.5748L133.034 77.5913L133.034 77.5996L133.034 77.6161L133.034 78.4673L133.034 79.0623L133.034 79.0871L133.034 79.0954L133.034 79.5995L133.034 79.9053L133.034 79.9135L133.034 79.9383L133.034 80.2771L133.034 81.0953L133.034 81.3763", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M138.867 80.8391L138.867 84.0043L138.867 84.3183L138.867 84.3431L138.867 85.781", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M139.163 85.7728L139.163 84.558L139.163 84.5332L139.163 83.996L139.163 80.8309L139.163 80.8061", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M139.162 80.8061L138.875 80.8061", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M150.822 89.8221L150.822 89.8469L150.822 90.5328L150.822 90.5576L150.822 93.0203L150.822 94.7888", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M151.109 94.7888L151.109 93.0203L151.109 90.7808L151.109 90.756L151.109 89.8469", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M142.951 83.9133L142.951 84.7315L142.951 85.1033L142.951 86.5661L142.951 86.5744L142.951 87.0867L142.951 87.3925L142.951 87.4008L142.951 87.4256L142.951 87.7644L142.951 88.8635", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M120.87 67.2612L120.87 67.9471L120.87 67.9719L120.87 70.4346L120.87 71.8395L120.87 71.8478L120.87 72.2031", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M127.944 72.5916L127.944 73.2775L127.944 73.3023L127.944 75.765L127.944 76.4757L127.944 76.4839L127.944 76.4922L127.944 76.5005L127.944 77.5417", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M128.231 77.5335L128.231 76.2773L128.231 76.2691L128.231 76.2608L128.231 76.2525L128.231 75.7567L128.231 73.5171L128.231 73.4923L128.231 72.5833", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M133.127 76.576L133.041 76.4179L133.034 76.4096", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M127.946 72.5673L127.728 72.5007", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M151.336 89.7477L151.109 89.8226", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M138.651 90.6816L138.651 89.1114L138.651 89.0866L138.651 88.9131L138.651 85.7232", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M142.951 86.5744L140.588 84.7976L140.045 85.2108L140.03 85.2273L139.379 85.7149L139.154 85.7893L138.868 85.7976L138.651 85.7314L138.039 85.2687L138.031 85.2604L137.016 84.4918L137.008 84.4836L137 84.4753L136.993 84.467L134.645 82.6903L134.389 82.5002L134.351 82.4754L134.049 82.2523L133.801 82.0705L133.739 82.0209L133.731 82.0126L133.723 82.0043L133.715 81.9961L133.134 81.5581L133.119 81.5498L133.034 81.3928L133.026 81.3845L133.026 81.3763", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M133.127 81.5498L133.127 82.4423L133.127 82.4506L133.127 82.4671L133.127 82.4754L133.127 83.4754L133.127 84.0704L133.127 84.12L133.127 84.1282L133.127 84.7398L133.127 84.9216L133.127 84.9381L133.127 84.9464L133.127 85.3017L133.127 85.9794L133.127 85.9876L133.127 86.5083", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M141.177 88.7396L141.177 86.4256L141.425 86.6075L142.959 87.7644", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M140.596 84.7976L140.596 85.6157L140.596 85.6405L140.596 87.9875L140.596 89.756L140.596 89.7643", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M141.424 88.5495L142.958 89.7065", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M132.012 81.8225L132.012 81.3102L132.012 81.2854L132.012 79.5003L132.066 79.5416L132.136 79.5912L132.252 79.6821L133.034 80.2689", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M129.664 76.5501L129.664 79.5169L129.664 79.5417L129.664 79.7483L129.664 80.1119L129.664 80.1202L129.664 80.1367L129.664 80.145L129.664 81.5085", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M132.251 81.6407L132.406 81.7564L132.802 82.054L133.042 82.2358", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M141.425 86.5991L141.425 88.5495L141.177 88.7313L142.951 90.07", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M132.252 79.6904L132.252 81.6407L132.136 81.7316L132.074 81.7812L132.05 81.7978L132.012 81.8225L132.027 81.8308L132.035 81.8391L132.136 81.9134L132.407 82.1201L132.802 82.4176L132.98 82.5498L132.988 82.5581L132.996 82.5663L133.003 82.5746L133.034 82.5994", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M150.598 99.6977L150.598 97.9292L150.598 95.3343L150.598 95.3095L150.598 94.731", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M151.334 94.7227L151.109 94.7971L150.822 94.7971L150.605 94.731L148.723 93.3096L148.467 93.1195L147.917 92.7063L146.507 91.6402L144.268 89.9543L143.222 89.161L143.059 89.037L143.044 89.0288L142.974 88.8965L142.958 88.8718L142.951 88.8635L142.951 88.8552", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M143.044 89.0288L143.044 90.037L143.044 91.6072L143.044 91.6154L143.044 92.2353L143.044 92.4088L143.044 92.4253L143.044 92.4336L143.044 93.4666L143.044 93.4749L143.044 93.9955L143.044 94.0038", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M127.719 82.4423L127.719 81.6159L127.719 81.6077L127.719 81.5911L127.719 81.5829L127.719 80.6738L127.719 78.0789L127.719 78.0541L127.719 77.4756", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M133.034 79.0954L132.135 78.4177L132.065 78.3681L132.05 78.3516L132.042 78.3434L132.034 78.3351L132.027 78.3268L131.972 78.2855L131.12 77.6409L131.105 77.6244L130.562 77.2112L129.664 76.5335L128.455 77.4426L128.23 77.517L127.944 77.517L127.727 77.4508L127.184 77.0376L127.177 77.0376L123.899 74.5667L123.892 74.5667L120.986 72.3767L120.979 72.3684L120.971 72.3602L120.886 72.2032L120.878 72.1949L120.878 72.1866", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M120.956 72.3685L120.956 72.9469L120.956 72.9717L120.956 75.5667L120.956 76.7732L120.956 76.7815L120.956 76.8063L120.956 76.8145L120.956 77.3352", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M142.974 93.8633L143.044 93.9966", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M139.379 85.7066L139.379 88.8966L139.379 89.6321L139.379 89.6569L139.379 90.6568L139.379 90.6651", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M151.333 94.7227L151.333 95.8632L151.333 95.8879L151.333 97.9209L151.333 99.6894", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M128.455 77.4673L128.455 78.6078L128.455 78.6326L128.455 80.6655L128.455 81.0292L128.455 81.0374L128.455 81.0539L128.455 81.0622L128.455 82.4258", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M128.455 82.4341L129.664 81.525", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M133.034 81.3846L133.034 81.6903L133.034 82.2275L133.034 82.5085L133.034 82.5167L133.034 82.5333L133.034 82.5415L133.034 82.5911L133.034 83.4092L133.034 84.0043L133.034 84.0538L133.034 84.0621L133.034 84.5745L133.034 84.8555L133.034 84.872L133.034 84.8803L133.034 85.2356L133.034 86.029L133.034 86.3347", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M138.867 85.781L138.867 88.9709L138.867 89.2436L138.867 89.2684L138.867 90.7312", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M138.867 90.7477L139.154 90.7395", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M139.163 90.7477L139.163 89.4998L139.163 89.475L139.163 88.9792L139.163 85.7893", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M150.822 94.7971L150.822 95.4748L150.822 95.4995L150.822 97.9953L150.822 99.7638L150.822 99.7721", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M151.109 99.7555L151.109 97.987L151.109 95.7144L151.109 95.6896L151.109 94.7971", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M142.951 88.8635L142.951 89.7065L142.951 90.0783L142.951 91.5411L142.951 91.5493L142.951 92.07L142.951 92.3427L142.951 92.3592L142.951 92.3675L142.951 92.7228L142.951 93.8302", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M120.87 72.2032L120.87 72.8808L120.87 72.9056L120.87 75.4014L120.87 76.8063L120.87 76.8145L120.87 77.1699", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M127.944 77.5417L127.944 78.2194L127.944 78.2442L127.944 80.7399L127.944 81.4176L127.944 81.4259L127.944 81.4424L127.944 81.4507L127.944 82.5002", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M128.231 82.5002L128.231 81.2275L128.231 81.2192L128.231 81.2027L128.231 81.1945L128.231 80.7317L128.231 78.4591L128.231 78.4343L128.231 77.5335", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M106.405 204.461L122.265 216.419L126.665 213.097L131.585 209.387L136.543 205.651L141.843 201.66L147.537 197.362", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M122.257 216.419L122.257 211.75", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M147.529 197.362L147.529 192.809", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M123.179 214.262L123.179 213.667L123.179 211.94L124.651 210.833L125.046 210.535", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M125.046 212.857L123.187 214.262", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M125.046 210.535L125.046 212.849L124.651 212.552", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M123.179 213.667L124.651 212.56L124.651 210.833", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M143.741 198.751L143.741 198.156L143.741 196.429L145.011 195.47L145.019 195.47L145.213 195.321L145.608 195.024", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M145.608 195.032L145.608 195.916L145.608 195.924L145.608 197.354", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M145.213 197.048L145.608 197.346L143.749 198.751", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M143.741 198.164L145.213 197.057L145.213 195.619L145.213 195.61L145.213 195.321", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M129.725 208.735L129.725 208.569", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M128.261 209.213L128.261 209.841L128.261 210.436L130.12 209.031", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M130.121 208.271L130.121 209.023L129.725 208.725L128.253 209.833", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M134.498 205.14L134.498 204.974", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M133.026 206.081L133.026 206.246L133.026 206.841L134.885 205.436", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M134.886 204.676L134.886 205.428L134.491 205.131L133.019 206.238", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M139.65 201.248L139.65 201.081", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M138.178 202.197L138.178 202.362L138.178 202.957L140.038 201.552", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M140.038 200.792L140.038 201.544L139.65 201.246L138.178 202.354", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M143.4 193.156L143.345 193.263L143.299 193.354L143.237 193.404L142.757 193.768L142.749 193.768L141.819 194.47L136.419 198.544L136.055 198.817L128.85 204.255L128.609 204.304L128.4 204.296L128.052 204.189L126.642 203.122L122.241 206.445L112.998 199.478L109.705 196.999L109.612 196.933L109.442 196.809L108.078 195.784L106.366 194.495", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M122.257 211.403L122.257 206.436", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M125.046 207.841L123.187 209.246L123.187 208.651L123.187 206.924L124.659 205.816L125.054 205.519", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M126.658 208.089L126.658 206.37L126.658 203.122", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M125.046 205.519L125.046 207.833L124.651 207.535", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M123.179 208.651L124.651 207.544L124.651 205.817", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M145.608 192.33L143.749 193.734L143.749 193.139L143.749 191.412L144.795 190.619L144.965 190.495L144.989 190.478L144.996 190.478L145.004 190.47L145.027 190.454L145.035 190.454L145.175 190.346L145.229 190.305L145.624 190.007", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M145.609 190.016L145.609 190.685L145.609 190.892L145.609 190.9L145.609 190.941L145.609 190.949L145.609 191.239L145.609 192.33L145.214 192.032", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M147.522 187.379L144.376 189.751L144.237 189.859L144.229 189.859L144.206 189.875L144.198 189.883L144.19 189.883L144.167 189.9L143.996 190.024L143.392 190.478", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M143.741 193.139L145.213 192.032L145.213 190.941L145.213 190.652L145.213 190.644L145.213 190.602L145.213 190.594L145.213 190.388L145.213 190.305", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M128.067 209.155L128.067 207.668L128.067 207.494L128.067 207.436L128.067 207.073L128.067 204.189", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M143.399 198.123L143.399 196.404L143.399 196.172L143.399 196.098L143.399 195.924L143.399 195.677L143.399 195.511L143.399 195.462L143.399 194.263L143.399 194.255L143.399 193.487L143.399 193.412L143.399 193.172", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M128.866 209.221L128.866 207.659L128.866 207.502L128.866 207.064L128.866 206.891L128.866 206.478L128.866 204.255", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M143.307 193.354L143.307 194.172L143.307 194.181L143.307 195.528L143.307 195.577L143.307 195.991L143.307 196.602L143.307 197.817L143.307 198.321", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M126.805 208.197L126.976 208.321L127.874 208.998L128.076 209.155L128.262 209.213L128.424 209.263L128.634 209.271L128.874 209.221L129.742 208.568L130.137 208.271L132.647 206.379L133.042 206.081L134.514 204.974L134.909 204.676L136.095 203.784L136.459 203.511L137.815 202.494L138.202 202.205L139.674 201.098L140.061 200.809L143.331 198.338L143.377 198.247L143.431 198.139", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M106.406 199.362L106.406 199.114L106.406 197.676L106.406 197.057L106.406 194.478L105.197 193.561L105.104 193.387L105.104 193.164", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M105.189 193.561L105.189 196.751L105.189 197.957L105.189 198.519", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M105.097 198.139L105.097 198.362L105.19 198.536L106.174 199.28", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M105.097 198.362L105.097 198.139L105.097 196.594L105.097 193.404", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M105.097 193.173L105.097 196.362L105.097 198.131", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M106.405 194.478L108.117 195.767L109.481 196.792L109.652 196.916L109.744 196.982L113.037 199.461L122.272 206.428L126.673 203.106L128.083 204.172L128.432 204.279L128.641 204.288L128.881 204.238L136.086 198.8L136.45 198.528L141.85 194.453L142.78 193.751L142.788 193.751L143.268 193.387L143.33 193.338L143.377 193.247L143.431 193.139", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M122.257 206.436L122.257 201.742", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M147.529 187.379L147.529 182.809", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M125.046 202.875L123.187 204.279L123.187 203.684L123.187 201.957L124.659 200.85L125.054 200.552", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M126.658 203.114L126.658 201.404L126.658 198.544", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M125.046 200.552L125.046 202.866L124.651 202.569", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M123.179 203.684L124.651 202.577L124.651 200.85", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M145.608 187.363L143.749 188.768L143.749 188.173L143.749 186.446L145.02 185.487L145.213 185.338L145.608 185.041", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M145.609 185.041L145.609 185.925L145.609 185.933L145.609 187.363L145.214 187.065", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M143.741 188.173L145.213 187.065L145.213 185.636L145.213 185.627L145.213 185.338", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M128.067 204.18L128.067 202.461L128.067 199.214", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M143.4 188.181L143.4 188.189L143.346 188.297L143.299 188.388L143.237 188.437L142.928 188.669L142.788 188.776L142.78 188.776L142.757 188.793L142.749 188.801L142.742 188.801L142.718 188.817L142.548 188.941L141.812 189.495L139.449 191.272L139.441 191.272L136.404 193.561L136.04 193.834L128.835 199.271L128.595 199.321L128.385 199.313L128.037 199.205L126.882 198.338", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M143.399 193.156L143.399 191.437L143.399 191.156L143.399 191.082L143.399 190.495L143.399 189.586L143.399 189.338L143.399 189.305L143.399 189.297L143.399 189.288L143.399 189.255L143.399 189.247L143.399 189.04L143.399 188.528L143.399 188.454L143.399 188.214", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M128.866 204.255L128.866 202.536L128.866 199.288", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M143.307 188.388L143.307 188.95L143.307 189.156L143.307 189.164L143.307 189.206L143.307 189.214L143.307 189.503L143.307 190.553L143.307 191.627L143.307 192.842L143.307 193.338", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M106.405 194.478L106.405 192.71L106.405 192.098L106.405 189.793", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M105.189 188.594L105.189 191.784L105.189 192.991L105.189 193.553", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M105.097 193.173L105.097 193.396L105.19 193.569L106.398 194.487L106.398 192.098L106.398 189.793", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M105.097 193.396L105.097 193.173L105.097 191.627L105.097 188.429", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M106.127 189.305L105.19 188.594L105.097 188.421L105.097 188.198", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M105.097 188.206L105.097 191.404L105.097 193.172", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M143.4 183.206L143.354 183.322L143.307 183.413L143.245 183.462L142.796 183.801L141.843 184.52L139.65 186.173L139.511 186.28L139.503 186.28L139.48 186.297L139.472 186.305L139.464 186.305L139.441 186.322L139.271 186.446L136.435 188.586L136.172 188.784L136.164 188.784L136.071 188.859L128.866 194.296L128.625 194.346L128.416 194.338L128.068 194.23L126.658 193.164L122.257 196.486L119.607 194.486L119.491 194.404L119.251 194.222L119.243 194.222L118.329 193.536L118.29 193.511L118.221 193.453L118.128 193.379L118.097 193.354L118.05 193.321L117.996 193.28L117.942 193.239L117.895 193.206L117.12 192.619L116.369 192.049L116.315 192.007L116.222 191.941L116.051 191.817L115.633 191.503", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M122.257 201.461L122.257 196.495", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M123.179 199.296L123.179 198.701L123.179 196.974L124.651 195.867L125.046 195.569", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M125.046 195.577L125.046 197.891", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M126.658 198.139L126.658 196.42L126.658 193.172", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M124.651 197.594L125.046 197.891L123.187 199.296", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M123.179 198.709L124.651 197.602L124.651 195.875", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M143.741 183.785L143.741 183.19L143.741 181.462L144.833 180.644L145.004 180.52L145.011 180.512L145.019 180.512L145.027 180.512L145.042 180.504L145.213 180.38L145.228 180.371L145.623 180.074", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M147.521 177.429L144.422 179.776L144.252 179.9L144.236 179.909L144.228 179.909L144.221 179.909L144.213 179.917L144.042 180.041L143.399 180.528", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M145.608 180.066L145.608 180.677L145.608 180.95L145.608 180.958L145.608 180.966L145.608 180.975L145.608 181.239L145.608 182.388", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M145.213 182.09L145.608 182.388L143.749 183.793", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M143.741 183.198L145.213 182.09L145.213 180.942L145.213 180.677L145.213 180.669L145.213 180.661L145.213 180.652L145.213 180.38L145.213 180.363", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M128.067 199.205L128.067 197.486L128.067 197.478L128.067 194.239", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M143.399 188.181L143.399 186.462L143.399 186.189L143.399 186.115L143.399 185.917L143.399 185.669L143.399 185.528L143.399 185.52L143.399 184.28L143.399 184.272L143.399 183.537L143.399 183.462L143.399 183.223", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M128.866 199.271L128.866 197.552L128.866 196.883L128.866 194.305", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M143.307 183.413L143.307 184.189L143.307 184.198L143.307 185.578L143.307 185.586L143.307 185.983L143.307 186.652L143.307 187.867L143.307 187.883L143.307 188.371", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M126.758 198.214L126.929 198.338L128.068 199.197L128.416 199.304L128.625 199.313L128.866 199.263L136.071 193.825L136.435 193.553L139.464 191.272L139.472 191.272L141.843 189.487L142.571 188.941L142.741 188.817L142.765 188.801L142.773 188.801L142.78 188.793L142.803 188.776L142.811 188.776L142.951 188.669L143.268 188.429L143.33 188.379L143.377 188.288L143.423 188.181", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M105.189 183.619L105.189 186.809L105.189 188.016L105.189 188.024L105.189 188.578", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M114.347 190.52L114.029 190.28L113.781 190.098L112.999 189.503L112.487 189.123L111.279 188.214L111.054 188.041L110.76 187.817L110.535 187.644L109.605 186.941L109.435 186.817L108.126 185.826L108.118 185.817L106.406 184.528L105.197 183.619L105.104 183.446L105.104 183.223", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M105.097 188.189L105.097 188.198L105.097 188.412L105.19 188.586L106.135 189.297", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M105.097 183.223L105.097 186.413L105.097 188.181", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M105.097 188.412L105.097 188.198L105.097 188.189L105.097 186.644L105.097 183.454", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M105.097 183.223L105.097 183.446L105.19 183.619L106.398 184.528L108.111 185.817L108.118 185.826L109.428 186.817L109.598 186.941L110.528 187.644L110.752 187.817L111.047 188.041L111.271 188.214L112.48 189.123L112.991 189.512L113.774 190.107L114.022 190.288L114.34 190.528", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M122.257 196.486L122.257 192.503L122.257 191.544L122.257 191.52", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M147.529 177.429L147.529 173.446L147.529 172.488", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M123.179 194.321L123.179 193.726L123.179 191.999L124.651 190.892L125.046 190.594", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M125.046 190.602L125.046 192.916", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M126.658 193.164L126.658 191.445L126.658 189.173L126.658 188.214", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M124.651 192.627L125.046 192.925L123.187 194.329", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M115.649 191.495L116.068 191.817L116.238 191.941L116.331 192.007L116.385 192.049L117.137 192.619L117.912 193.206L117.958 193.239L118.012 193.28L118.059 193.313L118.113 193.354L118.144 193.379L118.237 193.453L118.307 193.503L118.346 193.536L119.26 194.222L119.268 194.222L119.508 194.404L119.624 194.486L122.266 196.478L126.666 193.156L128.077 194.222L128.425 194.329L128.634 194.338L128.875 194.288L136.08 188.85L136.173 188.784L136.18 188.784L136.444 188.586L139.272 186.454L139.442 186.33L139.465 186.313L139.473 186.313L139.481 186.305L139.504 186.289L139.512 186.289L139.651 186.181L141.852 184.52L142.797 183.809L143.254 183.462L143.316 183.413L143.362 183.322L143.409 183.214", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M123.179 193.734L124.651 192.627L124.651 190.9", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M143.741 178.81L143.741 178.215L143.741 176.487L145.011 175.529L145.019 175.529L145.027 175.529L145.22 175.38L145.616 175.082", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M147.529 172.463L147.513 172.471L147.506 172.471L146.878 172.942L146.87 172.95L146.754 173.041L146.522 173.215L145.437 174.033L145.189 174.215L144.236 174.934L144.228 174.934L144.221 174.934L143.57 175.43L143.399 175.562", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M145.608 175.091L145.608 175.975L145.608 175.983L145.608 175.992L145.608 177.413", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M145.213 177.115L145.608 177.413L143.749 178.818", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M143.741 178.223L145.213 177.115L145.213 175.694L145.213 175.686L145.213 175.678L145.213 175.388", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M128.067 194.23L128.067 192.511L128.067 189.288", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M128.068 189.264L127.309 188.693L126.658 188.206", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M128.866 189.33L128.626 189.379L128.417 189.371", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M143.399 183.206L143.399 181.487L143.399 181.214L143.399 181.14L143.399 180.553L143.399 180.545L143.399 179.578L143.399 179.33L143.399 179.314L143.399 179.305L143.399 179.297L143.399 179.289L143.399 179.272L143.399 179.016L143.399 178.562L143.399 178.487L143.399 178.272", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M128.866 194.296L128.866 192.577L128.866 189.354", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M143.307 178.462L143.307 178.942L143.307 179.215L143.307 179.223L143.307 179.231L143.307 179.239L143.307 179.504L143.307 180.611L143.307 180.619L143.307 181.685L143.307 182.9L143.307 182.909L143.307 183.404", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M136.072 183.9L135.971 183.975L132.872 186.313L132.864 186.313L128.859 189.338", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M143.307 178.438L143.245 178.487L142.973 178.694L142.803 178.818L142.787 178.826L142.78 178.826L142.772 178.826L142.764 178.834L142.594 178.958L141.819 179.545L139.479 181.305L136.427 183.611", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M105.189 178.644L105.189 178.669L105.189 181.834L105.189 183.041L105.189 183.049L105.189 183.603", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M122.257 191.52L121.606 191.032L121.482 190.941L121.033 190.602L120.909 190.511L120.444 190.156L120.421 190.14L120.32 190.065L119.67 189.578L119.615 189.536L119.522 189.47L119.352 189.346L118.903 189.007L118.151 188.437L117.988 188.313L115.633 186.536L115.269 186.264L115.021 186.082L114.688 185.834L114.417 185.627L114.324 185.561L114.006 185.322L113.758 185.14L112.976 184.545L112.968 184.537L112.875 184.462L112.704 184.338L112.464 184.156L111.256 183.247L111.031 183.074L110.737 182.851L110.512 182.677L108.102 180.859L108.095 180.859L106.382 179.57L105.174 178.661", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M105.097 178.481L105.097 178.281L105.097 178.256", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M105.097 178.256L105.097 181.454L105.097 183.223", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M105.097 183.437L105.097 183.223L105.097 183.214L105.097 181.669L105.097 178.504L105.097 178.479", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M122.259 186.579L122.126 186.479", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M105.189 178.669L106.398 179.578L108.087 180.851L108.094 180.851L110.527 182.685L110.752 182.859L111.046 183.082L111.271 183.256L112.479 184.165L112.704 184.338L112.875 184.462L112.968 184.537L112.975 184.545L113.758 185.14L114.006 185.322L114.339 185.578L114.432 185.652L114.688 185.842L115.036 186.107L115.284 186.289L115.648 186.561L117.988 188.322L118.151 188.445L118.902 189.016L119.351 189.355L119.522 189.478L119.615 189.545L119.669 189.586L120.335 190.09L120.421 190.156L120.459 190.189L120.924 190.545L121.048 190.635L121.498 190.974L121.622 191.065L122.272 191.553", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M122.257 191.545L122.257 191.52L122.257 187.536L122.257 187.487L122.257 187.148L122.257 186.611L122.257 186.586", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M147.529 172.488L147.529 172.455L147.529 168.48L147.529 168.43L147.529 168.347L147.529 168.099L147.529 167.554L147.529 167.537", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M123.179 189.388L123.179 188.793L123.179 188.388L123.179 188.016L123.179 187.057L124.651 185.95L125.046 185.652", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M126.657 183.264L125.177 184.38", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M125.046 185.66L125.046 187.974", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M126.658 188.231L126.658 188.206L126.658 186.52L126.658 184.214L126.658 183.826L126.658 183.289", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M124.651 187.685L124.806 187.801L125.046 187.983L124.806 188.165L124.558 188.346L123.179 189.388", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M123.179 188.793L124.558 187.751L124.651 187.685L124.651 187.057L124.651 185.966", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M143.741 173.876L143.741 173.793L143.741 173.719L143.741 173.281L143.741 172.876L143.741 172.537L143.741 172.504L143.741 171.545L145.011 170.587L145.019 170.587L145.035 170.579L145.042 170.579L145.22 170.446L145.6 170.165L145.616 170.157", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M145.608 170.149L145.608 171L145.608 171.008L145.608 171.025L145.608 171.033L145.608 171.132L145.608 172.446L145.608 172.463", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M145.213 172.174L145.438 172.339L145.5 172.388L145.585 172.454L145.601 172.463L145.585 172.471L145.43 172.587L145.182 172.769L143.733 173.859", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M143.741 173.281L145.189 172.19L145.213 172.174L145.213 171.438L145.213 170.744L145.213 170.736L145.213 170.719L145.213 170.711L145.213 170.446", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M128.067 189.288L128.067 189.264L128.067 188.115L128.067 187.569L128.067 187.016L128.067 186.644L128.067 184.346", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M128.068 184.322L127.293 183.735L127.201 183.669L127.03 183.545L126.658 183.264", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M128.626 184.446L128.424 184.437L128.417 184.437L128.076 184.33", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M128.866 189.33L128.866 187.636L128.866 187.512L128.866 186.413L128.866 186.041L128.866 184.404L128.866 184.38", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M143.307 173.496L143.307 173.521L143.307 174.041L143.307 174.198L143.307 174.24L143.307 174.248L143.307 174.256L143.307 174.347L143.307 174.388L143.307 174.537L143.307 174.702L143.307 175.644L143.307 175.669L143.307 176.62L143.307 176.744L143.307 177.934L143.307 177.958L143.307 178.429L143.307 178.454", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M136.071 183.925L136.156 183.859L136.18 183.842L136.188 183.842L136.195 183.834L136.218 183.818L136.226 183.818L136.366 183.71L136.443 183.652L139.519 181.338L141.843 179.586L142.633 178.991L142.804 178.867L142.812 178.859L142.819 178.859L142.827 178.859L142.843 178.851L143.013 178.727L143.269 178.537L143.331 178.487", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M143.399 178.239L143.399 176.553L143.399 176.248L143.399 176.173L143.399 176.132L143.399 176.033L143.399 176.025L143.399 175.611L143.399 175.587L143.399 174.628L143.399 174.463L143.399 174.322L143.399 174.314L143.399 174.306L143.399 174.273L143.399 174.124L143.399 174.041L143.399 173.967L143.399 173.611L143.399 173.537L143.399 173.297", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M143.307 173.496L143.245 173.545L142.819 173.868L142.811 173.868L142.803 173.868L141.827 174.603L140.866 175.33L140.742 175.421L140.556 175.562L140.309 175.744L140.293 175.752L140.169 175.843L139.704 176.198L139.697 176.206L139.58 176.297L139.534 176.33L139.518 176.339L139.511 176.339L139.503 176.339L139.495 176.347L139.325 176.471L138.689 176.95L138.441 177.132", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M128.067 189.288L128.416 189.396L128.625 189.404", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M114.347 180.611L114.006 180.355L113.758 180.173L112.976 179.578L112.968 179.578L112.488 179.215L111.279 178.305L111.054 178.132L110.76 177.909L110.535 177.735L108.118 175.909L108.103 175.892L106.414 174.62L105.205 173.711", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M105.189 173.735L105.189 176.901L105.189 178.082L105.189 178.107L105.189 178.644", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M105.097 173.539L105.097 173.339L105.097 173.314", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M105.097 173.314L105.097 173.34", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M105.097 178.504L105.097 178.479L105.097 178.281L105.097 178.256L105.097 176.735L105.097 173.57", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M105.097 173.339L105.097 176.504L105.097 178.272", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M105.097 178.281L105.097 178.505", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M105.19 173.704L105.097 173.529", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M105.097 178.504L105.19 178.679", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M105.189 173.735L106.398 174.645L108.071 175.909L108.087 175.925L110.519 177.76L110.744 177.934L111.038 178.157L111.263 178.33L112.472 179.239L112.937 179.595L112.944 179.595L113.727 180.19L113.975 180.372L114.331 180.644", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M122.257 186.603L122.257 186.578L122.257 182.512L122.257 181.661L122.257 181.636", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M147.529 167.546L147.529 167.521", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M123.179 184.446L123.179 183.851L123.179 183.371L123.179 182.999L123.179 182.123L123.876 181.595L123.969 181.528L124.651 181.016L125.046 180.719", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M126.657 178.322L125.177 179.438", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M125.046 180.727L125.046 182.999L125.046 183.041", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M126.658 183.289L126.658 183.264L126.658 181.776L126.658 181.57L126.658 178.347", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M124.651 182.743L124.806 182.859L125.015 183.016L125.046 183.041L124.806 183.223L124.558 183.404L123.931 183.875L123.876 183.917L123.179 184.446", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M122.257 186.603L124.597 184.834L125.178 184.396", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M123.179 183.851L123.876 183.322L124.558 182.809L124.651 182.743L124.651 182.033L124.651 181.016", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M143.741 168.934L143.741 168.893L143.741 168.347L143.741 166.62L145.011 165.661L145.019 165.661L145.035 165.653L145.042 165.653L145.22 165.521L145.453 165.347L145.616 165.223", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M145.608 165.215L145.608 166.066L145.608 166.075L145.608 166.091L145.608 166.099L145.608 167.529", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M145.213 167.232L145.608 167.529L145.554 167.57L143.749 168.934", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M143.741 168.347L145.213 167.24L145.213 165.81L145.213 165.802L145.213 165.785L145.213 165.777L145.213 165.513", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M128.067 184.355L128.067 184.33L128.067 183.156L128.067 182.768L128.067 182.636L128.067 180.71L128.067 179.413", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M128.068 179.388L126.658 178.322", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M128.865 179.454L128.625 179.504L128.416 179.495L128.067 179.388", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M143.399 173.323L143.399 173.297", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M128.866 184.421L128.866 184.396L128.866 182.702L128.866 182.553L128.866 182.165L128.866 180.115L128.866 179.479L128.866 179.454", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M143.307 168.562L143.307 168.587L143.307 169.223L143.307 169.281L143.307 169.289L143.307 169.306L143.307 169.314L143.307 169.471L143.307 170.711L143.307 170.736L143.307 171.273L143.307 171.661L143.307 171.81L143.307 172.876L143.307 173L143.307 173.025L143.307 173.496L143.307 173.521", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M136.427 173.752L136.318 173.835L136.257 173.884L136.241 173.892L136.233 173.892L136.226 173.892L136.218 173.901L136.063 174.016L136.047 174.025L136.016 174.049L135.792 174.223L132.941 176.372L131.678 177.33", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M128.866 184.421L129.075 184.264L129.307 184.09L131.67 182.314L131.678 182.314L132.716 181.528L132.887 181.405L132.91 181.388L132.918 181.388L132.925 181.38L132.949 181.363L132.956 181.363L133.096 181.256L133.483 180.958L133.731 180.776L135.35 179.553L135.598 179.372L136.086 179L136.249 178.876L136.443 178.727L138.457 177.206", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M143.399 173.297L143.399 172.876L143.399 172.802L143.399 172.769L143.399 171.669L143.399 171.603L143.399 171.579L143.399 171.446L143.399 171.298L143.399 171.223L143.399 171.198L143.399 170.661L143.399 170.636L143.399 170.529L143.399 169.397L143.399 169.389L143.399 169.38L143.399 169.364L143.399 169.355L143.399 169.157L143.399 168.686L143.399 168.612L143.399 168.397", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M143.308 168.562L143.246 168.612L142.835 168.917L142.827 168.917L142.812 168.926L142.804 168.926L141.828 169.661L140.914 170.355L140.55 170.628L140.302 170.81L139.697 171.264L139.604 171.339L139.535 171.397L139.527 171.397L139.519 171.397L138.682 172.033L138.435 172.215L137.737 172.736", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M128.626 184.471L128.868 184.421", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M105.189 168.769L105.189 168.794L105.189 171.959L105.189 173.14L105.189 173.165L105.189 173.702L105.189 173.727", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M105.097 168.597L105.097 168.397L105.097 168.372", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M105.097 173.562L105.097 173.537L105.097 173.339L105.097 173.314L105.097 171.793L105.097 168.628", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M105.097 168.397L105.097 171.562L105.097 173.331", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M105.189 168.794L106.398 169.703L108.071 170.967L108.087 170.984L110.519 172.818L110.744 172.992L111.038 173.215L111.263 173.388L112.472 174.297L112.921 174.636L112.937 174.653L113.704 175.231L113.951 175.413L114.331 175.702", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M122.257 181.669L122.257 181.644L122.257 177.553L122.257 177.545L122.257 177.148L122.257 176.735L122.257 176.71", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M123.179 179.504L123.179 178.909L123.179 178.396L123.179 178.025L123.179 177.19L123.876 176.661L123.969 176.595L124.651 176.082L125.046 175.785", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M125.046 175.785L125.046 178.025L125.046 178.099", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M126.658 178.347L126.658 178.322L126.658 176.81L126.658 176.636L126.658 173.826L126.658 173.413", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M124.651 177.801L124.806 177.917L125 178.058L125.046 178.091L124.806 178.272L124.558 178.454L123.908 178.95L123.884 178.967L123.187 179.495", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M123.179 178.917L123.876 178.388L124.558 177.876L124.651 177.81L124.651 177.074L124.651 176.082", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M143.741 163.992L143.741 163.918L143.741 163.397L143.741 161.67L145.011 160.711L145.019 160.711L145.035 160.703L145.042 160.703L145.22 160.571L145.453 160.397L145.616 160.273", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M145.608 160.273L145.608 161.124L145.608 161.133L145.608 161.149L145.608 161.158L145.608 162.579", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M145.213 162.298L145.6 162.587L143.741 163.992", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M143.741 163.405L145.213 162.298L145.213 160.868L145.213 160.86L145.213 160.844L145.213 160.835L145.213 160.571", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M128.067 179.413L128.067 179.388L128.067 177.694L128.067 175.744L128.067 174.471", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M128.068 174.446L127.115 173.727L126.945 173.603L126.658 173.38", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M128.865 174.512L128.625 174.562L128.416 174.554L128.067 174.446", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M143.399 168.389L143.399 166.67L143.399 166.364L143.399 166.29L143.399 165.728L143.399 165.703L143.399 164.447L143.399 164.438L143.399 164.422L143.399 164.414L143.399 164.19L143.399 163.752L143.399 163.678L143.399 163.463", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M128.866 179.454L128.866 177.76L128.866 175.149L128.866 174.545L128.866 174.521", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M143.307 163.645L143.307 164.248L143.307 164.331L143.307 164.339L143.307 164.356L143.307 164.364L143.307 165.761L143.307 165.785L143.307 166.86L143.307 168.05L143.307 168.075L143.307 168.546", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M137.752 167.81L136.543 168.719L136.434 168.802L136.318 168.884L136.264 168.926L136.256 168.926L136.249 168.926L136.063 169.066L136.016 169.099L135.791 169.273L133.142 171.273L132.971 171.397L132.956 171.405L132.948 171.405L132.94 171.405L132.933 171.413L132.762 171.537L131.654 172.372", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M131.67 177.363L132.957 176.396L135.792 174.256L136.017 174.083L136.063 174.049L136.234 173.926L136.241 173.917L136.249 173.917L136.257 173.917L136.272 173.909L136.319 173.876L136.435 173.793L136.443 173.785L136.544 173.711L137.752 172.802", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M126.658 178.347L128.068 179.413", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M128.067 179.413L128.416 179.52L128.625 179.529L128.865 179.479", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M128.866 179.479L129.71 178.843L129.935 178.669L130.229 178.446L130.369 178.347L130.454 178.281L130.462 178.281L131.67 177.372", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M105.189 163.852L105.189 167.017L105.189 168.199L105.189 168.223L105.189 168.76", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M105.097 163.655L105.097 163.455L105.097 163.43", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M105.097 163.43L105.097 166.62L105.097 168.389", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M105.097 168.62L105.097 168.595L105.097 168.397L105.097 168.372L105.097 166.851L105.097 163.686", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M105.189 163.852L106.398 164.761L108.071 166.025L108.087 166.042L110.519 167.876L110.744 168.05L111.038 168.273L111.263 168.446L112.472 169.355L112.921 169.694L112.937 169.711L113.704 170.289L113.951 170.471L114.331 170.76", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M122.257 176.727L122.257 176.702L122.257 172.57L122.257 172.562L122.257 171.769L122.257 171.76", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M147.529 157.671L147.529 157.645", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M123.179 174.562L123.179 173.967L123.179 173.421L123.179 173.05L123.179 172.24L123.876 171.711L123.969 171.645L124.651 171.132L125.046 170.835", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M126.657 168.438L125.177 169.554L124.643 169.959L124.635 169.959L123.961 170.463L123.868 170.529L122.249 171.752", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M125.046 170.843L125.046 173.05L125.046 173.058L125.046 173.157", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M126.658 173.405L126.658 173.38L126.658 171.843L126.658 171.835L126.658 171.694L126.658 168.446", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M124.651 172.868L124.806 172.983L124.969 173.107L124.977 173.116L125.046 173.165L124.806 173.347L124.558 173.529L123.876 174.041L123.179 174.57", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M122.257 176.727L123.876 175.504L123.969 175.438L124.635 174.934L124.643 174.925L125.178 174.521L126.658 173.405", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M123.179 173.975L123.876 173.446L124.558 172.934L124.651 172.868L124.651 172.091L124.651 171.141", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M143.741 159.059L143.741 158.959L143.741 158.951L143.741 158.472L143.741 156.745L145.011 155.786L145.019 155.786L145.035 155.778L145.042 155.778L145.22 155.645L145.453 155.472L145.616 155.348", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M147.529 152.703L147.405 152.794L146.871 153.199L146.863 153.199L146.189 153.703L145.964 153.877L145.67 154.1L145.445 154.274L144.252 155.174L144.244 155.174L144.229 155.183L144.221 155.183L143.392 155.811", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M145.608 155.331L145.608 156.183L145.608 156.191L145.608 156.207L145.608 156.216L145.608 157.604L145.608 157.612L145.608 157.645", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M145.213 157.356L145.57 157.621L145.577 157.629L145.608 157.654L143.749 159.058", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M143.741 158.463L145.213 157.356L145.213 155.926L145.213 155.918L145.213 155.902L145.213 155.893L145.213 155.629", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M128.067 174.471L128.067 174.446L128.067 172.752L128.067 170.777L128.067 170.769L128.067 169.513L128.067 169.504", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M143.399 163.447L143.399 161.728L143.399 161.439L143.399 161.414L143.399 161.339L143.399 161.191L143.399 160.777L143.399 160.753L143.399 159.496L143.399 159.488L143.399 159.472L143.399 159.463L143.399 159.207L143.399 159.199L143.399 158.794L143.399 158.72L143.399 158.488", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M128.866 174.512L128.866 172.818L128.866 172.149L128.866 170.174L128.866 170.165L128.866 169.579L128.866 169.57", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M143.307 158.678L143.307 159.273L143.307 159.282L143.307 159.397L143.307 159.406L143.307 159.422L143.307 159.43L143.307 160.827L143.307 160.852L143.307 161.265L143.307 161.926L143.307 163.116L143.307 163.141L143.307 163.612L143.307 163.637", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M139.705 161.397L139.612 161.463L139.558 161.505L139.55 161.505L139.535 161.513L139.527 161.513L138.683 162.149L138.435 162.331L137.738 162.852L136.529 163.761L136.42 163.843L136.304 163.926L136.273 163.951L136.265 163.951L136.25 163.959L136.242 163.959L136.048 164.1L136.002 164.133L135.777 164.306L132.973 166.422L132.965 166.422L132.957 166.422L130.439 168.322L130.432 168.322L130.346 168.389L130.207 168.488L129.912 168.711L129.688 168.884L128.843 169.521", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M143.307 158.678L143.245 158.728L142.835 159.034L142.827 159.034L142.811 159.042L142.804 159.042L141.827 159.777L140.913 160.472L140.549 160.744L140.301 160.926L139.697 161.381", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M126.658 173.405L126.929 173.611L127.1 173.735L128.068 174.471", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M105.189 158.885L105.189 162.075L105.189 163.257L105.189 163.281L105.189 163.819L105.189 163.843", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M105.097 163.686L105.097 163.662L105.097 163.463L105.097 163.438L105.097 161.918L105.097 158.728", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M105.097 158.497L105.097 161.686L105.097 163.455", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M105.097 163.463L105.097 163.688", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M105.19 158.886L105.097 158.711", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M126.658 163.48L125.178 164.595L124.651 164.992L124.635 165.009L123.969 165.513L123.876 165.579L122.257 166.802", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M105.189 158.893L106.398 159.802L108.087 161.075L108.102 161.091L110.527 162.918L110.752 163.091L111.046 163.314L111.271 163.488L112.479 164.397L112.944 164.744L112.96 164.761L113.727 165.339L113.975 165.521L114.347 165.802", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M122.257 171.769L122.257 167.628L122.257 167.604L122.257 166.81", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M147.529 152.712L147.529 152.695L147.529 148.563L147.529 148.538L147.529 147.745", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M123.179 169.603L123.179 169.008L123.179 168.446L123.179 168.075L123.179 167.281L123.876 166.752L123.969 166.678L124.651 166.166L125.046 165.868", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M125.046 165.885L125.046 168.075L125.046 168.083L125.046 168.199", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M126.658 168.446L126.658 166.86L126.658 166.851L126.658 166.728L126.658 163.48", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M124.651 167.901L124.806 168.017L124.961 168.132L124.969 168.132L125.046 168.19L124.806 168.372L124.558 168.554L123.876 169.066L123.179 169.595", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M122.257 171.769L123.876 170.546L123.969 170.471L124.643 169.959L124.651 169.959L125.178 169.562L126.658 168.446", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M123.179 169.017L123.876 168.488L124.558 167.975L124.651 167.909L124.651 167.116L124.651 166.182", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M143.741 154.092L143.741 153.976L143.741 153.968L143.741 153.497L143.741 151.77L145.011 150.811L145.197 150.67L145.43 150.497L145.592 150.373", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M147.529 147.745L147.405 147.836L146.879 148.233L146.863 148.249L146.197 148.753L145.972 148.927L145.678 149.15L145.453 149.323L144.252 150.232L142.067 151.877", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M145.608 150.373L145.608 151.249L145.608 151.257L145.608 151.265L145.608 152.637L145.608 152.646L145.608 152.695", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M145.213 152.398L145.554 152.654L145.562 152.662L145.608 152.695L143.749 154.1", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M143.741 153.505L145.213 152.398L145.213 150.968L145.213 150.96L145.213 150.951L145.213 150.67", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M128.067 169.504L128.067 167.794L128.067 165.802L128.067 165.794L128.067 164.546", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M139.704 156.43L139.611 156.497L139.541 156.546L139.533 156.546L139.518 156.554L139.51 156.554L138.681 157.182L138.433 157.364L137.736 157.885L136.527 158.794L136.419 158.877L136.303 158.959L136.256 158.992L136.249 158.992L136.233 159.001L136.225 159.001L136.047 159.133L136.001 159.166L135.776 159.339L132.971 161.455L132.964 161.455L132.948 161.463L132.94 161.463L130.43 163.356L130.422 163.356L130.337 163.422L130.198 163.521L129.903 163.744L129.679 163.918L128.834 164.554L128.594 164.604L128.385 164.595L128.036 164.488", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M128.866 169.57L128.866 167.86L128.866 165.199L128.866 165.19L128.866 164.612", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M143.307 153.72L143.307 154.298L143.307 154.307L143.307 154.455L143.307 154.464L143.307 154.48L143.307 154.488L143.307 155.885L143.307 155.893L143.307 156.968L143.307 158.182L143.307 158.191L143.307 158.687", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M128.866 169.579L129.71 168.942L129.935 168.769L130.229 168.546L130.369 168.446L130.454 168.38L130.462 168.38L132.987 166.48L132.995 166.48L133.003 166.48L135.808 164.364L136.032 164.19L136.079 164.157L136.272 164.009L136.28 164.009L136.296 164L136.303 164L136.334 163.976L136.451 163.893L136.559 163.81L137.768 162.901L138.465 162.381L138.713 162.199L139.557 161.562L139.565 161.562L139.581 161.554L139.588 161.554L139.643 161.513L139.736 161.438", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M143.399 158.48L143.399 156.769L143.399 156.48L143.399 156.406L143.399 155.819L143.399 155.811L143.399 154.555L143.399 154.546L143.399 154.53L143.399 154.522L143.399 154.232L143.399 154.224L143.399 153.836L143.399 153.761L143.399 153.522", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M143.4 153.522L143.346 153.629L143.3 153.72L143.238 153.769L142.812 154.092L142.804 154.092L142.788 154.1L142.781 154.1L141.812 154.827L140.898 155.521L140.534 155.794L140.286 155.976L139.682 156.431", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M128.067 169.513L128.416 169.62L128.625 169.628L128.865 169.579", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M114.439 146.621L114.439 146.952L114.439 148.018", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M105.189 153.596L105.189 153.926L105.189 157.116L105.189 158.323L105.189 158.331L105.189 158.885", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M114.347 160.827L113.999 160.563L113.751 160.381L112.984 159.802L112.968 159.786L112.488 159.422L111.279 158.513L111.054 158.34L110.76 158.116L110.535 157.943L108.118 156.116L106.414 154.827L105.205 153.918", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M105.097 158.72L105.097 158.497L105.097 158.488L105.097 156.943L105.097 153.753", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M105.097 153.753L105.097 156.728L105.097 158.497", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M106.181 199.271L106.119 199.321L106.119 199.569L106.406 199.784L108.203 201.139L108.451 201.321L108.529 201.379L108.777 201.561L109.505 202.106L122.265 211.734L122.343 211.791L126.976 208.296", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M106.119 199.321L106.406 199.536L108.699 201.263L108.947 201.445L109.675 201.99L122.35 211.552", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M122.342 211.808L122.342 211.56L126.805 208.197", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M143.399 195.924L144.507 195.09L144.515 195.09L147.528 192.817L147.536 192.817L147.815 192.602L147.815 192.354L147.707 192.272L147.676 192.247", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M131.183 135.39L131.175 135.398L131.167 135.398L130.462 135.927L130.454 135.927L130.369 135.993L130.23 136.093L129.935 136.316L129.711 136.489L124.899 140.117L124.683 140.283L123.977 140.82L123.884 140.886L121.855 142.415L121.638 142.58L120.933 143.117L120.708 143.291L120.414 143.514L120.189 143.687L115.378 147.315L115.161 147.481L114.456 148.018L114.363 148.084", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M114.347 148.092L112.208 149.704L111.991 149.869L111.287 150.406L111.062 150.58L110.767 150.803L110.543 150.976L106.963 153.679", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M112.487 194.371L112.588 194.445L112.758 194.569L112.812 194.61L112.843 194.635L113.626 195.23L113.874 195.412L114.315 195.743L114.431 195.825L114.439 195.834L114.478 195.858L114.532 195.9L114.625 195.974L114.656 195.999L114.749 196.073L114.858 196.156L114.904 196.189L115.028 196.28L115.044 196.288L115.291 196.47L115.477 196.61L115.601 196.701L115.78 196.833L116.136 197.098L122.264 201.718L122.342 201.775L126.665 198.519L126.928 198.321L126.936 198.313", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M106.134 189.297L106.111 189.313L106.111 189.561L106.398 189.776L107.924 190.925L110.519 192.883L110.744 193.057L111.038 193.28L111.263 193.453L112.472 194.363", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M106.119 189.313L106.406 189.528L108.103 190.809L112.488 194.115", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M122.342 201.552L126.758 198.222L126.766 198.214", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M147.809 182.339L147.715 182.264L147.707 182.256", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M122.342 201.8L122.342 201.552L116.299 196.999L115.602 196.47L115.478 196.379L115.292 196.238L115.044 196.057L115.029 196.048L114.92 195.966L114.905 195.957L114.819 195.891L114.788 195.867L114.695 195.792L114.595 195.718L114.44 195.602L114.316 195.511L113.014 194.528L112.983 194.503L112.759 194.338L112.495 194.139", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M143.399 185.917L144.492 185.099L147.521 182.818L147.529 182.818L147.808 182.603", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M116.407 146.861L116.461 146.902L116.523 146.943L116.795 147.15L117.012 147.315L117.895 147.985L118.406 148.373L120.18 149.712L120.405 149.885L120.699 150.109L120.924 150.282L122.133 151.191L123.155 151.96L123.884 151.414L123.977 151.348L125.069 150.522L125.084 150.505L125.185 150.431L128.462 147.96L129.346 147.29L129.718 147.009L129.942 146.836L129.942 146.563L129.718 146.39L128.664 145.596L128.648 145.58L125.379 143.109L125.201 142.968L124.821 142.679L124.705 142.588L124.581 142.489L124.465 142.398L123.992 142.043L123.899 141.977L123.775 141.886L123.674 141.811L123.504 141.679L123.458 141.646L123.442 141.638L123.21 141.464L121.9 142.448L121.683 142.613L120.94 143.175L120.715 143.349L120.421 143.572L120.196 143.745L116.423 146.588L116.423 146.861", stroke: "#1C6BCF", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M123.148 151.953L123.148 151.679", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M129.943 146.563L129.346 147.009L128.277 147.811L125.186 150.142L124.907 150.356L124.891 150.373L123.884 151.133L123.156 151.679L118.585 148.233L118.073 147.844L117.012 147.042L116.981 147.018L116.71 146.811L116.416 146.588", stroke: "#1C6BCF", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M131.104 159.769L131.104 159.273L130.833 159.067L130.461 159.348L130.454 159.348L130.368 159.414L130.229 159.513L130.198 159.538L129.942 159.736L129.718 159.91L125.185 163.323L124.806 163.612L124.558 163.794L123.969 164.24L123.876 164.314L122.938 165.025L122.691 165.207L122.466 165.381L122.466 165.876", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M122.466 165.372L122.739 165.58", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M122.737 166.075L122.737 165.86L122.737 165.794L122.737 165.661L122.737 165.571L123.876 164.711L124.062 164.571L124.078 164.554L124.55 164.199L124.798 164.017L125.178 163.728L130.361 159.819L130.539 159.678L130.547 159.678L130.562 159.67L130.57 159.67L131.097 159.273", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M122.466 165.868L122.737 166.075L122.876 165.967L122.938 165.918L123.876 165.207L123.969 165.133L124.395 164.81L124.411 164.794L124.744 164.546L124.806 164.496L125.185 164.207L129.718 160.794L129.942 160.62L130.237 160.397L130.376 160.298L130.461 160.232L130.469 160.232L130.887 159.918L130.895 159.918L130.911 159.91L130.918 159.91L131.12 159.761", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M146.987 147.786L146.987 147.34L146.987 147.332L146.987 147.29L146.716 147.084L146.693 147.1L146.685 147.1L146.189 147.472L145.965 147.646L145.934 147.671L145.678 147.869L145.453 148.043L143.408 149.588L140.937 151.456L140.572 151.728L140.324 151.91L140.139 152.051L140.131 152.051L140.115 152.059L140.107 152.059L139.712 152.356", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M137.683 153.902L137.956 154.11", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M137.945 154.604L137.945 154.199L137.945 154.108L139.611 152.852L139.797 152.712L139.813 152.695L140.308 152.323L140.37 152.274L140.378 152.274L140.394 152.265L140.401 152.265L140.564 152.141L140.928 151.869L143.671 149.803L146.282 147.828L146.297 147.811L146.948 147.315L146.956 147.315L146.979 147.299", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M139.705 152.373L139.612 152.439L138.69 153.133L138.442 153.315L137.745 153.836L137.667 153.893L137.667 154.389", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M137.683 154.398L137.762 154.457", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M137.945 154.604L138.627 154.092L138.689 154.042L139.611 153.348L139.704 153.282", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M128.865 164.281L128.625 164.331L128.416 164.323L128.067 164.215", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M114.346 160.827L114.439 160.901L114.656 161.067L114.672 161.083L115.036 161.356L115.284 161.538L115.648 161.81L117.933 163.529L117.949 163.546L119.064 164.389L120.18 165.232L120.405 165.405L120.699 165.628L120.924 165.802L122.132 166.711L122.264 166.81L123.883 165.587L123.976 165.521L124.643 165.017L124.658 165L125.185 164.604L126.665 163.488L128.075 164.554L128.424 164.661L128.633 164.67L128.873 164.62L129.717 163.984L129.942 163.81L130.236 163.587L130.376 163.488L130.461 163.422L130.469 163.422L132.979 161.529L132.987 161.529L133.002 161.521L133.01 161.521L135.815 159.406L136.039 159.232L136.264 159.067L136.272 159.067L136.287 159.058L136.295 159.058L136.342 159.025L136.566 158.852L137.775 157.943L138.472 157.422L138.72 157.24L139.549 156.612L139.557 156.612L139.572 156.604L139.58 156.604L139.65 156.554L139.743 156.488", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M128.866 164.612L128.866 164.281L130.369 163.149L132.755 161.348L132.763 161.348L132.778 161.339L132.786 161.339L136.04 158.885L136.048 158.885L136.063 158.877L136.071 158.877L139.325 156.422L139.333 156.422L139.348 156.414L139.356 156.414L139.643 156.199L140.34 155.67L140.588 155.488L140.952 155.216L141.866 154.53L142.61 153.968L142.618 153.968L142.633 153.96L142.641 153.96L143.346 153.422", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M143.307 153.72L143.307 153.389L143.354 153.298L143.4 153.191", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M139.704 156.431L140.308 155.976L140.556 155.794L140.92 155.521L141.835 154.827L142.803 154.1L142.811 154.1L142.826 154.092L142.834 154.092L143.26 153.769L143.322 153.72L143.369 153.629L143.423 153.522", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M143.399 153.522L143.399 153.191L143.384 153.034L143.345 152.968L143.237 152.778L142.044 151.877L141.827 151.712", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M147.529 147.414L147.312 147.58L147.304 147.58L146.653 148.076L146.638 148.092L144.027 150.067L141.842 151.712", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M147.529 147.745L147.529 147.414L147.405 147.324L146.197 146.414L145.972 146.241L145.678 146.018L145.453 145.844L143.439 144.324L143.423 144.307L140.928 142.423L140.564 142.15L140.316 141.968L140.161 141.853L140.146 141.836L139.712 141.506L139.619 141.439L139.48 141.34L139.232 141.159L138.465 140.58L138.449 140.564L137.752 140.043L136.543 139.134L136.319 138.96L136.024 138.737L135.8 138.564L133.599 136.903L130.469 134.539L130.461 134.539L130.376 134.514L130.237 134.473L129.942 134.473L129.718 134.539L123.977 138.869L123.884 139.043L123.884 139.373", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M123.877 139.259L123.877 139.035", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M123.877 139.588L123.877 139.365L123.877 139.258L123.908 139.316L123.97 139.431", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M123.97 139.762L123.97 139.431L124.899 140.134", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M121.847 142.431L120.917 141.729L120.692 141.663L120.398 141.663L120.173 141.729L114.432 146.059L114.339 146.233L114.339 146.563", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M114.346 146.449L114.346 146.224", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M114.346 146.563L114.346 146.788", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M114.346 146.786L114.346 146.563L114.346 146.456L114.377 146.514L114.439 146.629L115.369 147.332", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M112.201 149.704L111.271 149.001L111.047 148.935L110.752 148.935L110.528 149.009L105.19 153.034L105.097 153.208L105.097 153.538", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M105.097 153.424L105.097 153.199", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M105.097 153.53L105.097 153.753L105.19 153.918L108.103 156.116L110.52 157.943L110.745 158.116L111.039 158.34L111.264 158.513L112.472 159.422L112.953 159.786L112.968 159.802L113.735 160.381L113.983 160.563L114.332 160.827", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M105.097 153.753L105.097 153.53L105.097 153.422L105.128 153.48L105.19 153.596L108.327 155.959L113.185 159.62L113.201 159.637L114.34 160.496L114.874 160.901L114.89 160.918L115.037 161.025L115.285 161.207L115.649 161.48L118.151 163.364L118.167 163.381L122.258 166.463", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M122.257 166.802L122.257 166.471L122.9 165.984L123.876 165.248L124.411 164.843L124.426 164.827L124.798 164.546L125.178 164.257L126.658 163.141", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M126.658 163.48L126.658 163.149L128.068 164.215L128.068 164.546", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M1.28613 126.531L1.28613 131.2", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M1.28613 116.523L1.28613 121.217", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M1.28613 106.292L1.28613 106.318", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M1.28613 101.384L1.28613 106.301", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M1.28613 96.4416L1.28613 101.359", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M1.28613 96.4169L1.28613 96.4425", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M1.28613 91.4998L1.28613 96.4169", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M1.28613 91.475L1.28613 91.5005", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M1.28613 86.5413L1.28613 91.475", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M1.28613 96.4416L3.20751 97.8878L3.58713 98.1771L3.59489 98.1854L3.97451 98.4746L4.54011 98.8961L4.55558 98.9126L5.40006 99.5489L5.49304 99.6233L5.55501 99.6729L5.95014 99.9704L5.96565 99.9869L6.96508 100.739L9.24285 102.458L9.25061 102.458L12.5433 104.937L12.5511 104.945L14.1316 106.135L14.302 106.259L15.8438 107.425L17.1299 108.4", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M18.3545 114.259L18.5807 114.326", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M18.3545 104.375L18.5807 104.45", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M18.8813 119.268L18.8813 119.242", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M18.8813 114.326L18.8813 114.3", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M18.5791 109.383L18.8735 109.383", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M18.8803 109.358L18.5859 109.358", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M18.8813 114.326L19.1076 114.259", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M19.1076 114.234L18.8813 114.301", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M18.8813 104.45L19.1076 104.375", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M18.8813 99.4833L19.1076 99.4167", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M23.6299 125.696L23.6299 125.703", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M23.6299 125.703L23.6299 125.696", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M24.8463 129.762L24.2575 130.209L24.0095 130.39L23.6299 130.68", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M23.6299 130.671L24.0095 130.382L24.2575 130.2L24.8463 129.754", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M24.8467 124.779L24.8467 124.785", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M24.0103 115.49L24.2582 115.308L24.847 114.862", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M24.0096 115.466L23.6299 115.755L19.0977 119.168", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M19.106 114.259L20.5625 113.16L20.7484 113.019L23.6383 110.838L23.7777 110.73L23.9637 110.59L24.0179 110.548L24.2658 110.367L24.8547 109.92", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M23.77 105.797L24.0024 105.623L24.0102 105.623L24.2581 105.441L24.8469 104.995", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M23.77 105.772L23.6305 105.879L22.1507 106.995L20.7407 108.061L19.9504 108.656L19.106 109.292", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M24.8469 100.02L24.2581 100.466L24.0101 100.648L23.77 100.83L23.6305 100.937L22.1507 102.053L20.7407 103.119L19.9504 103.714L19.106 104.35", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M24.9403 119.647L24.8467 119.822", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M24.8467 114.872L24.9403 114.697", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M24.9403 114.672L24.8467 114.847", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M24.8467 109.93L24.9403 109.755", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M24.8467 100.046L24.9403 99.8712", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M24.9403 99.8547L24.8467 100.029", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M24.8467 95.0875L24.9403 94.9128", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M24.9403 94.9128L24.8467 95.0875", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M24.9395 112.408L25.9777 111.623L26.0318 111.581L26.5587 111.185L26.6284 111.135L26.6827 111.094", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M26.6284 111.11L26.5587 111.16L26.0318 111.557L25.9621 111.606L24.9395 112.375", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M24.9395 107.466L26.0318 106.648L26.5587 106.251L26.6284 106.202L26.6827 106.16", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M26.629 106.168L26.5593 106.218L26.0324 106.615L26.017 106.631L24.9478 107.441", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M24.9395 102.532L26.5587 101.309L26.6284 101.26L26.6827 101.218", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M26.6284 101.227L26.5587 101.276L24.9395 102.499", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M24.9395 97.5904L26.5587 96.3673L26.6284 96.3177L26.6827 96.2764", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M26.6284 96.2846L26.5587 96.3342L24.9395 97.5573", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M27.2021 132.192L27.2021 135.051", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M27.2021 135.051L27.2021 132.192", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M27.3262 135.481L27.3262 134.952L27.3262 132.283", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M27.3262 134.952L27.3262 132.283", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M27.7759 132.622L27.7759 134.622L27.7759 135.142L27.7759 135.151L27.7759 135.919", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M26.6836 111.094L27.3189 111.573L27.9 112.011", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M26.6836 106.152L27.04 106.425L27.2104 106.549L27.2647 106.59L27.2957 106.615L27.8922 107.061", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M26.6836 101.21L27.2492 101.632L27.8922 102.119", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M27.8922 102.094L27.2647 101.623L26.6836 101.185", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M27.8922 97.1607L27.2414 96.6731L27.2336 96.6648L27.1407 96.5904L26.9703 96.4665L26.6836 96.2433", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M27.2173 91.7146L27.8913 92.227", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M27.2182 91.7064L26.6836 91.3014", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M27.8994 136.01L27.8994 135.051L27.8994 135.043L27.8994 134.522L27.8994 132.713", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M27.8911 107.061L28.1174 107.128", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M27.8911 97.1854L28.1174 97.252", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M28.3564 131.936L28.3564 133.06", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M28.3726 133.051L28.3726 134.167L28.3726 134.688L28.3726 134.696L28.3726 135.721L28.3726 135.886L28.3726 136.2L28.3726 136.349", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M28.3726 136.621L28.3726 134.696L28.3726 134.167L28.3726 133.051", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M28.1162 97.2516L28.4106 97.2516", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M28.1162 92.2931L28.4106 92.2931", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M28.4195 92.2849L28.125 92.2849", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M28.4961 136.621L28.4961 134.605L28.4961 134.076L28.4961 132.961", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M28.4961 136.241L28.4961 136.093L28.4961 135.779L28.4961 135.613L28.4961 134.589L28.4961 134.58L28.4961 134.06L28.4961 132.944", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M28.4185 112.078L28.6446 112.003", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M28.4185 102.194L28.551 102.152L28.6446 102.119", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M28.6446 102.094L28.551 102.128L28.4185 102.169", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M28.6446 97.1606L28.551 97.1939L28.4185 97.2355", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M28.4185 92.2936L28.551 92.252L28.6446 92.2187", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M33.168 118.498L33.168 118.505", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M33.168 118.513L33.168 118.507", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M33.2144 129.399L33.2144 130.514", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M33.2144 130.514L33.2144 129.399", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M27.7755 134.622L27.3262 134.96", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M28.3716 134.167L27.9067 134.522", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M33.2143 130.514L28.4961 134.076", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M33.7871 128.969L33.7871 129.143L33.7871 130.605L33.7871 130.779L33.7871 131.308", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M33.9121 131.407L33.9121 130.878L33.9121 130.514L33.9121 129.052L33.9121 128.878", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M33.7877 130.779L33.6715 130.696L33.3384 130.448", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M34.376 117.589L34.376 117.596", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M33.3384 128.316L33.5243 128.176L33.7722 127.994L33.7877 127.986", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M28.6431 112.003L30.6729 110.466L30.7969 110.375L30.8047 110.367L30.8279 110.35L30.8356 110.342L30.8666 110.317L30.8977 110.292L30.9673 110.234L33.1599 108.582L33.524 108.309L33.772 108.127L34.1206 107.863L34.1904 107.813L34.3763 107.672", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M34.3763 107.648L34.1749 107.796L34.1051 107.846L33.772 108.094L33.524 108.276L33.1599 108.549L30.9518 110.218L30.8821 110.276L30.8511 110.3L30.8202 110.325L30.8124 110.334L30.7892 110.35L30.7814 110.358L30.6574 110.449L28.6431 111.97", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M34.3763 102.706L34.3144 102.755L34.2756 102.78L34.1981 102.838L34.1904 102.846L34.1749 102.855L34.1439 102.879L34.1284 102.896L34.1207 102.904L34.113 102.912L34.0122 102.987L33.772 103.169L33.5241 103.35L33.1599 103.623L30.8977 105.334L30.828 105.383L30.5723 105.573L30.4096 105.697L28.7129 106.978", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M28.6431 102.127L28.7825 102.02L30.4095 100.797L30.6419 100.623L30.7504 100.541L30.7581 100.532L30.8434 100.466L30.8666 100.45L30.8743 100.441L30.8899 100.425L30.9054 100.417L30.9209 100.4L30.9364 100.392L30.9441 100.384L31.0603 100.301L32.3154 99.3506L33.1677 98.7143L33.5318 98.4416L33.7797 98.2598L34.1749 97.9622L34.1826 97.9622L34.2523 97.9127L34.26 97.9127L34.3918 97.8135", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M28.6431 97.1855L28.8058 97.0615L30.4173 95.8467L30.6729 95.6566L30.7581 95.5905L30.8511 95.5161L30.9054 95.4748L30.9131 95.4748L30.9209 95.4665L30.9751 95.4252L30.9828 95.4252L32.3309 94.4087L33.1832 93.7724L33.5473 93.4997L33.7952 93.3179L34.1904 93.0204L34.2058 93.0038L34.26 92.9625L34.2756 92.946L34.3918 92.8551", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M34.3765 92.8303L34.2447 92.9295L34.2293 92.946L34.1751 92.9873L34.1596 93.0038L33.7799 93.2931L33.532 93.4749L33.1679 93.7476L32.3156 94.3839L30.952 95.4169L30.9443 95.4169L30.9056 95.45L30.8823 95.4665L30.8746 95.4665L30.8436 95.4913L30.7506 95.5657L30.6499 95.6483L30.4097 95.8301L28.7827 97.0532", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M34.3843 128.523L34.3843 128.696L34.3843 130.159L34.3843 131.39L34.3843 131.655L34.3843 131.754L34.3843 131.804", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M34.3843 132.085L34.3843 131.39L34.3843 130.159L34.3843 128.514", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M34.4697 117.43L34.4697 117.424", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M34.376 102.74L34.4696 102.565", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M34.4696 102.541L34.376 102.715", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M34.376 97.7982L34.4696 97.6234", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M34.4696 97.5986L34.376 97.7734", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M34.4696 92.6567L34.376 92.8315", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M34.376 87.8978L34.4696 87.7231", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M34.4696 87.7231L34.376 87.8978", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M34.5078 132.043L34.5078 131.853L34.5078 131.713L34.5078 131.564L34.5078 131.49L34.5078 130.068L34.5078 128.597L34.5078 128.424", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M34.5078 128.424L34.5078 130.068", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M34.3842 131.804L28.4961 136.241", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M34.3842 131.663L28.4961 136.101", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M33.7871 128.969L33.911 128.878L34.3759 128.523L34.4999 128.432", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M33.3384 129.3L33.656 129.06L33.7722 128.969L33.7877 128.961", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M34.4697 127.316L34.7951 127.068", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M33.7884 129.143L33.7715 129.152", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M34.3838 128.696L33.9189 129.052", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M33.9121 130.514L34.377 130.159", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M33.6714 130.697L33.7886 130.614", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M34.4697 105.218L34.5007 105.193L35.7171 104.276L35.8255 104.193L35.8333 104.185L35.8488 104.169L35.8798 104.144L35.8953 104.136L35.903 104.127L36.0192 104.045L36.3059 103.83L36.3214 103.821", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M36.3283 103.788L36.2972 103.813L36.0106 104.028L35.8944 104.111L35.8866 104.119L35.8711 104.127L35.8402 104.152L35.8247 104.169L35.817 104.177L35.7085 104.259L34.5076 105.168L34.4766 105.193", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M34.4697 100.276L35.8566 99.2266L35.8643 99.2266L35.934 99.1771L35.9418 99.1771L36.3369 98.8796", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M36.3291 93.9046L35.934 94.2021L35.9185 94.2187L35.8643 94.26L35.8488 94.2765L34.4697 95.3178", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M34.4697 90.4007L35.8643 89.3511L35.8798 89.3346L35.934 89.2933L35.9495 89.2767L36.3291 88.9875", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M34.4697 85.4339L35.8488 84.3927L35.8643 84.3761L35.9185 84.3348L35.934 84.3183L36.3291 84.0208", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M36.3291 84.0291L35.934 84.3266L35.9185 84.3431L35.8643 84.3844L35.8488 84.4009L34.4697 85.4422", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M36.3286 98.8712L36.685 99.1439L36.8554 99.2679L36.9484 99.334L37.545 99.7803", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M37.545 99.7638L36.9639 99.3258L36.8709 99.2597L36.7005 99.1357L36.3286 98.8548", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M36.3286 88.9957L36.5998 89.2023L36.7702 89.3263L37.5372 89.9048", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M37.5446 89.88L36.7931 89.3098L36.6226 89.1858L36.3359 88.9627", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M36.3286 84.0373L37.5372 84.9463", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M37.5459 94.8467L37.7721 94.9133", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M37.77 104.797L38.0645 104.797", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M37.77 94.9211L38.0645 94.9211", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M38.0645 94.888L37.77 94.888", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M37.77 89.9792L38.0645 89.9792", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M38.0645 85.0125L37.77 85.0125", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M38.2901 104.697L38.064 104.764", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M30.9045 81.8556L30.8425 81.9052L30.796 81.9382L30.7418 81.9795L30.4009 82.2357L28.9288 83.3431L28.5337 83.6406L28.495 83.6737L28.4795 83.6902L28.4252 83.7315L28.4097 83.748L26.6201 85.1033L26.5503 85.1529L26.0235 85.5496L25.6284 85.8471L24.1564 86.9545L23.7612 87.252L22.142 88.4751L20.7474 89.5246L20.7319 89.5412", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M42.4106 111.524L42.4106 111.53", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M42.4106 111.538L42.4106 111.532", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M34.4697 125.539L36.639 123.903", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M24.9395 132.737L26.8531 131.291L27.0003 131.184", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M34.4697 125.292L36.4686 123.779", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M24.9395 132.481L26.8299 131.052L26.8531 131.035", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M36.3286 114.136L36.5939 113.937L36.6016 113.928", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M34.4697 115.532L35.9263 114.433L36.0503 114.342L36.058 114.333L36.0812 114.317L36.089 114.309L36.1199 114.284L36.151 114.259L36.2206 114.201L36.3214 114.127", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M26.6836 121.409L26.9488 121.209L26.9566 121.201", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M24.9395 122.73L26.6904 121.407", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M36.3286 113.88L36.4224 113.805L36.4302 113.796", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M34.4697 115.284L35.7636 114.309L35.8875 114.218L35.9185 114.193L35.9573 114.168L35.9882 114.143L36.058 114.085L36.3214 113.887", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M26.6836 121.16L26.7774 121.085L26.7852 121.077", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M24.9395 122.473L26.6904 121.151", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M43.6274 110.615L43.6274 110.621", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M42.4897 116.457L42.4185 116.508", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M42.4106 116.508L42.4818 116.457", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M42.4897 111.482L42.4185 111.533", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M42.4106 111.525L42.4818 111.474", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M38.2891 104.731L40.7218 102.896L40.7295 102.896L40.7993 102.846L40.807 102.846L43.6349 100.714", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M38.2891 99.7886L39.2653 99.0531L39.4512 98.9126L40.7218 97.954L40.7373 97.9375L40.7915 97.8961L40.807 97.8796L41.1247 97.64L41.3106 97.4995L43.6272 95.7558", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M43.6267 90.7973L40.7988 92.9294L40.7833 92.946L40.7291 92.9873L40.7136 93.0038L38.2964 94.8302", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M40.7993 83.0539L43.6272 80.9217", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M40.7915 83.0539L40.7761 83.0704L40.7218 83.1117L40.7063 83.1282L38.2891 84.9546", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M43.7197 110.456L43.7197 110.449", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M43.7197 85.7157L43.7197 85.6901", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M43.6274 80.9229L43.6977 80.7895", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M43.7204 80.7482L43.6963 80.791", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M43.7197 100.094L43.9225 100.161", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M43.7197 95.1525L43.9225 95.219", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M43.7197 90.2105L43.9225 90.2771", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M43.9225 90.2523L43.7197 90.1858", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M43.7197 85.2769L43.9225 85.3434", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M43.9209 85.31L43.9209 85.3356", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M43.9225 80.3685L43.7197 80.3019", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M43.9209 100.152L44.2153 100.152", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M44.2153 100.127L43.9209 100.127", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M44.2153 95.1938L44.0448 95.1938L44.0294 95.1938L43.9209 95.1938", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M44.2153 90.2519L43.9209 90.2519", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M43.9209 85.3348L44.2153 85.3348", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M44.2153 80.368L43.9209 80.368", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M44.2158 100.153L44.4421 100.086", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M44.2158 95.219L44.4421 95.1525", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M44.2158 90.2771L44.4421 90.2105", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M44.4421 90.1775L44.2158 90.2441", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M44.2158 85.3353L44.4421 85.2604", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M44.4421 85.2438L44.2158 85.3104", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M44.2158 80.3768L44.4421 80.3102", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M48.9736 106.582L48.9736 106.588", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M48.9736 106.588L48.9736 106.582", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M48.9736 111.557L49.3532 111.267L49.6012 111.086L50.19 110.639", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M48.9736 106.582L49.3532 106.292L49.6012 106.111L50.19 105.664", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M50.1812 105.673L50.1812 105.679", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M50.1813 95.7309L49.5925 96.1772L49.3446 96.359L48.9649 96.6482L44.4326 100.061", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M44.4399 95.1442L45.8965 94.0451L46.0824 93.9046L48.9723 91.7229L49.1117 91.6155L49.2977 91.475L49.3518 91.4337L49.5998 91.2518L50.1886 90.8056", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M50.1813 90.789L49.5925 91.2353L49.3446 91.4171L49.2748 91.475L49.1122 91.5989L48.9727 91.7063L46.0596 93.9046L45.8892 94.0285L44.4326 95.1277", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M50.1812 90.2527L50.1812 90.2271", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M50.1812 90.7891L50.1812 90.2519", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M50.1809 85.8471L49.5921 86.2934L49.3441 86.4752L49.3209 86.4917L49.104 86.657L48.9645 86.7645L47.4847 87.8801L46.0746 88.9462L45.2844 89.5412L44.4399 90.1775", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M44.4399 85.2686L45.2844 84.6323L46.0746 84.0373L47.4847 82.9712L48.9645 81.8556L49.104 81.7481L49.3441 81.5663L49.3596 81.5581L49.5921 81.3845L50.1809 80.9383", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M47.4932 78.0045L48.973 76.8889L49.1124 76.7814L49.3526 76.5996L49.3759 76.5831L49.5928 76.4178L50.1816 75.9798", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M47.493 77.9963L46.083 79.0624L45.2928 79.6574L44.4482 80.2937", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M50.1812 78.5252L50.1812 78.5507", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M50.2744 105.505L50.2744 105.499", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M50.1812 110.649L50.2748 110.474", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M50.1812 105.674L50.2748 105.499", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M50.1812 100.699L50.2748 100.524", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M50.1812 90.8149L50.2748 90.6485", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M50.1812 85.8814L50.2748 85.7066", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M50.1812 80.9395L50.2748 80.7648", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M50.1812 75.981L50.2748 75.8063", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M51.9326 38.4197L51.9326 43.1137", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M51.9326 33.453L51.9326 38.4114", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M51.9326 28.4863L51.9326 33.4447", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M50.2744 93.3013L51.3126 92.5162L51.3668 92.4749L51.8937 92.0782L51.9324 92.0452L52.0176 91.979", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M51.9326 87.1038L52.0185 87.0372", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M50.2744 88.3594L51.3668 87.5412L51.8937 87.1446L51.9324 87.1115", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M51.932 87.0785L51.8933 87.1115L51.3664 87.5082L51.351 87.5247L50.2817 88.3346", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M52.0259 87.0123L51.9399 87.079", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M51.9326 82.1702L52.0185 82.1035", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M51.8936 82.1959L51.934 82.1614", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M51.8937 82.1696L50.2744 83.3927", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M51.8936 77.2616L51.9326 77.2283L52.0185 77.1616", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M51.8937 77.2277L50.2744 78.4508", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M52.0249 72.1949L51.9397 72.261L51.901 72.2941L50.2817 73.5172", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M52.5444 113.077L52.5444 115.937", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M52.5444 115.937L52.5444 113.077", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M52.6685 116.366L52.6685 115.837L52.6685 113.168", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M52.6685 115.846L52.6685 113.176", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M53.1104 117.06L53.1104 116.036L53.1104 115.507L53.1104 113.507", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M53.1104 113.507L53.1104 115.507L53.1104 116.027L53.1104 116.036L53.1104 116.804", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M52.0254 82.1035L52.5832 82.525L52.591 82.525L53.2418 83.0125", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M53.2341 82.9878L52.6065 82.5167L52.5987 82.5167L52.0254 82.0787", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M52.0254 77.1616L52.2966 77.3682L52.467 77.4922L52.56 77.5666L53.2263 78.0707", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M52.5518 72.5998L53.2257 73.1122", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M52.56 72.5998L52.0254 72.1949", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M53.2417 117.06L53.2417 115.937L53.2417 115.408L53.2417 113.598", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M53.2417 116.895L53.2417 115.937L53.2417 115.928L53.2417 115.408L53.2417 113.598", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M53.4355 24.5939L53.4355 24.652", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M53.2334 87.9545L53.4596 88.0211", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M53.2334 83.0126L53.4362 83.0791L53.4596 83.0874", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M53.2334 78.0706L53.4362 78.1372L53.4596 78.1455", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M53.4596 73.1788L53.4362 73.1705L53.2334 73.104", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M53.6982 112.821L53.6982 113.945", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M53.7061 113.945L53.7061 115.061L53.7061 115.581L53.7061 115.589L53.7061 116.614L53.7061 116.78L53.7061 117.094L53.7061 117.242", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M53.7061 117.515L53.7061 115.589L53.7061 115.061L53.7061 113.945", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M53.4585 92.9625L53.753 92.9625", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M53.4585 78.145L53.505 78.145L53.7607 78.145", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M53.4585 73.1866L53.5127 73.1866L53.753 73.1866", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M53.7534 73.1783L53.5054 73.1783L53.4512 73.1783", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M53.8228 24.9496L53.8228 24.8914", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M53.8306 117.515L53.8306 115.499L53.8306 114.97L53.8306 113.854", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M53.8306 117.135L53.8306 116.986L53.8306 116.672L53.8306 116.507L53.8306 115.482L53.8306 115.474L53.8306 114.953L53.8306 113.837", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M53.7534 88.0211L53.9796 87.9545", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M53.7534 83.0874L53.9796 83.0208", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M54.6436 25.5705L54.684 25.536", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M57.332 17.0984L57.332 17.1565", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M58.5015 99.3982L58.5015 99.3919", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M58.5557 110.284L58.5557 111.4", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M53.1105 115.507L52.6611 115.846", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M53.7066 115.061L53.2417 115.416", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M58.5567 111.4L53.8384 114.961", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M58.559 28.4615L58.5186 28.496", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M58.5186 28.4877L58.559 28.4532", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M58.812 28.7097L58.812 28.6516", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M55.266 25.974L55.2256 26.0085", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M55.2256 26.0085L55.266 25.974", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M59.1221 109.854L59.1221 110.028L59.1221 111.491L59.1221 111.664L59.1221 112.193", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M59.2471 112.292L59.2471 111.763L59.2471 111.4L59.2471 109.937L59.2471 109.763", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M59.1222 111.672L59.006 111.59L58.6729 111.342", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M59.7183 98.4746L59.7183 98.4809", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M53.978 92.8964L55.9847 91.384L56.1396 91.2683L56.1473 91.2601L56.1706 91.2435L56.1784 91.2353L56.2093 91.2105L56.3101 91.1361L58.5026 89.4833L58.8668 89.2106L59.1146 89.0288L59.4633 88.7643L59.502 88.7313L59.7112 88.5742", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M59.7185 88.5412L59.4861 88.7147L59.4474 88.7478L59.1142 88.9957L58.8663 89.1775L58.5022 89.4502L56.2941 91.1196L56.1934 91.1939L56.1624 91.2187L56.1547 91.227L56.1314 91.2435L56.1236 91.2518L55.9687 91.3675L53.9854 92.8633", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M53.978 87.9544L55.2951 86.9627L55.4811 86.8223L56.1861 86.2934L56.2248 86.2603L58.5026 84.5414L58.8668 84.2687L59.1146 84.0869L59.3394 83.9133L59.4788 83.8059L59.4866 83.7976L59.502 83.7811L59.5175 83.7728L59.5253 83.7646L59.6648 83.6571L59.7112 83.6241", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M53.978 78.0706L55.2951 77.0789L55.5508 76.8806L56.2248 76.3682L56.2326 76.3682L56.2713 76.3434L56.2791 76.3434L57.2398 75.6162L57.3327 75.5418L57.3947 75.4922L58.5026 74.6576L58.8047 74.4262L58.859 74.3849L59.1069 74.2031L59.502 73.9055L59.5175 73.889L59.5408 73.8725L59.5563 73.856L59.7035 73.7485", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M53.978 73.1122L55.2951 72.1205L55.5586 71.9222L56.2171 71.4263L56.2326 71.4098L56.2558 71.3933L56.2713 71.3767", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M59.7188 68.7819L59.5561 68.9058L59.5406 68.9224L59.5174 68.9389L59.5019 68.9554L59.1223 69.2447L58.8743 69.4265L58.8124 69.4678L58.5102 69.6992L57.4023 70.5339L57.3403 70.5834L57.2473 70.6578L56.2866 71.385", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M59.7183 109.408L59.7183 109.581L59.7183 111.044L59.7183 112.276L59.7183 112.54L59.7183 112.639L59.7183 112.689", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M59.812 98.3157L59.812 98.3093", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M59.7183 88.5672L59.8118 88.3925", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M59.8118 88.3677L59.7183 88.5424", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M59.7183 83.6253L59.8118 83.4505", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M59.812 83.4513L59.812 83.4257", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M59.8118 83.4257L59.7183 83.6005", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M59.8118 78.4921L59.7183 78.6669", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M59.8428 112.937L59.8428 112.747L59.8428 112.606L59.8428 112.457L59.8428 112.383L59.8428 110.962L59.8428 109.499L59.8428 109.325", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M59.7187 112.697L53.8306 117.135", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M59.7187 112.548L53.8306 116.986", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M59.812 108.21L60.1374 107.962", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M59.1233 110.036L59.1064 110.045", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M59.7183 109.581L59.2534 109.937", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M59.2471 111.408L59.7119 111.053", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M59.0142 111.59L59.1314 111.507", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M59.812 86.1033L60.9432 85.2521L60.9974 85.2107L61.0362 85.186L61.1756 85.0785L61.1833 85.0703L61.1989 85.0537L61.2144 85.0455L61.2221 85.0372L61.3615 84.9298L61.6637 84.6984", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M61.6713 84.6736L61.346 84.9133L61.1988 85.0207L61.191 85.029L61.1755 85.0373L61.16 85.0538L61.1523 85.062L61.0128 85.1695L60.9896 85.186L60.9199 85.2356L59.8042 86.0785", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M59.812 81.1697L61.1989 80.1202L61.2066 80.1202L61.2453 80.0954L61.2531 80.0954L61.6792 79.7731", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M61.6713 79.74L61.2298 80.0705L61.222 80.0705L61.1832 80.0953L61.1755 80.0953L59.8042 81.1283", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M59.812 71.2858L61.2066 70.2363L61.2221 70.2198L61.2453 70.2033L61.2608 70.1867L61.6714 69.881", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M61.6714 69.8562L61.2453 70.1785L61.2299 70.1951L61.2066 70.2116L61.1911 70.2281L59.812 71.2694", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M59.812 66.3274L61.1911 65.2861L61.2066 65.2696L61.2299 65.2531L61.2453 65.2365L61.6714 64.9143", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M61.6714 84.7067L61.7256 84.748L62.3067 85.186L62.8878 85.624", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M62.8795 70.7735L62.1279 70.2033L61.9575 70.0793L61.6631 69.8562", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M62.8801 65.8316L61.6714 64.9225", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M63.1051 75.7819L62.8789 75.7154", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M62.8789 70.7983L63.1051 70.8648", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M63.1051 70.84L62.8789 70.7735", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M63.105 70.8396L63.105 70.8652", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M63.1051 65.8981L62.8789 65.8316", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M63.105 80.7482L63.3994 80.7482", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M63.3994 70.8396L63.105 70.8396", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M63.105 65.9059L63.3994 65.9059", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M63.3994 65.8977L63.105 65.8977", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M63.6251 80.649L63.3989 80.7239", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M63.3989 75.8067L63.6251 75.7402", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M63.2841 32.0233L63.2437 32.0578", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M63.2437 32.0578L63.2841 32.0233", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M59.9906 29.5441L59.9502 29.5786", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M59.9502 29.5703L59.9906 29.5358", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M57.394 61.8731L57.3319 61.9227L57.239 61.9971L57.0918 62.1128L57.0763 62.1293L57.053 62.1458L57.0375 62.1624L55.6972 63.1788L55.3021 63.4763L53.8301 64.5837L53.8223 64.592L53.8068 64.6085L53.7835 64.625L53.768 64.6416L53.4427 64.8812L51.9396 66.0134L51.9009 66.0465L51.3741 66.4431L50.9789 66.7406L49.5069 67.848L49.1118 68.1455L47.4925 69.3686L46.098 70.4182L46.0825 70.4347", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M67.7524 92.4171L67.7524 92.4234", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M67.7524 92.4234L67.7524 92.4171", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M59.812 106.433L61.9813 104.797", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M50.2744 113.623L52.1881 112.176L52.3352 112.069", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M59.812 106.177L61.8109 104.664", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M50.2744 113.375L52.1648 111.945L52.1881 111.928", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M61.6714 95.0217L61.9366 94.822L61.9444 94.8136", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M59.812 96.4251L61.2376 95.3508L61.3925 95.2351L61.4003 95.2268L61.4236 95.2103L61.4313 95.202L61.4623 95.1773L61.563 95.1029L61.6637 95.0285", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M52.0254 102.302L52.2906 102.103L52.2984 102.094", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M50.2744 103.615L52.0253 102.293", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M61.6714 94.773L61.7652 94.698L61.773 94.6897", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M59.812 96.169L61.0749 95.2186L61.2299 95.1029L61.2608 95.0781L61.2686 95.0699L61.2996 95.0451L61.4003 94.9707L61.6637 94.7723", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M52.0254 102.045L52.1192 101.97L52.127 101.962", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M50.2744 103.367L52.0253 102.045", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M67.7929 97.3672L67.7524 97.4017", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M67.792 97.3589L68.9619 96.4747", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M67.7524 97.3935L67.7929 97.359", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M67.7929 92.4005L67.7524 92.435", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M67.792 92.384L68.9619 91.4997", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M67.7524 92.4185L67.7929 92.384", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M68.9614 91.4997L68.9614 91.506", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M63.623 85.6157L66.0558 83.7811L66.0635 83.7811L66.1023 83.7563L66.1101 83.7563L68.9689 81.5994", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M68.9612 76.6244L67.7835 77.5169L67.6209 77.6409L66.1023 78.7813L66.0868 78.7979L66.0635 78.8144L66.048 78.8309L65.9241 78.9218L65.7614 79.0458L63.6309 80.649", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M68.9612 71.6825L66.1023 73.8394L66.0868 73.856L66.0635 73.8725L66.048 73.889L63.6309 75.7154", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M68.9612 66.7489L66.1023 68.9058L66.0868 68.9223L66.0635 68.9388L66.048 68.9554L63.6309 70.7817", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M68.9614 67.377L68.9614 69.3769", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M68.9612 56.8485L66.0868 59.0137L66.048 59.0385L63.6309 60.8649", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M69.0547 91.3408L69.0547 91.3344", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M68.9614 96.4841L69.0004 96.4092L69.055 96.3177", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M68.9614 91.5009L69.0004 91.426L69.055 91.3344", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M68.9614 86.5341L69.0004 86.4592L69.055 86.3677", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M68.9614 81.5923L69.0004 81.5174L69.055 81.4259", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M69.055 81.3928L69.0004 81.4843L68.9614 81.5592", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M69.055 76.4591L69.0004 76.5507L68.9614 76.6255", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M68.9614 71.7085L69.0004 71.6336L69.055 71.542", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M69.055 71.5172L69.0004 71.6087L68.9614 71.6836", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M68.9614 66.7748L69.0004 66.6999L69.055 66.6084", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M68.9614 61.8081L69.0004 61.7332L69.055 61.6417", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M69.055 61.6334L69.0004 61.725L68.9614 61.7998", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M69.0547 81.0126L69.2262 81.0709", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M69.2262 81.0461L69.0547 80.9879", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M69.0547 76.0707L69.2262 76.1289", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M69.2262 76.1042L69.0547 76.046", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M69.0547 71.1371L69.2262 71.1954", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M69.2262 66.2204L69.0547 66.1621", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M69.2262 61.2867L69.0547 61.2285", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M69.0547 56.2701L69.2262 56.3283", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M69.2262 56.32L69.0547 56.2618", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M69 51.2868L69.2262 51.3617", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M69 46.3284L69.2262 46.395", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M69 41.3617L69.2262 41.4282", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M69.2241 81.0705L69.5186 81.0705", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M69.5186 81.0457L69.2241 81.0457", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M69.2241 76.1286L69.5186 76.1286", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M69.2241 71.1867L69.5186 71.1867", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M69.5186 71.1619L69.2241 71.1619", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M69.2241 51.3612L69.5186 51.3612", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M69.2241 46.3945L69.5186 46.3945", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M69.7285 90.9276L69.7285 90.9213", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M69.7447 80.9713L69.5186 81.0462", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M69.7447 76.0294L69.5186 76.0959", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M69.5186 66.2452L69.7447 66.1787", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M69.5186 61.2868L69.7447 61.2202", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M69.7447 51.2868L69.5186 51.3534", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M69.5186 46.395L69.7447 46.3284", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M69.7447 41.3617L69.5186 41.4282", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M69.9688 90.7477L69.9687 90.754", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M71.7734 34.8664L71.7734 34.8083", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M66.5771 34.5025L66.5366 34.537", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M66.5293 34.537L66.5697 34.5025", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M72.5718 34.2631L72.5718 34.205", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M73.8579 87.814L73.8579 87.8203", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M73.8579 87.8203L73.8579 87.814", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M73.8579 33.2381L73.8579 33.2963", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M75.0352 96.8714L75.0352 98.9787L75.0352 99.4167", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M75.0659 86.8966L75.0659 86.903", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M75.0659 32.3208L75.0659 32.3789", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M69.7441 80.9961L73.8503 77.8971L75.059 76.988", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M75.0671 72.0213L73.8585 72.9304L72.5492 73.9138L72.3787 74.0378L70.682 75.3187L70.5116 75.4427L69.7368 76.0294", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M69.7441 71.1206L71.774 69.5917", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M75.0662 67.0795L73.9971 67.8893L73.9816 67.9059L73.8577 67.9968L72.5715 68.9637L71.7812 69.5587", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M72.5718 59.0881L73.8579 58.1212L73.9818 58.0303L75.0665 57.2122", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M72.5725 59.0798L71.7822 59.6748L69.7524 61.2037", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M75.0672 52.2372L73.9826 53.0553L73.8586 53.1462L72.5725 54.1131L71.7822 54.7081L69.7524 56.237", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M69.7441 46.3284L71.774 44.7995L72.5643 44.2045L73.8503 43.2376L73.9744 43.1467L75.059 42.3286", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M75.0672 42.312L73.9826 43.1302L73.8586 43.2211L72.5725 44.188L71.7822 44.783L69.7524 46.3118", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M75.1606 99.4002L75.1606 98.8796L75.1606 96.6731", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M75.1606 86.7377L75.1606 86.7314", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M75.1606 86.7314L75.1606 86.7377", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M75.1595 71.8478L75.0659 72.0225", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M75.1595 66.9059L75.0659 67.0806", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M75.0659 62.1635L75.1595 61.9888", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M75.1606 65.1622L75.1606 64.6415L75.1606 64.6168L75.1606 61.9888", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M75.1595 61.9722L75.0659 62.147", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M75.1606 61.9738L75.1606 61.7741L75.1606 61.7491", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M75.1595 52.0719L75.0659 52.2466", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M75.1595 47.1052L75.0659 47.2799", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M75.0659 42.3133L75.1595 42.1385", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M75.0659 37.3465L75.1595 37.1718", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M75.6089 96.5408L75.6089 98.5407L75.6089 99.0613L75.6089 99.0696L75.6089 99.8382", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M75.7329 99.9291L75.7329 98.9705L75.7329 98.9622L75.7329 98.4416L75.7329 96.6317", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M75.9341 29.2796L75.9745 29.3141", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M75.9888 29.2964L75.9888 29.2383", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M76.1978 96.9788L76.1978 97.7143L76.1978 98.0862L76.1978 98.1027L76.1978 98.6233L76.1978 98.6316L76.1978 99.6563L76.1978 99.8216L76.1978 100.127L76.1978 100.276", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M76.3291 100.508L76.3291 100.169L76.3291 100.02L76.3291 99.7059L76.3291 99.5406L76.3291 98.5159L76.3291 98.5076L76.3291 97.987L76.3291 97.9705L76.3291 97.5986L76.3291 96.8631", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M76.0659 97.8143L76.1987 97.7143", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M77.8555 27.8915L77.8555 27.8334", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M76.1987 98.0779L76.0659 98.178", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M81.1328 25.3625L81.1328 25.4206", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M81.1411 94.3674L81.1411 94.3343L81.1411 93.2848", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M75.61 98.5407L75.1606 98.8795", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M76.1978 98.0945L75.7329 98.4498", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M75.1606 74.5253L75.9354 73.9386L75.9896 73.8973L77.8025 72.5337L77.8568 72.4924L81.134 70.0214L81.1805 69.9884", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M81.1336 69.9966L77.8564 72.4676L77.7866 72.5172L75.997 73.8725L75.9272 73.9221L75.168 74.4923", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M75.1606 69.5834L75.9896 68.9554L77.8491 67.5505L81.1263 65.0795", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M81.1336 60.1211L75.168 64.625", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M75.1606 59.7079L81.1263 55.204L81.1727 55.1709", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M81.1801 50.2042L81.1336 50.2373L75.168 54.7412", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M75.1606 44.816L81.1263 40.3121L81.1727 40.2791", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M75.1606 39.8576L81.1263 35.3537L81.1727 35.3206", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M81.1801 35.3124L81.1336 35.3454L75.168 39.8494", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M75.1606 34.8909L75.9741 34.2711L75.9896 34.2629L77.8413 32.8662L77.8568 32.858L81.134 30.387L81.1805 30.354", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M81.1805 30.354L81.134 30.387L77.8568 32.858L77.8413 32.8662L75.9896 34.2629L75.9741 34.2711L75.1606 34.8827", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M81.2729 25.4536L81.2729 25.3955", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M75.1606 94.5987L79.6387 91.2187L81.0333 90.1609L81.134 90.0783L81.2734 89.9708L81.3044 89.9461L81.3044 89.9956", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M80.3036 96.7144L76.3291 99.7142", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M80.6058 96.9457L76.3291 100.169", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M80.5055 96.8714L76.3218 100.028", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M83.2939 26.9244L83.2939 26.9825", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M83.7983 27.3634L83.8388 27.3376", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M84.7051 27.9904L84.7051 28.0486", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M85.2622 28.4119L85.2622 28.47", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M85.4565 96.5408L85.4565 97.5821L85.4565 98.1027L85.4565 99.1275L85.4565 99.2928L85.4565 99.6068L85.4565 99.7555L85.4565 100.094", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M85.5259 28.6102L85.5259 28.6684", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M85.5801 99.8382L85.5801 99.6894L85.5801 99.3754L85.5801 99.2101L85.5801 98.1854L85.5801 97.6647L85.5801 96.5326", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M85.4556 99.7473L81.7368 96.9457", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M85.4562 99.5985L81.8382 96.8713L80.1802 95.6235", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M85.9282 97.9292L85.9282 96.2681", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M85.9443 96.2516L85.9443 97.9375", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M81.1802 84.8802L85.9526 88.4751L89.7334 91.3262", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M81.1802 74.9303L85.9526 78.5334L89.7334 81.3845", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M81.1802 69.9884L81.2886 70.071L83.2952 71.5833L83.3108 71.5916L85.9526 73.575L89.7334 76.4178", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M81.1802 65.0465L81.2886 65.1291L83.2952 66.6414L83.7988 67.0216L85.9449 68.6331L89.7257 71.4759", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M81.1802 60.1046L81.2886 60.1872L83.2952 61.6995L83.7678 62.0549L84.7053 62.7573L85.2631 63.1788L85.5265 63.3771L85.9449 63.6912L89.7257 66.534", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M81.1802 55.1709L81.2731 55.237L83.303 56.7576L83.7523 57.0965L84.713 57.8154L85.2709 58.2369L85.5342 58.4352L85.9526 58.7493L89.7334 61.5921", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M81.1802 50.2042L81.2731 50.2703L83.303 51.7992L83.7446 52.1297L84.713 52.8652L85.2709 53.2867L85.5342 53.485L85.9526 53.7991L89.7334 56.6502", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M81.1802 45.2458L81.2731 45.3119L83.303 46.8407L83.7446 47.1713L83.7523 47.1796L84.7207 47.9068L85.2786 48.3283L85.542 48.5266L85.9604 48.8406L89.7412 51.6917", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M81.1802 35.3124L81.2731 35.3785L83.303 36.9073L83.7756 37.2627L83.7833 37.271L84.713 37.9734L85.2709 38.3949L85.5342 38.5932L85.9526 38.9072L89.7334 41.7583", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M81.1802 30.354L81.2731 30.4201L83.303 31.9489L83.791 32.3208L83.7988 32.3291L84.713 33.0232L85.2709 33.4447L85.5342 33.643L85.9526 33.9571L89.7334 36.8082", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M85.456 99.2928L82.0394 96.7144L80.3813 95.4665", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M85.4559 99.1274L82.1478 96.6317L80.4898 95.3838L80.1411 95.1194", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M86.0532 96.1772L86.0532 98.0201L86.0532 98.4912L86.0532 98.549L86.0532 99.4581", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M86.1763 99.3589L86.1763 98.6399L86.1763 98.5903L86.1763 98.1193L86.1763 96.0863", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M86.6182 95.7475L86.6182 98.4581L86.6182 98.9291", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M86.75 98.9291L86.75 98.549L86.75 95.6483", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M86.0518 98.0201L85.9511 97.9457L85.9356 97.9292L85.5869 97.6647", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M86.6183 98.4498L86.1689 98.111", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M89.7241 63.5837L89.7241 63.6093", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M89.7241 88.3429L89.7241 88.3492", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M89.7241 58.6418L89.8177 58.8083", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M89.8177 58.8083L89.7241 58.6418", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M89.7241 23.9906L89.8177 24.1571", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M89.8179 88.5228L89.8179 88.5165", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M87.0215 94.5079L89.7254 96.5491", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M90.9336 89.3574L90.9336 89.3511", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M96.76 83.7977L96.1634 83.3514L96.1479 83.3349L96.1402 83.3266L96.0472 83.2605L96.0395 83.2522L96.024 83.244L95.993 83.2192L95.8535 83.1117L92.8398 80.8391L92.832 80.8391L92.739 80.773L92.7313 80.773L90.9183 79.4094L89.8105 78.5748L89.8027 78.5748", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M96.7601 78.864L96.1248 78.3847L96.1171 78.3847L96.0241 78.3186L96.0164 78.3186L94.2577 76.9963L94.1879 76.9467L92.8321 75.922L92.8166 75.9055L92.7391 75.8476L92.7237 75.8311L92.3983 75.5832L92.3285 75.5336L90.9262 74.4758L89.8183 73.6411L89.8105 73.6411", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M96.7594 73.9221L96.1163 73.4345L96.1008 73.418L96.0233 73.3601L96.0078 73.3436L92.8468 70.9635L92.8313 70.947L92.7539 70.8891L92.7383 70.8726L90.9487 69.5173L89.8408 68.6826L89.833 68.6826", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M96.7594 68.9802L96.1163 68.4926L96.1008 68.4761L96.0233 68.4182L96.0078 68.4017L92.8468 66.0216L92.8313 66.0051L92.7539 65.9473L92.7383 65.9307L90.9487 64.5754L89.8408 63.7408L89.833 63.7408", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M96.7594 64.0466L96.1163 63.559L96.1008 63.5424L96.0233 63.4846L96.0078 63.4681L92.8468 61.088L92.8313 61.0715L92.7539 61.0136L92.7383 60.9971L90.9487 59.6418L89.8408 58.8071L89.833 58.8071", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M96.7594 59.0798L96.1318 58.6088L96.1163 58.5923L96.0388 58.5344L96.0233 58.5179L92.8468 56.1213L92.7539 56.0469L90.9487 54.6834L89.8408 53.8487L89.833 53.8487", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M96.0161 48.6175L96.1168 48.6919L96.7598 49.1712", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M96.0318 48.601L92.8399 46.1962L92.7469 46.1218L92.7391 46.1218L90.9262 44.7582L89.8183 43.9235L89.8105 43.9235", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M96.7597 39.2709L96.1012 38.775L96.016 38.7089L96.0005 38.6924L92.8162 36.2875L92.7465 36.238L92.731 36.2214L90.9414 34.8661L89.8334 34.0315L89.8257 34.0315", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M96.7597 34.329L96.0857 33.8249L96.016 33.7753L96.0005 33.7587L92.793 31.3374L92.7542 31.3043L92.7387 31.2961L92.7233 31.2795L92.5373 31.139L89.8257 29.0896", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M89.8179 24.1559L89.9263 24.2385L90.0425 24.3294L90.2207 24.4617L91.1039 25.131L92.7154 26.3459L92.7309 26.3624L95.7989 28.6763", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M96.7592 29.3871L96.0696 28.8664L96.0309 28.8334L96.0154 28.8251L95.9999 28.8086L95.814 28.6681", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M96.7594 24.4286L96.0311 23.8832L96.0156 23.8667L94.4041 22.6519L93.5209 21.9825L93.3427 21.8502L93.2265 21.7593L92.7461 21.3957L89.833 19.1975", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M96.9781 83.8725L96.752 83.8059", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M96.9781 73.9886L96.752 73.9221", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M96.7593 69.005L96.9855 69.0715", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M96.9781 69.055L96.752 68.9885", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M96.9781 34.3955L96.752 34.329", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M96.7593 29.3953L96.9855 29.4619", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M96.9781 29.4536L96.752 29.3871", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M97.271 73.9882L96.9766 73.9882", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M96.9766 64.1127L97.271 64.1127", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M97.271 34.3951L96.9766 34.3951", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M96.9766 29.4614L97.271 29.4614", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M97.271 29.4532L96.9766 29.4532", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M97.271 78.9554L97.4972 78.8805", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M97.4968 44.2045L97.2705 44.2794", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M97.4968 39.2626L97.2705 39.3375", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M97.4961 78.8805L97.992 78.5087L98.0384 78.4756L98.2089 78.3516L98.7125 77.9715", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M98.7041 77.9467L98.1851 78.3434L98.0146 78.4673L97.9681 78.5004L97.4878 78.864", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M97.4961 59.0798L98.7047 58.1708", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M98.7047 48.2291L97.4961 49.1381", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M98.7047 38.3536L97.4961 39.2626", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M97.7613 24.222L97.4961 24.4217", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M102.207 82.8721L102.207 82.8977", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M102.207 53.1545L102.207 53.1801", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M102.207 48.2208L102.207 48.2464", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M102.207 38.337L102.207 38.3626", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M102.207 97.7556L102.207 97.762", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M102.3 83.0384L102.269 82.9885L102.207 82.8803", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M102.3 73.1629L102.207 72.9965", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M102.3 68.221L102.207 68.0546", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M102.207 33.4034L102.3 33.5698", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M102.3 53.3292L102.207 53.1628", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M102.299 97.9355L102.299 97.9292", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M102.517 109.011L102.517 109.185L102.517 110.648L102.517 112.127L102.517 112.143L102.517 112.292L102.517 112.49", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M102.64 109.11L102.64 110.755L102.64 112.044L102.64 112.681", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M102.64 112.408L102.64 112.4L102.64 112.251L102.64 112.044L102.64 110.755L102.64 109.292L102.64 109.119", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M103.105 109.466L103.105 111.11L103.105 111.532L103.105 112.061", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M103.229 109.557L103.229 111.201L103.229 111.433", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M103.229 111.962L103.229 111.433L103.229 111.201L103.229 109.557", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M102.423 26.3294L103.291 26.9905", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M103.229 111.201L103.385 111.318", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M102.64 110.755L103.105 111.11", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M103.508 98.8445L103.508 98.8382", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M103.508 98.8382L103.508 98.8445", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M98.7041 77.9715L100.695 79.4673L100.835 79.5747L100.866 79.5995L100.881 79.6078L100.889 79.616L100.982 79.6822L100.99 79.6904L101.005 79.7069L102.214 80.616", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M102.206 80.5829L101.021 79.6904L101.005 79.6739L100.997 79.6656L100.904 79.5995L100.897 79.5912L100.881 79.583L100.85 79.5582L100.711 79.4508L98.7041 77.9384", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M102.207 70.7074L100.975 69.7735L100.959 69.757L100.882 69.6992L100.866 69.6826L98.7202 68.0629", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M102.206 65.7654L100.974 64.8316L100.959 64.8151L100.881 64.7572L100.866 64.7407", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M98.7041 58.1708L100.866 59.7988L100.881 59.8153L100.959 59.8732L100.974 59.8897L102.198 60.8153", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M102.206 60.807L100.982 59.8897L100.966 59.8732L100.889 59.8153L100.873 59.7988L98.7119 58.1708", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M98.7041 48.2539L100.889 49.8985L100.982 49.9728L102.198 50.8902", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M102.206 50.8653L101.005 49.9646L100.912 49.8902L98.7119 48.2291", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M98.7041 43.3203L100.873 44.9566L100.966 45.0309L102.198 45.9565", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M102.206 45.9317L100.99 45.0144L100.897 44.94L98.7119 43.2955", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M102.206 40.9898L100.974 40.0642L100.881 39.9898L100.873 39.9898L98.7041 38.3536", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M98.7041 33.4364L100.835 35.0397L100.85 35.0562L100.935 35.1223L102.198 36.0727", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M102.206 36.0479L100.959 35.1058L100.873 35.0397L100.858 35.0232L98.7119 33.4034", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M98.7041 28.478L100.85 30.0977L100.866 30.1143L100.935 30.1639L102.198 31.1225", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M102.206 31.1142L100.943 30.1639L100.873 30.1143L100.858 30.0977L98.7119 28.478", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M103.678 109.896L103.678 111.094L103.678 111.532", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M103.678 111.094L103.384 111.317L103.229 111.433", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M103.803 109.986L103.803 111.102", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M103.803 111.102L103.803 109.986", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M105.097 173.339L105.097 173.563", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M105.097 173.563L105.097 173.537", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M105.097 168.397L105.097 168.622", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M105.097 168.621L105.097 168.595", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M105.097 158.497L105.097 158.721", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M105.097 158.721L105.097 158.505L105.097 158.497", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M105.19 178.645L105.097 178.471", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M105.097 173.562L105.19 173.737", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M105.097 168.62L105.19 168.795", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M105.097 163.686L105.19 163.861", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M105.189 188.592L105.189 188.586", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M106.405 199.792L106.405 204.461", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M107.962 92.2518L106.018 90.7891L105.956 90.7395L103.507 88.8966L103.19 88.6569L102.942 88.4751L102.787 88.3594L102.725 88.3098L102.663 88.2603L102.655 88.252L102.632 88.2355L102.624 88.2355L102.485 88.128L102.299 87.9875", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M107.963 82.3762L107.172 81.7812L107.103 81.7316L107.018 81.6655L106.894 81.5663L106.886 81.5581L105.987 80.8804L105.894 80.806L105.607 80.5912L103.516 79.0127L103.198 78.7731L102.95 78.5913L102.71 78.4095L102.694 78.3929L102.687 78.3847L102.594 78.3186L102.586 78.3103L102.57 78.302L102.539 78.2772L102.4 78.1698L102.299 78.0954L102.292 78.0954", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M107.963 72.5007L107.172 71.9057L107.103 71.8561L107.017 71.79L106.893 71.6908L106.886 71.6826L105.948 70.9718L105.941 70.9718L105.848 70.9057L105.84 70.9057L105.6 70.7239", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M107.963 52.6586L107.172 52.0636L107.103 52.0141L107.01 51.9479L106.886 51.8488L106.878 51.8405L105.987 51.1629L105.972 51.1463L105.894 51.0885L105.879 51.072L105.607 50.8653", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M102.299 33.5687L102.547 33.7587L102.562 33.7753L102.647 33.8414L102.95 34.0728L103.198 34.2546L103.515 34.4942L105.607 36.0727L105.839 36.2462L105.847 36.2462L105.94 36.3206L106.885 37.0313", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M107.963 37.8412L107.173 37.2462L107.103 37.1966L107.01 37.1305L106.886 37.0313L106.878 37.023", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M108.189 92.3266L107.963 92.26", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M108.189 42.8497L107.963 42.7831", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M108.189 37.916L107.963 37.8494", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M108.451 113.49L108.451 114.606L108.451 115.127L108.451 115.135L108.451 116.16L108.451 116.325L108.451 116.639L108.451 116.788L108.451 117.127", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M108.481 92.3262L108.187 92.3262", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M108.481 82.4423L108.187 82.4423", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M108.481 67.6001L108.187 67.6001", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M108.481 52.733L108.187 52.733", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M108.575 113.59L108.575 114.705L108.575 115.234L108.575 117.16", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M108.575 116.879L108.575 116.73L108.575 116.416L108.575 116.251L108.575 115.226L108.575 115.218L108.575 114.697L108.575 113.581", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M108.708 87.3099L108.482 87.3848", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M108.708 72.4924L108.482 72.5673", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M108.708 57.6006L108.482 57.6755", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M108.708 52.6587L108.482 52.7336", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M108.708 47.7167L108.482 47.7916", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M102.515 112.298L102.508 112.292", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M108.451 116.78L102.64 112.391", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M102.515 112.15L102.508 112.143", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M108.451 116.631L102.64 112.243", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M108.452 116.325L103.153 112.325L103.114 112.292L102.711 111.995", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M108.451 116.16L103.229 112.226L103.105 112.135L102.702 111.838", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M109.047 113.317L109.047 115.052L109.047 115.573L109.047 115.581L109.047 116.589", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M109.171 113.226L109.171 115.151L109.171 115.68L109.171 116.713", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M109.171 116.499L109.171 115.68L109.171 115.672L109.171 115.151L109.171 113.226", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M109.612 112.887L109.612 115.482L109.612 116.003", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M109.738 112.796L109.738 115.581", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M109.745 115.581L109.745 112.796", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M109.914 86.4008L109.899 86.4173L109.542 86.6901L109.372 86.814L109.318 86.8553L109.287 86.8801L108.706 87.3181", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M109.914 56.6832L109.349 57.113L109.333 57.1295L108.706 57.6005", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M109.916 36.9239L109.381 37.3288", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M108.451 114.614L103.803 111.11", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M109.047 115.061L108.583 114.705", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M109.613 115.49L109.163 115.151", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M112.379 85.5993L112.379 85.6248", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M112.379 60.8318L112.379 60.8574", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M112.379 55.8899L112.379 55.9155", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M112.379 105.425L112.379 105.431", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M112.465 95.6494L112.371 95.483", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M112.465 80.832L112.371 80.6656", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M112.465 51.1144L112.371 50.948", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M112.471 105.605L112.471 105.598", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M109.915 41.8906L112.371 43.7417", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M112.379 43.7169L109.923 41.8658", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M113.681 106.514L113.681 106.507", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M112.379 93.1939L111.573 92.5906L111.503 92.541L109.915 91.3428", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M109.915 86.4256L111.503 87.6239L112.371 88.2851", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M112.379 88.2519L111.527 87.6073L111.512 87.5908L109.923 86.3925", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M109.915 81.4837L112.371 83.3348", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M112.379 83.3184L109.923 81.4672", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M109.915 76.5501L112.371 78.4012", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M112.379 78.3764L109.923 76.5253", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M109.915 71.5834L112.371 73.4345", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M112.379 68.4761L109.923 66.6249", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M109.915 56.7081L112.371 58.5592", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M112.379 58.5427L111.512 57.8898L109.923 56.6915", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M109.915 51.7744L112.371 53.6255", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M112.379 53.6008L111.512 52.9479L109.923 51.7496", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M109.915 46.8325L112.371 48.6837", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M112.379 48.6588L109.923 46.8077", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M109.915 36.9322L112.371 38.7833", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M112.379 38.7833L109.923 36.9322", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M114.346 146.786L114.346 148.092", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M120.219 101.499L113.68 96.5656L112.596 95.7474L112.464 95.6483L112.456 95.6483", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M120.22 96.5573L119.189 95.7805L119.019 95.6565L117.345 94.3921L117.175 94.2682L113.681 91.6319L112.596 90.8138", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M120.22 91.6154L117.795 89.7891L117.531 89.5907L116.981 89.1693L115.571 88.1032L113.681 86.6735L112.596 85.8554", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M120.219 86.6818L117.794 84.8554L117.531 84.6571L116.981 84.2356L115.571 83.1696L113.68 81.7399L112.596 80.9217L112.464 80.8226L112.456 80.8226", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M117.794 65.0134L117.531 64.8151L116.981 64.4019L115.571 63.3358L113.68 61.9061L112.596 61.088L112.464 60.9888L112.456 60.9888", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M117.795 55.1626L120.22 56.989", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M117.794 55.1379L117.531 54.9395L116.981 54.5263L115.571 53.4603L113.68 52.0306L112.596 51.2124L112.464 51.1133L112.456 51.1133", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M117.795 50.2208L120.22 52.0471", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M117.794 50.196L117.531 49.9977L116.981 49.5845L115.571 48.5184L113.68 47.0887L112.596 46.2706L112.464 46.1714L112.456 46.1714", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M120.219 42.122L117.794 40.2956L117.531 40.0973L116.981 39.6758L115.571 38.6097L113.68 37.1801L112.596 36.3619L112.464 36.2628L112.456 36.2628", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M120.219 96.5821L120.445 96.6487", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M120.445 91.6903L120.219 91.6237", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M120.445 81.8065L120.219 81.7399", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M120.219 76.7815L120.445 76.848", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M120.445 61.9727L120.219 61.9061", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M120.443 61.9971L120.738 61.9971", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M120.443 57.0634L120.738 57.0634", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M120.738 57.0303L120.443 57.0303", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M120.87 92.0121L120.87 92.0377", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M120.87 87.0702L120.87 87.0958", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M120.87 62.2946L120.87 62.3201", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M120.87 52.4107L120.87 52.4363", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M120.87 111.838L120.87 111.844", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M120.87 47.4936L120.955 47.6517", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M120.869 47.4834L120.862 47.4771", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M120.87 92.0369L120.877 92.0452L120.963 92.2033", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M120.956 67.4029L120.87 67.2448L120.862 67.2365", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M120.87 52.4438L120.877 52.4521L120.963 52.6102", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M120.956 52.5771L120.87 52.4191L120.862 52.4107", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M120.871 101.524L120.738 101.566", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M120.739 96.6569L120.872 96.6152", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M120.739 91.715L120.872 91.6733", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M120.872 91.6485L120.739 91.6902", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M120.872 86.7066L120.739 86.7483", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M120.872 66.8728L120.739 66.9145", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M120.739 61.9974L120.872 61.9557", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M120.872 56.989L120.739 57.0307", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M120.872 52.0554L120.739 52.097", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M120.739 47.1551L120.872 47.1135", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M120.971 112.009L120.971 112.003", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M97.8672 22.4948L100.935 24.8088L101.121 24.9493L101.137 24.9658L101.152 24.9741L101.191 25.0071L104.398 27.4285L104.414 27.445L104.484 27.4946L105.599 28.3375L106.498 29.0152L106.878 29.3044L106.885 29.3127L107.009 29.4119L107.102 29.478L107.172 29.5276L109.659 31.4035L109.884 31.5688", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M109.808 111.615L110.141 111.862L112.372 113.548", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M98.3945 103.003L102.199 105.879", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M109.775 111.334L110.147 111.615L112.379 113.3", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M98.5654 102.879L102.207 105.623", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M109.915 101.681L112.371 103.532", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M109.644 101.483L109.917 101.691", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M98.7041 93.2269L100.68 94.7145L100.742 94.764L102.198 95.8632", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M98.4409 93.0286L98.7139 93.2366", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M109.915 101.433L112.371 103.284", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M109.815 101.359L109.823 101.367L109.917 101.442", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M98.7041 92.979L100.85 94.5988L100.912 94.6484L102.206 95.6235", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M98.6035 92.9046L98.6114 92.913L98.7051 92.988", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M122.172 122.854L122.172 125.482", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M122.18 122.862L122.18 125.482L122.18 125.49", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M122.18 112.926L122.18 112.92", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M122.18 112.912L122.18 112.918", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M115.649 191.503L115.618 191.478L115.284 191.23L115.037 191.049L114.858 190.916L114.696 190.792L114.432 190.594L114.339 190.528", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M114.346 190.512L114.439 190.578L114.71 190.784L114.873 190.908L115.043 191.032L115.291 191.214L115.625 191.47L115.648 191.487", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M122.133 186.512L122.266 186.612", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M114.346 180.636L114.439 180.702L114.664 180.876L114.672 180.884L115.043 181.165L115.291 181.347L115.656 181.619L115.989 181.876L116.159 182L117.972 183.363L120.18 185.032L120.405 185.206L120.699 185.429L120.924 185.603L122.132 186.512", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M122.133 186.479L120.924 185.57L120.7 185.396L120.405 185.173L120.18 184.999L117.988 183.347L116.167 181.983L115.997 181.859L115.64 181.595L115.276 181.322L115.028 181.14L114.68 180.876L114.672 180.867L114.424 180.686L114.331 180.611", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M122.133 181.57L122.266 181.67", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M114.346 175.694L114.439 175.76L114.648 175.917L114.656 175.917L115.051 176.215L115.299 176.396L115.663 176.669L117.957 178.396L117.964 178.405L119.274 179.396L119.444 179.52L120.196 180.082L120.42 180.256L120.715 180.479L120.939 180.652L122.148 181.561", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M114.346 175.669L113.982 175.397L113.734 175.215L112.967 174.636L112.952 174.62L112.487 174.264L111.278 173.355L111.053 173.182L110.759 172.959L110.534 172.785L108.117 170.959L108.102 170.942L106.413 169.67", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M122.133 181.545L120.925 180.636L120.7 180.462L120.406 180.239L120.181 180.066L119.445 179.512L119.274 179.388L117.965 178.396L117.957 178.388L115.649 176.644L115.284 176.372L115.037 176.19L114.665 175.909L114.657 175.909L114.432 175.744L114.339 175.677", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M122.259 181.637L122.126 181.537", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M114.346 170.752L114.439 170.826L114.625 170.967L114.641 170.983L115.036 171.281L115.284 171.463L115.648 171.736L117.918 173.446L117.926 173.446L120.18 175.149L120.405 175.322L120.699 175.545L120.924 175.719L122.132 176.628L122.264 176.727", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M114.346 170.727L113.982 170.455L113.734 170.273L112.967 169.694L112.952 169.678L112.487 169.322L111.278 168.413L111.053 168.24L110.759 168.017L110.534 167.843L108.117 166.017L108.102 166L106.413 164.728", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M122.257 176.702L122.125 176.603L120.916 175.694L120.692 175.52L120.397 175.297L120.173 175.124L117.934 173.438L117.926 173.438L115.64 171.711L115.276 171.438L115.028 171.256L114.649 170.967L114.633 170.95L114.424 170.793L114.331 170.727", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M114.346 165.794L114.439 165.86L114.641 166.009L114.656 166.025L115.043 166.314L115.291 166.496L115.656 166.769L117.926 168.48L117.941 168.496L120.188 170.19L120.413 170.364L120.707 170.587L120.932 170.76L122.14 171.669L122.272 171.769", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M114.346 165.794L113.982 165.521L113.734 165.339L112.967 164.761L112.952 164.744L112.487 164.389L111.278 163.48L111.053 163.306L110.759 163.083L110.534 162.91L108.117 161.083L108.102 161.067L106.413 159.794", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M122.257 171.76L122.126 171.661L120.917 170.752L120.692 170.579L120.398 170.355L120.173 170.182L117.934 168.488L117.919 168.471L115.649 166.761L115.284 166.488L115.037 166.306L114.657 166.017L114.641 166L114.432 165.843L114.339 165.777", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M122.257 166.802L122.126 166.703L120.917 165.794L120.692 165.62L120.398 165.397L120.173 165.223L119.058 164.381L117.942 163.538L117.926 163.521L115.641 161.802L115.277 161.529L115.029 161.348L114.665 161.075L114.649 161.058L114.432 160.893L114.339 160.819", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M123.877 139.588L123.877 140.894", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M123.877 140.902L123.877 139.588", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M123.97 139.762L123.97 140.828", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M122.257 191.544L126.658 188.222", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M126.658 188.198L122.257 191.52", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M125.186 184.404L126.666 183.289", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M125.185 184.371L124.589 184.826L122.265 186.578", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M125.186 179.462L126.666 178.347", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M122.257 181.669L123.876 180.446L123.969 180.38L124.612 179.892L125.17 179.471", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M125.185 179.438L124.604 179.876L123.977 180.347L123.884 180.421L122.265 181.644", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M126.657 173.38L125.177 174.496L124.619 174.917L124.612 174.925L123.961 175.413L123.868 175.479L122.249 176.702", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M120.956 77.3352L120.971 77.3434L123.876 79.5334L123.884 79.5334L127.146 81.9961L127.154 82.0044L127.161 82.0126L127.169 82.0209L127.719 82.4341", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M122.178 112.926L122.172 112.92", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M122.172 112.912L122.178 112.918", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M127.719 107.16L127.363 106.887L127.192 106.763L127.184 106.763L127.177 106.755L127.169 106.747L127.161 106.739L126.991 106.615L123.876 104.268L123.868 104.268L123.861 104.268L120.948 102.069L120.94 102.061L120.932 102.053", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M127.719 67.5588L127.161 67.1373L127.153 67.1373L127.145 67.1373L123.876 64.6746L123.868 64.6663L123.86 64.6581L123.853 64.6498L120.955 62.4681L120.947 62.4598L120.939 62.4516", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M127.719 57.6832L127.161 57.2617L127.154 57.2535L127.146 57.2452L127.138 57.2369L123.892 54.7825L123.884 54.7743L123.876 54.766L123.869 54.7577L120.971 52.576L120.963 52.5677L120.956 52.5595", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M120.956 47.6423L120.971 47.6506L123.861 49.8323L123.869 49.8406L123.876 49.8489L123.884 49.8571L127.13 52.3115", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M127.719 62.6499L127.938 62.7165", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M127.945 102.285L127.727 102.218", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M127.946 97.3429L127.728 97.2763", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M127.719 57.708L127.938 57.7746", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M127.719 52.7496L127.938 52.8161", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M127.946 52.8079L127.728 52.7413", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M127.946 47.8495L127.728 47.7829", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M126.658 188.231L127.293 188.71L128.068 189.297", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M126.658 183.289L127.015 183.561L127.185 183.685L127.278 183.751L128.06 184.347L128.076 184.355", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M126.658 168.446L128.068 169.513", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M128.068 169.504L126.658 168.438", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M127.944 102.309L128.176 102.309L128.238 102.309", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M128.231 92.4005L127.944 92.4088", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M128.231 87.4586L127.944 87.4586", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M128.231 72.5668L127.944 72.5668", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M127.944 62.716L128.231 62.716", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M128.231 57.7411L127.944 57.7411", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M128.231 52.8074L127.944 52.8074", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M128.457 97.2681L128.231 97.3429", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M128.457 87.3842L128.231 87.4591", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M128.231 82.5006L128.457 82.4258", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M128.457 72.4924L128.231 72.5673", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M128.231 62.7082L128.457 62.6334", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M128.231 52.8079L128.457 52.733", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M128.866 189.364L128.866 189.338", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M128.868 169.57L128.626 169.62", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M129.664 116.581L129.664 119.837", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M129.664 101.293L129.292 101.574L129.122 101.698L129.029 101.764L128.448 102.202", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M128.455 72.5172L129.664 71.6081", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M129.664 71.5751L128.455 72.4841", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M128.455 67.5753L129.664 66.6662", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M128.455 62.6416L129.664 61.7326", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M128.455 57.6998L129.664 56.7907", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M129.664 51.824L128.455 52.733", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M131.089 23.2303L131.973 22.561", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M131.973 23.8997L131.973 22.5609L131.973 22.5444", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M132.065 22.3964L132.12 22.3048", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M132.135 22.1312L132.135 21.8089", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M132.135 24.0237L132.135 22.1395", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M133.034 111.069L133.034 111.095", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M133.034 106.127L133.034 106.153", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M133.034 101.185L133.034 101.211", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M133.034 96.2433L133.034 96.2689", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M133.034 71.4677L133.034 71.4932", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M133.034 66.534L133.034 66.5596", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M133.042 121.019L133.042 121.025", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M133.104 131.085L133.104 131.895L133.104 131.977", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M133.034 111.094L133.041 111.102L133.127 111.26", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M133.127 106.294L133.041 106.135L133.034 106.127", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M133.127 86.5094L133.041 86.3513L133.034 86.343", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M133.034 76.4344L133.041 76.4427L133.127 76.6008", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M133.034 71.5007L133.041 71.509L133.127 71.6671", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M133.127 71.6341L133.041 71.476L133.034 71.4677", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M133.034 66.5588L133.041 66.5671L133.127 66.7252", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M133.127 61.7585L133.041 61.6004L133.034 61.5921", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M133.127 51.8582L133.041 51.7001L133.034 51.6918", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M133.135 121.191L133.135 121.184", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M133.282 49.601L134.134 50.2456", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M129.664 71.6081L130.562 72.2858L131.112 72.699L131.128 72.7155L131.972 73.3518L132.027 73.3932L132.034 73.3932L132.065 73.418L132.135 73.4675L133.034 74.1452", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M133.034 74.1204L132.406 73.6494L132.135 73.4428L132.065 73.3932L132.058 73.3849L132.05 73.3849L131.98 73.3271L131.151 72.699L131.136 72.6825L130.57 72.2527L129.671 71.5751", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M133.034 64.2449L132.135 63.5672L132.065 63.5176L132.027 63.4846L132.019 63.4846L132.011 63.4846L131.972 63.4515L131.128 62.8152L130.562 62.3855L129.664 61.7078", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M134.351 122.1L134.351 122.093", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M134.351 122.093L134.351 122.1", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M129.664 106.259L132.042 108.053L132.05 108.061L132.406 108.325L132.46 108.367L133.034 108.805", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M133.034 108.78L132.476 108.358L132.406 108.309L132.065 108.053L132.058 108.044L129.664 106.235", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M133.033 103.838L132.421 103.375L132.406 103.359L132.22 103.218L132.049 103.094L132.041 103.094L132.034 103.086L132.026 103.078L132.018 103.069L131.848 102.945L131.143 102.417L130.546 101.962L129.647 101.284", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M133.034 98.8961L132.135 98.2184L132.065 98.1688L132.027 98.1358L132.019 98.1358L132.011 98.1358L131.972 98.1027L131.143 97.4747L130.562 97.0367L129.664 96.359", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M133.034 93.9542L132.135 93.2765L132.065 93.2269L132.019 93.1939L132.011 93.1856L132.003 93.1774L131.996 93.1691L131.972 93.1526L131.12 92.5162L131.112 92.508L130.555 92.0865L129.656 91.4088", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M132.136 88.3429L133.035 89.0205", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M133.034 84.0538L132.135 83.3762L132.065 83.3266L132.034 83.3018L132.027 83.2936L132.019 83.2853L132.011 83.277L131.972 83.2522L131.105 82.5994L131.089 82.5828L130.562 82.1862L129.664 81.5085", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M129.664 66.6662L130.562 67.3439L131.112 67.7571L131.128 67.7736L131.972 68.41L132.011 68.443L132.019 68.443L132.058 68.4761L132.127 68.5257L133.026 69.2033", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M133.034 69.1868L132.406 68.7157L132.135 68.5091L132.065 68.4595L132.042 68.443L132.034 68.443L131.972 68.4017L131.143 67.7736L131.128 67.7571L130.562 67.3274L129.664 66.6497", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M133.034 59.3029L132.135 58.6253L132.065 58.5757L132.019 58.5426L132.011 58.5344L132.003 58.5261L131.996 58.5179L131.972 58.5013L131.112 57.8567L130.562 57.4435L129.664 56.7659", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M133.034 54.3611L132.135 53.6834L132.065 53.6338L132.019 53.6008L132.011 53.5925L132.003 53.5842L131.996 53.576L131.972 53.5594L131.097 52.8983L131.089 52.8983L130.555 52.4934L129.656 51.8157", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M134.134 50.2373L133.321 49.6257", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M131.67 177.339L130.462 178.248L130.454 178.248L130.369 178.314L130.229 178.413L129.935 178.636L129.71 178.81L128.866 179.446", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M131.67 172.421L132.794 171.57L132.964 171.446L132.972 171.438L132.98 171.438L132.987 171.438L133.003 171.43L133.173 171.306L135.808 169.322L136.032 169.149L136.079 169.116", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M128.866 174.537L129.71 173.901L129.935 173.727L130.229 173.504L130.369 173.405L130.454 173.339L130.462 173.339L131.67 172.43", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M131.67 172.397L130.462 173.306L130.454 173.306L130.369 173.372L130.229 173.471L129.935 173.694L129.71 173.868L128.866 174.504", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M138.279 130.035L134.351 127.068", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M134.351 127.068L138.286 130.035", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M133.127 106.317L133.143 106.325L133.739 106.772L133.747 106.78L133.809 106.821L134.057 107.003L134.359 107.226L134.468 107.309L134.654 107.449L136.908 109.152L137.04 109.251L137.048 109.259L137.071 109.276L137.079 109.284L137.102 109.3L137.272 109.424L138.047 110.011L138.055 110.019L138.667 110.482", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M138.651 110.457L138.039 109.995L138.031 109.986L137.272 109.416L137.101 109.292L137.078 109.276L137.07 109.267L137.047 109.251L137.039 109.243L136.908 109.144L134.63 107.425L134.467 107.301L134.343 107.21L134.041 106.987L133.793 106.805L133.754 106.772L133.747 106.763L133.135 106.301L133.119 106.292", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M138.651 105.524L138.039 105.061L138.031 105.053L137.04 104.301L137.032 104.292L134.646 102.491L134.429 102.326L134.351 102.268L134.049 102.045L133.917 101.945L133.809 101.863L133.755 101.822L133.747 101.822L133.739 101.813L133.731 101.805L133.724 101.797L133.553 101.673L133.135 101.359", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M138.651 95.64L138.039 95.1773L138.032 95.169L136.993 94.3839L136.986 94.3839L136.978 94.3839L134.638 92.6154L134.375 92.4171L134.344 92.3923L134.042 92.1691L133.794 91.9873L133.701 91.9212L133.693 91.913L133.685 91.9047L133.677 91.8964L133.127 91.4832", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M133.135 86.5248L133.693 86.9462L133.7 86.9545L133.708 86.9628L133.716 86.971L133.793 87.0289L134.041 87.2107L134.343 87.4338L134.359 87.4504L134.63 87.657L136.962 89.4172L136.97 89.4255L136.978 89.4337L136.985 89.442L138.016 90.2188L138.023 90.2271L138.636 90.6899", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M138.651 90.6816L138.039 90.2189L138.032 90.2106L137.001 89.4338L136.993 89.4255L136.986 89.4172L136.978 89.409L134.638 87.6487L134.367 87.4421L134.344 87.4256L134.042 87.2025L133.794 87.0207L133.716 86.9628L133.708 86.9545L133.701 86.9463L133.693 86.938L133.127 86.5166L133.112 86.5083", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M133.127 66.7241L133.143 66.7323L133.709 67.1621L133.716 67.1621L133.801 67.2282L134.049 67.41L134.352 67.6331L134.39 67.6662L134.638 67.8562L136.993 69.633L137.001 69.633L138.024 70.4016L138.032 70.4098L138.644 70.8726", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M138.651 65.9308L138.039 65.468L138.031 65.4597L137.008 64.6912L137.001 64.6912L134.645 62.9144L134.397 62.7243L134.351 62.6913L134.049 62.4681L133.801 62.2863L133.716 62.2202L133.708 62.2202L133.7 62.2202L133.135 61.7905L133.119 61.7822", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M133.135 56.832L133.677 57.2452L133.685 57.2535L133.693 57.2618L133.7 57.27L133.793 57.3444L134.041 57.5262L134.343 57.7494L134.367 57.7659L134.63 57.9642L136.97 59.7245L136.978 59.7245L136.985 59.7245L138.023 60.5095L138.031 60.5178L138.643 60.9806", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M138.651 60.9889L138.039 60.5261L138.032 60.5178L136.993 59.7327L136.986 59.7327L136.978 59.7327L134.638 57.9642L134.375 57.7659L134.344 57.7411L134.042 57.5179L133.794 57.3361L133.701 57.27L133.693 57.2618L133.685 57.2535L133.677 57.2452L133.127 56.832L133.112 56.8238", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M133.136 51.8661L133.119 51.8571", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M138.651 110.491L138.869 110.557", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M138.869 110.524L138.651 110.457", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M138.651 100.607L138.869 100.673", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M138.869 90.7482L138.651 90.6816", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M138.869 75.8729L138.651 75.8063", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M138.651 70.8892L138.869 70.9558", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M138.869 70.9309L138.651 70.8644", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M138.651 65.9555L138.869 66.0221", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M138.869 65.9891L138.651 65.9225", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M138.651 60.9888L138.869 61.0554", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M138.867 110.548L139.154 110.548", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M138.867 105.615L139.154 105.606", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M139.162 105.582L138.875 105.59", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M138.867 95.7144L139.154 95.7062", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M139.162 90.7395L138.875 90.7395", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M138.867 75.8972L139.154 75.8889", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M138.867 70.9553L139.154 70.9553", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M138.867 66.0216L139.154 66.0216", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M139.162 65.9886L138.875 65.9886", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M138.867 61.055L139.154 61.055", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M139.163 115.491L139.389 115.416", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M139.381 115.391L139.155 115.466", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M139.381 100.574L139.155 100.649", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M139.381 95.6318L139.155 95.7067", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M139.163 90.7482L139.389 90.6733", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M139.381 70.8561L139.155 70.931", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M139.163 66.0139L139.389 65.939", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M139.381 60.9806L139.155 61.0554", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M139.611 127.721L139.611 129.027", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M139.704 127.895L139.704 128.961", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M140.596 124.82L140.596 126.333", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M139.379 115.416L139.96 114.978L140.595 114.499", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M140.595 104.598L140.014 105.036L139.387 105.507", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M140.595 99.6564L140.309 99.8795L140.138 100.003L140.045 100.078L140.037 100.086L139.387 100.574", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M139.379 90.6733L140.045 90.1692L140.061 90.1527", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M140.595 79.8226L140.03 80.2524L140.014 80.2689L139.387 80.7399", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M140.595 74.8807L140.03 75.3104L140.014 75.327L139.387 75.798", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M139.379 70.8809L140.037 70.3851L140.588 69.9719", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M139.379 65.939L140.053 65.4349L140.588 65.03", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M140.595 55.1048L140.068 55.5015L140.053 55.518L139.387 56.0221", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M140.635 128.259L140.588 128.225", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M141.835 189.487L141.835 189.505", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M142.951 113.606L142.951 113.632", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M142.951 59.1707L142.951 59.1887", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M143.044 113.773L142.974 113.639L142.958 113.614L142.951 113.606", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M143.044 103.889L142.974 103.756L142.958 103.731L142.951 103.722", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M142.974 93.8634L142.958 93.8385L142.951 93.8302", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M142.951 83.9133L142.958 83.9216L142.974 83.9466L143.044 84.0797", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M143.044 84.055L142.974 83.9218L142.958 83.8969L142.951 83.8886", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M142.951 78.9797L142.958 78.988L142.974 79.013L143.044 79.1461", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M142.951 69.0959L142.958 69.1042L142.974 69.1292L143.044 69.2623", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M142.951 64.1374L142.958 64.1457L142.974 64.1707L143.044 64.3038", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M143.245 188.429L143.245 188.435", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M140.921 165.447L141.836 164.752L142.835 164L142.843 164L142.858 163.992L142.866 163.992L143.261 163.695L143.323 163.645", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M139.705 166.339L139.612 166.414L139.558 166.455L139.55 166.455L139.535 166.463L139.527 166.463L138.682 167.099L138.435 167.281L137.737 167.802", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M140.92 165.422L140.556 165.694L140.308 165.876L139.704 166.331", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M139.704 161.397L140.308 160.943L140.556 160.761L140.92 160.488L141.835 159.802L142.819 159.059L142.826 159.059L142.842 159.05L142.85 159.05L143.252 158.744L143.315 158.695", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M143.307 178.464L143.354 178.372L143.409 178.264", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M143.399 178.265L143.399 178.239", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M143.401 173.297L143.347 173.406L143.323 173.456L143.3 173.497", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M143.399 168.389L143.399 168.364", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M143.401 168.364L143.354 168.464L143.307 168.555", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M143.307 163.646L143.354 163.555L143.409 163.447", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M143.399 163.447L143.399 163.422", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M143.401 158.48L143.347 158.588L143.3 158.68", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M142.951 116.259L142.594 115.986L142.525 115.937L140.805 114.631", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M140.596 109.565L140.736 109.673", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M142.95 111.317L142.54 111.011L142.524 110.995L140.75 109.656", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M142.951 106.375L140.588 104.598", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M142.951 101.441L140.588 99.6646", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M140.596 94.7227L142.959 96.4995", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M142.951 96.4995L140.588 94.7227", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M140.596 89.7643L142.959 91.5411", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M142.951 91.5411L140.588 89.7643", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M142.95 81.5994L142.524 81.2771L140.734 79.9218L140.595 79.8144", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M142.95 76.6657L142.524 76.3434L140.734 74.9881L140.595 74.8807", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M142.951 71.7238L140.588 69.9471", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M142.951 66.782L140.588 65.0052", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M142.951 61.8483L140.588 60.0715", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M140.727 152.505L140.92 152.356L143.996 150.034L145.445 148.943L145.669 148.77L145.964 148.547L146.189 148.373L146.607 148.051L146.622 148.034L146.979 147.77", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M139.704 153.274L140.13 152.951L140.146 152.935L140.494 152.67L140.556 152.621", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M142.053 151.869L144.238 150.224L145.438 149.315L145.663 149.142L145.958 148.918L146.182 148.745L146.849 148.241L146.864 148.224L147.391 147.828L147.515 147.737", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M147.529 192.338L147.529 192.131L147.529 187.379", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M143.399 190.487L144.003 190.032L144.174 189.908L144.197 189.892L144.205 189.892L144.212 189.883L144.236 189.867L144.243 189.867L144.383 189.759L147.528 187.388", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M147.529 182.371L147.529 182.123L147.529 177.438", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M143.399 180.537L144.042 180.049L144.213 179.925L144.221 179.917L144.228 179.917L144.236 179.917L144.252 179.909L144.422 179.785L147.529 177.438L147.537 177.438", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M143.399 175.595L143.57 175.463L144.244 174.959L144.252 174.959L144.259 174.959L145.197 174.256L145.445 174.074L146.553 173.24L146.77 173.074L146.894 172.983L146.901 172.975L147.537 172.496", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M147.529 172.488L147.529 172.463", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M147.406 167.646L147.531 167.554", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M143.399 170.661L144.244 170.025L144.252 170.025L144.267 170.017L144.275 170.017L145.592 169.025L145.654 168.975L145.716 168.926L145.817 168.851L146.568 168.281L146.824 168.091L147.405 167.653", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M147.405 167.62L146.809 168.075L146.553 168.265L145.802 168.835L145.716 168.893L145.616 168.967L145.585 168.992L144.252 170L144.244 170L144.229 170.008L144.221 170.008L143.392 170.636", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M147.507 167.537L147.398 167.621", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M147.529 162.613L147.529 162.587", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M147.529 167.521L147.529 163.455L147.529 162.604", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M147.405 162.678L146.824 163.116L146.196 163.587L145.972 163.761L145.677 163.984L145.453 164.157L144.259 165.058L144.252 165.058L144.236 165.066L144.228 165.066L143.399 165.694", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M147.531 162.579L147.515 162.587L147.507 162.587L147.398 162.671", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M145.964 158.844L146.189 158.67L146.855 158.166L146.863 158.158L147.397 157.753L147.521 157.662", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M147.529 162.579L147.529 158.488L147.529 158.48L147.529 158.331L147.529 158.083L147.529 157.67", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M146.189 158.654L145.964 158.827L145.67 159.05L145.445 159.224L144.252 160.125L144.244 160.125L144.229 160.133L144.221 160.133L143.392 160.761", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M147.53 157.645L147.514 157.654L147.506 157.654", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M143.399 155.819L144.236 155.191L144.244 155.191L144.259 155.183L144.267 155.183L145.453 154.29L145.677 154.117L145.972 153.893L146.196 153.72L146.87 153.208L146.878 153.208L147.405 152.811L147.529 152.72", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M147.529 157.645L147.529 153.513L147.529 153.505L147.529 152.712", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M147.529 152.703L147.529 148.563L147.529 148.538L147.529 147.745", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M143.399 195.668L144.336 194.958L144.344 194.958L147.443 192.619L147.528 192.553L147.815 192.338", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M143.399 185.66L144.321 184.966L147.436 182.619L147.521 182.553L147.808 182.338", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M149.149 120.531L149.149 121.035L149.149 121.837", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M149.149 121.837L149.149 121.035L149.149 120.531", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M148.451 164.794L149.148 164.265", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M148.451 159.852L149.148 159.323", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M149.148 164.86L148.451 165.389", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M149.148 159.918L148.451 160.447", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M148.173 122.581L144.268 119.639L143.222 118.846", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M150.141 119.127L150.024 119.036L149.854 118.912L148.227 117.689L148.056 117.565L144.252 114.697L143.207 113.904", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M143.044 108.854L143.059 108.863L143.222 108.987L144.268 109.78L146.507 111.466L147.917 112.532L148.467 112.945L148.723 113.135L150.606 114.556", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M150.597 114.532L148.715 113.11L148.459 112.92L147.909 112.507L146.499 111.441L144.26 109.755L143.214 108.962", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M150.597 109.59L148.715 108.168L148.459 107.978L147.909 107.565L146.499 106.499L144.26 104.813L143.214 104.02", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M143.053 98.9629L143.037 98.9539", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M150.598 104.656L148.715 103.235L148.46 103.045L147.91 102.631L146.5 101.565", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M147.917 97.673L148.467 98.0862L148.723 98.2762L150.605 99.6977", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M147.917 97.6647L146.507 96.5987L144.268 94.9128L143.222 94.1195L143.059 93.9955L143.044 93.9872", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M143.044 79.145L143.059 79.1533L143.222 79.2772L144.268 80.0706L146.507 81.7564L147.917 82.8225L148.467 83.2357L148.723 83.4258L150.606 84.8472", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M150.597 84.8224L148.715 83.401L148.459 83.2109L147.909 82.7977L146.499 81.7316L144.26 80.0457L143.214 79.2524", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M143.216 74.3114L143.052 74.1866L143.037 74.1783", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M150.597 79.8805L148.715 78.4591L148.459 78.269L147.909 77.8558L146.499 76.7897L144.26 75.1039", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M143.216 69.3695L143.052 69.2447L143.037 69.2364", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M143.044 64.3027L143.059 64.311L143.222 64.4349L144.268 65.2283L146.507 66.9142L147.917 67.9802L148.467 68.3934L148.723 68.5835L150.606 70.0049", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M150.598 114.557L150.816 114.623", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M150.823 114.598L150.605 114.532", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M150.598 109.623L150.816 109.689", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M150.823 104.723L150.605 104.656", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M150.598 99.6977L150.816 99.7642", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M150.823 89.8226L150.605 89.756", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M150.598 79.9052L150.816 79.9718", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M150.823 79.947L150.605 79.8805", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M150.598 74.9634L150.816 75.0299", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M150.823 65.1048L150.605 65.0382", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M151.108 114.598L150.822 114.606", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M150.822 109.689L151.108 109.681", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M151.108 109.656L150.822 109.656", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M151.108 104.714L150.822 104.714", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M151.108 89.8221L150.822 89.8304", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M151.108 84.8802L150.822 84.8802", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M151.336 114.523L151.109 114.598", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M151.109 109.681L151.336 109.606", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M151.336 104.648L151.109 104.723", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M151.109 89.8474L151.336 89.7726", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M151.336 84.8058L151.109 84.8807", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M151.109 79.9719L151.336 79.897", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M151.336 79.8722L151.109 79.9471", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M151.109 70.0633L151.336 69.9884", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M151.333 110.044L151.333 110.07", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M151.333 80.2358L151.333 80.2939", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M151.333 115.011L151.426 115.177", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M151.426 115.161L151.333 114.986", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M151.333 110.077L151.426 110.252", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M151.333 100.152L151.426 100.327", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M151.333 95.1855L151.426 95.3603", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M151.333 90.2188L151.426 90.3935", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M151.426 90.3935L151.333 90.2188", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M151.333 85.2604L151.426 85.4351", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M151.426 85.4268L151.333 85.2521", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M151.426 84.7397L151.426 83.0952", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M151.426 80.4592L151.426 80.4011", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M150.458 165.314L149.861 165.769L147.537 167.521", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M150.458 160.397L151.938 159.282", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M149.242 161.315L149.885 160.827L150.45 160.405", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M147.529 162.604L149.148 161.381L149.241 161.315", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M149.241 161.29L149.148 161.356L147.529 162.579", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M150.458 160.372L149.877 160.81L149.25 161.281", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M149.242 156.373L149.908 155.869L149.916 155.86L150.45 155.455L151.93 154.34", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M147.529 157.662L149.148 156.439L149.241 156.364", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M149.241 156.348L149.148 156.414L147.529 157.637", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M151.93 154.323L150.45 155.439L149.892 155.86L149.885 155.868L149.234 156.356", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M149.924 150.902L150.458 150.497L151.938 149.381", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M149.241 151.406L149.148 151.472L147.529 152.695", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M149.916 150.902L149.242 151.406", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M129.354 126.349L133.034 129.126", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M129.524 126.225L133.042 128.878", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M140.596 124.82L141.595 125.572", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M140.324 124.622L140.597 124.83", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M129.664 116.581L131.825 118.209L131.833 118.217L133.041 119.127", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M129.392 116.375L129.665 116.583", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M140.596 124.572L141.766 125.457", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M140.487 124.49L140.495 124.498L140.589 124.573", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M129.664 116.325L131.988 118.077L131.996 118.085L133.034 118.87", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M129.562 116.251L129.664 116.326", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M153.341 170.207L152.581 169.637L151.931 169.149", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M153.341 165.265L152.566 164.678L152.473 164.612L152.303 164.488L151.931 164.207", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M153.341 160.323L151.931 159.257", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M153.341 155.389L152.388 154.67L152.217 154.546L151.931 154.323", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M151.931 149.39L153.341 150.456", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M151.426 143.53L151.334 143.596L151.109 143.762L150.822 143.977L150.605 144.142L150.512 144.216L150.458 144.258L150.078 144.547L149.83 144.729L149.242 145.175", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M150.458 145.167L151.334 144.505L151.357 144.489L151.426 144.431L152.379 143.712L152.457 143.654L152.542 143.588L152.635 143.522L152.651 143.514L154.394 142.2L154.983 141.762L155.207 141.588L155.502 141.365L155.726 141.192L156.145 140.869L156.16 140.853L156.362 140.696", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M140.596 128.291L140.417 128.424L139.712 128.961", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M149.242 121.771L149.149 121.837L149.102 121.87L148.173 122.573L148.157 122.589L147.127 123.366L146.91 123.531L146.205 124.068L145.98 124.242L145.686 124.465L145.461 124.639L144.888 125.068L144.88 125.068L144.276 125.523L143.176 126.358L143.168 126.366L143.075 126.44L143.067 126.448L143.052 126.457L142.966 126.515L142.959 126.523L142.897 126.564L142.618 126.771L142.37 126.953L141.417 127.672L141.169 127.853L140.627 128.258L140.58 128.291", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M150.172 121.069L149.955 121.234L149.25 121.771", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M153.417 116.656L151.426 115.151", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M151.426 110.243L154.215 112.35L154.231 112.366L154.308 112.424L154.324 112.441L156.687 114.218", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M156.687 114.185L154.348 112.416L154.332 112.4L154.255 112.342L154.239 112.325L151.435 110.21", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M151.426 105.284L154.231 107.4", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M156.687 109.243L154.347 107.474L154.332 107.458L154.254 107.4L154.239 107.383", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M151.426 100.317L154.246 102.441L154.339 102.507L156.687 104.276", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M156.687 104.284L154.348 102.516L154.255 102.45L151.435 100.317", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M151.426 95.3508L154.246 97.4829L154.339 97.5491L156.687 99.3176", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M156.687 99.3258L154.348 97.5573L154.255 97.4911L151.435 95.359", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M157.168 96.0036L157.168 95.4252L157.168 95.3508L157.168 95.326L157.168 95.2929L157.168 95.2847L157.168 94.7227", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M157.167 89.7561L154.347 87.6322L154.262 87.5743L154.246 87.5578L151.426 85.4339", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M157.168 94.7227L157.394 94.7893", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M157.168 89.756L157.394 89.8309", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M157.687 94.7889L157.393 94.7889", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M157.686 95.6153L157.686 95.0368L157.686 94.8963L157.686 94.888L157.686 94.7889", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M157.686 94.7893L157.912 94.7227", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M157.912 94.7227L157.912 94.8632L157.912 95.4417", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M157.912 94.7144L157.686 94.781", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M157.686 89.8226L157.904 89.756L157.912 89.756", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M157.912 89.756L157.686 89.8226", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M158.399 97.987L158.399 98.0452", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M158.64 98.2269L158.64 98.1688", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M157.912 94.7227L159.12 93.8137", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M159.119 93.8054L159.119 93.9459L159.119 94.5244", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M157.912 89.756L159.12 88.847", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M159.251 98.691L159.292 98.6564", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M160.104 160.86L160.266 160.736L160.359 160.662L160.553 160.513L160.677 160.422", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M159.972 160.952L160.097 160.86", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M154.349 165.174L154.139 165.332", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M161.312 155.009L161.344 154.984", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M156.943 158.282L156.695 158.472L155.735 159.199L155.51 159.373L155.216 159.596L154.991 159.769L154.146 160.406", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M160.072 151.001L160.258 150.861L160.359 150.786L160.638 150.58L161.056 150.266L161.227 150.142L161.335 150.059", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M159.507 151.431L159.879 151.15L159.957 151.092L160.081 151.001", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M156.943 153.365L158.044 152.538L158.183 152.431L158.198 152.414L158.206 152.406L158.253 152.373L158.26 152.365L158.276 152.348L158.346 152.29L158.4 152.249L158.439 152.216L158.64 152.059L158.78 151.951L158.903 151.86L159.113 151.703L159.12 151.703L159.376 151.513L159.5 151.422", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M156.943 153.34L156.695 153.53L155.735 154.257L155.51 154.431L155.216 154.654L154.991 154.827L154.146 155.464", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M159.508 151.406L159.384 151.497L159.128 151.695L159.112 151.703L158.919 151.852L158.795 151.943L158.655 152.051L158.438 152.216L158.415 152.232L158.345 152.282L158.276 152.34L158.26 152.356L158.252 152.365L158.206 152.398L158.198 152.406L158.183 152.422L158.043 152.53L156.966 153.348", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M160.073 150.976L159.949 151.067L159.856 151.133L159.5 151.398", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M161.352 92.8468L161.352 92.2683L161.352 92.1278L161.352 92.1195L161.352 91.6898", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M161.591 91.8881L161.591 91.946L161.591 91.9542L161.591 92.0947L161.591 92.6732", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M159.98 99.2364L160.021 99.2018", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M160.021 99.2101L159.98 99.2446", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M161.646 46.2788L162.529 45.6094", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M162.529 46.9482L162.529 45.6094L162.529 45.5929", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M162.7 45.188L162.7 44.8739", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M162.7 47.0721L162.7 45.1879", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M164.096 102.276L164.055 102.311", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M164.295 102.492L164.336 102.458", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M165.078 103.086L165.078 103.028", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M159.601 94.169L159.221 93.8798L159.128 93.8137", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M159.128 88.847L159.221 88.9213L161.119 90.351L161.692 90.789L161.708 90.8055L162.413 91.3345L162.506 91.4006L162.529 91.4171L162.63 91.4915L162.692 91.5411L162.885 91.6898", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M162.893 91.6815L162.699 91.5328L162.637 91.4832L162.536 91.4088L162.521 91.3923L162.428 91.3262L161.723 90.7973L161.707 90.7808L161.134 90.3428L159.236 88.9131L159.143 88.8387", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M166.488 104.086L166.488 104.144", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M163.313 101.689L163.272 101.724", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M163.272 101.724L163.313 101.689", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M167.108 170.43L167.108 170.436", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M168.401 66.7075L168.401 62.0549", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M168.495 105.598L168.495 105.656", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M165.838 88.8883L165.798 88.9228", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M165.798 88.9145L165.838 88.88", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M162.554 86.4008L162.53 86.4181L162.514 86.4353", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M162.506 86.4353L162.53 86.4181L162.546 86.4008", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M159.261 83.9216L159.221 83.9561", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M159.221 83.9478L159.261 83.9133", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M154.389 82.6324L154.348 82.6669", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M154.348 82.6669L154.389 82.6324", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M168.518 169.364L168.518 169.37", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M168.518 159.422L168.247 159.629L168.154 159.703L168.084 159.761L168.069 159.777L168.061 159.786L168.015 159.819L168.007 159.827L167.991 159.844L167.108 160.505L164.768 162.273L164.722 162.314L161.716 164.579", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M168.519 144.605L168.1 144.919L168.085 144.935L168.054 144.96L168.038 144.977L167.109 145.679L166.496 146.142L166.442 146.183L164.932 147.324L164.839 147.398L164.831 147.406L164.815 147.423L164.784 147.447L164.769 147.464L164.653 147.555L163.467 148.447L163.227 148.629L163.219 148.638L162.979 148.819L162.569 149.125L162.321 149.307L161.708 149.77", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M168.58 139.621L168.518 139.671L168.1 139.985L168.084 140.002L168.053 140.026L168.038 140.043L167.108 140.745L166.496 141.208L166.442 141.249L165.078 142.274L164.83 142.456L164.822 142.464L164.807 142.481L164.776 142.506L164.76 142.522L164.667 142.588L164.66 142.596", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M168.58 159.407L168.626 159.315L168.681 159.207", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M168.673 159.208L168.673 159.182", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M168.674 159.182L168.619 159.291L168.572 159.382", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M168.674 154.241L168.619 154.349L168.572 154.44", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M168.674 149.299L168.619 149.407L168.572 149.498", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M168.58 144.581L168.626 144.49L168.681 144.382", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M168.673 144.391L168.673 144.365", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M168.674 144.357L168.619 144.465L168.572 144.556", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M168.626 139.53L168.579 139.622", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M170.021 106.755L170.021 106.813", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M171.888 108.16L171.888 108.218", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M171.989 108.294L172.029 108.259", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M156.688 106.681L157.168 107.044L157.392 107.218L157.687 107.441L157.912 107.615L158.4 107.978L158.648 108.16L159.012 108.433L159.128 108.515L159.213 108.582L159.229 108.598L159.26 108.623L159.306 108.664L159.322 108.681L159.98 109.177L161.119 110.036L161.77 110.524L161.778 110.524L162.49 111.061L162.506 111.077L162.537 111.102L162.583 111.135L162.599 111.152L162.638 111.185L162.7 111.234L162.917 111.391L162.986 111.441L163.281 111.664L164.063 112.251L164.311 112.433L164.714 112.738L164.784 112.788L164.846 112.838L165.094 113.019L165.768 113.532L165.783 113.548L165.861 113.606L165.876 113.623L166.449 114.052L166.504 114.094L168.41 115.532L168.503 115.606L170.029 116.755L170.098 116.804L171.896 118.16L171.966 118.209L172.655 118.73", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M172.639 113.747L171.973 113.242L171.888 113.176L170.114 111.838L170.028 111.771L168.502 110.623L168.409 110.548L166.503 109.11L166.449 109.069L165.891 108.648L165.876 108.631L165.798 108.573L165.783 108.557L165.085 108.036L164.838 107.854L164.791 107.821L164.706 107.755L164.303 107.449L164.055 107.268L163.273 106.681L162.994 106.474L162.908 106.408L162.691 106.251L162.629 106.202L162.606 106.185L162.591 106.168L162.529 106.119L162.513 106.111L162.498 106.094L161.785 105.557L161.769 105.54L161.119 105.053L159.98 104.193L159.337 103.706L159.321 103.689L159.259 103.64L159.244 103.631L159.228 103.615L159.128 103.54L159.011 103.458L158.647 103.185L158.399 103.003L157.911 102.64L157.687 102.466L157.392 102.243L157.167 102.069L156.695 101.714", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M167.325 132.812L168.402 132.002L168.495 131.928L168.751 131.729L168.782 131.704L168.836 131.663L169.006 131.539L169.448 131.209L169.495 131.176L170.006 130.787L170.401 130.49L170.889 130.118L171.284 129.82L172.067 129.225L172.074 129.225L172.625 128.804L172.78 128.688", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M172.794 173.215L172.794 173.132L172.794 173.074L172.794 168.323", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M168.673 171.43L169.386 170.893L169.448 170.843L169.464 170.826L169.471 170.818L169.495 170.802L169.541 170.76L169.634 170.686L172.625 168.43L172.78 168.314", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M172.794 163.207L172.794 163.191L172.794 163.182L172.794 163.067L172.794 158.381", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M168.673 161.48L169.425 160.918L169.44 160.901L169.448 160.893L169.495 160.86L169.502 160.852L169.518 160.835L169.588 160.777L169.681 160.703L172.632 158.472L172.787 158.356L172.795 158.356", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M168.673 156.538L169.464 155.943L169.471 155.943L169.518 155.91L169.526 155.91L172.64 153.563L172.795 153.447", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M172.794 153.431L172.794 153.406", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M168.673 151.596L169.471 150.993L169.487 150.976L169.518 150.951L169.533 150.935L172.632 148.596L172.787 148.48", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M172.779 148.472L172.639 148.58L169.525 150.927L169.509 150.943L169.478 150.968L169.463 150.984L168.68 151.571", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M168.673 146.654L169.471 146.051L169.487 146.034L169.518 146.009L169.533 145.993L172.632 143.654L172.787 143.539", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M172.794 143.548L172.794 143.522", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M172.794 148.464L172.794 148.332L172.794 148.307L172.794 143.555", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M172.779 143.539L172.639 143.646L169.525 145.993L169.509 146.009L169.478 146.034L169.463 146.051L168.68 146.638", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M168.673 141.72L169.471 141.117L169.487 141.101L169.518 141.076L169.533 141.059L172.036 139.175L172.632 138.721L172.787 138.605", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M172.794 138.606L172.794 138.58", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M172.794 143.522L172.794 143.39L172.794 143.365L172.794 139.754L172.794 138.613", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M172.779 138.597L172.639 138.704L172.027 139.167L169.525 141.051L169.509 141.068L169.478 141.092L169.463 141.109L168.68 141.696", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M168.673 136.754L168.751 136.696L169.456 136.167L169.471 136.15L169.502 136.126L169.518 136.109L170.014 135.737L170.409 135.44L170.866 135.093L171.261 134.795L172.044 134.2L172.082 134.175L172.137 134.134L172.307 134.01L172.64 133.754L172.795 133.638", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M147.809 192.602L152.24 189.264", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M168.673 176.611L169.595 175.917L169.619 175.901L172.803 173.496L172.826 173.479L173.089 173.281", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M147.809 182.594L151.93 179.487L152.194 179.289L152.201 179.281", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M168.673 166.604L169.541 165.951L169.588 165.909L172.787 163.496L172.81 163.48L173.074 163.281", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M175.792 108.945L175.792 109.003", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M177.203 108.086L177.203 108.144", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M177.753 107.664L177.753 107.722", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M178.016 107.466L178.016 107.524", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M173.081 173.314L174.189 172.479", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M173.081 163.306L173.918 162.678L174.142 162.513", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M178.94 106.831L178.899 106.797", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M182.192 104.317L182.233 104.352", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M190.963 97.7061L190.963 97.7642", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M192.186 96.7805L192.186 96.8386", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M192.373 84.2191L192.373 82.9051", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M185.47 101.846L185.51 101.881", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M188.794 99.4016L188.754 99.3671", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M188.754 99.3671L188.794 99.4016", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M192.466 82.7484L192.466 82.6903", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M192.535 84.3431L192.535 82.4837", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M192.31 96.6896L192.351 96.7241", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M192.738 96.4266L192.698 96.3921", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M196.223 148.307L196.223 148.325", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M196.223 93.7311L196.223 93.7892", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M196.223 148.317L196.223 148.299", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M197.641 147.241L197.641 147.259", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M197.641 92.665L197.641 92.7232", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M196.851 123.11L197.641 122.515L197.703 122.465", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M193.558 120.622L196.223 118.614L196.812 118.168L196.828 118.151L197.633 117.548L197.695 117.499", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M196.819 103.276L197.641 102.656L197.703 102.607", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M197.703 97.64L197.641 97.6896L196.819 98.3094", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M197.703 112.533L197.797 112.333", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M196.223 160.472L198.229 158.959", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M198.229 153.827L198.229 153.579L198.229 148.976", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M197.795 149.299L198.229 148.976L198.237 148.976", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M198.253 143.836L198.253 143.588L198.253 139.018", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M197.795 139.349L198.245 139.01L198.253 139.01", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M197.795 134.407L198.245 134.068", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M197.795 129.465L198.245 129.126", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M197.795 124.531L198.245 124.192", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M197.795 119.589L198.245 119.25", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M198.253 119.226L198.238 119.242L197.804 119.573", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M198.253 114.284L197.804 114.623", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M198.253 119.226L198.253 114.292", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M197.795 109.664L198.245 109.325", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M198.253 109.325L197.804 109.664", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M198.253 114.284L198.253 109.325", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M198.253 104.359L197.804 104.697", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M198.253 109.325L198.253 104.367", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M197.795 99.739L198.245 99.4002", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M193.521 95.8316L193.48 95.7971", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M198.253 104.359L198.253 99.4002", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M196.447 90.7725L198.214 89.442L198.252 89.409", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M197.795 154.422L198.229 154.092L198.57 153.836", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" }), f("path", { d: "M197.795 144.415L198.229 144.084L198.57 143.828", stroke: "white", strokeWidth: 0.21906, strokeLinecap: "round", strokeLinejoin: "round" })), hk = [["/about", "About Us"], ["/portfolio", "Portfolio"], ["/team", "Team"], ["/services", "Services"], ["/news", "News"], ["/contact", "Contact"]], ak = [["/technologies", "Technologies"], ["/approach", "Our approach"], ["/projects", "Last projects"], ["/team", "Become a part of team"], ["/investment", "For investors"]], uk = "M0 4069V-8C2516.76 -7.99976 1409.21 -8.00024 3990 -5.49619V4069C3990 4069 3091.05 3187.25 2004 3187.25C916.96 3187.25 0 4069 0 4069Z", pk = "M0 8026.8V3957.5C1307.5 2957.72 2532 2922.72 3988 3960V8026.8C3988 8026.8 3089.5 7146.72 2003 7146.72C916.5 7146.72 0 8026.8 0 8026.8Z";
function ck({ openTl: t19, closeTl: e2 }) {
  const o2 = Hi("(max-width: 600px)"), r2 = ht(null);
  return Vi(() => (t19.current = gi.timeline({ paused: true }).to(r2.current, { duration: 0.8, ease: "power3.in", attr: { d: uk, fill: "#1D1D20" }, onStart: () => {
    var _a3;
    gi.set("body", { className: "overlay-opened" }), (_a3 = Ni()) == null ? void 0 : _a3.updatePluginOptions("overflow", { open: true });
  } }).to(r2.current, { duration: 0.4, ease: "power3.out", attr: { d: uk } }).from([".menu-overlay .logo", ".close-menu", ".menu-overlay p", ".mobile-footer h5"], { opacity: 0, y: -20, duration: 0.5, stagger: 0.2 }, "-=0.5").from(".menu-overlay ul li", { opacity: 0, x: -30, duration: 0.4, stagger: 0.05, onComplete: () => {
    gi.set(".close-menu", { pointerEvents: "all" });
  } }, "-=1.2"), e2.current = gi.timeline({ paused: true }).to(".menu-overlay ul li", { opacity: 0, x: 30, duration: 0.3, stagger: 0.05, onStart: () => {
    gi.set(".close-menu", { pointerEvents: "none" });
  } }, "-=0,7").to([".menu-overlay  .logo", ".close-menu", ".menu-overlay p", ".mobile-footer h5"], { opacity: 0, y: -20, duration: 0.3, stagger: 0.1 }, "-=0.4").to(r2.current, { duration: 0.5, ease: "power3.in", attr: { d: "M0 2015.3V-2054C1307.5 -3053.78 2532 -3088.78 3988 -2051.5V2015.3C3988 2015.3 3089.5 1135.22 2003 1135.22C916.5 1135.22 0 2015.3 0 2015.3Z", fill: "#E9E9E9" } }, "-=0.4").to(r2.current, { duration: 0.3, ease: "power3.out", attr: { d: "M0 0.0825195V-3665.86C1499.5 -3667 2271 -3665.86 3989 -3667V0.0825195C3989 0.0825195 2773.81 0.0825195 1979 0.0825195C1129 0.0825195 0 0.0825195 0 0.0825195Z" }, onComplete: () => {
    var _a3;
    gi.set(r2.current, { attr: { d: pk } }), gi.set(".close-menu", { clearProps: "pointerEvents" }), (_a3 = Ni()) == null ? void 0 : _a3.updatePluginOptions("overflow", { open: false }), document.body.removeAttribute("class");
  } }), () => {
    var _a3, _b, _c2;
    (_a3 = t19.current) == null ? void 0 : _a3.kill(), (_b = e2.current) == null ? void 0 : _b.kill(), gi.set(r2.current, { attr: { d: pk } }), gi.set(".close-menu", { clearProps: "pointerEvents" }), (_c2 = Ni()) == null ? void 0 : _c2.updatePluginOptions("overflow", { open: false }), document.body.removeAttribute("class");
  }), { dependencies: [o2], revertOnUpdate: true }), Gt(F("div", { className: "menu-overlay row center-y", children: [F("svg", { className: "transition", viewBox: "0 0 3988 3185", preserveAspectRatio: "none", children: F("path", { className: "path", fill: "#E9E9E9", d: "M0 8026.8V3957.5C1307.5 2957.72 2532 2922.72 3988 3960V8026.8C3988 8026.8 3089.5 7146.72 2003 7146.72C916.5 7146.72 0 8026.8 0 8026.8Z", vectorEffect: "non-scaling-stroke", ref: r2 }) }), F(nk, {}), F("div", { className: "row s-between gap-50", children: [F("div", { className: "column s-between", children: [F("ul", { className: "column gap-20", children: hk.map(([t20, e3]) => F("li", { children: F(Jd, { to: t20, children: e3 }) }, t20)) }), !o2 && F("p", { className: "to-middle text-white capitalize", children: [F("span", { className: "font-bold", children: " Address: " }), " Ukraine, Kyiv region, 08200 Irpen,", F("br", {}), " Stelmakh street 9a, office 206"] })] }), F("div", { className: "column s-between", children: [!o2 && F("ul", { className: "column gap-20", children: ak.map(([t20, e3]) => F("li", { children: F(Jd, { to: t20, children: e3 }) }, t20)) }), !o2 && F("p", { className: "to-middle text-white capitalize", children: [F("span", { className: "font-bold", children: "Tel:" }), " +3 (096) 029-81-18, +3 (063) 023-81-18", F("br", {}), F("span", { className: "font-bold", children: "Email:" }), " office@masbo.com.ua"] })] }), F("div", { className: "column s-between", children: [F("ul", { className: "schemes", children: [F("li", { className: "column s-between", children: [F(ik, {}), F("h5", { className: "static capitalize", children: "private houses" })] }), F("li", { className: "column s-between", children: [F(sk, {}), F("h5", { className: "static capitalize", children: "interiors" })] }), F("li", { className: "column s-between", children: [F(dk, {}), F("h5", { className: "static capitalize", children: ["commercial ", F("br", {}), " real estate"] })] }), F("li", { className: "column s-between", children: [F(kk, {}), F("h5", { className: "static capitalize", children: ["urban ", F("br", {}), " development"] })] })] }), !o2 && F("p", { className: "to-middle text-white capitalize", children: "We offer a full range of services from interior design, individual cottages to the design and construction of residential complexes. For our customers, we are known as a reliable partner with high standards of quality and responsibility." })] }), o2 && F("div", { className: "mobile-footer", children: [F("h5", { className: "static capitalize", children: "hot links:" }), F("ul", { className: "hot-links row wrap gap-10", children: ak.map(([t20, e3]) => F("li", { className: "center-gr", children: F(Jd, { to: t20, children: e3 }) }, t20)) }), F("div", { className: "row s-between gap-20", children: [F("p", { className: "to-small text-white capitalize", children: [F("span", { className: "font-bold", children: "Tel:" }), " +3 (096) 029-81-18, +3 (063) 023-81-18", F("br", {}), F("span", { className: "font-bold", children: "Email:" }), " office@masbo.com.ua"] }), F("p", { className: "to-small text-white capitalize", children: [F("span", { className: "font-bold", children: " Address: " }), " Ukraine, Kyiv region, 08200 Irpen,", F("br", {}), " Stelmakh street 9a, office 206"] })] }), F("ul", { className: "mobile-socials gap-15 s-between", children: [F("li", { children: F("a", { href: "#", className: "center-gr", children: F(Ve, {}) }) }), F("li", { children: F("a", { href: "#", className: "center-gr", children: F(xe, {}) }) }), F("li", { children: F("a", { href: "#", className: "center-gr", children: F(He, {}) }) }), F("li", { children: F("a", { href: "#", className: "center-gr", children: F(Oe, {}) }) }), F("li", { children: F("a", { href: "#", className: "center-gr", children: F(Te, {}) }) })] })] })] }), F(_s, { onClick: () => e2.current.restart() })] }), document.querySelector("#transition-root"));
}
function lk() {
  const t19 = ht(null), e2 = ht(null);
  return F("div", { className: "menu-bars column gap-5 end-y", onClick: () => {
    t19.current.restart();
  }, children: [F("div", {}), F("div", {}), F("div", {}), F(ck, { openTl: t19, closeTl: e2 })] });
}
function wk() {
  return Hi("(min-width: 920px)") && F("nav", { children: F("ul", { className: "row", children: [{ name: "About us", path: "/about" }, { name: "Portfolio", path: "/portfolio" }, { name: "Team", path: "/team" }, { name: "Services", path: "/services" }, { name: "News", path: "/news" }, { name: "Contacts", path: "/contacts" }].map(({ name: t19, path: e2 }) => F("li", { children: F(Jd, { href: e2, className: "text-white fs-14 capitalize", children: t19 }) }, e2)) }) });
}
function Mk() {
  const { width: t19, height: e2, isLargeScreen: o2 } = Ai((r2) => {
    gi.to("header", { scrollTrigger: { scroller: r2.scroller, trigger: "main", start: "3px top", onEnter: () => gi.set("header", { className: "scrolled", clearProps: "backgroundColor" }), onLeaveBack: () => gi.set("header", { className: "static", clearProps: "backgroundColor" }) } }), (t19 && e2 || o2) && gi.to("header", { scrollTrigger: { trigger: ".about", start: "left 0%", end: "right 0%", onEnter: () => {
      gi.set("header", { backgroundColor: "transparent" });
    }, onEnterBack: () => {
      gi.set("header", { backgroundColor: "transparent" });
    }, onLeaveBack: () => {
      gi.set("header", { clearProps: "backgroundColor" });
    }, onLeave: () => {
      gi.set("header", { clearProps: "backgroundColor" });
    } } });
  });
  return F("header", { children: F("div", { className: "container", children: F("div", { className: "row s-between", children: [F("div", { className: "row center-y", children: [F(nk, {}), F(wk, {})] }), F("div", { className: "row center-y", children: [F("div", { className: "order-project", children: F("span", { className: "fs-14 text-white capitalize", children: "Order the project" }) }), F(lk, {})] })] }) }) });
}
const fk = B({});
function Wk(t19) {
  const e2 = ht(null);
  return null === e2.current && (e2.current = t19()), e2.current;
}
const jk = B(null), mk = B({ transformPagePoint: (t19) => t19, isStatic: false, reducedMotion: "never" });
class vk extends v {
  getSnapshotBeforeUpdate(t19) {
    const e2 = this.props.childRef.current;
    if (e2 && t19.isPresent && !this.props.isPresent) {
      const t20 = e2.offsetParent, o2 = t20 instanceof HTMLElement && t20.offsetWidth || 0, r2 = this.props.sizeRef.current;
      r2.height = e2.offsetHeight || 0, r2.width = e2.offsetWidth || 0, r2.top = e2.offsetTop, r2.left = e2.offsetLeft, r2.right = o2 - r2.width - r2.left;
    }
    return null;
  }
  componentDidUpdate() {
  }
  render() {
    return this.props.children;
  }
}
function gk({ children: t19, isPresent: e2, anchorX: o2 }) {
  const r2 = wt(), L2 = ht(null), n2 = ht({ width: 0, height: 0, top: 0, left: 0, right: 0 }), { nonce: i2 } = ct(mk);
  return Tt(() => {
    const { width: t20, height: s2, top: d2, left: k2, right: h2 } = n2.current;
    if (e2 || !L2.current || !t20 || !s2) return;
    const a2 = "left" === o2 ? `left: ${k2}` : `right: ${h2}`;
    L2.current.dataset.motionPopId = r2;
    const u2 = document.createElement("style");
    return i2 && (u2.nonce = i2), document.head.appendChild(u2), u2.sheet && u2.sheet.insertRule(`
          [data-motion-pop-id="${r2}"] {
            position: absolute !important;
            width: ${t20}px !important;
            height: ${s2}px !important;
            ${a2}px !important;
            top: ${d2}px !important;
          }
        `), () => {
      document.head.removeChild(u2);
    };
  }, [e2]), F(vk, { isPresent: e2, childRef: L2, sizeRef: n2, children: We(t19, { ref: L2 }) });
}
const _k = ({ children: t19, initial: e2, isPresent: o2, onExitComplete: r2, custom: L2, presenceAffectsLayout: n2, mode: i2, anchorX: s2 }) => {
  const d2 = Wk(yk), k2 = wt(), h2 = pt((t20) => {
    d2.set(t20, true);
    for (const t21 of d2.values()) if (!t21) return;
    r2 && r2();
  }, [d2, r2]), a2 = ut(() => ({ id: k2, initial: e2, isPresent: o2, custom: L2, onExitComplete: h2, register: (t20) => (d2.set(t20, false), () => d2.delete(t20)) }), n2 ? [Math.random(), h2] : [o2, h2]);
  return ut(() => {
    d2.forEach((t20, e3) => d2.set(e3, false));
  }, [o2]), dt(() => {
    !o2 && !d2.size && r2 && r2();
  }, [o2]), "popLayout" === i2 && (t19 = F(gk, { isPresent: o2, anchorX: s2, children: t19 })), F(jk.Provider, { value: a2, children: t19 });
};
function yk() {
  return /* @__PURE__ */ new Map();
}
const bk = (t19) => t19.key || "";
function Ck(t19) {
  const e2 = [];
  return At.forEach(t19, (t20) => {
    we(t20) && e2.push(t20);
  }), e2;
}
const xk = "undefined" != typeof window ? kt : dt, Vk = ({ children: t19, custom: e2, initial: o2 = true, onExitComplete: r2, presenceAffectsLayout: L2 = true, mode: n2 = "sync", propagate: i2 = false, anchorX: s2 = "left" }) => {
  const [d2, k2] = function(t20 = true) {
    const e3 = ct(jk);
    if (null === e3) return [true, null];
    const { isPresent: o3, onExitComplete: r3, register: L3 } = e3, n3 = wt();
    dt(() => {
      t20 && L3(n3);
    }, [t20]);
    const i3 = pt(() => t20 && r3 && r3(n3), [n3, r3, t20]);
    return !o3 && r3 ? [false, i3] : [true];
  }(i2), h2 = ut(() => Ck(t19), [t19]), a2 = i2 && !d2 ? [] : h2.map(bk), u2 = ht(true), p2 = ht(h2), c2 = Wk(() => /* @__PURE__ */ new Map()), [l2, w2] = it(h2), [M2, f2] = it(h2);
  xk(() => {
    u2.current = false, p2.current = h2;
    for (let t20 = 0; t20 < M2.length; t20++) {
      const e3 = bk(M2[t20]);
      a2.includes(e3) ? c2.delete(e3) : true !== c2.get(e3) && c2.set(e3, false);
    }
  }, [M2, a2.length, a2.join("-")]);
  const W2 = [];
  if (h2 !== l2) {
    let t20 = [...h2];
    for (let e3 = 0; e3 < M2.length; e3++) {
      const o3 = M2[e3], r3 = bk(o3);
      a2.includes(r3) || (t20.splice(e3, 0, o3), W2.push(o3));
    }
    return "wait" === n2 && W2.length && (t20 = W2), f2(Ck(t20)), w2(h2), null;
  }
  const { forceRender: j2 } = ct(fk);
  return F(m, { children: M2.map((t20) => {
    const l3 = bk(t20), w3 = !(i2 && !d2) && (h2 === M2 || a2.includes(l3));
    return F(_k, { isPresent: w3, initial: !(u2.current && !o2) && void 0, custom: w3 ? void 0 : e2, presenceAffectsLayout: L2, mode: n2, onExitComplete: w3 ? void 0 : () => {
      if (!c2.has(l3)) return;
      c2.set(l3, true);
      let t21 = true;
      c2.forEach((e3) => {
        e3 || (t21 = false);
      }), t21 && (null == j2 || j2(), f2(p2.current), i2 && (null == k2 || k2()), r2 && r2());
    }, anchorX: s2, children: t20 }, l3);
  }) });
};
/*! *****************************************************************************
Copyright (c) Microsoft Corporation.

Permission to use, copy, modify, and/or distribute this software for any
purpose with or without fee is hereby granted.

THE SOFTWARE IS PROVIDED "AS IS" AND THE AUTHOR DISCLAIMS ALL WARRANTIES WITH
REGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF MERCHANTABILITY
AND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY SPECIAL, DIRECT,
INDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES WHATSOEVER RESULTING FROM
LOSS OF USE, DATA OR PROFITS, WHETHER IN AN ACTION OF CONTRACT, NEGLIGENCE OR
OTHER TORTIOUS ACTION, ARISING OUT OF OR IN CONNECTION WITH THE USE OR
PERFORMANCE OF THIS SOFTWARE.
***************************************************************************** */
var Hk = function(t19, e2) {
  return Hk = Object.setPrototypeOf || { __proto__: [] } instanceof Array && function(t20, e3) {
    t20.__proto__ = e3;
  } || function(t20, e3) {
    for (var o2 in e3) e3.hasOwnProperty(o2) && (t20[o2] = e3[o2]);
  }, Hk(t19, e2);
};
var Tk, Ok, Sk, Zk, Ek, Pk, Nk, Ak, Rk, Dk, qk, zk, Bk, Ik, Fk, Uk, $k, Yk, Xk = function() {
  return Xk = Object.assign || function(t19) {
    for (var e2, o2 = 1, r2 = arguments.length; o2 < r2; o2++) for (var L2 in e2 = arguments[o2]) Object.prototype.hasOwnProperty.call(e2, L2) && (t19[L2] = e2[L2]);
    return t19;
  }, Xk.apply(this, arguments);
};
function Gk(t19, e2, o2, r2) {
  var L2, n2 = arguments.length, i2 = n2 < 3 ? e2 : null === r2 ? r2 = Object.getOwnPropertyDescriptor(e2, o2) : r2;
  if ("object" == typeof Reflect && "function" == typeof Reflect.decorate) i2 = Reflect.decorate(t19, e2, o2, r2);
  else for (var s2 = t19.length - 1; s2 >= 0; s2--) (L2 = t19[s2]) && (i2 = (n2 < 3 ? L2(i2) : n2 > 3 ? L2(e2, o2, i2) : L2(e2, o2)) || i2);
  return n2 > 3 && i2 && Object.defineProperty(e2, o2, i2), i2;
}
function Kk() {
  for (var t19 = 0, e2 = 0, o2 = arguments.length; e2 < o2; e2++) t19 += arguments[e2].length;
  var r2 = Array(t19), L2 = 0;
  for (e2 = 0; e2 < o2; e2++) for (var n2 = arguments[e2], i2 = 0, s2 = n2.length; i2 < s2; i2++, L2++) r2[L2] = n2[i2];
  return r2;
}
function Jk() {
  return Ok ? Tk : (Ok = 1, Tk = function(t19) {
    try {
      return !!t19();
    } catch (t20) {
      return true;
    }
  });
}
function Qk() {
  if (Zk) return Sk;
  Zk = 1;
  var t19 = Jk();
  return Sk = !t19(function() {
    var t20 = (function() {
    }).bind();
    return "function" != typeof t20 || t20.hasOwnProperty("prototype");
  });
}
function th() {
  if (Pk) return Ek;
  Pk = 1;
  var t19 = Qk(), e2 = Function.prototype, o2 = e2.call, r2 = t19 && e2.bind.bind(o2, o2);
  return Ek = t19 ? r2 : function(t20) {
    return function() {
      return o2.apply(t20, arguments);
    };
  }, Ek;
}
function eh() {
  if (Ak) return Nk;
  Ak = 1;
  var t19 = th(), e2 = t19({}.toString), o2 = t19("".slice);
  return Nk = function(t20) {
    return o2(e2(t20), 8, -1);
  };
}
function oh() {
  if (Dk) return Rk;
  Dk = 1;
  var t19 = th(), e2 = Jk(), o2 = eh(), r2 = Object, L2 = t19("".split);
  return Rk = e2(function() {
    return !r2("z").propertyIsEnumerable(0);
  }) ? function(t20) {
    return "String" === o2(t20) ? L2(t20, "") : r2(t20);
  } : r2;
}
function rh() {
  return zk ? qk : (zk = 1, qk = function(t19) {
    return null == t19;
  });
}
function Lh() {
  if (Ik) return Bk;
  Ik = 1;
  var t19 = rh(), e2 = TypeError;
  return Bk = function(o2) {
    if (t19(o2)) throw new e2("Can't call method on " + o2);
    return o2;
  };
}
function nh() {
  if (Uk) return Fk;
  Uk = 1;
  var t19 = oh(), e2 = Lh();
  return Fk = function(o2) {
    return t19(e2(o2));
  };
}
function ih() {
  if (Yk) return $k;
  Yk = 1;
  var t19 = function(t20) {
    return t20 && t20.Math === Math && t20;
  };
  return $k = t19("object" == typeof globalThis && globalThis) || t19("object" == typeof window && window) || t19("object" == typeof self && self) || t19("object" == typeof Ii && Ii) || t19("object" == typeof $k && $k) || /* @__PURE__ */ function() {
    return this;
  }() || Function("return this")();
}
var sh, dh, kh, hh, ah, uh, ph, ch, lh, wh, Mh, fh, Wh, jh, mh, vh, gh, _h, yh, bh, Ch, xh, Vh, Hh, Th, Oh, Sh, Zh, Eh, Ph = { exports: {} };
function Nh() {
  return dh ? sh : (dh = 1, sh = false);
}
function Ah() {
  if (hh) return kh;
  hh = 1;
  var t19 = ih(), e2 = Object.defineProperty;
  return kh = function(o2, r2) {
    try {
      e2(t19, o2, { value: r2, configurable: true, writable: true });
    } catch (e3) {
      t19[o2] = r2;
    }
    return r2;
  };
}
function Rh() {
  if (ah) return Ph.exports;
  ah = 1;
  var t19 = Nh(), e2 = ih(), o2 = Ah(), r2 = "__core-js_shared__", L2 = Ph.exports = e2[r2] || o2(r2, {});
  return (L2.versions || (L2.versions = [])).push({ version: "3.40.0", mode: t19 ? "pure" : "global", copyright: "© 2014-2025 Denis Pushkarev (zloirock.ru)", license: "https://github.com/zloirock/core-js/blob/v3.40.0/LICENSE", source: "https://github.com/zloirock/core-js" }), Ph.exports;
}
function Dh() {
  if (ph) return uh;
  ph = 1;
  var t19 = Rh();
  return uh = function(e2, o2) {
    return t19[e2] || (t19[e2] = o2 || {});
  };
}
function qh() {
  if (lh) return ch;
  lh = 1;
  var t19 = Lh(), e2 = Object;
  return ch = function(o2) {
    return e2(t19(o2));
  };
}
function zh() {
  if (Mh) return wh;
  Mh = 1;
  var t19 = th(), e2 = qh(), o2 = t19({}.hasOwnProperty);
  return wh = Object.hasOwn || function(t20, r2) {
    return o2(e2(t20), r2);
  };
}
function Bh() {
  if (Wh) return fh;
  Wh = 1;
  var t19 = th(), e2 = 0, o2 = Math.random(), r2 = t19(1 .toString);
  return fh = function(t20) {
    return "Symbol(" + (void 0 === t20 ? "" : t20) + ")_" + r2(++e2 + o2, 36);
  };
}
function Ih() {
  if (gh) return vh;
  gh = 1;
  var t19, e2, o2 = ih(), r2 = function() {
    if (mh) return jh;
    mh = 1;
    var t20 = ih().navigator, e3 = t20 && t20.userAgent;
    return jh = e3 ? String(e3) : "";
  }(), L2 = o2.process, n2 = o2.Deno, i2 = L2 && L2.versions || n2 && n2.version, s2 = i2 && i2.v8;
  return s2 && (e2 = (t19 = s2.split("."))[0] > 0 && t19[0] < 4 ? 1 : +(t19[0] + t19[1])), !e2 && r2 && (!(t19 = r2.match(/Edge\/(\d+)/)) || t19[1] >= 74) && (t19 = r2.match(/Chrome\/(\d+)/)) && (e2 = +t19[1]), vh = e2;
}
function Fh() {
  if (yh) return _h;
  yh = 1;
  var t19 = Ih(), e2 = Jk(), o2 = ih().String;
  return _h = !!Object.getOwnPropertySymbols && !e2(function() {
    var e3 = Symbol("symbol detection");
    return !o2(e3) || !(Object(e3) instanceof Symbol) || !Symbol.sham && t19 && t19 < 41;
  });
}
function Uh() {
  if (Ch) return bh;
  Ch = 1;
  var t19 = Fh();
  return bh = t19 && !Symbol.sham && "symbol" == typeof Symbol.iterator;
}
function $h() {
  if (Vh) return xh;
  Vh = 1;
  var t19 = ih(), e2 = Dh(), o2 = zh(), r2 = Bh(), L2 = Fh(), n2 = Uh(), i2 = t19.Symbol, s2 = e2("wks"), d2 = n2 ? i2.for || i2 : i2 && i2.withoutSetter || r2;
  return xh = function(t20) {
    return o2(s2, t20) || (s2[t20] = L2 && o2(i2, t20) ? i2[t20] : d2("Symbol." + t20)), s2[t20];
  };
}
function Yh() {
  if (Th) return Hh;
  Th = 1;
  var t19 = "object" == typeof document && document.all;
  return Hh = void 0 === t19 && void 0 !== t19 ? function(e2) {
    return "function" == typeof e2 || e2 === t19;
  } : function(t20) {
    return "function" == typeof t20;
  };
}
function Xh() {
  if (Sh) return Oh;
  Sh = 1;
  var t19 = Yh();
  return Oh = function(e2) {
    return "object" == typeof e2 ? null !== e2 : t19(e2);
  };
}
function Gh() {
  if (Eh) return Zh;
  Eh = 1;
  var t19 = Xh(), e2 = String, o2 = TypeError;
  return Zh = function(r2) {
    if (t19(r2)) return r2;
    throw new o2(e2(r2) + " is not an object");
  };
}
var Kh, Jh, Qh, ta, ea = {};
function oa() {
  if (Jh) return Kh;
  Jh = 1;
  var t19 = Jk();
  return Kh = !t19(function() {
    return 7 !== Object.defineProperty({}, 1, { get: function() {
      return 7;
    } })[1];
  });
}
function ra() {
  if (ta) return Qh;
  ta = 1;
  var t19 = oa(), e2 = Jk();
  return Qh = t19 && e2(function() {
    return 42 !== Object.defineProperty(function() {
    }, "prototype", { value: 42, writable: false }).prototype;
  });
}
var La, na, ia, sa, da, ka, ha, aa, ua, pa, ca, la, wa, Ma, fa, Wa, ja, ma, va, ga, _a, ya, ba, Ca, xa, Va, Ha, Ta, Oa, Sa, Za, Ea, Pa, Na, Aa, Ra, Da, qa, za, Ba, Ia, Fa, Ua, $a, Ya, Xa, Ga, Ka, Ja, Qa, tu, eu, ou, ru, Lu, nu, iu, su, du, ku, hu, au, uu, pu, cu = {};
function lu() {
  if (na) return La;
  na = 1;
  var t19 = ih(), e2 = Xh(), o2 = t19.document, r2 = e2(o2) && e2(o2.createElement);
  return La = function(t20) {
    return r2 ? o2.createElement(t20) : {};
  };
}
function wu() {
  if (sa) return ia;
  sa = 1;
  var t19 = oa(), e2 = Jk(), o2 = lu();
  return ia = !t19 && !e2(function() {
    return 7 !== Object.defineProperty(o2("div"), "a", { get: function() {
      return 7;
    } }).a;
  });
}
function Mu() {
  if (ka) return da;
  ka = 1;
  var t19 = Qk(), e2 = Function.prototype.call;
  return da = t19 ? e2.bind(e2) : function() {
    return e2.apply(e2, arguments);
  }, da;
}
function fu() {
  if (aa) return ha;
  aa = 1;
  var t19 = ih(), e2 = Yh();
  return ha = function(o2, r2) {
    return arguments.length < 2 ? (L2 = t19[o2], e2(L2) ? L2 : void 0) : t19[o2] && t19[o2][r2];
    var L2;
  }, ha;
}
function Wu() {
  if (pa) return ua;
  pa = 1;
  var t19 = th();
  return ua = t19({}.isPrototypeOf);
}
function ju() {
  if (la) return ca;
  la = 1;
  var t19 = fu(), e2 = Yh(), o2 = Wu(), r2 = Uh(), L2 = Object;
  return ca = r2 ? function(t20) {
    return "symbol" == typeof t20;
  } : function(r3) {
    var n2 = t19("Symbol");
    return e2(n2) && o2(n2.prototype, L2(r3));
  };
}
function mu() {
  if (Ma) return wa;
  Ma = 1;
  var t19 = String;
  return wa = function(e2) {
    try {
      return t19(e2);
    } catch (t20) {
      return "Object";
    }
  };
}
function vu() {
  if (Wa) return fa;
  Wa = 1;
  var t19 = Yh(), e2 = mu(), o2 = TypeError;
  return fa = function(r2) {
    if (t19(r2)) return r2;
    throw new o2(e2(r2) + " is not a function");
  };
}
function gu() {
  if (ma) return ja;
  ma = 1;
  var t19 = vu(), e2 = rh();
  return ja = function(o2, r2) {
    var L2 = o2[r2];
    return e2(L2) ? void 0 : t19(L2);
  }, ja;
}
function _u() {
  if (ga) return va;
  ga = 1;
  var t19 = Mu(), e2 = Yh(), o2 = Xh(), r2 = TypeError;
  return va = function(L2, n2) {
    var i2, s2;
    if ("string" === n2 && e2(i2 = L2.toString) && !o2(s2 = t19(i2, L2))) return s2;
    if (e2(i2 = L2.valueOf) && !o2(s2 = t19(i2, L2))) return s2;
    if ("string" !== n2 && e2(i2 = L2.toString) && !o2(s2 = t19(i2, L2))) return s2;
    throw new r2("Can't convert object to primitive value");
  }, va;
}
function yu() {
  if (ya) return _a;
  ya = 1;
  var t19 = Mu(), e2 = Xh(), o2 = ju(), r2 = gu(), L2 = _u(), n2 = $h(), i2 = TypeError, s2 = n2("toPrimitive");
  return _a = function(n3, d2) {
    if (!e2(n3) || o2(n3)) return n3;
    var k2, h2 = r2(n3, s2);
    if (h2) {
      if (void 0 === d2 && (d2 = "default"), k2 = t19(h2, n3, d2), !e2(k2) || o2(k2)) return k2;
      throw new i2("Can't convert object to primitive value");
    }
    return void 0 === d2 && (d2 = "number"), L2(n3, d2);
  };
}
function bu() {
  if (Ca) return ba;
  Ca = 1;
  var t19 = yu(), e2 = ju();
  return ba = function(o2) {
    var r2 = t19(o2, "string");
    return e2(r2) ? r2 : r2 + "";
  };
}
function Cu() {
  if (xa) return cu;
  xa = 1;
  var t19 = oa(), e2 = wu(), o2 = ra(), r2 = Gh(), L2 = bu(), n2 = TypeError, i2 = Object.defineProperty, s2 = Object.getOwnPropertyDescriptor, d2 = "enumerable", k2 = "configurable", h2 = "writable";
  return cu.f = t19 ? o2 ? function(t20, e3, o3) {
    if (r2(t20), e3 = L2(e3), r2(o3), "function" == typeof t20 && "prototype" === e3 && "value" in o3 && h2 in o3 && !o3[h2]) {
      var n3 = s2(t20, e3);
      n3 && n3[h2] && (t20[e3] = o3.value, o3 = { configurable: k2 in o3 ? o3[k2] : n3[k2], enumerable: d2 in o3 ? o3[d2] : n3[d2], writable: false });
    }
    return i2(t20, e3, o3);
  } : i2 : function(t20, o3, s3) {
    if (r2(t20), o3 = L2(o3), r2(s3), e2) try {
      return i2(t20, o3, s3);
    } catch (t21) {
    }
    if ("get" in s3 || "set" in s3) throw new n2("Accessors not supported");
    return "value" in s3 && (t20[o3] = s3.value), t20;
  }, cu;
}
function xu() {
  if (Oa) return Ta;
  Oa = 1;
  var t19 = function() {
    if (Ha) return Va;
    Ha = 1;
    var t20 = Math.ceil, e2 = Math.floor;
    return Va = Math.trunc || function(o2) {
      var r2 = +o2;
      return (r2 > 0 ? e2 : t20)(r2);
    }, Va;
  }();
  return Ta = function(e2) {
    var o2 = +e2;
    return o2 != o2 || 0 === o2 ? 0 : t19(o2);
  };
}
function Vu() {
  if (Za) return Sa;
  Za = 1;
  var t19 = xu(), e2 = Math.max, o2 = Math.min;
  return Sa = function(r2, L2) {
    var n2 = t19(r2);
    return n2 < 0 ? e2(n2 + L2, 0) : o2(n2, L2);
  };
}
function Hu() {
  if (Pa) return Ea;
  Pa = 1;
  var t19 = xu(), e2 = Math.min;
  return Ea = function(o2) {
    var r2 = t19(o2);
    return r2 > 0 ? e2(r2, 9007199254740991) : 0;
  };
}
function Tu() {
  if (Aa) return Na;
  Aa = 1;
  var t19 = Hu();
  return Na = function(e2) {
    return t19(e2.length);
  };
}
function Ou() {
  return za ? qa : (za = 1, qa = {});
}
function Su() {
  if (Ia) return Ba;
  Ia = 1;
  var t19 = th(), e2 = zh(), o2 = nh(), r2 = function() {
    if (Da) return Ra;
    Da = 1;
    var t20 = nh(), e3 = Vu(), o3 = Tu(), r3 = function(r4) {
      return function(L3, n3, i2) {
        var s2 = t20(L3), d2 = o3(s2);
        if (0 === d2) return !r4 && -1;
        var k2, h2 = e3(i2, d2);
        if (r4 && n3 != n3) {
          for (; d2 > h2; ) if ((k2 = s2[h2++]) != k2) return true;
        } else for (; d2 > h2; h2++) if ((r4 || h2 in s2) && s2[h2] === n3) return r4 || h2 || 0;
        return !r4 && -1;
      };
    };
    return Ra = { includes: r3(true), indexOf: r3(false) };
  }().indexOf, L2 = Ou(), n2 = t19([].push);
  return Ba = function(t20, i2) {
    var s2, d2 = o2(t20), k2 = 0, h2 = [];
    for (s2 in d2) !e2(L2, s2) && e2(d2, s2) && n2(h2, s2);
    for (; i2.length > k2; ) e2(d2, s2 = i2[k2++]) && (~r2(h2, s2) || n2(h2, s2));
    return h2;
  }, Ba;
}
function Zu() {
  return Ua ? Fa : (Ua = 1, Fa = ["constructor", "hasOwnProperty", "isPrototypeOf", "propertyIsEnumerable", "toLocaleString", "toString", "valueOf"]);
}
function Eu() {
  if (Ya) return $a;
  Ya = 1;
  var t19 = Su(), e2 = Zu();
  return $a = Object.keys || function(o2) {
    return t19(o2, e2);
  }, $a;
}
function Pu() {
  if (Ka) return Ga;
  Ka = 1;
  var t19 = fu();
  return Ga = t19("document", "documentElement");
}
function Nu() {
  if (Qa) return Ja;
  Qa = 1;
  var t19 = Dh(), e2 = Bh(), o2 = t19("keys");
  return Ja = function(t20) {
    return o2[t20] || (o2[t20] = e2(t20));
  };
}
function Au() {
  if (eu) return tu;
  eu = 1;
  var t19, e2 = Gh(), o2 = function() {
    if (Xa) return ea;
    Xa = 1;
    var t20 = oa(), e3 = ra(), o3 = Cu(), r3 = Gh(), L3 = nh(), n3 = Eu();
    return ea.f = t20 && !e3 ? Object.defineProperties : function(t21, e4) {
      r3(t21);
      for (var i3, s3 = L3(e4), d3 = n3(e4), k3 = d3.length, h3 = 0; k3 > h3; ) o3.f(t21, i3 = d3[h3++], s3[i3]);
      return t21;
    }, ea;
  }(), r2 = Zu(), L2 = Ou(), n2 = Pu(), i2 = lu(), s2 = Nu(), d2 = "prototype", k2 = "script", h2 = s2("IE_PROTO"), a2 = function() {
  }, u2 = function(t20) {
    return "<" + k2 + ">" + t20 + "</" + k2 + ">";
  }, p2 = function(t20) {
    t20.write(u2("")), t20.close();
    var e3 = t20.parentWindow.Object;
    return t20 = null, e3;
  }, c2 = function() {
    try {
      t19 = new ActiveXObject("htmlfile");
    } catch (t20) {
    }
    var e3, o3, L3;
    c2 = "undefined" != typeof document ? document.domain && t19 ? p2(t19) : (o3 = i2("iframe"), L3 = "java" + k2 + ":", o3.style.display = "none", n2.appendChild(o3), o3.src = String(L3), (e3 = o3.contentWindow.document).open(), e3.write(u2("document.F=Object")), e3.close(), e3.F) : p2(t19);
    for (var s3 = r2.length; s3--; ) delete c2[d2][r2[s3]];
    return c2();
  };
  return L2[h2] = true, tu = Object.create || function(t20, r3) {
    var L3;
    return null !== t20 ? (a2[d2] = e2(t20), L3 = new a2(), a2[d2] = null, L3[h2] = t20) : L3 = c2(), void 0 === r3 ? L3 : o2.f(L3, r3);
  }, tu;
}
function Ru() {
  if (ru) return ou;
  ru = 1;
  var t19 = $h(), e2 = Au(), o2 = Cu().f, r2 = t19("unscopables"), L2 = Array.prototype;
  return void 0 === L2[r2] && o2(L2, r2, { configurable: true, value: e2(null) }), ou = function(t20) {
    L2[r2][t20] = true;
  };
}
function Du() {
  return nu ? Lu : (nu = 1, Lu = {});
}
function qu() {
  if (su) return iu;
  su = 1;
  var t19 = ih(), e2 = Yh(), o2 = t19.WeakMap;
  return iu = e2(o2) && /native code/.test(String(o2));
}
function zu() {
  return ku ? du : (ku = 1, du = function(t19, e2) {
    return { enumerable: !(1 & t19), configurable: !(2 & t19), writable: !(4 & t19), value: e2 };
  });
}
function Bu() {
  if (au) return hu;
  au = 1;
  var t19 = oa(), e2 = Cu(), o2 = zu();
  return hu = t19 ? function(t20, r2, L2) {
    return e2.f(t20, r2, o2(1, L2));
  } : function(t20, e3, o3) {
    return t20[e3] = o3, t20;
  };
}
function Iu() {
  if (pu) return uu;
  pu = 1;
  var t19, e2, o2, r2 = qu(), L2 = ih(), n2 = Xh(), i2 = Bu(), s2 = zh(), d2 = Rh(), k2 = Nu(), h2 = Ou(), a2 = "Object already initialized", u2 = L2.TypeError, p2 = L2.WeakMap;
  if (r2 || d2.state) {
    var c2 = d2.state || (d2.state = new p2());
    c2.get = c2.get, c2.has = c2.has, c2.set = c2.set, t19 = function(t20, e3) {
      if (c2.has(t20)) throw new u2(a2);
      return e3.facade = t20, c2.set(t20, e3), e3;
    }, e2 = function(t20) {
      return c2.get(t20) || {};
    }, o2 = function(t20) {
      return c2.has(t20);
    };
  } else {
    var l2 = k2("state");
    h2[l2] = true, t19 = function(t20, e3) {
      if (s2(t20, l2)) throw new u2(a2);
      return e3.facade = t20, i2(t20, l2, e3), e3;
    }, e2 = function(t20) {
      return s2(t20, l2) ? t20[l2] : {};
    }, o2 = function(t20) {
      return s2(t20, l2);
    };
  }
  return uu = { set: t19, get: e2, has: o2, enforce: function(r3) {
    return o2(r3) ? e2(r3) : t19(r3, {});
  }, getterFor: function(t20) {
    return function(o3) {
      var r3;
      if (!n2(o3) || (r3 = e2(o3)).type !== t20) throw new u2("Incompatible receiver, " + t20 + " required");
      return r3;
    };
  } };
}
var Fu, Uu, $u = {}, Yu = {};
function Xu() {
  if (Fu) return Yu;
  Fu = 1;
  var t19 = {}.propertyIsEnumerable, e2 = Object.getOwnPropertyDescriptor, o2 = e2 && !t19.call({ 1: 2 }, 1);
  return Yu.f = o2 ? function(t20) {
    var o3 = e2(this, t20);
    return !!o3 && o3.enumerable;
  } : t19, Yu;
}
function Gu() {
  if (Uu) return $u;
  Uu = 1;
  var t19 = oa(), e2 = Mu(), o2 = Xu(), r2 = zu(), L2 = nh(), n2 = bu(), i2 = zh(), s2 = wu(), d2 = Object.getOwnPropertyDescriptor;
  return $u.f = t19 ? d2 : function(t20, k2) {
    if (t20 = L2(t20), k2 = n2(k2), s2) try {
      return d2(t20, k2);
    } catch (t21) {
    }
    if (i2(t20, k2)) return r2(!e2(o2.f, t20, k2), t20[k2]);
  }, $u;
}
var Ku, Ju, Qu, tp, ep, op, rp, Lp = { exports: {} };
function np() {
  if (Ju) return Ku;
  Ju = 1;
  var t19 = oa(), e2 = zh(), o2 = Function.prototype, r2 = t19 && Object.getOwnPropertyDescriptor, L2 = e2(o2, "name"), n2 = L2 && "something" === (function() {
  }).name, i2 = L2 && (!t19 || t19 && r2(o2, "name").configurable);
  return Ku = { EXISTS: L2, PROPER: n2, CONFIGURABLE: i2 };
}
function ip() {
  if (tp) return Qu;
  tp = 1;
  var t19 = th(), e2 = Yh(), o2 = Rh(), r2 = t19(Function.toString);
  return e2(o2.inspectSource) || (o2.inspectSource = function(t20) {
    return r2(t20);
  }), Qu = o2.inspectSource;
}
function sp() {
  if (ep) return Lp.exports;
  ep = 1;
  var t19 = th(), e2 = Jk(), o2 = Yh(), r2 = zh(), L2 = oa(), n2 = np().CONFIGURABLE, i2 = ip(), s2 = Iu(), d2 = s2.enforce, k2 = s2.get, h2 = String, a2 = Object.defineProperty, u2 = t19("".slice), p2 = t19("".replace), c2 = t19([].join), l2 = L2 && !e2(function() {
    return 8 !== a2(function() {
    }, "length", { value: 8 }).length;
  }), w2 = String(String).split("String"), M2 = Lp.exports = function(t20, e3, o3) {
    "Symbol(" === u2(h2(e3), 0, 7) && (e3 = "[" + p2(h2(e3), /^Symbol\(([^)]*)\).*$/, "$1") + "]"), o3 && o3.getter && (e3 = "get " + e3), o3 && o3.setter && (e3 = "set " + e3), (!r2(t20, "name") || n2 && t20.name !== e3) && (L2 ? a2(t20, "name", { value: e3, configurable: true }) : t20.name = e3), l2 && o3 && r2(o3, "arity") && t20.length !== o3.arity && a2(t20, "length", { value: o3.arity });
    try {
      o3 && r2(o3, "constructor") && o3.constructor ? L2 && a2(t20, "prototype", { writable: false }) : t20.prototype && (t20.prototype = void 0);
    } catch (t21) {
    }
    var i3 = d2(t20);
    return r2(i3, "source") || (i3.source = c2(w2, "string" == typeof e3 ? e3 : "")), t20;
  };
  return Function.prototype.toString = M2(function() {
    return o2(this) && k2(this).source || i2(this);
  }, "toString"), Lp.exports;
}
function dp() {
  if (rp) return op;
  rp = 1;
  var t19 = Yh(), e2 = Cu(), o2 = sp(), r2 = Ah();
  return op = function(L2, n2, i2, s2) {
    s2 || (s2 = {});
    var d2 = s2.enumerable, k2 = void 0 !== s2.name ? s2.name : n2;
    if (t19(i2) && o2(i2, k2, s2), s2.global) d2 ? L2[n2] = i2 : r2(n2, i2);
    else {
      try {
        s2.unsafe ? L2[n2] && (d2 = true) : delete L2[n2];
      } catch (t20) {
      }
      d2 ? L2[n2] = i2 : e2.f(L2, n2, { value: i2, enumerable: false, configurable: !s2.nonConfigurable, writable: !s2.nonWritable });
    }
    return L2;
  }, op;
}
var kp, hp = {};
function ap() {
  if (kp) return hp;
  kp = 1;
  var t19 = Su(), e2 = Zu().concat("length", "prototype");
  return hp.f = Object.getOwnPropertyNames || function(o2) {
    return t19(o2, e2);
  }, hp;
}
var up, pp, cp, lp, wp, Mp, fp, Wp, jp, mp, vp, gp, _p, yp, bp, Cp, xp, Vp, Hp, Tp, Op, Sp, Zp, Ep, Pp, Np, Ap, Rp, Dp, qp, zp, Bp, Ip, Fp = {};
function Up() {
  return up || (up = 1, Fp.f = Object.getOwnPropertySymbols), Fp;
}
function $p() {
  if (cp) return pp;
  cp = 1;
  var t19 = fu(), e2 = th(), o2 = ap(), r2 = Up(), L2 = Gh(), n2 = e2([].concat);
  return pp = t19("Reflect", "ownKeys") || function(t20) {
    var e3 = o2.f(L2(t20)), i2 = r2.f;
    return i2 ? n2(e3, i2(t20)) : e3;
  };
}
function Yp() {
  if (wp) return lp;
  wp = 1;
  var t19 = zh(), e2 = $p(), o2 = Gu(), r2 = Cu();
  return lp = function(L2, n2, i2) {
    for (var s2 = e2(n2), d2 = r2.f, k2 = o2.f, h2 = 0; h2 < s2.length; h2++) {
      var a2 = s2[h2];
      t19(L2, a2) || i2 && t19(i2, a2) || d2(L2, a2, k2(n2, a2));
    }
  }, lp;
}
function Xp() {
  if (fp) return Mp;
  fp = 1;
  var t19 = Jk(), e2 = Yh(), o2 = /#|\.prototype\./, r2 = function(o3, r3) {
    var d2 = n2[L2(o3)];
    return d2 === s2 || d2 !== i2 && (e2(r3) ? t19(r3) : !!r3);
  }, L2 = r2.normalize = function(t20) {
    return String(t20).replace(o2, ".").toLowerCase();
  }, n2 = r2.data = {}, i2 = r2.NATIVE = "N", s2 = r2.POLYFILL = "P";
  return Mp = r2;
}
function Gp() {
  if (jp) return Wp;
  jp = 1;
  var t19 = ih(), e2 = Gu().f, o2 = Bu(), r2 = dp(), L2 = Ah(), n2 = Yp(), i2 = Xp();
  return Wp = function(s2, d2) {
    var k2, h2, a2, u2, p2, c2 = s2.target, l2 = s2.global, w2 = s2.stat;
    if (k2 = l2 ? t19 : w2 ? t19[c2] || L2(c2, {}) : t19[c2] && t19[c2].prototype) for (h2 in d2) {
      if (u2 = d2[h2], a2 = s2.dontCallGetSet ? (p2 = e2(k2, h2)) && p2.value : k2[h2], !i2(l2 ? h2 : c2 + (w2 ? "." : "#") + h2, s2.forced) && void 0 !== a2) {
        if (typeof u2 == typeof a2) continue;
        n2(u2, a2);
      }
      (s2.sham || a2 && a2.sham) && o2(u2, "sham", true), r2(k2, h2, u2, s2);
    }
  };
}
function Kp() {
  if (_p) return gp;
  _p = 1;
  var t19 = zh(), e2 = Yh(), o2 = qh(), r2 = Nu(), L2 = function() {
    if (vp) return mp;
    vp = 1;
    var t20 = Jk();
    return mp = !t20(function() {
      function t21() {
      }
      return t21.prototype.constructor = null, Object.getPrototypeOf(new t21()) !== t21.prototype;
    }), mp;
  }(), n2 = r2("IE_PROTO"), i2 = Object, s2 = i2.prototype;
  return gp = L2 ? i2.getPrototypeOf : function(r3) {
    var L3 = o2(r3);
    if (t19(L3, n2)) return L3[n2];
    var d2 = L3.constructor;
    return e2(d2) && L3 instanceof d2 ? d2.prototype : L3 instanceof i2 ? s2 : null;
  }, gp;
}
function Jp() {
  if (bp) return yp;
  bp = 1;
  var t19, e2, o2, r2 = Jk(), L2 = Yh(), n2 = Xh(), i2 = Au(), s2 = Kp(), d2 = dp(), k2 = $h(), h2 = Nh(), a2 = k2("iterator"), u2 = false;
  return [].keys && ("next" in (o2 = [].keys()) ? (e2 = s2(s2(o2))) !== Object.prototype && (t19 = e2) : u2 = true), !n2(t19) || r2(function() {
    var e3 = {};
    return t19[a2].call(e3) !== e3;
  }) ? t19 = {} : h2 && (t19 = i2(t19)), L2(t19[a2]) || d2(t19, a2, function() {
    return this;
  }), yp = { IteratorPrototype: t19, BUGGY_SAFARI_ITERATORS: u2 };
}
function Qp() {
  if (xp) return Cp;
  xp = 1;
  var t19 = Cu().f, e2 = zh(), o2 = $h()("toStringTag");
  return Cp = function(r2, L2, n2) {
    r2 && !n2 && (r2 = r2.prototype), r2 && !e2(r2, o2) && t19(r2, o2, { configurable: true, value: L2 });
  };
}
function tc() {
  if (Op) return Tp;
  Op = 1;
  var t19 = th(), e2 = vu();
  return Tp = function(o2, r2, L2) {
    try {
      return t19(e2(Object.getOwnPropertyDescriptor(o2, r2)[L2]));
    } catch (t20) {
    }
  };
}
function ec() {
  if (Zp) return Sp;
  Zp = 1;
  var t19 = Xh();
  return Sp = function(e2) {
    return t19(e2) || null === e2;
  };
}
function oc() {
  if (Pp) return Ep;
  Pp = 1;
  var t19 = ec(), e2 = String, o2 = TypeError;
  return Ep = function(r2) {
    if (t19(r2)) return r2;
    throw new o2("Can't set " + e2(r2) + " as a prototype");
  };
}
function rc() {
  if (Ap) return Np;
  Ap = 1;
  var t19 = tc(), e2 = Xh(), o2 = Lh(), r2 = oc();
  return Np = Object.setPrototypeOf || ("__proto__" in {} ? function() {
    var L2, n2 = false, i2 = {};
    try {
      (L2 = t19(Object.prototype, "__proto__", "set"))(i2, []), n2 = i2 instanceof Array;
    } catch (t20) {
    }
    return function(t20, i3) {
      return o2(t20), r2(i3), e2(t20) ? (n2 ? L2(t20, i3) : t20.__proto__ = i3, t20) : t20;
    };
  }() : void 0), Np;
}
function Lc() {
  if (Dp) return Rp;
  Dp = 1;
  var t19 = Gp(), e2 = Mu(), o2 = Nh(), r2 = np(), L2 = Yh(), n2 = function() {
    if (Hp) return Vp;
    Hp = 1;
    var t20 = Jp().IteratorPrototype, e3 = Au(), o3 = zu(), r3 = Qp(), L3 = Du(), n3 = function() {
      return this;
    };
    return Vp = function(i3, s3, d3, k3) {
      var h3 = s3 + " Iterator";
      return i3.prototype = e3(t20, { next: o3(+!k3, d3) }), r3(i3, h3, false, true), L3[h3] = n3, i3;
    };
  }(), i2 = Kp(), s2 = rc(), d2 = Qp(), k2 = Bu(), h2 = dp(), a2 = $h(), u2 = Du(), p2 = Jp(), c2 = r2.PROPER, l2 = r2.CONFIGURABLE, w2 = p2.IteratorPrototype, M2 = p2.BUGGY_SAFARI_ITERATORS, f2 = a2("iterator"), W2 = "keys", j2 = "values", m2 = "entries", v2 = function() {
    return this;
  };
  return Rp = function(r3, a3, p3, g2, _2, y2, b2) {
    n2(p3, a3, g2);
    var C2, x2, V2, H2 = function(t20) {
      if (t20 === _2 && E2) return E2;
      if (!M2 && t20 && t20 in S2) return S2[t20];
      switch (t20) {
        case W2:
        case j2:
        case m2:
          return function() {
            return new p3(this, t20);
          };
      }
      return function() {
        return new p3(this);
      };
    }, T2 = a3 + " Iterator", O2 = false, S2 = r3.prototype, Z2 = S2[f2] || S2["@@iterator"] || _2 && S2[_2], E2 = !M2 && Z2 || H2(_2), P2 = "Array" === a3 && S2.entries || Z2;
    if (P2 && (C2 = i2(P2.call(new r3()))) !== Object.prototype && C2.next && (o2 || i2(C2) === w2 || (s2 ? s2(C2, w2) : L2(C2[f2]) || h2(C2, f2, v2)), d2(C2, T2, true, true), o2 && (u2[T2] = v2)), c2 && _2 === j2 && Z2 && Z2.name !== j2 && (!o2 && l2 ? k2(S2, "name", j2) : (O2 = true, E2 = function() {
      return e2(Z2, this);
    })), _2) if (x2 = { values: H2(j2), keys: y2 ? E2 : H2(W2), entries: H2(m2) }, b2) for (V2 in x2) (M2 || O2 || !(V2 in S2)) && h2(S2, V2, x2[V2]);
    else t19({ target: a3, proto: true, forced: M2 || O2 }, x2);
    return o2 && !b2 || S2[f2] === E2 || h2(S2, f2, E2, { name: _2 }), u2[a3] = E2, x2;
  };
}
function nc() {
  return zp ? qp : (zp = 1, qp = function(t19, e2) {
    return { value: t19, done: e2 };
  });
}
function ic() {
  if (Ip) return Bp;
  Ip = 1;
  var t19 = nh(), e2 = Ru(), o2 = Du(), r2 = Iu(), L2 = Cu().f, n2 = Lc(), i2 = nc(), s2 = Nh(), d2 = oa(), k2 = "Array Iterator", h2 = r2.set, a2 = r2.getterFor(k2);
  Bp = n2(Array, "Array", function(e3, o3) {
    h2(this, { type: k2, target: t19(e3), index: 0, kind: o3 });
  }, function() {
    var t20 = a2(this), e3 = t20.target, o3 = t20.index++;
    if (!e3 || o3 >= e3.length) return t20.target = null, i2(void 0, true);
    switch (t20.kind) {
      case "keys":
        return i2(o3, false);
      case "values":
        return i2(e3[o3], false);
    }
    return i2([o3, e3[o3]], false);
  }, "values");
  var u2 = o2.Arguments = o2.Array;
  if (e2("keys"), e2("values"), e2("entries"), !s2 && d2 && "values" !== u2.name) try {
    L2(u2, "name", { value: "values" });
  } catch (t20) {
  }
  return Bp;
}
var sc, dc, kc, hc, ac, uc, pc, cc, lc, wc, Mc, fc, Wc, jc, mc, vc, gc, _c, yc, bc, Cc, xc, Vc, Hc, Tc, Oc, Sc, Zc, Ec, Pc, Nc, Ac, Rc, Dc, qc, zc, Bc, Ic, Fc, Uc, $c, Yc, Xc, Gc, Kc, Jc, Qc = {}, tl = { exports: {} }, el = {};
function ol() {
  if (dc) return sc;
  dc = 1;
  var t19 = th();
  return sc = t19([].slice);
}
function rl() {
  if (kc) return el;
  kc = 1;
  var t19 = eh(), e2 = nh(), o2 = ap().f, r2 = ol(), L2 = "object" == typeof window && window && Object.getOwnPropertyNames ? Object.getOwnPropertyNames(window) : [];
  return el.f = function(n2) {
    return L2 && "Window" === t19(n2) ? function(t20) {
      try {
        return o2(t20);
      } catch (t21) {
        return r2(L2);
      }
    }(n2) : o2(e2(n2));
  }, el;
}
function Ll() {
  if (pc) return uc;
  pc = 1;
  var t19 = Jk(), e2 = Xh(), o2 = eh(), r2 = function() {
    if (ac) return hc;
    ac = 1;
    var t20 = Jk();
    return hc = t20(function() {
      if ("function" == typeof ArrayBuffer) {
        var t21 = new ArrayBuffer(8);
        Object.isExtensible(t21) && Object.defineProperty(t21, "a", { value: 8 });
      }
    });
  }(), L2 = Object.isExtensible, n2 = t19(function() {
  });
  return uc = n2 || r2 ? function(t20) {
    return !!e2(t20) && ((!r2 || "ArrayBuffer" !== o2(t20)) && (!L2 || L2(t20)));
  } : L2;
}
function nl() {
  if (lc) return cc;
  lc = 1;
  var t19 = Jk();
  return cc = !t19(function() {
    return Object.isExtensible(Object.preventExtensions({}));
  });
}
function il() {
  if (wc) return tl.exports;
  wc = 1;
  var t19 = Gp(), e2 = th(), o2 = Ou(), r2 = Xh(), L2 = zh(), n2 = Cu().f, i2 = ap(), s2 = rl(), d2 = Ll(), k2 = Bh(), h2 = nl(), a2 = false, u2 = k2("meta"), p2 = 0, c2 = function(t20) {
    n2(t20, u2, { value: { objectID: "O" + p2++, weakData: {} } });
  }, l2 = tl.exports = { enable: function() {
    l2.enable = function() {
    }, a2 = true;
    var o3 = i2.f, r3 = e2([].splice), L3 = {};
    L3[u2] = 1, o3(L3).length && (i2.f = function(t20) {
      for (var e3 = o3(t20), L4 = 0, n3 = e3.length; L4 < n3; L4++) if (e3[L4] === u2) {
        r3(e3, L4, 1);
        break;
      }
      return e3;
    }, t19({ target: "Object", stat: true, forced: true }, { getOwnPropertyNames: s2.f }));
  }, fastKey: function(t20, e3) {
    if (!r2(t20)) return "symbol" == typeof t20 ? t20 : ("string" == typeof t20 ? "S" : "P") + t20;
    if (!L2(t20, u2)) {
      if (!d2(t20)) return "F";
      if (!e3) return "E";
      c2(t20);
    }
    return t20[u2].objectID;
  }, getWeakData: function(t20, e3) {
    if (!L2(t20, u2)) {
      if (!d2(t20)) return true;
      if (!e3) return false;
      c2(t20);
    }
    return t20[u2].weakData;
  }, onFreeze: function(t20) {
    return h2 && a2 && d2(t20) && !L2(t20, u2) && c2(t20), t20;
  } };
  return o2[u2] = true, tl.exports;
}
function sl() {
  if (jc) return Wc;
  jc = 1;
  var t19 = function() {
    if (fc) return Mc;
    fc = 1;
    var t20 = eh(), e3 = th();
    return Mc = function(o3) {
      if ("Function" === t20(o3)) return e3(o3);
    }, Mc;
  }(), e2 = vu(), o2 = Qk(), r2 = t19(t19.bind);
  return Wc = function(t20, L2) {
    return e2(t20), void 0 === L2 ? t20 : o2 ? r2(t20, L2) : function() {
      return t20.apply(L2, arguments);
    };
  }, Wc;
}
function dl() {
  if (vc) return mc;
  vc = 1;
  var t19 = $h(), e2 = Du(), o2 = t19("iterator"), r2 = Array.prototype;
  return mc = function(t20) {
    return void 0 !== t20 && (e2.Array === t20 || r2[o2] === t20);
  };
}
function kl() {
  if (_c) return gc;
  _c = 1;
  var t19 = {};
  return t19[$h()("toStringTag")] = "z", gc = "[object z]" === String(t19);
}
function hl() {
  if (bc) return yc;
  bc = 1;
  var t19 = kl(), e2 = Yh(), o2 = eh(), r2 = $h()("toStringTag"), L2 = Object, n2 = "Arguments" === o2(/* @__PURE__ */ function() {
    return arguments;
  }());
  return yc = t19 ? o2 : function(t20) {
    var i2, s2, d2;
    return void 0 === t20 ? "Undefined" : null === t20 ? "Null" : "string" == typeof (s2 = function(t21, e3) {
      try {
        return t21[e3];
      } catch (t22) {
      }
    }(i2 = L2(t20), r2)) ? s2 : n2 ? o2(i2) : "Object" === (d2 = o2(i2)) && e2(i2.callee) ? "Arguments" : d2;
  }, yc;
}
function al() {
  if (xc) return Cc;
  xc = 1;
  var t19 = hl(), e2 = gu(), o2 = rh(), r2 = Du(), L2 = $h()("iterator");
  return Cc = function(n2) {
    if (!o2(n2)) return e2(n2, L2) || e2(n2, "@@iterator") || r2[t19(n2)];
  };
}
function ul() {
  if (Hc) return Vc;
  Hc = 1;
  var t19 = Mu(), e2 = vu(), o2 = Gh(), r2 = mu(), L2 = al(), n2 = TypeError;
  return Vc = function(i2, s2) {
    var d2 = arguments.length < 2 ? L2(i2) : s2;
    if (e2(d2)) return o2(t19(d2, i2));
    throw new n2(r2(i2) + " is not iterable");
  }, Vc;
}
function pl() {
  if (Oc) return Tc;
  Oc = 1;
  var t19 = Mu(), e2 = Gh(), o2 = gu();
  return Tc = function(r2, L2, n2) {
    var i2, s2;
    e2(r2);
    try {
      if (!(i2 = o2(r2, "return"))) {
        if ("throw" === L2) throw n2;
        return n2;
      }
      i2 = t19(i2, r2);
    } catch (t20) {
      s2 = true, i2 = t20;
    }
    if ("throw" === L2) throw n2;
    if (s2) throw i2;
    return e2(i2), n2;
  };
}
function cl() {
  if (Zc) return Sc;
  Zc = 1;
  var t19 = sl(), e2 = Mu(), o2 = Gh(), r2 = mu(), L2 = dl(), n2 = Tu(), i2 = Wu(), s2 = ul(), d2 = al(), k2 = pl(), h2 = TypeError, a2 = function(t20, e3) {
    this.stopped = t20, this.result = e3;
  }, u2 = a2.prototype;
  return Sc = function(p2, c2, l2) {
    var w2, M2, f2, W2, j2, m2, v2, g2 = l2 && l2.that, _2 = !(!l2 || !l2.AS_ENTRIES), y2 = !(!l2 || !l2.IS_RECORD), b2 = !(!l2 || !l2.IS_ITERATOR), C2 = !(!l2 || !l2.INTERRUPTED), x2 = t19(c2, g2), V2 = function(t20) {
      return w2 && k2(w2, "normal", t20), new a2(true, t20);
    }, H2 = function(t20) {
      return _2 ? (o2(t20), C2 ? x2(t20[0], t20[1], V2) : x2(t20[0], t20[1])) : C2 ? x2(t20, V2) : x2(t20);
    };
    if (y2) w2 = p2.iterator;
    else if (b2) w2 = p2;
    else {
      if (!(M2 = d2(p2))) throw new h2(r2(p2) + " is not iterable");
      if (L2(M2)) {
        for (f2 = 0, W2 = n2(p2); W2 > f2; f2++) if ((j2 = H2(p2[f2])) && i2(u2, j2)) return j2;
        return new a2(false);
      }
      w2 = s2(p2, M2);
    }
    for (m2 = y2 ? p2.next : w2.next; !(v2 = e2(m2, w2)).done; ) {
      try {
        j2 = H2(v2.value);
      } catch (t20) {
        k2(w2, "throw", t20);
      }
      if ("object" == typeof j2 && j2 && i2(u2, j2)) return j2;
    }
    return new a2(false);
  }, Sc;
}
function ll() {
  if (Pc) return Ec;
  Pc = 1;
  var t19 = Wu(), e2 = TypeError;
  return Ec = function(o2, r2) {
    if (t19(r2, o2)) return o2;
    throw new e2("Incorrect invocation");
  };
}
function wl() {
  if (Ac) return Nc;
  Ac = 1;
  var t19 = $h()("iterator"), e2 = false;
  try {
    var o2 = 0, r2 = { next: function() {
      return { done: !!o2++ };
    }, return: function() {
      e2 = true;
    } };
    r2[t19] = function() {
      return this;
    }, Array.from(r2, function() {
      throw 2;
    });
  } catch (t20) {
  }
  return Nc = function(o3, r3) {
    try {
      if (!r3 && !e2) return false;
    } catch (t20) {
      return false;
    }
    var L2 = false;
    try {
      var n2 = {};
      n2[t19] = function() {
        return { next: function() {
          return { done: L2 = true };
        } };
      }, o3(n2);
    } catch (t20) {
    }
    return L2;
  };
}
function Ml() {
  if (Dc) return Rc;
  Dc = 1;
  var t19 = Yh(), e2 = Xh(), o2 = rc();
  return Rc = function(r2, L2, n2) {
    var i2, s2;
    return o2 && t19(i2 = L2.constructor) && i2 !== n2 && e2(s2 = i2.prototype) && s2 !== n2.prototype && o2(r2, s2), r2;
  };
}
function fl() {
  if (zc) return qc;
  zc = 1;
  var t19 = Gp(), e2 = ih(), o2 = th(), r2 = Xp(), L2 = dp(), n2 = il(), i2 = cl(), s2 = ll(), d2 = Yh(), k2 = rh(), h2 = Xh(), a2 = Jk(), u2 = wl(), p2 = Qp(), c2 = Ml();
  return qc = function(l2, w2, M2) {
    var f2 = -1 !== l2.indexOf("Map"), W2 = -1 !== l2.indexOf("Weak"), j2 = f2 ? "set" : "add", m2 = e2[l2], v2 = m2 && m2.prototype, g2 = m2, _2 = {}, y2 = function(t20) {
      var e3 = o2(v2[t20]);
      L2(v2, t20, "add" === t20 ? function(t21) {
        return e3(this, 0 === t21 ? 0 : t21), this;
      } : "delete" === t20 ? function(t21) {
        return !(W2 && !h2(t21)) && e3(this, 0 === t21 ? 0 : t21);
      } : "get" === t20 ? function(t21) {
        return W2 && !h2(t21) ? void 0 : e3(this, 0 === t21 ? 0 : t21);
      } : "has" === t20 ? function(t21) {
        return !(W2 && !h2(t21)) && e3(this, 0 === t21 ? 0 : t21);
      } : function(t21, o3) {
        return e3(this, 0 === t21 ? 0 : t21, o3), this;
      });
    };
    if (r2(l2, !d2(m2) || !(W2 || v2.forEach && !a2(function() {
      new m2().entries().next();
    })))) g2 = M2.getConstructor(w2, l2, f2, j2), n2.enable();
    else if (r2(l2, true)) {
      var b2 = new g2(), C2 = b2[j2](W2 ? {} : -0, 1) !== b2, x2 = a2(function() {
        b2.has(1);
      }), V2 = u2(function(t20) {
        new m2(t20);
      }), H2 = !W2 && a2(function() {
        for (var t20 = new m2(), e3 = 5; e3--; ) t20[j2](e3, e3);
        return !t20.has(-0);
      });
      V2 || ((g2 = w2(function(t20, e3) {
        s2(t20, v2);
        var o3 = c2(new m2(), t20, g2);
        return k2(e3) || i2(e3, o3[j2], { that: o3, AS_ENTRIES: f2 }), o3;
      })).prototype = v2, v2.constructor = g2), (x2 || H2) && (y2("delete"), y2("has"), f2 && y2("get")), (H2 || C2) && y2(j2), W2 && v2.clear && delete v2.clear;
    }
    return _2[l2] = g2, t19({ global: true, constructor: true, forced: g2 !== m2 }, _2), p2(g2, l2), W2 || M2.setStrong(g2, l2, f2), g2;
  };
}
function Wl() {
  if (Ic) return Bc;
  Ic = 1;
  var t19 = sp(), e2 = Cu();
  return Bc = function(o2, r2, L2) {
    return L2.get && t19(L2.get, r2, { getter: true }), L2.set && t19(L2.set, r2, { setter: true }), e2.f(o2, r2, L2);
  };
}
function jl() {
  if (Uc) return Fc;
  Uc = 1;
  var t19 = dp();
  return Fc = function(e2, o2, r2) {
    for (var L2 in o2) t19(e2, L2, o2[L2], r2);
    return e2;
  };
}
function ml() {
  if (Yc) return $c;
  Yc = 1;
  var t19 = fu(), e2 = Wl(), o2 = $h(), r2 = oa(), L2 = o2("species");
  return $c = function(o3) {
    var n2 = t19(o3);
    r2 && n2 && !n2[L2] && e2(n2, L2, { configurable: true, get: function() {
      return this;
    } });
  };
}
function vl() {
  if (Gc) return Xc;
  Gc = 1;
  var t19 = Au(), e2 = Wl(), o2 = jl(), r2 = sl(), L2 = ll(), n2 = rh(), i2 = cl(), s2 = Lc(), d2 = nc(), k2 = ml(), h2 = oa(), a2 = il().fastKey, u2 = Iu(), p2 = u2.set, c2 = u2.getterFor;
  return Xc = { getConstructor: function(s3, d3, k3, u3) {
    var l2 = s3(function(e3, o3) {
      L2(e3, w2), p2(e3, { type: d3, index: t19(null), first: null, last: null, size: 0 }), h2 || (e3.size = 0), n2(o3) || i2(o3, e3[u3], { that: e3, AS_ENTRIES: k3 });
    }), w2 = l2.prototype, M2 = c2(d3), f2 = function(t20, e3, o3) {
      var r3, L3, n3 = M2(t20), i3 = W2(t20, e3);
      return i3 ? i3.value = o3 : (n3.last = i3 = { index: L3 = a2(e3, true), key: e3, value: o3, previous: r3 = n3.last, next: null, removed: false }, n3.first || (n3.first = i3), r3 && (r3.next = i3), h2 ? n3.size++ : t20.size++, "F" !== L3 && (n3.index[L3] = i3)), t20;
    }, W2 = function(t20, e3) {
      var o3, r3 = M2(t20), L3 = a2(e3);
      if ("F" !== L3) return r3.index[L3];
      for (o3 = r3.first; o3; o3 = o3.next) if (o3.key === e3) return o3;
    };
    return o2(w2, { clear: function() {
      for (var e3 = M2(this), o3 = e3.first; o3; ) o3.removed = true, o3.previous && (o3.previous = o3.previous.next = null), o3 = o3.next;
      e3.first = e3.last = null, e3.index = t19(null), h2 ? e3.size = 0 : this.size = 0;
    }, delete: function(t20) {
      var e3 = this, o3 = M2(e3), r3 = W2(e3, t20);
      if (r3) {
        var L3 = r3.next, n3 = r3.previous;
        delete o3.index[r3.index], r3.removed = true, n3 && (n3.next = L3), L3 && (L3.previous = n3), o3.first === r3 && (o3.first = L3), o3.last === r3 && (o3.last = n3), h2 ? o3.size-- : e3.size--;
      }
      return !!r3;
    }, forEach: function(t20) {
      for (var e3, o3 = M2(this), L3 = r2(t20, arguments.length > 1 ? arguments[1] : void 0); e3 = e3 ? e3.next : o3.first; ) for (L3(e3.value, e3.key, this); e3 && e3.removed; ) e3 = e3.previous;
    }, has: function(t20) {
      return !!W2(this, t20);
    } }), o2(w2, k3 ? { get: function(t20) {
      var e3 = W2(this, t20);
      return e3 && e3.value;
    }, set: function(t20, e3) {
      return f2(this, 0 === t20 ? 0 : t20, e3);
    } } : { add: function(t20) {
      return f2(this, t20 = 0 === t20 ? 0 : t20, t20);
    } }), h2 && e2(w2, "size", { configurable: true, get: function() {
      return M2(this).size;
    } }), l2;
  }, setStrong: function(t20, e3, o3) {
    var r3 = e3 + " Iterator", L3 = c2(e3), n3 = c2(r3);
    s2(t20, e3, function(t21, e4) {
      p2(this, { type: r3, target: t21, state: L3(t21), kind: e4, last: null });
    }, function() {
      for (var t21 = n3(this), e4 = t21.kind, o4 = t21.last; o4 && o4.removed; ) o4 = o4.previous;
      return t21.target && (t21.last = o4 = o4 ? o4.next : t21.state.first) ? d2("keys" === e4 ? o4.key : "values" === e4 ? o4.value : [o4.key, o4.value], false) : (t21.target = null, d2(void 0, true));
    }, o3 ? "entries" : "values", !o3, true), k2(e3);
  } }, Xc;
}
function gl() {
  return Jc || (Jc = 1, Kc || (Kc = 1, fl()("Map", function(t19) {
    return function() {
      return t19(this, arguments.length ? arguments[0] : void 0);
    };
  }, vl()))), Qc;
}
var _l, yl, bl, Cl = {};
function xl() {
  if (yl) return _l;
  yl = 1;
  var t19 = th(), e2 = Map.prototype;
  return _l = { Map, set: t19(e2.set), get: t19(e2.get), has: t19(e2.has), remove: t19(e2.delete), proto: e2 };
}
var Vl, Hl, Tl, Ol = {};
function Sl() {
  if (Tl) return Ol;
  Tl = 1;
  var t19 = kl(), e2 = dp(), o2 = function() {
    if (Hl) return Vl;
    Hl = 1;
    var t20 = kl(), e3 = hl();
    return Vl = t20 ? {}.toString : function() {
      return "[object " + e3(this) + "]";
    };
  }();
  return t19 || e2(Object.prototype, "toString", o2, { unsafe: true }), Ol;
}
var Zl, El, Pl, Nl, Al, Rl, Dl, ql, zl, Bl = {};
function Il() {
  if (El) return Zl;
  El = 1;
  var t19 = hl(), e2 = String;
  return Zl = function(o2) {
    if ("Symbol" === t19(o2)) throw new TypeError("Cannot convert a Symbol value to a string");
    return e2(o2);
  };
}
function Fl() {
  if (Al) return Bl;
  Al = 1;
  var t19 = function() {
    if (Nl) return Pl;
    Nl = 1;
    var t20 = th(), e3 = xu(), o3 = Il(), r3 = Lh(), L3 = t20("".charAt), n3 = t20("".charCodeAt), i3 = t20("".slice), s3 = function(t21) {
      return function(s4, d2) {
        var k2, h2, a2 = o3(r3(s4)), u2 = e3(d2), p2 = a2.length;
        return u2 < 0 || u2 >= p2 ? t21 ? "" : void 0 : (k2 = n3(a2, u2)) < 55296 || k2 > 56319 || u2 + 1 === p2 || (h2 = n3(a2, u2 + 1)) < 56320 || h2 > 57343 ? t21 ? L3(a2, u2) : k2 : t21 ? i3(a2, u2, u2 + 2) : h2 - 56320 + (k2 - 55296 << 10) + 65536;
      };
    };
    return Pl = { codeAt: s3(false), charAt: s3(true) };
  }().charAt, e2 = Il(), o2 = Iu(), r2 = Lc(), L2 = nc(), n2 = "String Iterator", i2 = o2.set, s2 = o2.getterFor(n2);
  return r2(String, "String", function(t20) {
    i2(this, { type: n2, string: e2(t20), index: 0 });
  }, function() {
    var e3, o3 = s2(this), r3 = o3.string, n3 = o3.index;
    return n3 >= r3.length ? L2(void 0, true) : (e3 = t19(r3, n3), o3.index += e3.length, L2(e3, false));
  }), Bl;
}
function Ul() {
  if (Dl) return Rl;
  Dl = 1;
  var t19 = ih();
  return Rl = t19;
}
!function() {
  if (zl) return ql;
  zl = 1, ic(), gl(), function() {
    if (bl) return Cl;
    bl = 1;
    var t20 = Gp(), e2 = th(), o2 = vu(), r2 = Lh(), L2 = cl(), n2 = xl(), i2 = Nh(), s2 = Jk(), d2 = n2.Map, k2 = n2.has, h2 = n2.get, a2 = n2.set, u2 = e2([].push), p2 = i2 || s2(function() {
      return 1 !== d2.groupBy("ab", function(t21) {
        return t21;
      }).get("a").length;
    });
    t20({ target: "Map", stat: true, forced: i2 || p2 }, { groupBy: function(t21, e3) {
      r2(t21), o2(e3);
      var n3 = new d2(), i3 = 0;
      return L2(t21, function(t22) {
        var o3 = e3(t22, i3++);
        k2(n3, o3) ? u2(h2(n3, o3), t22) : a2(n3, o3, [t22]);
      }), n3;
    } });
  }(), Sl(), Fl();
  var t19 = Ul();
  ql = t19.Map;
}();
var $l, Yl, Xl = {};
function Gl() {
  return Yl || (Yl = 1, $l || ($l = 1, fl()("Set", function(t19) {
    return function() {
      return t19(this, arguments.length ? arguments[0] : void 0);
    };
  }, vl()))), Xl;
}
var Kl, Jl, Ql, tw, ew, ow, rw, Lw, nw, iw, sw, dw, kw, hw, aw, uw, pw, cw, lw, ww, Mw, fw = {};
function Ww() {
  if (Jl) return Kl;
  Jl = 1;
  var t19 = th(), e2 = Set.prototype;
  return Kl = { Set, add: t19(e2.add), has: t19(e2.has), remove: t19(e2.delete), proto: e2 };
}
function jw() {
  if (tw) return Ql;
  tw = 1;
  var t19 = Ww().has;
  return Ql = function(e2) {
    return t19(e2), e2;
  };
}
function mw() {
  if (ow) return ew;
  ow = 1;
  var t19 = Mu();
  return ew = function(e2, o2, r2) {
    for (var L2, n2, i2 = r2 ? e2 : e2.iterator, s2 = e2.next; !(L2 = t19(s2, i2)).done; ) if (void 0 !== (n2 = o2(L2.value))) return n2;
  }, ew;
}
function vw() {
  if (Lw) return rw;
  Lw = 1;
  var t19 = th(), e2 = mw(), o2 = Ww(), r2 = o2.Set, L2 = o2.proto, n2 = t19(L2.forEach), i2 = t19(L2.keys), s2 = i2(new r2()).next;
  return rw = function(t20, o3, r3) {
    return r3 ? e2({ iterator: i2(t20), next: s2 }, o3) : n2(t20, o3);
  }, rw;
}
function gw() {
  if (iw) return nw;
  iw = 1;
  var t19 = Ww(), e2 = vw(), o2 = t19.Set, r2 = t19.add;
  return nw = function(t20) {
    var L2 = new o2();
    return e2(t20, function(t21) {
      r2(L2, t21);
    }), L2;
  }, nw;
}
function _w() {
  if (dw) return sw;
  dw = 1;
  var t19 = tc(), e2 = Ww();
  return sw = t19(e2.proto, "size", "get") || function(t20) {
    return t20.size;
  }, sw;
}
function yw() {
  return hw ? kw : (hw = 1, kw = function(t19) {
    return { iterator: t19, next: t19.next, done: false };
  });
}
function bw() {
  if (uw) return aw;
  uw = 1;
  var t19 = vu(), e2 = Gh(), o2 = Mu(), r2 = xu(), L2 = yw(), n2 = "Invalid size", i2 = RangeError, s2 = TypeError, d2 = Math.max, k2 = function(e3, o3) {
    this.set = e3, this.size = d2(o3, 0), this.has = t19(e3.has), this.keys = t19(e3.keys);
  };
  return k2.prototype = { getIterator: function() {
    return L2(e2(o2(this.keys, this.set)));
  }, includes: function(t20) {
    return o2(this.has, this.set, t20);
  } }, aw = function(t20) {
    e2(t20);
    var o3 = +t20.size;
    if (o3 != o3) throw new s2(n2);
    var L3 = r2(o3);
    if (L3 < 0) throw new i2(n2);
    return new k2(t20, L3);
  };
}
function Cw() {
  if (ww) return lw;
  ww = 1;
  var t19 = fu(), e2 = function(t20) {
    return { size: t20, has: function() {
      return false;
    }, keys: function() {
      return { next: function() {
        return { done: true };
      } };
    } };
  }, o2 = function(t20) {
    return { size: t20, has: function() {
      return true;
    }, keys: function() {
      throw new Error("e");
    } };
  };
  return lw = function(r2, L2) {
    var n2 = t19("Set");
    try {
      new n2()[r2](e2(0));
      try {
        return new n2()[r2](e2(-1)), false;
      } catch (t20) {
        if (!L2) return true;
        try {
          return new n2()[r2](o2(-1 / 0)), false;
        } catch (t21) {
          var i2 = new n2();
          return i2.add(1), i2.add(2), L2(i2[r2](o2(1 / 0)));
        }
      }
    } catch (t20) {
      return false;
    }
  }, lw;
}
function xw() {
  if (Mw) return fw;
  Mw = 1;
  var t19 = Gp(), e2 = function() {
    if (cw) return pw;
    cw = 1;
    var t20 = jw(), e3 = Ww(), o2 = gw(), r2 = _w(), L2 = bw(), n2 = vw(), i2 = mw(), s2 = e3.has, d2 = e3.remove;
    return pw = function(e4) {
      var k2 = t20(this), h2 = L2(e4), a2 = o2(k2);
      return r2(k2) <= h2.size ? n2(k2, function(t21) {
        h2.includes(t21) && d2(a2, t21);
      }) : i2(h2.getIterator(), function(t21) {
        s2(k2, t21) && d2(a2, t21);
      }), a2;
    }, pw;
  }();
  return t19({ target: "Set", proto: true, real: true, forced: !Cw()("difference", function(t20) {
    return 0 === t20.size;
  }) }, { difference: e2 }), fw;
}
var Vw, Hw, Tw, Ow = {};
function Sw() {
  if (Tw) return Ow;
  Tw = 1;
  var t19 = Gp(), e2 = Jk(), o2 = function() {
    if (Hw) return Vw;
    Hw = 1;
    var t20 = jw(), e3 = Ww(), o3 = _w(), r2 = bw(), L2 = vw(), n2 = mw(), i2 = e3.Set, s2 = e3.add, d2 = e3.has;
    return Vw = function(e4) {
      var k2 = t20(this), h2 = r2(e4), a2 = new i2();
      return o3(k2) > h2.size ? n2(h2.getIterator(), function(t21) {
        d2(k2, t21) && s2(a2, t21);
      }) : L2(k2, function(t21) {
        h2.includes(t21) && s2(a2, t21);
      }), a2;
    }, Vw;
  }();
  return t19({ target: "Set", proto: true, real: true, forced: !Cw()("intersection", function(t20) {
    return 2 === t20.size && t20.has(1) && t20.has(2);
  }) || e2(function() {
    return "3,2" !== String(Array.from((/* @__PURE__ */ new Set([1, 2, 3])).intersection(/* @__PURE__ */ new Set([3, 2]))));
  }) }, { intersection: o2 }), Ow;
}
var Zw, Ew, Pw, Nw = {};
function Aw() {
  if (Pw) return Nw;
  Pw = 1;
  var t19 = Gp(), e2 = function() {
    if (Ew) return Zw;
    Ew = 1;
    var t20 = jw(), e3 = Ww().has, o2 = _w(), r2 = bw(), L2 = vw(), n2 = mw(), i2 = pl();
    return Zw = function(s2) {
      var d2 = t20(this), k2 = r2(s2);
      if (o2(d2) <= k2.size) return false !== L2(d2, function(t21) {
        if (k2.includes(t21)) return false;
      }, true);
      var h2 = k2.getIterator();
      return false !== n2(h2, function(t21) {
        if (e3(d2, t21)) return i2(h2, "normal", false);
      });
    }, Zw;
  }();
  return t19({ target: "Set", proto: true, real: true, forced: !Cw()("isDisjointFrom", function(t20) {
    return !t20;
  }) }, { isDisjointFrom: e2 }), Nw;
}
var Rw, Dw, qw, zw = {};
function Bw() {
  if (qw) return zw;
  qw = 1;
  var t19 = Gp(), e2 = function() {
    if (Dw) return Rw;
    Dw = 1;
    var t20 = jw(), e3 = _w(), o2 = vw(), r2 = bw();
    return Rw = function(L2) {
      var n2 = t20(this), i2 = r2(L2);
      return !(e3(n2) > i2.size) && false !== o2(n2, function(t21) {
        if (!i2.includes(t21)) return false;
      }, true);
    }, Rw;
  }();
  return t19({ target: "Set", proto: true, real: true, forced: !Cw()("isSubsetOf", function(t20) {
    return t20;
  }) }, { isSubsetOf: e2 }), zw;
}
var Iw, Fw, Uw, $w = {};
function Yw() {
  if (Uw) return $w;
  Uw = 1;
  var t19 = Gp(), e2 = function() {
    if (Fw) return Iw;
    Fw = 1;
    var t20 = jw(), e3 = Ww().has, o2 = _w(), r2 = bw(), L2 = mw(), n2 = pl();
    return Iw = function(i2) {
      var s2 = t20(this), d2 = r2(i2);
      if (o2(s2) < d2.size) return false;
      var k2 = d2.getIterator();
      return false !== L2(k2, function(t21) {
        if (!e3(s2, t21)) return n2(k2, "normal", false);
      });
    }, Iw;
  }();
  return t19({ target: "Set", proto: true, real: true, forced: !Cw()("isSupersetOf", function(t20) {
    return !t20;
  }) }, { isSupersetOf: e2 }), $w;
}
var Xw, Gw, Kw, Jw = {};
function Qw() {
  if (Kw) return Jw;
  Kw = 1;
  var t19 = Gp(), e2 = function() {
    if (Gw) return Xw;
    Gw = 1;
    var t20 = jw(), e3 = Ww(), o2 = gw(), r2 = bw(), L2 = mw(), n2 = e3.add, i2 = e3.has, s2 = e3.remove;
    return Xw = function(e4) {
      var d2 = t20(this), k2 = r2(e4).getIterator(), h2 = o2(d2);
      return L2(k2, function(t21) {
        i2(d2, t21) ? s2(h2, t21) : n2(h2, t21);
      }), h2;
    }, Xw;
  }();
  return t19({ target: "Set", proto: true, real: true, forced: !Cw()("symmetricDifference") }, { symmetricDifference: e2 }), Jw;
}
var tM, eM, oM, rM, LM, nM = {};
function iM() {
  if (oM) return nM;
  oM = 1;
  var t19 = Gp(), e2 = function() {
    if (eM) return tM;
    eM = 1;
    var t20 = jw(), e3 = Ww().add, o2 = gw(), r2 = bw(), L2 = mw();
    return tM = function(n2) {
      var i2 = t20(this), s2 = r2(n2).getIterator(), d2 = o2(i2);
      return L2(s2, function(t21) {
        e3(d2, t21);
      }), d2;
    }, tM;
  }();
  return t19({ target: "Set", proto: true, real: true, forced: !Cw()("union") }, { union: e2 }), nM;
}
!function() {
  if (LM) return rM;
  LM = 1, ic(), Sl(), Gl(), xw(), Sw(), Aw(), Bw(), Yw(), Qw(), iM(), Fl();
  var t19 = Ul();
  rM = t19.Set;
}();
var sM, dM, kM, hM, aM, uM, pM, cM, lM, wM, MM, fM, WM, jM, mM, vM, gM = {}, _M = {};
function yM() {
  if (dM) return sM;
  dM = 1;
  var t19 = eh();
  return sM = Array.isArray || function(e2) {
    return "Array" === t19(e2);
  };
}
function bM() {
  if (hM) return kM;
  hM = 1;
  var t19 = th(), e2 = Jk(), o2 = Yh(), r2 = hl(), L2 = fu(), n2 = ip(), i2 = function() {
  }, s2 = L2("Reflect", "construct"), d2 = /^\s*(?:class|function)\b/, k2 = t19(d2.exec), h2 = !d2.test(i2), a2 = function(t20) {
    if (!o2(t20)) return false;
    try {
      return s2(i2, [], t20), true;
    } catch (t21) {
      return false;
    }
  }, u2 = function(t20) {
    if (!o2(t20)) return false;
    switch (r2(t20)) {
      case "AsyncFunction":
      case "GeneratorFunction":
      case "AsyncGeneratorFunction":
        return false;
    }
    try {
      return h2 || !!k2(d2, n2(t20));
    } catch (t21) {
      return true;
    }
  };
  return u2.sham = true, kM = !s2 || e2(function() {
    var t20;
    return a2(a2.call) || !a2(Object) || !a2(function() {
      t20 = true;
    }) || t20;
  }) ? u2 : a2;
}
function CM() {
  if (uM) return aM;
  uM = 1;
  var t19 = yM(), e2 = bM(), o2 = Xh(), r2 = $h()("species"), L2 = Array;
  return aM = function(n2) {
    var i2;
    return t19(n2) && (i2 = n2.constructor, (e2(i2) && (i2 === L2 || t19(i2.prototype)) || o2(i2) && null === (i2 = i2[r2])) && (i2 = void 0)), void 0 === i2 ? L2 : i2;
  }, aM;
}
function xM() {
  if (cM) return pM;
  cM = 1;
  var t19 = CM();
  return pM = function(e2, o2) {
    return new (t19(e2))(0 === o2 ? 0 : o2);
  };
}
function VM() {
  if (fM) return MM;
  fM = 1;
  var t19 = th(), e2 = jl(), o2 = il().getWeakData, r2 = ll(), L2 = Gh(), n2 = rh(), i2 = Xh(), s2 = cl(), d2 = function() {
    if (wM) return lM;
    wM = 1;
    var t20 = sl(), e3 = th(), o3 = oh(), r3 = qh(), L3 = Tu(), n3 = xM(), i3 = e3([].push), s3 = function(e4) {
      var s4 = 1 === e4, d3 = 2 === e4, k3 = 3 === e4, h3 = 4 === e4, a3 = 6 === e4, u3 = 7 === e4, p3 = 5 === e4 || a3;
      return function(c3, l3, w3, M3) {
        for (var f3, W3, j2 = r3(c3), m2 = o3(j2), v2 = L3(m2), g2 = t20(l3, w3), _2 = 0, y2 = M3 || n3, b2 = s4 ? y2(c3, v2) : d3 || u3 ? y2(c3, 0) : void 0; v2 > _2; _2++) if ((p3 || _2 in m2) && (W3 = g2(f3 = m2[_2], _2, j2), e4)) if (s4) b2[_2] = W3;
        else if (W3) switch (e4) {
          case 3:
            return true;
          case 5:
            return f3;
          case 6:
            return _2;
          case 2:
            i3(b2, f3);
        }
        else switch (e4) {
          case 4:
            return false;
          case 7:
            i3(b2, f3);
        }
        return a3 ? -1 : k3 || h3 ? h3 : b2;
      };
    };
    return lM = { forEach: s3(0), map: s3(1), filter: s3(2), some: s3(3), every: s3(4), find: s3(5), findIndex: s3(6), filterReject: s3(7) };
  }(), k2 = zh(), h2 = Iu(), a2 = h2.set, u2 = h2.getterFor, p2 = d2.find, c2 = d2.findIndex, l2 = t19([].splice), w2 = 0, M2 = function(t20) {
    return t20.frozen || (t20.frozen = new f2());
  }, f2 = function() {
    this.entries = [];
  }, W2 = function(t20, e3) {
    return p2(t20.entries, function(t21) {
      return t21[0] === e3;
    });
  };
  return f2.prototype = { get: function(t20) {
    var e3 = W2(this, t20);
    if (e3) return e3[1];
  }, has: function(t20) {
    return !!W2(this, t20);
  }, set: function(t20, e3) {
    var o3 = W2(this, t20);
    o3 ? o3[1] = e3 : this.entries.push([t20, e3]);
  }, delete: function(t20) {
    var e3 = c2(this.entries, function(e4) {
      return e4[0] === t20;
    });
    return ~e3 && l2(this.entries, e3, 1), !!~e3;
  } }, MM = { getConstructor: function(t20, d3, h3, p3) {
    var c3 = t20(function(t21, e3) {
      r2(t21, l3), a2(t21, { type: d3, id: w2++, frozen: null }), n2(e3) || s2(e3, t21[p3], { that: t21, AS_ENTRIES: h3 });
    }), l3 = c3.prototype, f3 = u2(d3), W3 = function(t21, e3, r3) {
      var n3 = f3(t21), i3 = o2(L2(e3), true);
      return true === i3 ? M2(n3).set(e3, r3) : i3[n3.id] = r3, t21;
    };
    return e2(l3, { delete: function(t21) {
      var e3 = f3(this);
      if (!i2(t21)) return false;
      var r3 = o2(t21);
      return true === r3 ? M2(e3).delete(t21) : r3 && k2(r3, e3.id) && delete r3[e3.id];
    }, has: function(t21) {
      var e3 = f3(this);
      if (!i2(t21)) return false;
      var r3 = o2(t21);
      return true === r3 ? M2(e3).has(t21) : r3 && k2(r3, e3.id);
    } }), e2(l3, h3 ? { get: function(t21) {
      var e3 = f3(this);
      if (i2(t21)) {
        var r3 = o2(t21);
        if (true === r3) return M2(e3).get(t21);
        if (r3) return r3[e3.id];
      }
    }, set: function(t21, e3) {
      return W3(this, t21, e3);
    } } : { add: function(t21) {
      return W3(this, t21, true);
    } }), c3;
  } }, MM;
}
function HM() {
  return jM || (jM = 1, function() {
    if (WM) return _M;
    WM = 1;
    var t19, e2 = nl(), o2 = ih(), r2 = th(), L2 = jl(), n2 = il(), i2 = fl(), s2 = VM(), d2 = Xh(), k2 = Iu().enforce, h2 = Jk(), a2 = qu(), u2 = Object, p2 = Array.isArray, c2 = u2.isExtensible, l2 = u2.isFrozen, w2 = u2.isSealed, M2 = u2.freeze, f2 = u2.seal, W2 = !o2.ActiveXObject && "ActiveXObject" in o2, j2 = function(t20) {
      return function() {
        return t20(this, arguments.length ? arguments[0] : void 0);
      };
    }, m2 = i2("WeakMap", j2, s2), v2 = m2.prototype, g2 = r2(v2.set);
    if (a2) if (W2) {
      t19 = s2.getConstructor(j2, "WeakMap", true), n2.enable();
      var _2 = r2(v2.delete), y2 = r2(v2.has), b2 = r2(v2.get);
      L2(v2, { delete: function(e3) {
        if (d2(e3) && !c2(e3)) {
          var o3 = k2(this);
          return o3.frozen || (o3.frozen = new t19()), _2(this, e3) || o3.frozen.delete(e3);
        }
        return _2(this, e3);
      }, has: function(e3) {
        if (d2(e3) && !c2(e3)) {
          var o3 = k2(this);
          return o3.frozen || (o3.frozen = new t19()), y2(this, e3) || o3.frozen.has(e3);
        }
        return y2(this, e3);
      }, get: function(e3) {
        if (d2(e3) && !c2(e3)) {
          var o3 = k2(this);
          return o3.frozen || (o3.frozen = new t19()), y2(this, e3) ? b2(this, e3) : o3.frozen.get(e3);
        }
        return b2(this, e3);
      }, set: function(e3, o3) {
        if (d2(e3) && !c2(e3)) {
          var r3 = k2(this);
          r3.frozen || (r3.frozen = new t19()), y2(this, e3) ? g2(this, e3, o3) : r3.frozen.set(e3, o3);
        } else g2(this, e3, o3);
        return this;
      } });
    } else e2 && h2(function() {
      var t20 = M2([]);
      return g2(new m2(), t20, 1), !l2(t20);
    }) && L2(v2, { set: function(t20, e3) {
      var o3;
      return p2(t20) && (l2(t20) ? o3 = M2 : w2(t20) && (o3 = f2)), g2(this, t20, e3), o3 && o3(t20), this;
    } });
  }()), gM;
}
!function() {
  if (vM) return mM;
  vM = 1, ic(), Sl(), HM();
  var t19 = Ul();
  mM = t19.WeakMap;
}();
var TM, OM, SM, ZM, EM, PM, NM, AM, RM, DM = {};
function qM() {
  if (OM) return TM;
  OM = 1;
  var t19 = Gh(), e2 = pl();
  return TM = function(o2, r2, L2, n2) {
    try {
      return n2 ? r2(t19(L2)[0], L2[1]) : r2(L2);
    } catch (t20) {
      e2(o2, "throw", t20);
    }
  }, TM;
}
function zM() {
  if (ZM) return SM;
  ZM = 1;
  var t19 = oa(), e2 = Cu(), o2 = zu();
  return SM = function(r2, L2, n2) {
    t19 ? e2.f(r2, L2, o2(0, n2)) : r2[L2] = n2;
  };
}
function BM() {
  if (NM) return DM;
  NM = 1;
  var t19 = Gp(), e2 = function() {
    if (PM) return EM;
    PM = 1;
    var t20 = sl(), e3 = Mu(), o2 = qh(), r2 = qM(), L2 = dl(), n2 = bM(), i2 = Tu(), s2 = zM(), d2 = ul(), k2 = al(), h2 = Array;
    return EM = function(a2) {
      var u2 = o2(a2), p2 = n2(this), c2 = arguments.length, l2 = c2 > 1 ? arguments[1] : void 0, w2 = void 0 !== l2;
      w2 && (l2 = t20(l2, c2 > 2 ? arguments[2] : void 0));
      var M2, f2, W2, j2, m2, v2, g2 = k2(u2), _2 = 0;
      if (!g2 || this === h2 && L2(g2)) for (M2 = i2(u2), f2 = p2 ? new this(M2) : h2(M2); M2 > _2; _2++) v2 = w2 ? l2(u2[_2], _2) : u2[_2], s2(f2, _2, v2);
      else for (f2 = p2 ? new this() : [], m2 = (j2 = d2(u2, g2)).next; !(W2 = e3(m2, j2)).done; _2++) v2 = w2 ? r2(j2, l2, [W2.value, _2], true) : W2.value, s2(f2, _2, v2);
      return f2.length = _2, f2;
    }, EM;
  }();
  return t19({ target: "Array", stat: true, forced: !wl()(function(t20) {
    Array.from(t20);
  }) }, { from: e2 }), DM;
}
!function() {
  if (RM) return AM;
  RM = 1, Fl(), BM();
  var t19 = Ul();
  AM = t19.Array.from;
}();
var IM, FM, UM, $M, YM, XM, GM = {};
function KM() {
  if (UM) return GM;
  UM = 1;
  var t19 = Gp(), e2 = function() {
    if (FM) return IM;
    FM = 1;
    var t20 = oa(), e3 = th(), o2 = Mu(), r2 = Jk(), L2 = Eu(), n2 = Up(), i2 = Xu(), s2 = qh(), d2 = oh(), k2 = Object.assign, h2 = Object.defineProperty, a2 = e3([].concat);
    return IM = !k2 || r2(function() {
      if (t20 && 1 !== k2({ b: 1 }, k2(h2({}, "a", { enumerable: true, get: function() {
        h2(this, "b", { value: 3, enumerable: false });
      } }), { b: 2 })).b) return true;
      var e4 = {}, o3 = {}, r3 = Symbol("assign detection"), n3 = "abcdefghijklmnopqrst";
      return e4[r3] = 7, n3.split("").forEach(function(t21) {
        o3[t21] = t21;
      }), 7 !== k2({}, e4)[r3] || L2(k2({}, o3)).join("") !== n3;
    }) ? function(e4, r3) {
      for (var k3 = s2(e4), h3 = arguments.length, u2 = 1, p2 = n2.f, c2 = i2.f; h3 > u2; ) for (var l2, w2 = d2(arguments[u2++]), M2 = p2 ? a2(L2(w2), p2(w2)) : L2(w2), f2 = M2.length, W2 = 0; f2 > W2; ) l2 = M2[W2++], t20 && !o2(c2, w2, l2) || (k3[l2] = w2[l2]);
      return k3;
    } : k2, IM;
  }();
  return t19({ target: "Object", stat: true, arity: 2, forced: Object.assign !== e2 }, { assign: e2 }), GM;
}
!function() {
  if (YM) return $M;
  YM = 1, KM();
  var t19 = Ul();
  $M = t19.Object.assign;
}();
var JM = /* @__PURE__ */ new WeakMap();
function QM() {
  if (void 0 !== XM) return XM;
  var t19 = false;
  try {
    var e2 = function() {
    }, o2 = Object.defineProperty({}, "passive", { enumerable: true, get: function() {
      return t19 = true, true;
    } });
    window.addEventListener("testPassive", e2, o2), window.removeEventListener("testPassive", e2, o2);
  } catch (t20) {
  }
  return XM = !!t19 && { passive: false };
}
function tf(t19) {
  var e2 = JM.get(t19) || [];
  return JM.set(t19, e2), function(t20, o2, r2) {
    function L2(t21) {
      t21.defaultPrevented || r2(t21);
    }
    o2.split(/\s+/g).forEach(function(o3) {
      e2.push({ elem: t20, eventName: o3, handler: L2 }), t20.addEventListener(o3, L2, QM());
    });
  };
}
function ef(t19) {
  var e2 = function(t20) {
    return t20.touches ? t20.touches[t20.touches.length - 1] : t20;
  }(t19);
  return { x: e2.clientX, y: e2.clientY };
}
function of(t19, e2) {
  return void 0 === e2 && (e2 = []), e2.some(function(e3) {
    return t19 === e3;
  });
}
var rf = ["webkit", "moz", "ms", "o"], Lf = new RegExp("^-(?!(?:" + rf.join("|") + ")-)");
function nf(t19, e2) {
  e2 = function(t20) {
    var e3 = {};
    return Object.keys(t20).forEach(function(o2) {
      if (Lf.test(o2)) {
        var r2 = t20[o2];
        o2 = o2.replace(/^-/, ""), e3[o2] = r2, rf.forEach(function(t21) {
          e3["-" + t21 + "-" + o2] = r2;
        });
      } else e3[o2] = t20[o2];
    }), e3;
  }(e2), Object.keys(e2).forEach(function(o2) {
    var r2 = o2.replace(/^-/, "").replace(/-([a-z])/g, function(t20, e3) {
      return e3.toUpperCase();
    });
    t19.style[r2] = e2[o2];
  });
}
var sf = function() {
  function t19(t20) {
    this.velocityMultiplier = window.devicePixelRatio, this.updateTime = Date.now(), this.delta = { x: 0, y: 0 }, this.velocity = { x: 0, y: 0 }, this.lastPosition = { x: 0, y: 0 }, this.lastPosition = ef(t20);
  }
  return t19.prototype.update = function(t20) {
    var e2 = this, o2 = e2.velocity, r2 = e2.updateTime, L2 = e2.lastPosition, n2 = Date.now(), i2 = ef(t20), s2 = { x: -(i2.x - L2.x), y: -(i2.y - L2.y) }, d2 = n2 - r2 || 16.7, k2 = s2.x / d2 * 16.7, h2 = s2.y / d2 * 16.7;
    o2.x = k2 * this.velocityMultiplier, o2.y = h2 * this.velocityMultiplier, this.delta = s2, this.updateTime = n2, this.lastPosition = i2;
  }, t19;
}(), df = function() {
  function t19() {
    this._touchList = {};
  }
  return Object.defineProperty(t19.prototype, "_primitiveValue", { get: function() {
    return { x: 0, y: 0 };
  }, enumerable: true, configurable: true }), t19.prototype.isActive = function() {
    return void 0 !== this._activeTouchID;
  }, t19.prototype.getDelta = function() {
    var t20 = this._getActiveTracker();
    return t20 ? Xk({}, t20.delta) : this._primitiveValue;
  }, t19.prototype.getVelocity = function() {
    var t20 = this._getActiveTracker();
    return t20 ? Xk({}, t20.velocity) : this._primitiveValue;
  }, t19.prototype.getEasingDistance = function(t20) {
    var e2 = 1 - t20, o2 = { x: 0, y: 0 }, r2 = this.getVelocity();
    return Object.keys(r2).forEach(function(t21) {
      for (var L2 = Math.abs(r2[t21]) <= 10 ? 0 : r2[t21]; 0 !== L2; ) o2[t21] += L2, L2 = L2 * e2 | 0;
    }), o2;
  }, t19.prototype.track = function(t20) {
    var e2 = this, o2 = t20.targetTouches;
    return Array.from(o2).forEach(function(t21) {
      e2._add(t21);
    }), this._touchList;
  }, t19.prototype.update = function(t20) {
    var e2 = this, o2 = t20.touches, r2 = t20.changedTouches;
    return Array.from(o2).forEach(function(t21) {
      e2._renew(t21);
    }), this._setActiveID(r2), this._touchList;
  }, t19.prototype.release = function(t20) {
    var e2 = this;
    delete this._activeTouchID, Array.from(t20.changedTouches).forEach(function(t21) {
      e2._delete(t21);
    });
  }, t19.prototype._add = function(t20) {
    this._has(t20) && this._delete(t20);
    var e2 = new sf(t20);
    this._touchList[t20.identifier] = e2;
  }, t19.prototype._renew = function(t20) {
    this._has(t20) && this._touchList[t20.identifier].update(t20);
  }, t19.prototype._delete = function(t20) {
    delete this._touchList[t20.identifier];
  }, t19.prototype._has = function(t20) {
    return this._touchList.hasOwnProperty(t20.identifier);
  }, t19.prototype._setActiveID = function(t20) {
    this._activeTouchID = t20[t20.length - 1].identifier;
  }, t19.prototype._getActiveTracker = function() {
    return this._touchList[this._activeTouchID];
  }, t19;
}();
function kf(t19, e2, o2) {
  return Math.max(e2, Math.min(o2, t19));
}
function hf(t19, e2, o2) {
  var r2;
  void 0 === e2 && (e2 = 0);
  var L2 = -1 / 0;
  return function() {
    for (var n2 = this, i2 = [], s2 = 0; s2 < arguments.length; s2++) i2[s2] = arguments[s2];
    if (o2) {
      var d2 = Date.now(), k2 = d2 - L2;
      L2 = d2, k2 >= e2 && t19.apply(this, i2);
    }
    clearTimeout(r2), r2 = setTimeout(function() {
      t19.apply(n2, i2);
    }, e2);
  };
}
function af(t19, e2) {
  return void 0 === e2 && (e2 = 1 / 0), function(o2, r2) {
    var L2 = "_" + r2;
    Object.defineProperty(o2, r2, { get: function() {
      return this[L2];
    }, set: function(o3) {
      Object.defineProperty(this, L2, { value: kf(o3, t19, e2), enumerable: false, writable: true, configurable: true });
    }, enumerable: true, configurable: true });
  };
}
function uf(t19, e2) {
  var o2 = "_" + e2;
  Object.defineProperty(t19, e2, { get: function() {
    return this[o2];
  }, set: function(t20) {
    Object.defineProperty(this, o2, { value: !!t20, enumerable: false, writable: true, configurable: true });
  }, enumerable: true, configurable: true });
}
function pf() {
  for (var t19 = [], e2 = 0; e2 < arguments.length; e2++) t19[e2] = arguments[e2];
  return function(e3, o2, r2) {
    var L2 = r2.value;
    return { get: function() {
      return this.hasOwnProperty(o2) || Object.defineProperty(this, o2, { value: hf.apply(void 0, Kk([L2], t19)) }), this[o2];
    } };
  };
}
var cf, lf = function() {
  function t19(t20) {
    var e2 = this;
    void 0 === t20 && (t20 = {}), this.damping = 0.1, this.thumbMinSize = 20, this.renderByPixels = true, this.alwaysShowTracks = false, this.continuousScrolling = true, this.delegateTo = null, this.plugins = {}, Object.keys(t20).forEach(function(o2) {
      e2[o2] = t20[o2];
    });
  }
  return Object.defineProperty(t19.prototype, "wheelEventTarget", { get: function() {
    return this.delegateTo;
  }, set: function(t20) {
    console.warn("[smooth-scrollbar]: `options.wheelEventTarget` is deprecated and will be removed in the future, use `options.delegateTo` instead."), this.delegateTo = t20;
  }, enumerable: true, configurable: true }), Gk([af(0, 1)], t19.prototype, "damping", void 0), Gk([af(0, 1 / 0)], t19.prototype, "thumbMinSize", void 0), Gk([uf], t19.prototype, "renderByPixels", void 0), Gk([uf], t19.prototype, "alwaysShowTracks", void 0), Gk([uf], t19.prototype, "continuousScrolling", void 0), t19;
}();
!function(t19) {
  t19.X = "x", t19.Y = "y";
}(cf || (cf = {}));
var wf = function() {
  function t19(t20, e2) {
    void 0 === e2 && (e2 = 0), this._direction = t20, this._minSize = e2, this.element = document.createElement("div"), this.displaySize = 0, this.realSize = 0, this.offset = 0, this.element.className = "scrollbar-thumb scrollbar-thumb-" + t20;
  }
  return t19.prototype.attachTo = function(t20) {
    t20.appendChild(this.element);
  }, t19.prototype.update = function(t20, e2, o2) {
    this.realSize = Math.min(e2 / o2, 1) * e2, this.displaySize = Math.max(this.realSize, this._minSize), this.offset = t20 / o2 * (e2 + (this.realSize - this.displaySize)), nf(this.element, this._getStyle());
  }, t19.prototype._getStyle = function() {
    switch (this._direction) {
      case cf.X:
        return { width: this.displaySize + "px", "-transform": "translate3d(" + this.offset + "px, 0, 0)" };
      case cf.Y:
        return { height: this.displaySize + "px", "-transform": "translate3d(0, " + this.offset + "px, 0)" };
      default:
        return null;
    }
  }, t19;
}(), Mf = function() {
  function t19(t20, e2) {
    void 0 === e2 && (e2 = 0), this.element = document.createElement("div"), this._isShown = false, this.element.className = "scrollbar-track scrollbar-track-" + t20, this.thumb = new wf(t20, e2), this.thumb.attachTo(this.element);
  }
  return t19.prototype.attachTo = function(t20) {
    t20.appendChild(this.element);
  }, t19.prototype.show = function() {
    this._isShown || (this._isShown = true, this.element.classList.add("show"));
  }, t19.prototype.hide = function() {
    this._isShown && (this._isShown = false, this.element.classList.remove("show"));
  }, t19.prototype.update = function(t20, e2, o2) {
    nf(this.element, { display: o2 <= e2 ? "none" : "block" }), this.thumb.update(t20, e2, o2);
  }, t19;
}(), ff = function() {
  function t19(t20) {
    this._scrollbar = t20;
    var e2 = t20.options.thumbMinSize;
    this.xAxis = new Mf(cf.X, e2), this.yAxis = new Mf(cf.Y, e2), this.xAxis.attachTo(t20.containerEl), this.yAxis.attachTo(t20.containerEl), t20.options.alwaysShowTracks && (this.xAxis.show(), this.yAxis.show());
  }
  return t19.prototype.update = function() {
    var t20 = this._scrollbar, e2 = t20.size, o2 = t20.offset;
    this.xAxis.update(o2.x, e2.container.width, e2.content.width), this.yAxis.update(o2.y, e2.container.height, e2.content.height);
  }, t19.prototype.autoHideOnIdle = function() {
    this._scrollbar.options.alwaysShowTracks || (this.xAxis.hide(), this.yAxis.hide());
  }, Gk([pf(300)], t19.prototype, "autoHideOnIdle", null), t19;
}();
var Wf = /* @__PURE__ */ new WeakMap();
function jf(t19) {
  return Math.pow(t19 - 1, 3) + 1;
}
var mf, vf, gf, _f = function() {
  function t19(t20, e2) {
    var o2 = this.constructor;
    this.scrollbar = t20, this.name = o2.pluginName, this.options = Xk(Xk({}, o2.defaultOptions), e2);
  }
  return t19.prototype.onInit = function() {
  }, t19.prototype.onDestroy = function() {
  }, t19.prototype.onUpdate = function() {
  }, t19.prototype.onRender = function(t20) {
  }, t19.prototype.transformDelta = function(t20, e2) {
    return Xk({}, t20);
  }, t19.pluginName = "", t19.defaultOptions = {}, t19;
}(), yf = { order: /* @__PURE__ */ new Set(), constructors: {} };
function bf() {
  for (var t19 = [], e2 = 0; e2 < arguments.length; e2++) t19[e2] = arguments[e2];
  t19.forEach(function(t20) {
    var e3 = t20.pluginName;
    if (!e3) throw new TypeError("plugin name is required");
    yf.order.add(e3), yf.constructors[e3] = t20;
  });
}
!function(t19) {
  t19[t19.TAB = 9] = "TAB", t19[t19.SPACE = 32] = "SPACE", t19[t19.PAGE_UP = 33] = "PAGE_UP", t19[t19.PAGE_DOWN = 34] = "PAGE_DOWN", t19[t19.END = 35] = "END", t19[t19.HOME = 36] = "HOME", t19[t19.LEFT = 37] = "LEFT", t19[t19.UP = 38] = "UP", t19[t19.RIGHT = 39] = "RIGHT", t19[t19.DOWN = 40] = "DOWN";
}(mf || (mf = {})), function(t19) {
  t19[t19.X = 0] = "X", t19[t19.Y = 1] = "Y";
}(vf || (vf = {}));
var Cf = { STANDARD: 1, OTHERS: -3 }, xf = [1, 28, 500], Vf = function(t19) {
  return xf[t19] || xf[0];
};
const Hf = Object.freeze(Object.defineProperty({ __proto__: null, keyboardHandler: function(t19) {
  var e2 = tf(t19), o2 = t19.containerEl;
  e2(o2, "keydown", function(e3) {
    var r2 = document.activeElement;
    if ((r2 === o2 || o2.contains(r2)) && !function(t20) {
      if ("INPUT" === t20.tagName || "SELECT" === t20.tagName || "TEXTAREA" === t20.tagName || t20.isContentEditable) return !t20.disabled;
      return false;
    }(r2)) {
      var L2 = function(t20, e4) {
        var o3 = t20.size, r3 = t20.limit, L3 = t20.offset;
        switch (e4) {
          case mf.TAB:
            return function(t21) {
              requestAnimationFrame(function() {
                t21.scrollIntoView(document.activeElement, { offsetTop: t21.size.container.height / 2, offsetLeft: t21.size.container.width / 2, onlyScrollIfNeeded: true });
              });
            }(t20);
          case mf.SPACE:
            return [0, 200];
          case mf.PAGE_UP:
            return [0, 40 - o3.container.height];
          case mf.PAGE_DOWN:
            return [0, o3.container.height - 40];
          case mf.END:
            return [0, r3.y - L3.y];
          case mf.HOME:
            return [0, -L3.y];
          case mf.LEFT:
            return [-40, 0];
          case mf.UP:
            return [0, -40];
          case mf.RIGHT:
            return [40, 0];
          case mf.DOWN:
            return [0, 40];
          default:
            return null;
        }
      }(t19, e3.keyCode || e3.which);
      if (L2) {
        var n2 = L2[0], i2 = L2[1];
        t19.addTransformableMomentum(n2, i2, e3, function(o3) {
          o3 ? e3.preventDefault() : (t19.containerEl.blur(), t19.parent && t19.parent.containerEl.focus());
        });
      }
    }
  });
}, mouseHandler: function(t19) {
  var e2, o2, r2, L2, n2, i2 = tf(t19), s2 = t19.containerEl, d2 = t19.track, k2 = d2.xAxis, h2 = d2.yAxis;
  function a2(e3, o3) {
    var r3 = t19.size, L3 = t19.limit, n3 = t19.offset;
    return e3 === vf.X ? kf(o3 / (r3.container.width + (k2.thumb.realSize - k2.thumb.displaySize)) * r3.content.width, 0, L3.x) - n3.x : e3 === vf.Y ? kf(o3 / (r3.container.height + (h2.thumb.realSize - h2.thumb.displaySize)) * r3.content.height, 0, L3.y) - n3.y : 0;
  }
  function u2(t20) {
    return of(t20, [k2.element, k2.thumb.element]) ? vf.X : of(t20, [h2.element, h2.thumb.element]) ? vf.Y : void 0;
  }
  i2(s2, "click", function(e3) {
    if (!o2 && of(e3.target, [k2.element, h2.element])) {
      var r3 = e3.target, L3 = u2(r3), n3 = r3.getBoundingClientRect(), i3 = ef(e3);
      if (L3 === vf.X) {
        var s3 = i3.x - n3.left - k2.thumb.displaySize / 2;
        t19.setMomentum(a2(L3, s3), 0);
      }
      if (L3 === vf.Y) {
        s3 = i3.y - n3.top - h2.thumb.displaySize / 2;
        t19.setMomentum(0, a2(L3, s3));
      }
    }
  }), i2(s2, "mousedown", function(o3) {
    if (of(o3.target, [k2.thumb.element, h2.thumb.element])) {
      e2 = true;
      var i3 = o3.target, d3 = ef(o3), a3 = i3.getBoundingClientRect();
      L2 = u2(i3), r2 = { x: d3.x - a3.left, y: d3.y - a3.top }, n2 = s2.getBoundingClientRect(), nf(t19.containerEl, { "-user-select": "none" });
    }
  }), i2(window, "mousemove", function(i3) {
    if (e2) {
      o2 = true;
      var s3 = ef(i3);
      if (L2 === vf.X) {
        var d3 = s3.x - r2.x - n2.left;
        t19.setMomentum(a2(L2, d3), 0);
      }
      if (L2 === vf.Y) {
        d3 = s3.y - r2.y - n2.top;
        t19.setMomentum(0, a2(L2, d3));
      }
    }
  }), i2(window, "mouseup blur", function() {
    e2 = o2 = false, nf(t19.containerEl, { "-user-select": "" });
  });
}, resizeHandler: function(t19) {
  tf(t19)(window, "resize", hf(t19.update.bind(t19), 300));
}, selectHandler: function(t19) {
  var e2, o2 = tf(t19), r2 = t19.containerEl, L2 = t19.contentEl, n2 = false, i2 = false;
  function s2(o3) {
    var r3 = o3.x, L3 = o3.y;
    if (r3 || L3) {
      var n3 = t19.offset, i3 = t19.limit;
      t19.setMomentum(kf(n3.x + r3, 0, i3.x) - n3.x, kf(n3.y + L3, 0, i3.y) - n3.y), e2 = requestAnimationFrame(function() {
        s2({ x: r3, y: L3 });
      });
    }
  }
  o2(window, "mousemove", function(o3) {
    if (n2) {
      cancelAnimationFrame(e2);
      var r3 = function(t20, e3) {
        var o4 = t20.bounding, r4 = o4.top, L3 = o4.right, n3 = o4.bottom, i3 = o4.left, s3 = ef(e3), d2 = s3.x, k2 = s3.y, h2 = { x: 0, y: 0 }, a2 = 20;
        if (0 === d2 && 0 === k2) return h2;
        d2 > L3 - a2 ? h2.x = d2 - L3 + a2 : d2 < i3 + a2 && (h2.x = d2 - i3 - a2);
        k2 > n3 - a2 ? h2.y = k2 - n3 + a2 : k2 < r4 + a2 && (h2.y = k2 - r4 - a2);
        return h2.x *= 2, h2.y *= 2, h2;
      }(t19, o3);
      s2(r3);
    }
  }), o2(L2, "contextmenu", function() {
    i2 = true, cancelAnimationFrame(e2), n2 = false;
  }), o2(L2, "mousedown", function() {
    i2 = false;
  }), o2(L2, "selectstart", function() {
    i2 || (cancelAnimationFrame(e2), n2 = true);
  }), o2(window, "mouseup blur", function() {
    cancelAnimationFrame(e2), n2 = false, i2 = false;
  }), o2(r2, "scroll", function(t20) {
    t20.preventDefault(), r2.scrollTop = r2.scrollLeft = 0;
  });
}, touchHandler: function(t19) {
  var e2, o2 = t19.options.delegateTo || t19.containerEl, r2 = new df(), L2 = tf(t19), n2 = 0;
  L2(o2, "touchstart", function(o3) {
    r2.track(o3), t19.setMomentum(0, 0), 0 === n2 && (e2 = t19.options.damping, t19.options.damping = Math.max(e2, 0.5)), n2++;
  }), L2(o2, "touchmove", function(e3) {
    if (!gf || gf === t19) {
      r2.update(e3);
      var o3 = r2.getDelta(), L3 = o3.x, n3 = o3.y;
      t19.addTransformableMomentum(L3, n3, e3, function(o4) {
        o4 && e3.cancelable && (e3.preventDefault(), gf = t19);
      });
    }
  }), L2(o2, "touchcancel touchend", function(o3) {
    var L3 = r2.getEasingDistance(e2);
    t19.addTransformableMomentum(L3.x, L3.y, o3), 0 === --n2 && (t19.options.damping = e2), r2.release(o3), gf = null;
  });
}, wheelHandler: function(t19) {
  tf(t19)(t19.options.delegateTo || t19.containerEl, "onwheel" in window || document.implementation.hasFeature("Events.wheel", "3.0") ? "wheel" : "mousewheel", function(e2) {
    var o2 = function(t20) {
      if ("deltaX" in t20) {
        var e3 = Vf(t20.deltaMode);
        return { x: t20.deltaX / Cf.STANDARD * e3, y: t20.deltaY / Cf.STANDARD * e3 };
      }
      if ("wheelDeltaX" in t20) return { x: t20.wheelDeltaX / Cf.OTHERS, y: t20.wheelDeltaY / Cf.OTHERS };
      return { x: 0, y: t20.wheelDelta / Cf.OTHERS };
    }(e2), r2 = o2.x, L2 = o2.y;
    t19.addTransformableMomentum(r2, L2, e2, function(t20) {
      t20 && e2.preventDefault();
    });
  });
} }, Symbol.toStringTag, { value: "Module" }));
var Tf = /* @__PURE__ */ new Map(), Of = function() {
  function t19(t20, e2) {
    var o2 = this;
    this.offset = { x: 0, y: 0 }, this.limit = { x: 1 / 0, y: 1 / 0 }, this.bounding = { top: 0, right: 0, bottom: 0, left: 0 }, this._plugins = [], this._momentum = { x: 0, y: 0 }, this._listeners = /* @__PURE__ */ new Set(), this.containerEl = t20;
    var r2 = this.contentEl = document.createElement("div");
    this.options = new lf(e2), t20.setAttribute("data-scrollbar", "true"), t20.setAttribute("tabindex", "-1"), nf(t20, { overflow: "hidden", outline: "none" }), window.navigator.msPointerEnabled && (t20.style.msTouchAction = "none"), r2.className = "scroll-content", Array.from(t20.childNodes).forEach(function(t21) {
      r2.appendChild(t21);
    }), t20.appendChild(r2), this.track = new ff(this), this.size = this.getSize(), this._plugins = function(t21, e3) {
      return Array.from(yf.order).filter(function(t22) {
        return false !== e3[t22];
      }).map(function(o3) {
        var r3 = new (0, yf.constructors[o3])(t21, e3[o3]);
        return e3[o3] = r3.options, r3;
      });
    }(this, this.options.plugins);
    var L2 = t20.scrollLeft, n2 = t20.scrollTop;
    t20.scrollLeft = t20.scrollTop = 0, this.setPosition(L2, n2, { withoutCallbacks: true });
    var i2 = window.ResizeObserver;
    "function" == typeof i2 && (this._observer = new i2(function() {
      o2.update();
    }), this._observer.observe(r2)), Tf.set(t20, this), requestAnimationFrame(function() {
      o2._init();
    });
  }
  return Object.defineProperty(t19.prototype, "parent", { get: function() {
    for (var t20 = this.containerEl.parentElement; t20; ) {
      var e2 = Tf.get(t20);
      if (e2) return e2;
      t20 = t20.parentElement;
    }
    return null;
  }, enumerable: true, configurable: true }), Object.defineProperty(t19.prototype, "scrollTop", { get: function() {
    return this.offset.y;
  }, set: function(t20) {
    this.setPosition(this.scrollLeft, t20);
  }, enumerable: true, configurable: true }), Object.defineProperty(t19.prototype, "scrollLeft", { get: function() {
    return this.offset.x;
  }, set: function(t20) {
    this.setPosition(t20, this.scrollTop);
  }, enumerable: true, configurable: true }), t19.prototype.getSize = function() {
    return e2 = (t20 = this).containerEl, o2 = t20.contentEl, r2 = getComputedStyle(e2), L2 = ["paddingTop", "paddingBottom", "paddingLeft", "paddingRight"].map(function(t21) {
      return r2[t21] ? parseFloat(r2[t21]) : 0;
    }), n2 = L2[0] + L2[1], i2 = L2[2] + L2[3], { container: { width: e2.clientWidth, height: e2.clientHeight }, content: { width: o2.offsetWidth - o2.clientWidth + o2.scrollWidth + i2, height: o2.offsetHeight - o2.clientHeight + o2.scrollHeight + n2 } };
    var t20, e2, o2, r2, L2, n2, i2;
  }, t19.prototype.update = function() {
    var t20, e2, o2, r2, L2;
    e2 = (t20 = this).getSize(), o2 = { x: Math.max(e2.content.width - e2.container.width, 0), y: Math.max(e2.content.height - e2.container.height, 0) }, r2 = t20.containerEl.getBoundingClientRect(), L2 = { top: Math.max(r2.top, 0), right: Math.min(r2.right, window.innerWidth), bottom: Math.min(r2.bottom, window.innerHeight), left: Math.max(r2.left, 0) }, t20.size = e2, t20.limit = o2, t20.bounding = L2, t20.track.update(), t20.setPosition(), this._plugins.forEach(function(t21) {
      t21.onUpdate();
    });
  }, t19.prototype.isVisible = function(t20) {
    return function(t21, e2) {
      var o2 = t21.bounding, r2 = e2.getBoundingClientRect(), L2 = Math.max(o2.top, r2.top), n2 = Math.max(o2.left, r2.left), i2 = Math.min(o2.right, r2.right);
      return L2 < Math.min(o2.bottom, r2.bottom) && n2 < i2;
    }(this, t20);
  }, t19.prototype.setPosition = function(t20, e2, o2) {
    var r2 = this;
    void 0 === t20 && (t20 = this.offset.x), void 0 === e2 && (e2 = this.offset.y), void 0 === o2 && (o2 = {});
    var L2 = function(t21, e3, o3) {
      var r3 = t21.options, L3 = t21.offset, n2 = t21.limit, i2 = t21.track, s2 = t21.contentEl;
      return r3.renderByPixels && (e3 = Math.round(e3), o3 = Math.round(o3)), e3 = kf(e3, 0, n2.x), o3 = kf(o3, 0, n2.y), e3 !== L3.x && i2.xAxis.show(), o3 !== L3.y && i2.yAxis.show(), r3.alwaysShowTracks || i2.autoHideOnIdle(), e3 === L3.x && o3 === L3.y ? null : (L3.x = e3, L3.y = o3, nf(s2, { "-transform": "translate3d(" + -e3 + "px, " + -o3 + "px, 0)" }), i2.update(), { offset: Xk({}, L3), limit: Xk({}, n2) });
    }(this, t20, e2);
    L2 && !o2.withoutCallbacks && this._listeners.forEach(function(t21) {
      t21.call(r2, L2);
    });
  }, t19.prototype.scrollTo = function(t20, e2, o2, r2) {
    void 0 === t20 && (t20 = this.offset.x), void 0 === e2 && (e2 = this.offset.y), void 0 === o2 && (o2 = 0), void 0 === r2 && (r2 = {}), function(t21, e3, o3, r3, L2) {
      void 0 === r3 && (r3 = 0);
      var n2 = void 0 === L2 ? {} : L2, i2 = n2.easing, s2 = void 0 === i2 ? jf : i2, d2 = n2.callback, k2 = t21.options, h2 = t21.offset, a2 = t21.limit;
      k2.renderByPixels && (e3 = Math.round(e3), o3 = Math.round(o3));
      var u2 = h2.x, p2 = h2.y, c2 = kf(e3, 0, a2.x) - u2, l2 = kf(o3, 0, a2.y) - p2, w2 = Date.now();
      cancelAnimationFrame(Wf.get(t21)), function e4() {
        var o4 = Date.now() - w2, L3 = r3 ? s2(Math.min(o4 / r3, 1)) : 1;
        if (t21.setPosition(u2 + c2 * L3, p2 + l2 * L3), o4 >= r3) "function" == typeof d2 && d2.call(t21);
        else {
          var n3 = requestAnimationFrame(e4);
          Wf.set(t21, n3);
        }
      }();
    }(this, t20, e2, o2, r2);
  }, t19.prototype.scrollIntoView = function(t20, e2) {
    void 0 === e2 && (e2 = {}), function(t21, e3, o2) {
      var r2 = void 0 === o2 ? {} : o2, L2 = r2.alignToTop, n2 = void 0 === L2 || L2, i2 = r2.onlyScrollIfNeeded, s2 = void 0 !== i2 && i2, d2 = r2.offsetTop, k2 = void 0 === d2 ? 0 : d2, h2 = r2.offsetLeft, a2 = void 0 === h2 ? 0 : h2, u2 = r2.offsetBottom, p2 = void 0 === u2 ? 0 : u2, c2 = t21.containerEl, l2 = t21.bounding, w2 = t21.offset, M2 = t21.limit;
      if (e3 && c2.contains(e3)) {
        var f2 = e3.getBoundingClientRect();
        if (!s2 || !t21.isVisible(e3)) {
          var W2 = n2 ? f2.top - l2.top - k2 : f2.bottom - l2.bottom + p2;
          t21.setMomentum(f2.left - l2.left - a2, kf(W2, -w2.y, M2.y - w2.y));
        }
      }
    }(this, t20, e2);
  }, t19.prototype.addListener = function(t20) {
    if ("function" != typeof t20) throw new TypeError("[smooth-scrollbar] scrolling listener should be a function");
    this._listeners.add(t20);
  }, t19.prototype.removeListener = function(t20) {
    this._listeners.delete(t20);
  }, t19.prototype.addTransformableMomentum = function(t20, e2, o2, r2) {
    this._updateDebounced();
    var L2 = this._plugins.reduce(function(t21, e3) {
      return e3.transformDelta(t21, o2) || t21;
    }, { x: t20, y: e2 }), n2 = !this._shouldPropagateMomentum(L2.x, L2.y);
    n2 && this.addMomentum(L2.x, L2.y), r2 && r2.call(this, n2);
  }, t19.prototype.addMomentum = function(t20, e2) {
    this.setMomentum(this._momentum.x + t20, this._momentum.y + e2);
  }, t19.prototype.setMomentum = function(t20, e2) {
    0 === this.limit.x && (t20 = 0), 0 === this.limit.y && (e2 = 0), this.options.renderByPixels && (t20 = Math.round(t20), e2 = Math.round(e2)), this._momentum.x = t20, this._momentum.y = e2;
  }, t19.prototype.updatePluginOptions = function(t20, e2) {
    this._plugins.forEach(function(o2) {
      o2.name === t20 && Object.assign(o2.options, e2);
    });
  }, t19.prototype.destroy = function() {
    var t20, e2, o2 = this.containerEl, r2 = this.contentEl;
    t20 = this, (e2 = JM.get(t20)) && (e2.forEach(function(t21) {
      var e3 = t21.elem, o3 = t21.eventName, r3 = t21.handler;
      e3.removeEventListener(o3, r3, QM());
    }), JM.delete(t20)), this._listeners.clear(), this.setMomentum(0, 0), cancelAnimationFrame(this._renderID), this._observer && this._observer.disconnect(), Tf.delete(this.containerEl);
    for (var L2 = Array.from(r2.childNodes); o2.firstChild; ) o2.removeChild(o2.firstChild);
    L2.forEach(function(t21) {
      o2.appendChild(t21);
    }), nf(o2, { overflow: "" }), o2.scrollTop = this.scrollTop, o2.scrollLeft = this.scrollLeft, this._plugins.forEach(function(t21) {
      t21.onDestroy();
    }), this._plugins.length = 0;
  }, t19.prototype._init = function() {
    var t20 = this;
    this.update(), Object.keys(Hf).forEach(function(e2) {
      Hf[e2](t20);
    }), this._plugins.forEach(function(t21) {
      t21.onInit();
    }), this._render();
  }, t19.prototype._updateDebounced = function() {
    this.update();
  }, t19.prototype._shouldPropagateMomentum = function(t20, e2) {
    void 0 === t20 && (t20 = 0), void 0 === e2 && (e2 = 0);
    var o2 = this, r2 = o2.options, L2 = o2.offset, n2 = o2.limit;
    if (!r2.continuousScrolling) return false;
    0 === n2.x && 0 === n2.y && this._updateDebounced();
    var i2 = kf(t20 + L2.x, 0, n2.x), s2 = kf(e2 + L2.y, 0, n2.y), d2 = true;
    return d2 = (d2 = (d2 = d2 && i2 === L2.x) && s2 === L2.y) && (L2.x === n2.x || 0 === L2.x || L2.y === n2.y || 0 === L2.y);
  }, t19.prototype._render = function() {
    var t20 = this._momentum;
    if (t20.x || t20.y) {
      var e2 = this._nextTick("x"), o2 = this._nextTick("y");
      t20.x = e2.momentum, t20.y = o2.momentum, this.setPosition(e2.position, o2.position);
    }
    var r2 = Xk({}, this._momentum);
    this._plugins.forEach(function(t21) {
      t21.onRender(r2);
    }), this._renderID = requestAnimationFrame(this._render.bind(this));
  }, t19.prototype._nextTick = function(t20) {
    var e2 = this, o2 = e2.options, r2 = e2.offset, L2 = e2._momentum, n2 = r2[t20], i2 = L2[t20];
    if (Math.abs(i2) <= 0.1) return { momentum: 0, position: n2 + i2 };
    var s2 = i2 * (1 - o2.damping);
    return o2.renderByPixels && (s2 |= 0), { momentum: s2, position: n2 + i2 - s2 };
  }, Gk([pf(100, true)], t19.prototype, "_updateDebounced", null), t19;
}(), Sf = "smooth-scrollbar-style", Zf = false;
function Ef() {
  if (!Zf && "undefined" != typeof window) {
    var t19 = document.createElement("style");
    t19.id = Sf, t19.textContent = "\n[data-scrollbar] {\n  display: block;\n  position: relative;\n}\n\n.scroll-content {\n  display: flow-root;\n  -webkit-transform: translate3d(0, 0, 0);\n          transform: translate3d(0, 0, 0);\n}\n\n.scrollbar-track {\n  position: absolute;\n  opacity: 0;\n  z-index: 1;\n  background: rgba(222, 222, 222, .75);\n  -webkit-user-select: none;\n     -moz-user-select: none;\n      -ms-user-select: none;\n          user-select: none;\n  -webkit-transition: opacity 0.5s 0.5s ease-out;\n          transition: opacity 0.5s 0.5s ease-out;\n}\n.scrollbar-track.show,\n.scrollbar-track:hover {\n  opacity: 1;\n  -webkit-transition-delay: 0s;\n          transition-delay: 0s;\n}\n\n.scrollbar-track-x {\n  bottom: 0;\n  left: 0;\n  width: 100%;\n  height: 8px;\n}\n.scrollbar-track-y {\n  top: 0;\n  right: 0;\n  width: 8px;\n  height: 100%;\n}\n.scrollbar-thumb {\n  position: absolute;\n  top: 0;\n  left: 0;\n  width: 8px;\n  height: 8px;\n  background: rgba(0, 0, 0, .5);\n  border-radius: 4px;\n}\n", document.head && document.head.appendChild(t19), Zf = true;
  }
}
var Pf = function(t19) {
  function e2() {
    return null !== t19 && t19.apply(this, arguments) || this;
  }
  return function(t20, e3) {
    function o2() {
      this.constructor = t20;
    }
    Hk(t20, e3), t20.prototype = null === e3 ? Object.create(e3) : (o2.prototype = e3.prototype, new o2());
  }(e2, t19), e2.init = function(t20, e3) {
    if (!t20 || 1 !== t20.nodeType) throw new TypeError("expect element to be DOM Element, but got " + t20);
    return Ef(), Tf.has(t20) ? Tf.get(t20) : new Of(t20, e3);
  }, e2.initAll = function(t20) {
    return Array.from(document.querySelectorAll("[data-scrollbar]"), function(o2) {
      return e2.init(o2, t20);
    });
  }, e2.has = function(t20) {
    return Tf.has(t20);
  }, e2.get = function(t20) {
    return Tf.get(t20);
  }, e2.getAll = function() {
    return Array.from(Tf.values());
  }, e2.destroy = function(t20) {
    var e3 = Tf.get(t20);
    e3 && e3.destroy();
  }, e2.destroyAll = function() {
    Tf.forEach(function(t20) {
      t20.destroy();
    });
  }, e2.use = function() {
    for (var t20 = [], e3 = 0; e3 < arguments.length; e3++) t20[e3] = arguments[e3];
    return bf.apply(void 0, t20);
  }, e2.attachStyle = function() {
    return Ef();
  }, e2.detachStyle = function() {
    return function() {
      if (Zf && "undefined" != typeof window) {
        var t20 = document.getElementById(Sf);
        t20 && t20.parentNode && (t20.parentNode.removeChild(t20), Zf = false);
      }
    }();
  }, e2.version = "8.8.4", e2.ScrollbarPlugin = _f, e2;
}(Of);
function Nf(t19, e2, o2) {
  return e2 && function(t20, e3) {
    for (var o3 = 0; o3 < e3.length; o3++) {
      var r2 = e3[o3];
      r2.enumerable = r2.enumerable || false, r2.configurable = true, "value" in r2 && (r2.writable = true), Object.defineProperty(t20, r2.key, r2);
    }
  }(t19.prototype, e2), t19;
}
/*!
 * Observer 3.12.7
 * https://gsap.com
 *
 * @license Copyright 2008-2025, GreenSock. All rights reserved.
 * Subject to the terms at https://gsap.com/standard-license or for
 * Club GSAP members, the agreement issued with that membership.
 * @author: Jack Doyle, jack@greensock.com
*/
var Af, Rf, Df, qf, zf, Bf, If, Ff, Uf, $f, Yf, Xf, Gf, Kf = function() {
  return Af || "undefined" != typeof window && (Af = window.gsap) && Af.registerPlugin && Af;
}, Jf = 1, Qf = [], tW = [], eW = [], oW = Date.now, rW = function(t19, e2) {
  return e2;
}, LW = function(t19, e2) {
  return ~eW.indexOf(t19) && eW[eW.indexOf(t19) + 1][e2];
}, nW = function(t19) {
  return !!~$f.indexOf(t19);
}, iW = function(t19, e2, o2, r2, L2) {
  return t19.addEventListener(e2, o2, { passive: false !== r2, capture: !!L2 });
}, sW = function(t19, e2, o2, r2) {
  return t19.removeEventListener(e2, o2, !!r2);
}, dW = "scrollLeft", kW = "scrollTop", hW = function() {
  return Yf && Yf.isPressed || tW.cache++;
}, aW = function(t19, e2) {
  var o2 = function o3(r2) {
    if (r2 || 0 === r2) {
      Jf && (Df.history.scrollRestoration = "manual");
      var L2 = Yf && Yf.isPressed;
      r2 = o3.v = Math.round(r2) || (Yf && Yf.iOS ? 1 : 0), t19(r2), o3.cacheID = tW.cache, L2 && rW("ss", r2);
    } else (e2 || tW.cache !== o3.cacheID || rW("ref")) && (o3.cacheID = tW.cache, o3.v = t19());
    return o3.v + o3.offset;
  };
  return o2.offset = 0, t19 && o2;
}, uW = { s: dW, p: "left", p2: "Left", os: "right", os2: "Right", d: "width", d2: "Width", a: "x", sc: aW(function(t19) {
  return arguments.length ? Df.scrollTo(t19, pW.sc()) : Df.pageXOffset || qf[dW] || zf[dW] || Bf[dW] || 0;
}) }, pW = { s: kW, p: "top", p2: "Top", os: "bottom", os2: "Bottom", d: "height", d2: "Height", a: "y", op: uW, sc: aW(function(t19) {
  return arguments.length ? Df.scrollTo(uW.sc(), t19) : Df.pageYOffset || qf[kW] || zf[kW] || Bf[kW] || 0;
}) }, cW = function(t19, e2) {
  return (e2 && e2._ctx && e2._ctx.selector || Af.utils.toArray)(t19)[0] || ("string" == typeof t19 && false !== Af.config().nullTargetWarn ? console.warn("Element not found:", t19) : null);
}, lW = function(t19, e2) {
  var o2 = e2.s, r2 = e2.sc;
  nW(t19) && (t19 = qf.scrollingElement || zf);
  var L2 = tW.indexOf(t19), n2 = r2 === pW.sc ? 1 : 2;
  !~L2 && (L2 = tW.push(t19) - 1), tW[L2 + n2] || iW(t19, "scroll", hW);
  var i2 = tW[L2 + n2], s2 = i2 || (tW[L2 + n2] = aW(LW(t19, o2), true) || (nW(t19) ? r2 : aW(function(e3) {
    return arguments.length ? t19[o2] = e3 : t19[o2];
  })));
  return s2.target = t19, i2 || (s2.smooth = "smooth" === Af.getProperty(t19, "scrollBehavior")), s2;
}, wW = function(t19, e2, o2) {
  var r2 = t19, L2 = t19, n2 = oW(), i2 = n2, s2 = e2 || 50, d2 = Math.max(500, 3 * s2), k2 = function(t20, e3) {
    var d3 = oW();
    e3 || d3 - n2 > s2 ? (L2 = r2, r2 = t20, i2 = n2, n2 = d3) : o2 ? r2 += t20 : r2 = L2 + (t20 - L2) / (d3 - i2) * (n2 - i2);
  };
  return { update: k2, reset: function() {
    L2 = r2 = o2 ? 0 : r2, i2 = n2 = 0;
  }, getVelocity: function(t20) {
    var e3 = i2, s3 = L2, h2 = oW();
    return (t20 || 0 === t20) && t20 !== r2 && k2(t20), n2 === i2 || h2 - i2 > d2 ? 0 : (r2 + (o2 ? s3 : -s3)) / ((o2 ? h2 : n2) - e3) * 1e3;
  } };
}, MW = function(t19, e2) {
  return e2 && !t19._gsapAllow && t19.preventDefault(), t19.changedTouches ? t19.changedTouches[0] : t19;
}, fW = function(t19) {
  var e2 = Math.max.apply(Math, t19), o2 = Math.min.apply(Math, t19);
  return Math.abs(e2) >= Math.abs(o2) ? e2 : o2;
}, WW = function() {
  (Uf = Af.core.globals().ScrollTrigger) && Uf.core && function() {
    var t19 = Uf.core, e2 = t19.bridge || {}, o2 = t19._scrollers, r2 = t19._proxies;
    o2.push.apply(o2, tW), r2.push.apply(r2, eW), tW = o2, eW = r2, rW = function(t20, o3) {
      return e2[t20](o3);
    };
  }();
}, jW = function(t19) {
  return Af = t19 || Kf(), !Rf && Af && "undefined" != typeof document && document.body && (Df = window, qf = document, zf = qf.documentElement, Bf = qf.body, $f = [Df, qf, zf, Bf], Af.utils.clamp, Gf = Af.core.context || function() {
  }, Ff = "onpointerenter" in Bf ? "pointer" : "mouse", If = mW.isTouch = Df.matchMedia && Df.matchMedia("(hover: none), (pointer: coarse)").matches ? 1 : "ontouchstart" in Df || navigator.maxTouchPoints > 0 || navigator.msMaxTouchPoints > 0 ? 2 : 0, Xf = mW.eventTypes = ("ontouchstart" in zf ? "touchstart,touchmove,touchcancel,touchend" : "onpointerdown" in zf ? "pointerdown,pointermove,pointercancel,pointerup" : "mousedown,mousemove,mouseup,mouseup").split(","), setTimeout(function() {
    return Jf = 0;
  }, 500), WW(), Rf = 1), Rf;
};
uW.op = pW, tW.cache = 0;
var mW = function() {
  function t19(t20) {
    this.init(t20);
  }
  return t19.prototype.init = function(t20) {
    Rf || jW(Af) || console.warn("Please gsap.registerPlugin(Observer)"), Uf || WW();
    var e2 = t20.tolerance, o2 = t20.dragMinimum, r2 = t20.type, L2 = t20.target, n2 = t20.lineHeight, i2 = t20.debounce, s2 = t20.preventDefault, d2 = t20.onStop, k2 = t20.onStopDelay, h2 = t20.ignore, a2 = t20.wheelSpeed, u2 = t20.event, p2 = t20.onDragStart, c2 = t20.onDragEnd, l2 = t20.onDrag, w2 = t20.onPress, M2 = t20.onRelease, f2 = t20.onRight, W2 = t20.onLeft, j2 = t20.onUp, m2 = t20.onDown, v2 = t20.onChangeX, g2 = t20.onChangeY, _2 = t20.onChange, y2 = t20.onToggleX, b2 = t20.onToggleY, C2 = t20.onHover, x2 = t20.onHoverEnd, V2 = t20.onMove, H2 = t20.ignoreCheck, T2 = t20.isNormalizer, O2 = t20.onGestureStart, S2 = t20.onGestureEnd, Z2 = t20.onWheel, E2 = t20.onEnable, P2 = t20.onDisable, N2 = t20.onClick, A2 = t20.scrollSpeed, R2 = t20.capture, D2 = t20.allowClicks, q2 = t20.lockAxis, z2 = t20.onLockAxis;
    this.target = L2 = cW(L2) || zf, this.vars = t20, h2 && (h2 = Af.utils.toArray(h2)), e2 = e2 || 1e-9, o2 = o2 || 0, a2 = a2 || 1, A2 = A2 || 1, r2 = r2 || "wheel,touch,pointer", i2 = false !== i2, n2 || (n2 = parseFloat(Df.getComputedStyle(Bf).lineHeight) || 22);
    var B2, I2, F2, U2, $2, Y2, X2, G2 = this, K2 = 0, J2 = 0, Q2 = t20.passive || !s2 && false !== t20.passive, tt2 = lW(L2, uW), et2 = lW(L2, pW), ot2 = tt2(), rt2 = et2(), Lt2 = ~r2.indexOf("touch") && !~r2.indexOf("pointer") && "pointerdown" === Xf[0], nt2 = nW(L2), it2 = L2.ownerDocument || qf, st2 = [0, 0, 0], dt2 = [0, 0, 0], kt2 = 0, ht2 = function() {
      return kt2 = oW();
    }, at2 = function(t21, e3) {
      return (G2.event = t21) && h2 && ~h2.indexOf(t21.target) || e3 && Lt2 && "touch" !== t21.pointerType || H2 && H2(t21, e3);
    }, ut2 = function() {
      var t21 = G2.deltaX = fW(st2), o3 = G2.deltaY = fW(dt2), r3 = Math.abs(t21) >= e2, L3 = Math.abs(o3) >= e2;
      _2 && (r3 || L3) && _2(G2, t21, o3, st2, dt2), r3 && (f2 && G2.deltaX > 0 && f2(G2), W2 && G2.deltaX < 0 && W2(G2), v2 && v2(G2), y2 && G2.deltaX < 0 != K2 < 0 && y2(G2), K2 = G2.deltaX, st2[0] = st2[1] = st2[2] = 0), L3 && (m2 && G2.deltaY > 0 && m2(G2), j2 && G2.deltaY < 0 && j2(G2), g2 && g2(G2), b2 && G2.deltaY < 0 != J2 < 0 && b2(G2), J2 = G2.deltaY, dt2[0] = dt2[1] = dt2[2] = 0), (U2 || F2) && (V2 && V2(G2), F2 && (p2 && 1 === F2 && p2(G2), l2 && l2(G2), F2 = 0), U2 = false), Y2 && !(Y2 = false) && z2 && z2(G2), $2 && (Z2(G2), $2 = false), B2 = 0;
    }, pt2 = function(t21, e3, o3) {
      st2[o3] += t21, dt2[o3] += e3, G2._vx.update(t21), G2._vy.update(e3), i2 ? B2 || (B2 = requestAnimationFrame(ut2)) : ut2();
    }, ct2 = function(t21, e3) {
      q2 && !X2 && (G2.axis = X2 = Math.abs(t21) > Math.abs(e3) ? "x" : "y", Y2 = true), "y" !== X2 && (st2[2] += t21, G2._vx.update(t21, true)), "x" !== X2 && (dt2[2] += e3, G2._vy.update(e3, true)), i2 ? B2 || (B2 = requestAnimationFrame(ut2)) : ut2();
    }, lt2 = function(t21) {
      if (!at2(t21, 1)) {
        var e3 = (t21 = MW(t21, s2)).clientX, r3 = t21.clientY, L3 = e3 - G2.x, n3 = r3 - G2.y, i3 = G2.isDragging;
        G2.x = e3, G2.y = r3, (i3 || (L3 || n3) && (Math.abs(G2.startX - e3) >= o2 || Math.abs(G2.startY - r3) >= o2)) && (F2 = i3 ? 2 : 1, i3 || (G2.isDragging = true), ct2(L3, n3));
      }
    }, wt2 = G2.onPress = function(t21) {
      at2(t21, 1) || t21 && t21.button || (G2.axis = X2 = null, I2.pause(), G2.isPressed = true, t21 = MW(t21), K2 = J2 = 0, G2.startX = G2.x = t21.clientX, G2.startY = G2.y = t21.clientY, G2._vx.reset(), G2._vy.reset(), iW(T2 ? L2 : it2, Xf[1], lt2, Q2, true), G2.deltaX = G2.deltaY = 0, w2 && w2(G2));
    }, Mt2 = G2.onRelease = function(t21) {
      if (!at2(t21, 1)) {
        sW(T2 ? L2 : it2, Xf[1], lt2, true);
        var e3 = !isNaN(G2.y - G2.startY), o3 = G2.isDragging, r3 = o3 && (Math.abs(G2.x - G2.startX) > 3 || Math.abs(G2.y - G2.startY) > 3), n3 = MW(t21);
        !r3 && e3 && (G2._vx.reset(), G2._vy.reset(), s2 && D2 && Af.delayedCall(0.08, function() {
          if (oW() - kt2 > 300 && !t21.defaultPrevented) {
            if (t21.target.click) t21.target.click();
            else if (it2.createEvent) {
              var e4 = it2.createEvent("MouseEvents");
              e4.initMouseEvent("click", true, true, Df, 1, n3.screenX, n3.screenY, n3.clientX, n3.clientY, false, false, false, false, 0, null), t21.target.dispatchEvent(e4);
            }
          }
        })), G2.isDragging = G2.isGesturing = G2.isPressed = false, d2 && o3 && !T2 && I2.restart(true), F2 && ut2(), c2 && o3 && c2(G2), M2 && M2(G2, r3);
      }
    }, ft2 = function(t21) {
      return t21.touches && t21.touches.length > 1 && (G2.isGesturing = true) && O2(t21, G2.isDragging);
    }, Wt2 = function() {
      return (G2.isGesturing = false) || S2(G2);
    }, jt2 = function(t21) {
      if (!at2(t21)) {
        var e3 = tt2(), o3 = et2();
        pt2((e3 - ot2) * A2, (o3 - rt2) * A2, 1), ot2 = e3, rt2 = o3, d2 && I2.restart(true);
      }
    }, mt2 = function(t21) {
      if (!at2(t21)) {
        t21 = MW(t21, s2), Z2 && ($2 = true);
        var e3 = (1 === t21.deltaMode ? n2 : 2 === t21.deltaMode ? Df.innerHeight : 1) * a2;
        pt2(t21.deltaX * e3, t21.deltaY * e3, 0), d2 && !T2 && I2.restart(true);
      }
    }, vt2 = function(t21) {
      if (!at2(t21)) {
        var e3 = t21.clientX, o3 = t21.clientY, r3 = e3 - G2.x, L3 = o3 - G2.y;
        G2.x = e3, G2.y = o3, U2 = true, d2 && I2.restart(true), (r3 || L3) && ct2(r3, L3);
      }
    }, gt2 = function(t21) {
      G2.event = t21, C2(G2);
    }, _t2 = function(t21) {
      G2.event = t21, x2(G2);
    }, yt2 = function(t21) {
      return at2(t21) || MW(t21, s2) && N2(G2);
    };
    I2 = G2._dc = Af.delayedCall(k2 || 0.25, function() {
      G2._vx.reset(), G2._vy.reset(), I2.pause(), d2 && d2(G2);
    }).pause(), G2.deltaX = G2.deltaY = 0, G2._vx = wW(0, 50, true), G2._vy = wW(0, 50, true), G2.scrollX = tt2, G2.scrollY = et2, G2.isDragging = G2.isGesturing = G2.isPressed = false, Gf(this), G2.enable = function(t21) {
      return G2.isEnabled || (iW(nt2 ? it2 : L2, "scroll", hW), r2.indexOf("scroll") >= 0 && iW(nt2 ? it2 : L2, "scroll", jt2, Q2, R2), r2.indexOf("wheel") >= 0 && iW(L2, "wheel", mt2, Q2, R2), (r2.indexOf("touch") >= 0 && If || r2.indexOf("pointer") >= 0) && (iW(L2, Xf[0], wt2, Q2, R2), iW(it2, Xf[2], Mt2), iW(it2, Xf[3], Mt2), D2 && iW(L2, "click", ht2, true, true), N2 && iW(L2, "click", yt2), O2 && iW(it2, "gesturestart", ft2), S2 && iW(it2, "gestureend", Wt2), C2 && iW(L2, Ff + "enter", gt2), x2 && iW(L2, Ff + "leave", _t2), V2 && iW(L2, Ff + "move", vt2)), G2.isEnabled = true, G2.isDragging = G2.isGesturing = G2.isPressed = U2 = F2 = false, G2._vx.reset(), G2._vy.reset(), ot2 = tt2(), rt2 = et2(), t21 && t21.type && wt2(t21), E2 && E2(G2)), G2;
    }, G2.disable = function() {
      G2.isEnabled && (Qf.filter(function(t21) {
        return t21 !== G2 && nW(t21.target);
      }).length || sW(nt2 ? it2 : L2, "scroll", hW), G2.isPressed && (G2._vx.reset(), G2._vy.reset(), sW(T2 ? L2 : it2, Xf[1], lt2, true)), sW(nt2 ? it2 : L2, "scroll", jt2, R2), sW(L2, "wheel", mt2, R2), sW(L2, Xf[0], wt2, R2), sW(it2, Xf[2], Mt2), sW(it2, Xf[3], Mt2), sW(L2, "click", ht2, true), sW(L2, "click", yt2), sW(it2, "gesturestart", ft2), sW(it2, "gestureend", Wt2), sW(L2, Ff + "enter", gt2), sW(L2, Ff + "leave", _t2), sW(L2, Ff + "move", vt2), G2.isEnabled = G2.isPressed = G2.isDragging = false, P2 && P2(G2));
    }, G2.kill = G2.revert = function() {
      G2.disable();
      var t21 = Qf.indexOf(G2);
      t21 >= 0 && Qf.splice(t21, 1), Yf === G2 && (Yf = 0);
    }, Qf.push(G2), T2 && nW(L2) && (Yf = G2), G2.enable(u2);
  }, Nf(t19, [{ key: "velocityX", get: function() {
    return this._vx.getVelocity();
  } }, { key: "velocityY", get: function() {
    return this._vy.getVelocity();
  } }]), t19;
}();
mW.version = "3.12.7", mW.create = function(t19) {
  return new mW(t19);
}, mW.register = jW, mW.getAll = function() {
  return Qf.slice();
}, mW.getById = function(t19) {
  return Qf.filter(function(e2) {
    return e2.vars.id === t19;
  })[0];
}, Kf() && Af.registerPlugin(mW);
/*!
 * ScrollTrigger 3.12.7
 * https://gsap.com
 *
 * @license Copyright 2008-2025, GreenSock. All rights reserved.
 * Subject to the terms at https://gsap.com/standard-license or for
 * Club GSAP members, the agreement issued with that membership.
 * @author: Jack Doyle, jack@greensock.com
*/
var vW, gW, _W, yW, bW, CW, xW, VW, HW, TW, OW, SW, ZW, EW, PW, NW, AW, RW, DW, qW, zW, BW, IW, FW, UW, $W, YW, XW, GW, KW, JW, QW, tj, ej, oj, rj, Lj, nj, ij = 1, sj = Date.now, dj = sj(), kj = 0, hj = 0, aj = function(t19, e2, o2) {
  var r2 = yj(t19) && ("clamp(" === t19.substr(0, 6) || t19.indexOf("max") > -1);
  return o2["_" + e2 + "Clamp"] = r2, r2 ? t19.substr(6, t19.length - 7) : t19;
}, uj = function(t19, e2) {
  return !e2 || yj(t19) && "clamp(" === t19.substr(0, 6) ? t19 : "clamp(" + t19 + ")";
}, pj = function t16() {
  return hj && requestAnimationFrame(t16);
}, cj = function() {
  return EW = 1;
}, lj = function() {
  return EW = 0;
}, wj = function(t19) {
  return t19;
}, Mj = function(t19) {
  return Math.round(1e5 * t19) / 1e5 || 0;
}, fj = function() {
  return "undefined" != typeof window;
}, Wj = function() {
  return vW || fj() && (vW = window.gsap) && vW.registerPlugin && vW;
}, jj = function(t19) {
  return !!~xW.indexOf(t19);
}, mj = function(t19) {
  return ("Height" === t19 ? JW : _W["inner" + t19]) || bW["client" + t19] || CW["client" + t19];
}, vj = function(t19) {
  return LW(t19, "getBoundingClientRect") || (jj(t19) ? function() {
    return Em.width = _W.innerWidth, Em.height = JW, Em;
  } : function() {
    return Yj(t19);
  });
}, gj = function(t19, e2) {
  var o2 = e2.s, r2 = e2.d2, L2 = e2.d, n2 = e2.a;
  return Math.max(0, (o2 = "scroll" + r2) && (n2 = LW(t19, o2)) ? n2() - vj(t19)()[L2] : jj(t19) ? (bW[o2] || CW[o2]) - mj(r2) : t19[o2] - t19["offset" + r2]);
}, _j = function(t19, e2) {
  for (var o2 = 0; o2 < DW.length; o2 += 3) (!e2 || ~e2.indexOf(DW[o2 + 1])) && t19(DW[o2], DW[o2 + 1], DW[o2 + 2]);
}, yj = function(t19) {
  return "string" == typeof t19;
}, bj = function(t19) {
  return "function" == typeof t19;
}, Cj = function(t19) {
  return "number" == typeof t19;
}, xj = function(t19) {
  return "object" == typeof t19;
}, Vj = function(t19, e2, o2) {
  return t19 && t19.progress(e2 ? 0 : 1) && o2 && t19.pause();
}, Hj = function(t19, e2) {
  if (t19.enabled) {
    var o2 = t19._ctx ? t19._ctx.add(function() {
      return e2(t19);
    }) : e2(t19);
    o2 && o2.totalTime && (t19.callbackAnimation = o2);
  }
}, Tj = Math.abs, Oj = "left", Sj = "right", Zj = "bottom", Ej = "width", Pj = "height", Nj = "Right", Aj = "Left", Rj = "Top", Dj = "Bottom", qj = "padding", zj = "margin", Bj = "Width", Ij = "Height", Fj = "px", Uj = function(t19) {
  return _W.getComputedStyle(t19);
}, $j = function(t19, e2) {
  for (var o2 in e2) o2 in t19 || (t19[o2] = e2[o2]);
  return t19;
}, Yj = function(t19, e2) {
  var o2 = e2 && "matrix(1, 0, 0, 1, 0, 0)" !== Uj(t19)[PW] && vW.to(t19, { x: 0, y: 0, xPercent: 0, yPercent: 0, rotation: 0, rotationX: 0, rotationY: 0, scale: 1, skewX: 0, skewY: 0 }).progress(1), r2 = t19.getBoundingClientRect();
  return o2 && o2.progress(0).kill(), r2;
}, Xj = function(t19, e2) {
  var o2 = e2.d2;
  return t19["offset" + o2] || t19["client" + o2] || 0;
}, Gj = function(t19) {
  var e2, o2 = [], r2 = t19.labels, L2 = t19.duration();
  for (e2 in r2) o2.push(r2[e2] / L2);
  return o2;
}, Kj = function(t19) {
  var e2 = vW.utils.snap(t19), o2 = Array.isArray(t19) && t19.slice(0).sort(function(t20, e3) {
    return t20 - e3;
  });
  return o2 ? function(t20, r2, L2) {
    var n2;
    if (void 0 === L2 && (L2 = 1e-3), !r2) return e2(t20);
    if (r2 > 0) {
      for (t20 -= L2, n2 = 0; n2 < o2.length; n2++) if (o2[n2] >= t20) return o2[n2];
      return o2[n2 - 1];
    }
    for (n2 = o2.length, t20 += L2; n2--; ) if (o2[n2] <= t20) return o2[n2];
    return o2[0];
  } : function(o3, r2, L2) {
    void 0 === L2 && (L2 = 1e-3);
    var n2 = e2(o3);
    return !r2 || Math.abs(n2 - o3) < L2 || n2 - o3 < 0 == r2 < 0 ? n2 : e2(r2 < 0 ? o3 - t19 : o3 + t19);
  };
}, Jj = function(t19, e2, o2, r2) {
  return o2.split(",").forEach(function(o3) {
    return t19(e2, o3, r2);
  });
}, Qj = function(t19, e2, o2, r2, L2) {
  return t19.addEventListener(e2, o2, { passive: !r2, capture: !!L2 });
}, tm = function(t19, e2, o2, r2) {
  return t19.removeEventListener(e2, o2, !!r2);
}, em = function(t19, e2, o2) {
  (o2 = o2 && o2.wheelHandler) && (t19(e2, "wheel", o2), t19(e2, "touchmove", o2));
}, om = { startColor: "green", endColor: "red", indent: 0, fontSize: "16px", fontWeight: "normal" }, rm = { toggleActions: "play", anticipatePin: 0 }, Lm = { top: 0, left: 0, center: 0.5, bottom: 1, right: 1 }, nm = function(t19, e2) {
  if (yj(t19)) {
    var o2 = t19.indexOf("="), r2 = ~o2 ? +(t19.charAt(o2 - 1) + 1) * parseFloat(t19.substr(o2 + 1)) : 0;
    ~o2 && (t19.indexOf("%") > o2 && (r2 *= e2 / 100), t19 = t19.substr(0, o2 - 1)), t19 = r2 + (t19 in Lm ? Lm[t19] * e2 : ~t19.indexOf("%") ? parseFloat(t19) * e2 / 100 : parseFloat(t19) || 0);
  }
  return t19;
}, im = function(t19, e2, o2, r2, L2, n2, i2, s2) {
  var d2 = L2.startColor, k2 = L2.endColor, h2 = L2.fontSize, a2 = L2.indent, u2 = L2.fontWeight, p2 = yW.createElement("div"), c2 = jj(o2) || "fixed" === LW(o2, "pinType"), l2 = -1 !== t19.indexOf("scroller"), w2 = c2 ? CW : o2, M2 = -1 !== t19.indexOf("start"), f2 = M2 ? d2 : k2, W2 = "border-color:" + f2 + ";font-size:" + h2 + ";color:" + f2 + ";font-weight:" + u2 + ";pointer-events:none;white-space:nowrap;font-family:sans-serif,Arial;z-index:1000;padding:4px 8px;border-width:0;border-style:solid;";
  return W2 += "position:" + ((l2 || s2) && c2 ? "fixed;" : "absolute;"), (l2 || s2 || !c2) && (W2 += (r2 === pW ? Sj : Zj) + ":" + (n2 + parseFloat(a2)) + "px;"), i2 && (W2 += "box-sizing:border-box;text-align:left;width:" + i2.offsetWidth + "px;"), p2._isStart = M2, p2.setAttribute("class", "gsap-marker-" + t19 + (e2 ? " marker-" + e2 : "")), p2.style.cssText = W2, p2.innerText = e2 || 0 === e2 ? t19 + "-" + e2 : t19, w2.children[0] ? w2.insertBefore(p2, w2.children[0]) : w2.appendChild(p2), p2._offset = p2["offset" + r2.op.d2], sm(p2, 0, r2, M2), p2;
}, sm = function(t19, e2, o2, r2) {
  var L2 = { display: "block" }, n2 = o2[r2 ? "os2" : "p2"], i2 = o2[r2 ? "p2" : "os2"];
  t19._isFlipped = r2, L2[o2.a + "Percent"] = r2 ? -100 : 0, L2[o2.a] = r2 ? "1px" : 0, L2["border" + n2 + Bj] = 1, L2["border" + i2 + Bj] = 0, L2[o2.p] = e2 + "px", vW.set(t19, L2);
}, dm = [], km = {}, hm = function() {
  return sj() - kj > 34 && (oj || (oj = requestAnimationFrame(xm)));
}, am = function() {
  (!IW || !IW.isPressed || IW.startX > CW.clientWidth) && (tW.cache++, IW ? oj || (oj = requestAnimationFrame(xm)) : xm(), kj || Mm("scrollStart"), kj = sj());
}, um = function() {
  $W = _W.innerWidth, UW = _W.innerHeight;
}, pm = function(t19) {
  tW.cache++, (true === t19 || !ZW && !BW && !yW.fullscreenElement && !yW.webkitFullscreenElement && (!FW || $W !== _W.innerWidth || Math.abs(_W.innerHeight - UW) > 0.25 * _W.innerHeight)) && VW.restart(true);
}, cm = {}, lm = [], wm = function t17() {
  return tm(zm, "scrollEnd", t17) || ym(true);
}, Mm = function(t19) {
  return cm[t19] && cm[t19].map(function(t20) {
    return t20();
  }) || lm;
}, fm = [], Wm = function(t19) {
  for (var e2 = 0; e2 < fm.length; e2 += 5) (!t19 || fm[e2 + 4] && fm[e2 + 4].query === t19) && (fm[e2].style.cssText = fm[e2 + 1], fm[e2].getBBox && fm[e2].setAttribute("transform", fm[e2 + 2] || ""), fm[e2 + 3].uncache = 1);
}, jm = function(t19, e2) {
  var o2;
  for (NW = 0; NW < dm.length; NW++) !(o2 = dm[NW]) || e2 && o2._ctx !== e2 || (t19 ? o2.kill(1) : o2.revert(true, true));
  QW = true, e2 && Wm(e2), e2 || Mm("revert");
}, mm = function(t19, e2) {
  tW.cache++, (e2 || !rj) && tW.forEach(function(t20) {
    return bj(t20) && t20.cacheID++ && (t20.rec = 0);
  }), yj(t19) && (_W.history.scrollRestoration = GW = t19);
}, vm = 0, gm = function() {
  CW.appendChild(KW), JW = !IW && KW.offsetHeight || _W.innerHeight, CW.removeChild(KW);
}, _m = function(t19) {
  return HW(".gsap-marker-start, .gsap-marker-end, .gsap-marker-scroller-start, .gsap-marker-scroller-end").forEach(function(e2) {
    return e2.style.display = t19 ? "none" : "block";
  });
}, ym = function(t19, e2) {
  if (bW = yW.documentElement, CW = yW.body, xW = [_W, yW, bW, CW], !kj || t19 || QW) {
    gm(), rj = zm.isRefreshing = true, tW.forEach(function(t20) {
      return bj(t20) && ++t20.cacheID && (t20.rec = t20());
    });
    var o2 = Mm("refreshInit");
    qW && zm.sort(), e2 || jm(), tW.forEach(function(t20) {
      bj(t20) && (t20.smooth && (t20.target.style.scrollBehavior = "auto"), t20(0));
    }), dm.slice(0).forEach(function(t20) {
      return t20.refresh();
    }), QW = false, dm.forEach(function(t20) {
      if (t20._subPinOffset && t20.pin) {
        var e3 = t20.vars.horizontal ? "offsetWidth" : "offsetHeight", o3 = t20.pin[e3];
        t20.revert(true, 1), t20.adjustPinSpacing(t20.pin[e3] - o3), t20.refresh();
      }
    }), tj = 1, _m(true), dm.forEach(function(t20) {
      var e3 = gj(t20.scroller, t20._dir), o3 = "max" === t20.vars.end || t20._endClamp && t20.end > e3, r2 = t20._startClamp && t20.start >= e3;
      (o3 || r2) && t20.setPositions(r2 ? e3 - 1 : t20.start, o3 ? Math.max(r2 ? e3 : t20.start + 1, e3) : t20.end, true);
    }), _m(false), tj = 0, o2.forEach(function(t20) {
      return t20 && t20.render && t20.render(-1);
    }), tW.forEach(function(t20) {
      bj(t20) && (t20.smooth && requestAnimationFrame(function() {
        return t20.target.style.scrollBehavior = "smooth";
      }), t20.rec && t20(t20.rec));
    }), mm(GW, 1), VW.pause(), vm++, rj = 2, xm(2), dm.forEach(function(t20) {
      return bj(t20.vars.onRefresh) && t20.vars.onRefresh(t20);
    }), rj = zm.isRefreshing = false, Mm("refresh");
  } else Qj(zm, "scrollEnd", wm);
}, bm = 0, Cm = 1, xm = function(t19) {
  if (2 === t19 || !rj && !QW) {
    zm.isUpdating = true, nj && nj.update(0);
    var e2 = dm.length, o2 = sj(), r2 = o2 - dj >= 50, L2 = e2 && dm[0].scroll();
    if (Cm = bm > L2 ? -1 : 1, rj || (bm = L2), r2 && (kj && !EW && o2 - kj > 200 && (kj = 0, Mm("scrollEnd")), OW = dj, dj = o2), Cm < 0) {
      for (NW = e2; NW-- > 0; ) dm[NW] && dm[NW].update(0, r2);
      Cm = 1;
    } else for (NW = 0; NW < e2; NW++) dm[NW] && dm[NW].update(0, r2);
    zm.isUpdating = false;
  }
  oj = 0;
}, Vm = [Oj, "top", Zj, Sj, zj + Dj, zj + Nj, zj + Rj, zj + Aj, "display", "flexShrink", "float", "zIndex", "gridColumnStart", "gridColumnEnd", "gridRowStart", "gridRowEnd", "gridArea", "justifySelf", "alignSelf", "placeSelf", "order"], Hm = Vm.concat([Ej, Pj, "boxSizing", "max" + Bj, "max" + Ij, "position", zj, qj, qj + Rj, qj + Nj, qj + Dj, qj + Aj]), Tm = function(t19, e2, o2, r2) {
  if (!t19._gsap.swappedIn) {
    for (var L2, n2 = Vm.length, i2 = e2.style, s2 = t19.style; n2--; ) i2[L2 = Vm[n2]] = o2[L2];
    i2.position = "absolute" === o2.position ? "absolute" : "relative", "inline" === o2.display && (i2.display = "inline-block"), s2[Zj] = s2[Sj] = "auto", i2.flexBasis = o2.flexBasis || "auto", i2.overflow = "visible", i2.boxSizing = "border-box", i2[Ej] = Xj(t19, uW) + Fj, i2[Pj] = Xj(t19, pW) + Fj, i2[qj] = s2[zj] = s2.top = s2[Oj] = "0", Sm(r2), s2[Ej] = s2["max" + Bj] = o2[Ej], s2[Pj] = s2["max" + Ij] = o2[Pj], s2[qj] = o2[qj], t19.parentNode !== e2 && (t19.parentNode.insertBefore(e2, t19), e2.appendChild(t19)), t19._gsap.swappedIn = true;
  }
}, Om = /([A-Z])/g, Sm = function(t19) {
  if (t19) {
    var e2, o2, r2 = t19.t.style, L2 = t19.length, n2 = 0;
    for ((t19.t._gsap || vW.core.getCache(t19.t)).uncache = 1; n2 < L2; n2 += 2) o2 = t19[n2 + 1], e2 = t19[n2], o2 ? r2[e2] = o2 : r2[e2] && r2.removeProperty(e2.replace(Om, "-$1").toLowerCase());
  }
}, Zm = function(t19) {
  for (var e2 = Hm.length, o2 = t19.style, r2 = [], L2 = 0; L2 < e2; L2++) r2.push(Hm[L2], o2[Hm[L2]]);
  return r2.t = t19, r2;
}, Em = { left: 0, top: 0 }, Pm = function(t19, e2, o2, r2, L2, n2, i2, s2, d2, k2, h2, a2, u2, p2) {
  bj(t19) && (t19 = t19(s2)), yj(t19) && "max" === t19.substr(0, 3) && (t19 = a2 + ("=" === t19.charAt(4) ? nm("0" + t19.substr(3), o2) : 0));
  var c2, l2, w2, M2 = u2 ? u2.time() : 0;
  if (u2 && u2.seek(0), isNaN(t19) || (t19 = +t19), Cj(t19)) u2 && (t19 = vW.utils.mapRange(u2.scrollTrigger.start, u2.scrollTrigger.end, 0, a2, t19)), i2 && sm(i2, o2, r2, true);
  else {
    bj(e2) && (e2 = e2(s2));
    var f2, W2, j2, m2, v2 = (t19 || "0").split(" ");
    w2 = cW(e2, s2) || CW, (f2 = Yj(w2) || {}) && (f2.left || f2.top) || "none" !== Uj(w2).display || (m2 = w2.style.display, w2.style.display = "block", f2 = Yj(w2), m2 ? w2.style.display = m2 : w2.style.removeProperty("display")), W2 = nm(v2[0], f2[r2.d]), j2 = nm(v2[1] || "0", o2), t19 = f2[r2.p] - d2[r2.p] - k2 + W2 + L2 - j2, i2 && sm(i2, j2, r2, o2 - j2 < 20 || i2._isStart && j2 > 20), o2 -= o2 - j2;
  }
  if (p2 && (s2[p2] = t19 || -1e-3, t19 < 0 && (t19 = 0)), n2) {
    var g2 = t19 + o2, _2 = n2._isStart;
    c2 = "scroll" + r2.d2, sm(n2, g2, r2, _2 && g2 > 20 || !_2 && (h2 ? Math.max(CW[c2], bW[c2]) : n2.parentNode[c2]) <= g2 + 1), h2 && (d2 = Yj(i2), h2 && (n2.style[r2.op.p] = d2[r2.op.p] - r2.op.m - n2._offset + Fj));
  }
  return u2 && w2 && (c2 = Yj(w2), u2.seek(a2), l2 = Yj(w2), u2._caScrollDist = c2[r2.p] - l2[r2.p], t19 = t19 / u2._caScrollDist * a2), u2 && u2.seek(M2), u2 ? t19 : Math.round(t19);
}, Nm = /(webkit|moz|length|cssText|inset)/i, Am = function(t19, e2, o2, r2) {
  if (t19.parentNode !== e2) {
    var L2, n2, i2 = t19.style;
    if (e2 === CW) {
      for (L2 in t19._stOrig = i2.cssText, n2 = Uj(t19)) +L2 || Nm.test(L2) || !n2[L2] || "string" != typeof i2[L2] || "0" === L2 || (i2[L2] = n2[L2]);
      i2.top = o2, i2.left = r2;
    } else i2.cssText = t19._stOrig;
    vW.core.getCache(t19).uncache = 1, e2.appendChild(t19);
  }
}, Rm = function(t19, e2, o2) {
  var r2 = e2, L2 = r2;
  return function(e3) {
    var n2 = Math.round(t19());
    return n2 !== r2 && n2 !== L2 && Math.abs(n2 - r2) > 3 && Math.abs(n2 - L2) > 3 && (e3 = n2, o2 && o2()), L2 = r2, r2 = Math.round(e3);
  };
}, Dm = function(t19, e2, o2) {
  var r2 = {};
  r2[e2.p] = "+=" + o2, vW.set(t19, r2);
}, qm = function(t19, e2) {
  var o2 = lW(t19, e2), r2 = "_scroll" + e2.p2, L2 = function e3(L3, n2, i2, s2, d2) {
    var k2 = e3.tween, h2 = n2.onComplete, a2 = {};
    i2 = i2 || o2();
    var u2 = Rm(o2, i2, function() {
      k2.kill(), e3.tween = 0;
    });
    return d2 = s2 && d2 || 0, s2 = s2 || L3 - i2, k2 && k2.kill(), n2[r2] = L3, n2.inherit = false, n2.modifiers = a2, a2[r2] = function() {
      return u2(i2 + s2 * k2.ratio + d2 * k2.ratio * k2.ratio);
    }, n2.onUpdate = function() {
      tW.cache++, e3.tween && xm();
    }, n2.onComplete = function() {
      e3.tween = 0, h2 && h2.call(k2);
    }, k2 = e3.tween = vW.to(t19, n2);
  };
  return t19[r2] = o2, o2.wheelHandler = function() {
    return L2.tween && L2.tween.kill() && (L2.tween = 0);
  }, Qj(t19, "wheel", o2.wheelHandler), zm.isTouch && Qj(t19, "touchmove", o2.wheelHandler), L2;
}, zm = function() {
  function t19(e2, o2) {
    gW || t19.register(vW) || console.warn("Please gsap.registerPlugin(ScrollTrigger)"), XW(this), this.init(e2, o2);
  }
  return t19.prototype.init = function(e2, o2) {
    if (this.progress = this.start = 0, this.vars && this.kill(true, true), hj) {
      var r2, L2, n2, i2, s2, d2, k2, h2, a2, u2, p2, c2, l2, w2, M2, f2, W2, j2, m2, v2, g2, _2, y2, b2, C2, x2, V2, H2, T2, O2, S2, Z2, E2, P2, N2, A2, R2, D2, q2, z2, B2, I2, F2 = e2 = $j(yj(e2) || Cj(e2) || e2.nodeType ? { trigger: e2 } : e2, rm), U2 = F2.onUpdate, $2 = F2.toggleClass, Y2 = F2.id, X2 = F2.onToggle, G2 = F2.onRefresh, K2 = F2.scrub, J2 = F2.trigger, Q2 = F2.pin, tt2 = F2.pinSpacing, et2 = F2.invalidateOnRefresh, ot2 = F2.anticipatePin, rt2 = F2.onScrubComplete, Lt2 = F2.onSnapComplete, nt2 = F2.once, it2 = F2.snap, st2 = F2.pinReparent, dt2 = F2.pinSpacer, kt2 = F2.containerAnimation, ht2 = F2.fastScrollEnd, at2 = F2.preventOverlaps, ut2 = e2.horizontal || e2.containerAnimation && false !== e2.horizontal ? uW : pW, pt2 = !K2 && 0 !== K2, ct2 = cW(e2.scroller || _W), lt2 = vW.core.getCache(ct2), wt2 = jj(ct2), Mt2 = "fixed" === ("pinType" in e2 ? e2.pinType : LW(ct2, "pinType") || wt2 && "fixed"), ft2 = [e2.onEnter, e2.onLeave, e2.onEnterBack, e2.onLeaveBack], Wt2 = pt2 && e2.toggleActions.split(" "), jt2 = "markers" in e2 ? e2.markers : rm.markers, mt2 = wt2 ? 0 : parseFloat(Uj(ct2)["border" + ut2.p2 + Bj]) || 0, vt2 = this, gt2 = e2.onRefreshInit && function() {
        return e2.onRefreshInit(vt2);
      }, _t2 = function(t20, e3, o3) {
        var r3 = o3.d, L3 = o3.d2, n3 = o3.a;
        return (n3 = LW(t20, "getBoundingClientRect")) ? function() {
          return n3()[r3];
        } : function() {
          return (e3 ? mj(L3) : t20["client" + L3]) || 0;
        };
      }(ct2, wt2, ut2), yt2 = function(t20, e3) {
        return !e3 || ~eW.indexOf(t20) ? vj(t20) : function() {
          return Em;
        };
      }(ct2, wt2), bt2 = 0, Ct2 = 0, xt2 = 0, Vt2 = lW(ct2, ut2);
      if (vt2._startClamp = vt2._endClamp = false, vt2._dir = ut2, ot2 *= 45, vt2.scroller = ct2, vt2.scroll = kt2 ? kt2.time.bind(kt2) : Vt2, i2 = Vt2(), vt2.vars = e2, o2 = o2 || e2.animation, "refreshPriority" in e2 && (qW = 1, -9999 === e2.refreshPriority && (nj = vt2)), lt2.tweenScroll = lt2.tweenScroll || { top: qm(ct2, pW), left: qm(ct2, uW) }, vt2.tweenTo = r2 = lt2.tweenScroll[ut2.p], vt2.scrubDuration = function(t20) {
        (E2 = Cj(t20) && t20) ? Z2 ? Z2.duration(t20) : Z2 = vW.to(o2, { ease: "expo", totalProgress: "+=0", inherit: false, duration: E2, paused: true, onComplete: function() {
          return rt2 && rt2(vt2);
        } }) : (Z2 && Z2.progress(1).kill(), Z2 = 0);
      }, o2 && (o2.vars.lazy = false, o2._initted && !vt2.isReverted || false !== o2.vars.immediateRender && false !== e2.immediateRender && o2.duration() && o2.render(0, true, true), vt2.animation = o2.pause(), o2.scrollTrigger = vt2, vt2.scrubDuration(K2), O2 = 0, Y2 || (Y2 = o2.vars.id)), it2 && (xj(it2) && !it2.push || (it2 = { snapTo: it2 }), "scrollBehavior" in CW.style && vW.set(wt2 ? [CW, bW] : ct2, { scrollBehavior: "auto" }), tW.forEach(function(t20) {
        return bj(t20) && t20.target === (wt2 ? yW.scrollingElement || bW : ct2) && (t20.smooth = false);
      }), n2 = bj(it2.snapTo) ? it2.snapTo : "labels" === it2.snapTo ? /* @__PURE__ */ function(t20) {
        return function(e3) {
          return vW.utils.snap(Gj(t20), e3);
        };
      }(o2) : "labelsDirectional" === it2.snapTo ? (z2 = o2, function(t20, e3) {
        return Kj(Gj(z2))(t20, e3.direction);
      }) : false !== it2.directional ? function(t20, e3) {
        return Kj(it2.snapTo)(t20, sj() - Ct2 < 500 ? 0 : e3.direction);
      } : vW.utils.snap(it2.snapTo), P2 = it2.duration || { min: 0.1, max: 2 }, P2 = xj(P2) ? TW(P2.min, P2.max) : TW(P2, P2), N2 = vW.delayedCall(it2.delay || E2 / 2 || 0.1, function() {
        var t20 = Vt2(), e3 = sj() - Ct2 < 500, L3 = r2.tween;
        if (!(e3 || Math.abs(vt2.getVelocity()) < 10) || L3 || EW || bt2 === t20) vt2.isActive && bt2 !== t20 && N2.restart(true);
        else {
          var i3, s3, h3 = (t20 - d2) / w2, a3 = o2 && !pt2 ? o2.totalProgress() : h3, u3 = e3 ? 0 : (a3 - S2) / (sj() - OW) * 1e3 || 0, p3 = vW.utils.clamp(-h3, 1 - h3, Tj(u3 / 2) * u3 / 0.185), c3 = h3 + (false === it2.inertia ? 0 : p3), l3 = it2, M3 = l3.onStart, f3 = l3.onInterrupt, W3 = l3.onComplete;
          if (i3 = n2(c3, vt2), Cj(i3) || (i3 = c3), s3 = Math.max(0, Math.round(d2 + i3 * w2)), t20 <= k2 && t20 >= d2 && s3 !== t20) {
            if (L3 && !L3._initted && L3.data <= Tj(s3 - t20)) return;
            false === it2.inertia && (p3 = i3 - h3), r2(s3, { duration: P2(Tj(0.185 * Math.max(Tj(c3 - a3), Tj(i3 - a3)) / u3 / 0.05 || 0)), ease: it2.ease || "power3", data: Tj(s3 - t20), onInterrupt: function() {
              return N2.restart(true) && f3 && f3(vt2);
            }, onComplete: function() {
              vt2.update(), bt2 = Vt2(), o2 && !pt2 && (Z2 ? Z2.resetTo("totalProgress", i3, o2._tTime / o2._tDur) : o2.progress(i3)), O2 = S2 = o2 && !pt2 ? o2.totalProgress() : vt2.progress, Lt2 && Lt2(vt2), W3 && W3(vt2);
            } }, t20, p3 * w2, s3 - t20 - p3 * w2), M3 && M3(vt2, r2.tween);
          }
        }
      }).pause()), Y2 && (km[Y2] = vt2), (q2 = (J2 = vt2.trigger = cW(J2 || true !== Q2 && Q2)) && J2._gsap && J2._gsap.stRevert) && (q2 = q2(vt2)), Q2 = true === Q2 ? J2 : cW(Q2), yj($2) && ($2 = { targets: J2, className: $2 }), Q2 && (false === tt2 || tt2 === zj || (tt2 = !(!tt2 && Q2.parentNode && Q2.parentNode.style && "flex" === Uj(Q2.parentNode).display) && qj), vt2.pin = Q2, (L2 = vW.core.getCache(Q2)).spacer ? M2 = L2.pinState : (dt2 && ((dt2 = cW(dt2)) && !dt2.nodeType && (dt2 = dt2.current || dt2.nativeElement), L2.spacerIsNative = !!dt2, dt2 && (L2.spacerState = Zm(dt2))), L2.spacer = j2 = dt2 || yW.createElement("div"), j2.classList.add("pin-spacer"), Y2 && j2.classList.add("pin-spacer-" + Y2), L2.pinState = M2 = Zm(Q2)), false !== e2.force3D && vW.set(Q2, { force3D: true }), vt2.spacer = j2 = L2.spacer, T2 = Uj(Q2), b2 = T2[tt2 + ut2.os2], v2 = vW.getProperty(Q2), g2 = vW.quickSetter(Q2, ut2.a, Fj), Tm(Q2, j2, T2), W2 = Zm(Q2)), jt2) {
        c2 = xj(jt2) ? $j(jt2, om) : om, u2 = im("scroller-start", Y2, ct2, ut2, c2, 0), p2 = im("scroller-end", Y2, ct2, ut2, c2, 0, u2), m2 = u2["offset" + ut2.op.d2];
        var Ht2 = cW(LW(ct2, "content") || ct2);
        h2 = this.markerStart = im("start", Y2, Ht2, ut2, c2, m2, 0, kt2), a2 = this.markerEnd = im("end", Y2, Ht2, ut2, c2, m2, 0, kt2), kt2 && (D2 = vW.quickSetter([h2, a2], ut2.a, Fj)), Mt2 || eW.length && true === LW(ct2, "fixedMarkers") || (I2 = Uj(B2 = wt2 ? CW : ct2).position, B2.style.position = "absolute" === I2 || "fixed" === I2 ? I2 : "relative", vW.set([u2, p2], { force3D: true }), x2 = vW.quickSetter(u2, ut2.a, Fj), H2 = vW.quickSetter(p2, ut2.a, Fj));
      }
      if (kt2) {
        var Tt2 = kt2.vars.onUpdate, Ot2 = kt2.vars.onUpdateParams;
        kt2.eventCallback("onUpdate", function() {
          vt2.update(0, 0, 1), Tt2 && Tt2.apply(kt2, Ot2 || []);
        });
      }
      if (vt2.previous = function() {
        return dm[dm.indexOf(vt2) - 1];
      }, vt2.next = function() {
        return dm[dm.indexOf(vt2) + 1];
      }, vt2.revert = function(t20, e3) {
        if (!e3) return vt2.kill(true);
        var r3 = false !== t20 || !vt2.enabled, L3 = ZW;
        r3 !== vt2.isReverted && (r3 && (A2 = Math.max(Vt2(), vt2.scroll.rec || 0), xt2 = vt2.progress, R2 = o2 && o2.progress()), h2 && [h2, a2, u2, p2].forEach(function(t21) {
          return t21.style.display = r3 ? "none" : "block";
        }), r3 && (ZW = vt2, vt2.update(r3)), !Q2 || st2 && vt2.isActive || (r3 ? function(t21, e4, o3) {
          Sm(o3);
          var r4 = t21._gsap;
          if (r4.spacerIsNative) Sm(r4.spacerState);
          else if (t21._gsap.swappedIn) {
            var L4 = e4.parentNode;
            L4 && (L4.insertBefore(t21, e4), L4.removeChild(e4));
          }
          t21._gsap.swappedIn = false;
        }(Q2, j2, M2) : Tm(Q2, j2, Uj(Q2), C2)), r3 || vt2.update(r3), ZW = L3, vt2.isReverted = r3);
      }, vt2.refresh = function(L3, n3, c3, m3) {
        if (!ZW && vt2.enabled || n3) if (Q2 && L3 && kj) Qj(t19, "scrollEnd", wm);
        else {
          !rj && gt2 && gt2(vt2), ZW = vt2, r2.tween && !c3 && (r2.tween.kill(), r2.tween = 0), Z2 && Z2.pause(), et2 && o2 && o2.revert({ kill: false }).invalidate(), vt2.isReverted || vt2.revert(true, true), vt2._subPinOffset = false;
          var g3, b3, x3, H3, T3, O3, S3, E3, P3, D3, q3, z3, B3, I3 = _t2(), F3 = yt2(), U3 = kt2 ? kt2.duration() : gj(ct2, ut2), $3 = w2 <= 0.01, Y3 = 0, X3 = m3 || 0, K3 = xj(c3) ? c3.end : e2.end, ot3 = e2.endTrigger || J2, rt3 = xj(c3) ? c3.start : e2.start || (0 !== e2.start && J2 ? Q2 ? "0 0" : "0 100%" : 0), Lt3 = vt2.pinnedContainer = e2.pinnedContainer && cW(e2.pinnedContainer, vt2), nt3 = J2 && Math.max(0, dm.indexOf(vt2)) || 0, it3 = nt3;
          for (jt2 && xj(c3) && (z3 = vW.getProperty(u2, ut2.p), B3 = vW.getProperty(p2, ut2.p)); it3-- > 0; ) (O3 = dm[it3]).end || O3.refresh(0, 1) || (ZW = vt2), !(S3 = O3.pin) || S3 !== J2 && S3 !== Q2 && S3 !== Lt3 || O3.isReverted || (D3 || (D3 = []), D3.unshift(O3), O3.revert(true, true)), O3 !== dm[it3] && (nt3--, it3--);
          for (bj(rt3) && (rt3 = rt3(vt2)), rt3 = aj(rt3, "start", vt2), d2 = Pm(rt3, J2, I3, ut2, Vt2(), h2, u2, vt2, F3, mt2, Mt2, U3, kt2, vt2._startClamp && "_startClamp") || (Q2 ? -1e-3 : 0), bj(K3) && (K3 = K3(vt2)), yj(K3) && !K3.indexOf("+=") && (~K3.indexOf(" ") ? K3 = (yj(rt3) ? rt3.split(" ")[0] : "") + K3 : (Y3 = nm(K3.substr(2), I3), K3 = yj(rt3) ? rt3 : (kt2 ? vW.utils.mapRange(0, kt2.duration(), kt2.scrollTrigger.start, kt2.scrollTrigger.end, d2) : d2) + Y3, ot3 = J2)), K3 = aj(K3, "end", vt2), k2 = Math.max(d2, Pm(K3 || (ot3 ? "100% 0" : U3), ot3, I3, ut2, Vt2() + Y3, a2, p2, vt2, F3, mt2, Mt2, U3, kt2, vt2._endClamp && "_endClamp")) || -1e-3, Y3 = 0, it3 = nt3; it3--; ) (S3 = (O3 = dm[it3]).pin) && O3.start - O3._pinPush <= d2 && !kt2 && O3.end > 0 && (g3 = O3.end - (vt2._startClamp ? Math.max(0, O3.start) : O3.start), (S3 === J2 && O3.start - O3._pinPush < d2 || S3 === Lt3) && isNaN(rt3) && (Y3 += g3 * (1 - O3.progress)), S3 === Q2 && (X3 += g3));
          if (d2 += Y3, k2 += Y3, vt2._startClamp && (vt2._startClamp += Y3), vt2._endClamp && !rj && (vt2._endClamp = k2 || -1e-3, k2 = Math.min(k2, gj(ct2, ut2))), w2 = k2 - d2 || (d2 -= 0.01) && 1e-3, $3 && (xt2 = vW.utils.clamp(0, 1, vW.utils.normalize(d2, k2, A2))), vt2._pinPush = X3, h2 && Y3 && ((g3 = {})[ut2.a] = "+=" + Y3, Lt3 && (g3[ut2.p] = "-=" + Vt2()), vW.set([h2, a2], g3)), !Q2 || tj && vt2.end >= gj(ct2, ut2)) {
            if (J2 && Vt2() && !kt2) for (b3 = J2.parentNode; b3 && b3 !== CW; ) b3._pinOffset && (d2 -= b3._pinOffset, k2 -= b3._pinOffset), b3 = b3.parentNode;
          } else g3 = Uj(Q2), H3 = ut2 === pW, x3 = Vt2(), _2 = parseFloat(v2(ut2.a)) + X3, !U3 && k2 > 1 && (q3 = { style: q3 = (wt2 ? yW.scrollingElement || bW : ct2).style, value: q3["overflow" + ut2.a.toUpperCase()] }, wt2 && "scroll" !== Uj(CW)["overflow" + ut2.a.toUpperCase()] && (q3.style["overflow" + ut2.a.toUpperCase()] = "scroll")), Tm(Q2, j2, g3), W2 = Zm(Q2), b3 = Yj(Q2, true), E3 = Mt2 && lW(ct2, H3 ? uW : pW)(), tt2 ? ((C2 = [tt2 + ut2.os2, w2 + X3 + Fj]).t = j2, (it3 = tt2 === qj ? Xj(Q2, ut2) + w2 + X3 : 0) && (C2.push(ut2.d, it3 + Fj), "auto" !== j2.style.flexBasis && (j2.style.flexBasis = it3 + Fj)), Sm(C2), Lt3 && dm.forEach(function(t20) {
            t20.pin === Lt3 && false !== t20.vars.pinSpacing && (t20._subPinOffset = true);
          }), Mt2 && Vt2(A2)) : (it3 = Xj(Q2, ut2)) && "auto" !== j2.style.flexBasis && (j2.style.flexBasis = it3 + Fj), Mt2 && ((T3 = { top: b3.top + (H3 ? x3 - d2 : E3) + Fj, left: b3.left + (H3 ? E3 : x3 - d2) + Fj, boxSizing: "border-box", position: "fixed" })[Ej] = T3["max" + Bj] = Math.ceil(b3.width) + Fj, T3[Pj] = T3["max" + Ij] = Math.ceil(b3.height) + Fj, T3[zj] = T3[zj + Rj] = T3[zj + Nj] = T3[zj + Dj] = T3[zj + Aj] = "0", T3[qj] = g3[qj], T3[qj + Rj] = g3[qj + Rj], T3[qj + Nj] = g3[qj + Nj], T3[qj + Dj] = g3[qj + Dj], T3[qj + Aj] = g3[qj + Aj], f2 = function(t20, e3, o3) {
            for (var r3, L4 = [], n4 = t20.length, i3 = o3 ? 8 : 0; i3 < n4; i3 += 2) r3 = t20[i3], L4.push(r3, r3 in e3 ? e3[r3] : t20[i3 + 1]);
            return L4.t = t20.t, L4;
          }(M2, T3, st2), rj && Vt2(0)), o2 ? (P3 = o2._initted, zW(1), o2.render(o2.duration(), true, true), y2 = v2(ut2.a) - _2 + w2 + X3, V2 = Math.abs(w2 - y2) > 1, Mt2 && V2 && f2.splice(f2.length - 2, 2), o2.render(0, true, true), P3 || o2.invalidate(true), o2.parent || o2.totalTime(o2.totalTime()), zW(0)) : y2 = w2, q3 && (q3.value ? q3.style["overflow" + ut2.a.toUpperCase()] = q3.value : q3.style.removeProperty("overflow-" + ut2.a));
          D3 && D3.forEach(function(t20) {
            return t20.revert(false, true);
          }), vt2.start = d2, vt2.end = k2, i2 = s2 = rj ? A2 : Vt2(), kt2 || rj || (i2 < A2 && Vt2(A2), vt2.scroll.rec = 0), vt2.revert(false, true), Ct2 = sj(), N2 && (bt2 = -1, N2.restart(true)), ZW = 0, o2 && pt2 && (o2._initted || R2) && o2.progress() !== R2 && o2.progress(R2 || 0, true).render(o2.time(), true, true), ($3 || xt2 !== vt2.progress || kt2 || et2 || o2 && !o2._initted) && (o2 && !pt2 && o2.totalProgress(kt2 && d2 < -1e-3 && !xt2 ? vW.utils.normalize(d2, k2, 0) : xt2, true), vt2.progress = $3 || (i2 - d2) / w2 === xt2 ? 0 : xt2), Q2 && tt2 && (j2._pinOffset = Math.round(vt2.progress * y2)), Z2 && Z2.invalidate(), isNaN(z3) || (z3 -= vW.getProperty(u2, ut2.p), B3 -= vW.getProperty(p2, ut2.p), Dm(u2, ut2, z3), Dm(h2, ut2, z3 - (m3 || 0)), Dm(p2, ut2, B3), Dm(a2, ut2, B3 - (m3 || 0))), $3 && !rj && vt2.update(), !G2 || rj || l2 || (l2 = true, G2(vt2), l2 = false);
        }
      }, vt2.getVelocity = function() {
        return (Vt2() - s2) / (sj() - OW) * 1e3 || 0;
      }, vt2.endAnimation = function() {
        Vj(vt2.callbackAnimation), o2 && (Z2 ? Z2.progress(1) : o2.paused() ? pt2 || Vj(o2, vt2.direction < 0, 1) : Vj(o2, o2.reversed()));
      }, vt2.labelToScroll = function(t20) {
        return o2 && o2.labels && (d2 || vt2.refresh() || d2) + o2.labels[t20] / o2.duration() * w2 || 0;
      }, vt2.getTrailing = function(t20) {
        var e3 = dm.indexOf(vt2), o3 = vt2.direction > 0 ? dm.slice(0, e3).reverse() : dm.slice(e3 + 1);
        return (yj(t20) ? o3.filter(function(e4) {
          return e4.vars.preventOverlaps === t20;
        }) : o3).filter(function(t21) {
          return vt2.direction > 0 ? t21.end <= d2 : t21.start >= k2;
        });
      }, vt2.update = function(t20, e3, L3) {
        if (!kt2 || L3 || t20) {
          var n3, h3, a3, p3, c3, l3, M3, m3 = true === rj ? A2 : vt2.scroll(), v3 = t20 ? 0 : (m3 - d2) / w2, C3 = v3 < 0 ? 0 : v3 > 1 ? 1 : v3 || 0, T3 = vt2.progress;
          if (e3 && (s2 = i2, i2 = kt2 ? Vt2() : m3, it2 && (S2 = O2, O2 = o2 && !pt2 ? o2.totalProgress() : C3)), ot2 && Q2 && !ZW && !ij && kj && (!C3 && d2 < m3 + (m3 - s2) / (sj() - OW) * ot2 ? C3 = 1e-4 : 1 === C3 && k2 > m3 + (m3 - s2) / (sj() - OW) * ot2 && (C3 = 0.9999)), C3 !== T3 && vt2.enabled) {
            if (p3 = (c3 = (n3 = vt2.isActive = !!C3 && C3 < 1) !== (!!T3 && T3 < 1)) || !!C3 != !!T3, vt2.direction = C3 > T3 ? 1 : -1, vt2.progress = C3, p3 && !ZW && (h3 = C3 && !T3 ? 0 : 1 === C3 ? 1 : 1 === T3 ? 2 : 3, pt2 && (a3 = !c3 && "none" !== Wt2[h3 + 1] && Wt2[h3 + 1] || Wt2[h3], M3 = o2 && ("complete" === a3 || "reset" === a3 || a3 in o2))), at2 && (c3 || M3) && (M3 || K2 || !o2) && (bj(at2) ? at2(vt2) : vt2.getTrailing(at2).forEach(function(t21) {
              return t21.endAnimation();
            })), pt2 || (!Z2 || ZW || ij ? o2 && o2.totalProgress(C3, !(!ZW || !Ct2 && !t20)) : (Z2._dp._time - Z2._start !== Z2._time && Z2.render(Z2._dp._time - Z2._start), Z2.resetTo ? Z2.resetTo("totalProgress", C3, o2._tTime / o2._tDur) : (Z2.vars.totalProgress = C3, Z2.invalidate().restart()))), Q2) if (t20 && tt2 && (j2.style[tt2 + ut2.os2] = b2), Mt2) {
              if (p3) {
                if (l3 = !t20 && C3 > T3 && k2 + 1 > m3 && m3 + 1 >= gj(ct2, ut2), st2) if (t20 || !n3 && !l3) Am(Q2, j2);
                else {
                  var E3 = Yj(Q2, true), P3 = m3 - d2;
                  Am(Q2, CW, E3.top + (ut2 === pW ? P3 : 0) + Fj, E3.left + (ut2 === pW ? 0 : P3) + Fj);
                }
                Sm(n3 || l3 ? f2 : W2), V2 && C3 < 1 && n3 || g2(_2 + (1 !== C3 || l3 ? 0 : y2));
              }
            } else g2(Mj(_2 + y2 * C3));
            it2 && !r2.tween && !ZW && !ij && N2.restart(true), $2 && (c3 || nt2 && C3 && (C3 < 1 || !ej)) && HW($2.targets).forEach(function(t21) {
              return t21.classList[n3 || nt2 ? "add" : "remove"]($2.className);
            }), U2 && !pt2 && !t20 && U2(vt2), p3 && !ZW ? (pt2 && (M3 && ("complete" === a3 ? o2.pause().totalProgress(1) : "reset" === a3 ? o2.restart(true).pause() : "restart" === a3 ? o2.restart(true) : o2[a3]()), U2 && U2(vt2)), !c3 && ej || (X2 && c3 && Hj(vt2, X2), ft2[h3] && Hj(vt2, ft2[h3]), nt2 && (1 === C3 ? vt2.kill(false, 1) : ft2[h3] = 0), c3 || ft2[h3 = 1 === C3 ? 1 : 3] && Hj(vt2, ft2[h3])), ht2 && !n3 && Math.abs(vt2.getVelocity()) > (Cj(ht2) ? ht2 : 2500) && (Vj(vt2.callbackAnimation), Z2 ? Z2.progress(1) : Vj(o2, "reverse" === a3 ? 1 : !C3, 1))) : pt2 && U2 && !ZW && U2(vt2);
          }
          if (H2) {
            var R3 = kt2 ? m3 / kt2.duration() * (kt2._caScrollDist || 0) : m3;
            x2(R3 + (u2._isFlipped ? 1 : 0)), H2(R3);
          }
          D2 && D2(-m3 / kt2.duration() * (kt2._caScrollDist || 0));
        }
      }, vt2.enable = function(e3, o3) {
        vt2.enabled || (vt2.enabled = true, Qj(ct2, "resize", pm), wt2 || Qj(ct2, "scroll", am), gt2 && Qj(t19, "refreshInit", gt2), false !== e3 && (vt2.progress = xt2 = 0, i2 = s2 = bt2 = Vt2()), false !== o3 && vt2.refresh());
      }, vt2.getTween = function(t20) {
        return t20 && r2 ? r2.tween : Z2;
      }, vt2.setPositions = function(t20, e3, o3, r3) {
        if (kt2) {
          var L3 = kt2.scrollTrigger, n3 = kt2.duration(), i3 = L3.end - L3.start;
          t20 = L3.start + i3 * t20 / n3, e3 = L3.start + i3 * e3 / n3;
        }
        vt2.refresh(false, false, { start: uj(t20, o3 && !!vt2._startClamp), end: uj(e3, o3 && !!vt2._endClamp) }, r3), vt2.update();
      }, vt2.adjustPinSpacing = function(t20) {
        if (C2 && t20) {
          var e3 = C2.indexOf(ut2.d) + 1;
          C2[e3] = parseFloat(C2[e3]) + t20 + Fj, C2[1] = parseFloat(C2[1]) + t20 + Fj, Sm(C2);
        }
      }, vt2.disable = function(e3, o3) {
        if (vt2.enabled && (false !== e3 && vt2.revert(true, true), vt2.enabled = vt2.isActive = false, o3 || Z2 && Z2.pause(), A2 = 0, L2 && (L2.uncache = 1), gt2 && tm(t19, "refreshInit", gt2), N2 && (N2.pause(), r2.tween && r2.tween.kill() && (r2.tween = 0)), !wt2)) {
          for (var n3 = dm.length; n3--; ) if (dm[n3].scroller === ct2 && dm[n3] !== vt2) return;
          tm(ct2, "resize", pm), wt2 || tm(ct2, "scroll", am);
        }
      }, vt2.kill = function(t20, r3) {
        vt2.disable(t20, r3), Z2 && !r3 && Z2.kill(), Y2 && delete km[Y2];
        var n3 = dm.indexOf(vt2);
        n3 >= 0 && dm.splice(n3, 1), n3 === NW && Cm > 0 && NW--, n3 = 0, dm.forEach(function(t21) {
          return t21.scroller === vt2.scroller && (n3 = 1);
        }), n3 || rj || (vt2.scroll.rec = 0), o2 && (o2.scrollTrigger = null, t20 && o2.revert({ kill: false }), r3 || o2.kill()), h2 && [h2, a2, u2, p2].forEach(function(t21) {
          return t21.parentNode && t21.parentNode.removeChild(t21);
        }), nj === vt2 && (nj = 0), Q2 && (L2 && (L2.uncache = 1), n3 = 0, dm.forEach(function(t21) {
          return t21.pin === Q2 && n3++;
        }), n3 || (L2.spacer = 0)), e2.onKill && e2.onKill(vt2);
      }, dm.push(vt2), vt2.enable(false, false), q2 && q2(vt2), o2 && o2.add && !w2) {
        var St2 = vt2.update;
        vt2.update = function() {
          vt2.update = St2, tW.cache++, d2 || k2 || vt2.refresh();
        }, vW.delayedCall(0.01, vt2.update), w2 = 0.01, d2 = k2 = 0;
      } else vt2.refresh();
      Q2 && function() {
        if (Lj !== vm) {
          var t20 = Lj = vm;
          requestAnimationFrame(function() {
            return t20 === vm && ym(true);
          });
        }
      }();
    } else this.update = this.refresh = this.kill = wj;
  }, t19.register = function(e2) {
    return gW || (vW = e2 || Wj(), fj() && window.document && t19.enable(), gW = hj), gW;
  }, t19.defaults = function(t20) {
    if (t20) for (var e2 in t20) rm[e2] = t20[e2];
    return rm;
  }, t19.disable = function(t20, e2) {
    hj = 0, dm.forEach(function(o3) {
      return o3[e2 ? "kill" : "disable"](t20);
    }), tm(_W, "wheel", am), tm(yW, "scroll", am), clearInterval(SW), tm(yW, "touchcancel", wj), tm(CW, "touchstart", wj), Jj(tm, yW, "pointerdown,touchstart,mousedown", cj), Jj(tm, yW, "pointerup,touchend,mouseup", lj), VW.kill(), _j(tm);
    for (var o2 = 0; o2 < tW.length; o2 += 3) em(tm, tW[o2], tW[o2 + 1]), em(tm, tW[o2], tW[o2 + 2]);
  }, t19.enable = function() {
    if (_W = window, yW = document, bW = yW.documentElement, CW = yW.body, vW && (HW = vW.utils.toArray, TW = vW.utils.clamp, XW = vW.core.context || wj, zW = vW.core.suppressOverwrites || wj, GW = _W.history.scrollRestoration || "auto", bm = _W.pageYOffset || 0, vW.core.globals("ScrollTrigger", t19), CW)) {
      hj = 1, (KW = document.createElement("div")).style.height = "100vh", KW.style.position = "absolute", gm(), pj(), mW.register(vW), t19.isTouch = mW.isTouch, YW = mW.isTouch && /(iPad|iPhone|iPod|Mac)/g.test(navigator.userAgent), FW = 1 === mW.isTouch, Qj(_W, "wheel", am), xW = [_W, yW, bW, CW], vW.matchMedia ? (t19.matchMedia = function(t20) {
        var e3, o3 = vW.matchMedia();
        for (e3 in t20) o3.add(e3, t20[e3]);
        return o3;
      }, vW.addEventListener("matchMediaInit", function() {
        return jm();
      }), vW.addEventListener("matchMediaRevert", function() {
        return Wm();
      }), vW.addEventListener("matchMedia", function() {
        ym(0, 1), Mm("matchMedia");
      }), vW.matchMedia().add("(orientation: portrait)", function() {
        return um(), um;
      })) : console.warn("Requires GSAP 3.11.0 or later"), um(), Qj(yW, "scroll", am);
      var e2, o2, r2 = CW.hasAttribute("style"), L2 = CW.style, n2 = L2.borderTopStyle, i2 = vW.core.Animation.prototype;
      for (i2.revert || Object.defineProperty(i2, "revert", { value: function() {
        return this.time(-0.01, true);
      } }), L2.borderTopStyle = "solid", e2 = Yj(CW), pW.m = Math.round(e2.top + pW.sc()) || 0, uW.m = Math.round(e2.left + uW.sc()) || 0, n2 ? L2.borderTopStyle = n2 : L2.removeProperty("border-top-style"), r2 || (CW.setAttribute("style", ""), CW.removeAttribute("style")), SW = setInterval(hm, 250), vW.delayedCall(0.5, function() {
        return ij = 0;
      }), Qj(yW, "touchcancel", wj), Qj(CW, "touchstart", wj), Jj(Qj, yW, "pointerdown,touchstart,mousedown", cj), Jj(Qj, yW, "pointerup,touchend,mouseup", lj), PW = vW.utils.checkPrefix("transform"), Hm.push(PW), gW = sj(), VW = vW.delayedCall(0.2, ym).pause(), DW = [yW, "visibilitychange", function() {
        var t20 = _W.innerWidth, e3 = _W.innerHeight;
        yW.hidden ? (AW = t20, RW = e3) : AW === t20 && RW === e3 || pm();
      }, yW, "DOMContentLoaded", ym, _W, "load", ym, _W, "resize", pm], _j(Qj), dm.forEach(function(t20) {
        return t20.enable(0, 1);
      }), o2 = 0; o2 < tW.length; o2 += 3) em(tm, tW[o2], tW[o2 + 1]), em(tm, tW[o2], tW[o2 + 2]);
    }
  }, t19.config = function(e2) {
    "limitCallbacks" in e2 && (ej = !!e2.limitCallbacks);
    var o2 = e2.syncInterval;
    o2 && clearInterval(SW) || (SW = o2) && setInterval(hm, o2), "ignoreMobileResize" in e2 && (FW = 1 === t19.isTouch && e2.ignoreMobileResize), "autoRefreshEvents" in e2 && (_j(tm) || _j(Qj, e2.autoRefreshEvents || "none"), BW = -1 === (e2.autoRefreshEvents + "").indexOf("resize"));
  }, t19.scrollerProxy = function(t20, e2) {
    var o2 = cW(t20), r2 = tW.indexOf(o2), L2 = jj(o2);
    ~r2 && tW.splice(r2, L2 ? 6 : 2), e2 && (L2 ? eW.unshift(_W, e2, CW, e2, bW, e2) : eW.unshift(o2, e2));
  }, t19.clearMatchMedia = function(t20) {
    dm.forEach(function(e2) {
      return e2._ctx && e2._ctx.query === t20 && e2._ctx.kill(true, true);
    });
  }, t19.isInViewport = function(t20, e2, o2) {
    var r2 = (yj(t20) ? cW(t20) : t20).getBoundingClientRect(), L2 = r2[o2 ? Ej : Pj] * e2 || 0;
    return o2 ? r2.right - L2 > 0 && r2.left + L2 < _W.innerWidth : r2.bottom - L2 > 0 && r2.top + L2 < _W.innerHeight;
  }, t19.positionInViewport = function(t20, e2, o2) {
    yj(t20) && (t20 = cW(t20));
    var r2 = t20.getBoundingClientRect(), L2 = r2[o2 ? Ej : Pj], n2 = null == e2 ? L2 / 2 : e2 in Lm ? Lm[e2] * L2 : ~e2.indexOf("%") ? parseFloat(e2) * L2 / 100 : parseFloat(e2) || 0;
    return o2 ? (r2.left + n2) / _W.innerWidth : (r2.top + n2) / _W.innerHeight;
  }, t19.killAll = function(t20) {
    if (dm.slice(0).forEach(function(t21) {
      return "ScrollSmoother" !== t21.vars.id && t21.kill();
    }), true !== t20) {
      var e2 = cm.killAll || [];
      cm = {}, e2.forEach(function(t21) {
        return t21();
      });
    }
  }, t19;
}();
zm.version = "3.12.7", zm.saveStyles = function(t19) {
  return t19 ? HW(t19).forEach(function(t20) {
    if (t20 && t20.style) {
      var e2 = fm.indexOf(t20);
      e2 >= 0 && fm.splice(e2, 5), fm.push(t20, t20.style.cssText, t20.getBBox && t20.getAttribute("transform"), vW.core.getCache(t20), XW());
    }
  }) : fm;
}, zm.revert = function(t19, e2) {
  return jm(!t19, e2);
}, zm.create = function(t19, e2) {
  return new zm(t19, e2);
}, zm.refresh = function(t19) {
  return t19 ? pm(true) : (gW || zm.register()) && ym(true);
}, zm.update = function(t19) {
  return ++tW.cache && xm(true === t19 ? 2 : 0);
}, zm.clearScrollMemory = mm, zm.maxScroll = function(t19, e2) {
  return gj(t19, e2 ? uW : pW);
}, zm.getScrollFunc = function(t19, e2) {
  return lW(cW(t19), e2 ? uW : pW);
}, zm.getById = function(t19) {
  return km[t19];
}, zm.getAll = function() {
  return dm.filter(function(t19) {
    return "ScrollSmoother" !== t19.vars.id;
  });
}, zm.isScrolling = function() {
  return !!kj;
}, zm.snapDirectional = Kj, zm.addEventListener = function(t19, e2) {
  var o2 = cm[t19] || (cm[t19] = []);
  ~o2.indexOf(e2) || o2.push(e2);
}, zm.removeEventListener = function(t19, e2) {
  var o2 = cm[t19], r2 = o2 && o2.indexOf(e2);
  r2 >= 0 && o2.splice(r2, 1);
}, zm.batch = function(t19, e2) {
  var o2, r2 = [], L2 = {}, n2 = e2.interval || 0.016, i2 = e2.batchMax || 1e9, s2 = function(t20, e3) {
    var o3 = [], r3 = [], L3 = vW.delayedCall(n2, function() {
      e3(o3, r3), o3 = [], r3 = [];
    }).pause();
    return function(t21) {
      o3.length || L3.restart(true), o3.push(t21.trigger), r3.push(t21), i2 <= o3.length && L3.progress(1);
    };
  };
  for (o2 in e2) L2[o2] = "on" === o2.substr(0, 2) && bj(e2[o2]) && "onRefreshInit" !== o2 ? s2(0, e2[o2]) : e2[o2];
  return bj(i2) && (i2 = i2(), Qj(zm, "refresh", function() {
    return i2 = e2.batchMax();
  })), HW(t19).forEach(function(t20) {
    var e3 = {};
    for (o2 in L2) e3[o2] = L2[o2];
    e3.trigger = t20, r2.push(zm.create(e3));
  }), r2;
};
var Bm, Im = function(t19, e2, o2, r2) {
  return e2 > r2 ? t19(r2) : e2 < 0 && t19(0), o2 > r2 ? (r2 - e2) / (o2 - e2) : o2 < 0 ? e2 / (e2 - o2) : 1;
}, Fm = function t18(e2, o2) {
  true === o2 ? e2.style.removeProperty("touch-action") : e2.style.touchAction = true === o2 ? "auto" : o2 ? "pan-" + o2 + (mW.isTouch ? " pinch-zoom" : "") : "none", e2 === bW && t18(CW, o2);
}, Um = { auto: 1, scroll: 1 }, $m = function(t19) {
  var e2, o2 = t19.event, r2 = t19.target, L2 = t19.axis, n2 = (o2.changedTouches ? o2.changedTouches[0] : o2).target, i2 = n2._gsap || vW.core.getCache(n2), s2 = sj();
  if (!i2._isScrollT || s2 - i2._isScrollT > 2e3) {
    for (; n2 && n2 !== CW && (n2.scrollHeight <= n2.clientHeight && n2.scrollWidth <= n2.clientWidth || !Um[(e2 = Uj(n2)).overflowY] && !Um[e2.overflowX]); ) n2 = n2.parentNode;
    i2._isScroll = n2 && n2 !== r2 && !jj(n2) && (Um[(e2 = Uj(n2)).overflowY] || Um[e2.overflowX]), i2._isScrollT = s2;
  }
  (i2._isScroll || "x" === L2) && (o2.stopPropagation(), o2._gsapAllow = true);
}, Ym = function(t19, e2, o2, r2) {
  return mW.create({ target: t19, capture: true, debounce: false, lockAxis: true, type: e2, onWheel: r2 = r2 && $m, onPress: r2, onDrag: r2, onScroll: r2, onEnable: function() {
    return o2 && Qj(yW, mW.eventTypes[0], Gm, false, true);
  }, onDisable: function() {
    return tm(yW, mW.eventTypes[0], Gm, true);
  } });
}, Xm = /(input|label|select|textarea)/i, Gm = function(t19) {
  var e2 = Xm.test(t19.target.tagName);
  (e2 || Bm) && (t19._gsapAllow = true, Bm = e2);
}, Km = function(t19) {
  xj(t19) || (t19 = {}), t19.preventDefault = t19.isNormalizer = t19.allowClicks = true, t19.type || (t19.type = "wheel,touch"), t19.debounce = !!t19.debounce, t19.id = t19.id || "normalizer";
  var e2, o2, r2, L2, n2, i2, s2, d2, k2 = t19, h2 = k2.normalizeScrollX, a2 = k2.momentum, u2 = k2.allowNestedScroll, p2 = k2.onRelease, c2 = cW(t19.target) || bW, l2 = vW.core.globals().ScrollSmoother, w2 = l2 && l2.get(), M2 = YW && (t19.content && cW(t19.content) || w2 && false !== t19.content && !w2.smooth() && w2.content()), f2 = lW(c2, pW), W2 = lW(c2, uW), j2 = 1, m2 = (mW.isTouch && _W.visualViewport ? _W.visualViewport.scale * _W.visualViewport.width : _W.outerWidth) / _W.innerWidth, v2 = 0, g2 = bj(a2) ? function() {
    return a2(e2);
  } : function() {
    return a2 || 2.8;
  }, _2 = Ym(c2, t19.type, true, u2), y2 = function() {
    return L2 = false;
  }, b2 = wj, C2 = wj, x2 = function() {
    o2 = gj(c2, pW), C2 = TW(YW ? 1 : 0, o2), h2 && (b2 = TW(0, gj(c2, uW))), r2 = vm;
  }, V2 = function() {
    M2._gsap.y = Mj(parseFloat(M2._gsap.y) + f2.offset) + "px", M2.style.transform = "matrix3d(1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, " + parseFloat(M2._gsap.y) + ", 0, 1)", f2.offset = f2.cacheID = 0;
  }, H2 = function() {
    x2(), n2.isActive() && n2.vars.scrollY > o2 && (f2() > o2 ? n2.progress(1) && f2(o2) : n2.resetTo("scrollY", o2));
  };
  return M2 && vW.set(M2, { y: "+=0" }), t19.ignoreCheck = function(t20) {
    return YW && "touchmove" === t20.type && function() {
      if (L2) {
        requestAnimationFrame(y2);
        var t21 = Mj(e2.deltaY / 2), o3 = C2(f2.v - t21);
        if (M2 && o3 !== f2.v + f2.offset) {
          f2.offset = o3 - f2.v;
          var r3 = Mj((parseFloat(M2 && M2._gsap.y) || 0) - f2.offset);
          M2.style.transform = "matrix3d(1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, " + r3 + ", 0, 1)", M2._gsap.y = r3 + "px", f2.cacheID = tW.cache, xm();
        }
        return true;
      }
      f2.offset && V2(), L2 = true;
    }() || j2 > 1.05 && "touchstart" !== t20.type || e2.isGesturing || t20.touches && t20.touches.length > 1;
  }, t19.onPress = function() {
    L2 = false;
    var t20 = j2;
    j2 = Mj((_W.visualViewport && _W.visualViewport.scale || 1) / m2), n2.pause(), t20 !== j2 && Fm(c2, j2 > 1.01 || !h2 && "x"), i2 = W2(), s2 = f2(), x2(), r2 = vm;
  }, t19.onRelease = t19.onGestureStart = function(t20, e3) {
    if (f2.offset && V2(), e3) {
      tW.cache++;
      var r3, L3, i3 = g2();
      h2 && (L3 = (r3 = W2()) + 0.05 * i3 * -t20.velocityX / 0.227, i3 *= Im(W2, r3, L3, gj(c2, uW)), n2.vars.scrollX = b2(L3)), L3 = (r3 = f2()) + 0.05 * i3 * -t20.velocityY / 0.227, i3 *= Im(f2, r3, L3, gj(c2, pW)), n2.vars.scrollY = C2(L3), n2.invalidate().duration(i3).play(0.01), (YW && n2.vars.scrollY >= o2 || r3 >= o2 - 1) && vW.to({}, { onUpdate: H2, duration: i3 });
    } else d2.restart(true);
    p2 && p2(t20);
  }, t19.onWheel = function() {
    n2._ts && n2.pause(), sj() - v2 > 1e3 && (r2 = 0, v2 = sj());
  }, t19.onChange = function(t20, e3, o3, L3, n3) {
    if (vm !== r2 && x2(), e3 && h2 && W2(b2(L3[2] === e3 ? i2 + (t20.startX - t20.x) : W2() + e3 - L3[1])), o3) {
      f2.offset && V2();
      var d3 = n3[2] === o3, k3 = d3 ? s2 + t20.startY - t20.y : f2() + o3 - n3[1], a3 = C2(k3);
      d3 && k3 !== a3 && (s2 += a3 - k3), f2(a3);
    }
    (o3 || e3) && xm();
  }, t19.onEnable = function() {
    Fm(c2, !h2 && "x"), zm.addEventListener("refresh", H2), Qj(_W, "resize", H2), f2.smooth && (f2.target.style.scrollBehavior = "auto", f2.smooth = W2.smooth = false), _2.enable();
  }, t19.onDisable = function() {
    Fm(c2, true), tm(_W, "resize", H2), zm.removeEventListener("refresh", H2), _2.kill();
  }, t19.lockAxis = false !== t19.lockAxis, (e2 = new mW(t19)).iOS = YW, YW && !f2() && f2(1), YW && vW.ticker.add(wj), d2 = e2._dc, n2 = vW.to(e2, { ease: "power4", paused: true, inherit: false, scrollX: h2 ? "+=0.1" : "+=0", scrollY: "+=0.1", modifiers: { scrollY: Rm(f2, f2(), function() {
    return n2.pause();
  }) }, onUpdate: xm, onComplete: d2.vars.onComplete }), e2;
};
zm.sort = function(t19) {
  if (bj(t19)) return dm.sort(t19);
  var e2 = _W.pageYOffset || 0;
  return zm.getAll().forEach(function(t20) {
    return t20._sortY = t20.trigger ? e2 + t20.trigger.getBoundingClientRect().top : t20.start + _W.innerHeight;
  }), dm.sort(t19 || function(t20, e3) {
    return -1e6 * (t20.vars.refreshPriority || 0) + (t20.vars.containerAnimation ? 1e6 : t20._sortY) - ((e3.vars.containerAnimation ? 1e6 : e3._sortY) + -1e6 * (e3.vars.refreshPriority || 0));
  });
}, zm.observe = function(t19) {
  return new mW(t19);
}, zm.normalizeScroll = function(t19) {
  if (void 0 === t19) return IW;
  if (true === t19 && IW) return IW.enable();
  if (false === t19) return IW && IW.kill(), void (IW = t19);
  var e2 = t19 instanceof mW ? t19 : Km(t19);
  return IW && IW.target === e2.target && IW.kill(), jj(e2.target) && (IW = e2), e2;
}, zm.core = { _getVelocityProp: wW, _inputObserver: Ym, _scrollers: tW, _proxies: eW, bridge: { ss: function() {
  kj || Mm("scrollStart"), kj = sj();
}, ref: function() {
  return ZW;
} } }, Wj() && vW.registerPlugin(zm);
var Jm = QL.registerPlugin(vi) || QL;
function Qm({ children: t19 }) {
  const e2 = ht(null), { width: o2, height: r2, isLargeScreen: L2 } = Ai();
  return Vi(() => {
    let t20, n2;
    "scrollRestoration" in window.history && (window.history.scrollRestoration = "manual");
    const i2 = () => {
      var o3;
      e2.current && (t20 = Pf.init(e2.current, { damping: 0.06, alwaysShowTrack: true, renderByPixels: true, delegateTo: document }), o3 = t20, Ei.set(Pi, o3), zm.scrollerProxy(e2.current, { scrollTop(e3) {
        return arguments.length && (t20.scrollTop = e3), t20.scrollTop;
      }, getBoundingClientRect: () => ({ top: 0, left: 0, width: window.innerWidth, height: window.innerHeight }) }), t20.addListener(zm.update), zm.defaults({ scroller: e2.current }), zm.refresh());
    };
    return n2 = new ResizeObserver(() => {
      zm.refresh();
    }), e2.current && n2.observe(e2.current), (o2 && r2 || L2) && i2(), (() => {
      if (o2 && r2) {
        Si(Jm.to("#home-scroll > .row", { x: L2 ? "-700vw" : () => -(5033 + 4 * window.innerWidth + window.innerWidth / 3 * 2), ease: "none", scrollTrigger: { trigger: "#home-scroll", start: "top top", end: () => "+=" + window.innerHeight, pin: true, scrub: true, invalidateOnRefresh: true, force3D: true } }));
      }
    })(), () => {
      Ni() && (Ni().destroy(), Ei.delete(Pi)), zm.killAll(), n2 && n2.disconnect();
    };
  }, { dependencies: [o2, r2, L2], scope: e2, revertOnUpdate: true }), F("div", { id: "scroll-wrapper", style: { position: o2 && r2 ? "fixed" : "static", height: "100%" }, ref: e2, children: t19 });
}
Jm.core.Tween, Jm.registerPlugin(zm, Vi);
function tv() {
  return F("footer", { children: [F("div", { className: "container", children: F("div", { className: "row gap-75 s-between", children: [F("div", { children: [F(Jd, { className: "logo", children: F("img", { className: "icon", src: Lk, alt: "logo" }) }), F("h5", { className: "static capitalize", children: "About the company" }), F("p", { className: "to-middle text-white capitalize", children: "MasBo is an architectural group working in the field of architecture and urban planning. The company was founded in 2006. We offer a full range of services from interior design, individual cottages to the design and construction of residential complexes." }), F("div", { className: "row gap-25 wrap", children: [F("p", { className: "to-middle text-white capitalize", children: [F("span", { className: "font-bold", children: " Address: " }), " Ukraine, Kyiv region, 08200 Irpen,", F("br", {}), " Stelmakh street 9a, office 206"] }), F("p", { className: "to-middle text-white capitalize", children: [F("span", { className: "font-bold", children: "Tel:" }), " +3 (096) 029-81-18, +3 (063) 023-81-18", F("br", {}), F("span", { className: "font-bold", children: "Email:" }), " office@masbo.com.ua"] })] })] }), F("div", { className: "line" }), F("div", { className: "row wrap s-between gap-50", children: [F("div", { children: [F("h5", { children: "Popular" }), F("ul", { children: [F("li", { children: [" ", F(Jd, { children: "  Arhitexture" }), " "] }), F("li", { children: ["   ", F(Jd, { children: "Modern design" }), " "] }), F("li", { children: ["   ", F(Jd, { children: "Our Services" }), " "] }), F("li", { children: ["   ", F(Jd, { children: "How we work" }), " "] }), F("li", { children: ["   ", F(Jd, { children: "Order the project" }), " "] })] })] }), F("div", { children: [F("h5", { children: "Hot links" }), F("ul", { children: [F("li", { children: ["   ", F(Jd, { children: "       Our team" }), " "] }), F("li", { children: ["   ", F(Jd, { children: "Our Services" }), " "] }), F("li", { children: ["   ", F(Jd, { children: "   How to order " }), " "] }), F("li", { children: ["   ", F(Jd, { children: "Last project" }), " "] })] })] }), F("div", { className: "footer-socials", children: [F("h5", { children: "Social" }), F("ul", { children: [F("li", { className: "row center-y gap-15", children: [F("a", { href: "#", children: F(Ve, {}) }), F("h4", { children: "  Facebook" })] }), F("li", { className: "row center-y gap-15", children: [F("a", { href: "#", children: F(xe, {}) }), F("h4", { children: "   Instagram" })] }), F("li", { className: "row center-y gap-15", children: [F("a", { href: "#", children: [" ", F(He, {})] }), F("h4", { children: "  Twiter" })] }), F("li", { className: "row center-y gap-15", children: [F("a", { href: "#", children: F(Oe, {}) }), F("h4", { children: "   Youtube" })] }), F("li", { className: "row center-y gap-15", children: [F("a", { href: "#", children: [" ", F(Te, {})] }), F("h4", { children: "    Telegram" })] })] })] })] })] }) }), F("div", { className: "container", children: F("ul", { className: "mobile-socials gap-15 s-between", children: [F("li", { children: F("a", { href: "#", className: "center-gr", children: F(Ve, {}) }) }), F("li", { children: F("a", { href: "#", className: "center-gr", children: F(xe, {}) }) }), F("li", { children: F("a", { href: "#", className: "center-gr", children: F(He, {}) }) }), F("li", { children: F("a", { href: "#", className: "center-gr", children: F(Oe, {}) }) }), F("li", { children: F("a", { href: "#", className: "center-gr", children: F(Te, {}) }) })] }) }), F("div", { className: "label center-gr", children: F("span", { className: "fs-12 text-white text-center", children: ["© ", (/* @__PURE__ */ new Date()).getFullYear(), " .All Rioghts Reserved."] }) })] });
}
function ev() {
  const t19 = pd();
  return F(m, { children: [F(Mk, {}), F(Qm, { children: [F("main", { children: F(Vk, { mode: "wait", initial: false, children: F(Vd, { location: t19, children: F(Cd, { path: "/", element: F(gs, {}) }) }, t19.pathname) }) }), F(tv, {})] })] });
}
Pf.use((_a2 = class extends _f {
  transformDelta(t19) {
    return this.options.open ? { x: 0, y: 0 } : t19;
  }
}, __publicField(_a2, "pluginName", "overflow"), __publicField(_a2, "defaultOptions", { open: false }), _a2)), D(F(Gd, { basename: "/masbo_website", children: F(ev, {}) }), document.getElementById("app"));
